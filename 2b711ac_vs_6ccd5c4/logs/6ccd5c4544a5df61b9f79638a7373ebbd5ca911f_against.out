cset: moving following pidspec: 14517
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.276044286 seconds)
loading group "string"... done (took 0.524410513 seconds)
loading group "linalg"... done (took 6.506313254 seconds)
loading group "parallel"... done (took 0.153808355 seconds)
loading group "find"... done (took 1.188647098 seconds)
loading group "tuple"... done (took 1.684093985 seconds)
loading group "dates"... done (took 1.161736994 seconds)
loading group "micro"... done (took 0.217428162 seconds)
loading group "io"... done (took 0.972144421 seconds)
loading group "scalar"... done (took 37.321973935 seconds)
loading group "sparse"... done (took 12.701674105 seconds)
loading group "broadcast"... done (took 0.960649232 seconds)
loading group "union"... done (took 12.49854073 seconds)
loading group "simd"... done (took 4.217341192 seconds)
loading group "random"... done (took 8.346928146 seconds)
loading group "problem"... done (took 1.934653666 seconds)
loading group "array"... done (took 20.062312308 seconds)
loading group "misc"... done (took 1.729810844 seconds)
loading group "sort"... done (took 3.140169346 seconds)
loading group "collection"... done (took 16.620360533 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.501844406 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120899966 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13042542 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133494388 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.1706188 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12860992 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13796392 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098771447 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.068184233 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.1551741 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.132693373 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.464008517 seconds)
done (took 5.145985491 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204906236 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081940564 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095066852 seconds)
  done (took 1.015770147 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065253736 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120165613 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064622426 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.081791889 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066288547 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064517536 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082376052 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066067321 seconds)
  done (took 1.390808811 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073028734 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067060886 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083569715 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067633936 seconds)
  done (took 1.134372326 seconds)
done (took 4.663816103 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.835123979 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.240629162 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181473203 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.446252563 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147270657 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18127298 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667072016 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333266895 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197744529 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083811781 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.120105803 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.354602782 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123046914 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664651211 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074022152 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106647638 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161198582 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439679567 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081533051 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081894781 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102686959 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127848392 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104066375 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093704771 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.158651531 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081972485 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144951134 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080860544 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082447185 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224216023 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.186959276 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66810233 seconds)
  done (took 10.456512827 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095793972 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.112078268 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067924128 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139519433 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096428446 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085881162 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071262875 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06595091 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.102594471 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.142749714 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088035444 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.116258754 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064442318 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085218853 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083992947 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.220704777 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079152621 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097519016 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069619563 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090798106 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105814128 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093672124 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077331192 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093942546 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128823062 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209830065 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099678685 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11513383 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069475712 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099572896 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130678106 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129690926 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064705365 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08307315 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123669359 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111160165 seconds)
  done (took 4.568024502 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.029162881 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153912624 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089901329 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148227942 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066656664 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.123702556 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081347602 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08351633 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231016467 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.062249906 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.451989296 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127491988 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083535753 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083711929 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067458148 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082962692 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.489995006 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143081467 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120600452 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082746423 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088428479 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06878671 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355149085 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067025617 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065783572 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083876468 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057989607 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.139320232 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067736454 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.127578779 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106373117 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067870076 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118251456 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.184962941 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099091962 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08719138 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153298456 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064344493 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084396381 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164397502 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073017483 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082081554 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082663721 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117841016 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.102215173 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083229445 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066577804 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175699933 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066192471 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099231827 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.842793851 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167119469 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078921425 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066268429 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281415571 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.082929898 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08801354 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063444552 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.252706007 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.147050079 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066561754 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082775872 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066478351 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066645373 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370232121 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086529039 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.918402101 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070411234 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075782572 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084942106 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066363458 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.106685186 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07227509 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089031951 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084166218 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064534366 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085874788 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065287628 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081503155 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069018025 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09969989 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.207334409 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06658994 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065554562 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082040378 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085071945 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111349381 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069695552 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064242086 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115881127 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06443184 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084029482 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06742357 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117555016 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067144093 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100269421 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069436435 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129803879 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082463978 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.135293653 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06845913 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113098083 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071347802 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119367657 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094083344 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067599942 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151490988 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064541597 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06339074 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081806858 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064365362 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085391745 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068168143 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066377759 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096624804 seconds)
  done (took 20.875916892 seconds)
done (took 37.772420897 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.282169427 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091858024 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.072865429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.092561753 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091712158 seconds)
  done (took 1.549697347 seconds)
done (took 2.439536211 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11696204 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116214667 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063610346 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112699431 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063357714 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117192592 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098161711 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098166385 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114151867 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064494563 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094527167 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081427771 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063798817 seconds)
  done (took 2.123757545 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081431329 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082258896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085687799 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081993534 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062375281 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098610715 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079402465 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104076796 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080066469 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070111656 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080672038 seconds)
  done (took 1.793231169 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081761654 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081683596 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085884034 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080670572 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062334983 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097802725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079594067 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10085968 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080007482 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088702249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064076514 seconds)
  done (took 1.792277622 seconds)
done (took 6.590863334 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077693408 seconds)
  done (took 0.961614794 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.68520214 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.994181186 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081393583 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.130088102 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199005316 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.138178051 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.33472003 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.105614756 seconds)
  done (took 9.722622894 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085936754 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098206335 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071584746 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086083602 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070272158 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071416169 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089319176 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068252208 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088172678 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071284377 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068340615 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0882865 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067735305 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085213669 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070546442 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084266436 seconds)
  done (took 2.21130438 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09076686 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108386467 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071800981 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093300407 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070997685 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090302894 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072976369 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091109542 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070080172 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088834076 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074757503 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090393283 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070878427 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081634871 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073379328 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091961688 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070737777 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089173792 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075849536 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090556246 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075271658 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063205144 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088877715 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073386697 seconds)
  done (took 2.931392689 seconds)
done (took 16.718439598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110596288 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088082195 seconds)
  done (took 1.086561373 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081023211 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098033163 seconds)
  done (took 1.073532666 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082644839 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080928802 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088586914 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095373134 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065701075 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082676122 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102434902 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066219745 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065092488 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083403035 seconds)
  done (took 1.710114868 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069372377 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092898954 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071420102 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097789739 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073854615 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081204265 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072924377 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083695073 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078855808 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06205111 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088036626 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098025793 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071423971 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100067324 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07269022 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084893027 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070517652 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084428385 seconds)
  done (took 2.349821095 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066286134 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066220389 seconds)
  done (took 1.030066192 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067713112 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062443903 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082738443 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066031435 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079834996 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062382231 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079392899 seconds)
  done (took 1.400790933 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403644576 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109297497 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.248024615 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091102664 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.099361116 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.265957054 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083731317 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070724928 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069803821 seconds)
  done (took 2.380462447 seconds)
done (took 11.926281655 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079459958 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08332062 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110576189 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.409529362 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09195281 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084798894 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132445859 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.225116401 seconds)
done (took 2.121523683 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127342096 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606938914 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.39981663 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20937077 seconds)
  done (took 2.119494409 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329365769 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.107384205 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05975946 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085028629 seconds)
  done (took 1.487439627 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066591531 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06774286 seconds)
  done (took 1.036101988 seconds)
done (took 5.673841873 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067220963 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064784083 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079686417 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066646384 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063228945 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079746457 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083786553 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084172979 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066315286 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065469258 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.083426665 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068620072 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064688363 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082013909 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063386336 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065696014 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080492302 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063037536 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062772435 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080489885 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065916238 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062028351 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080342213 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062659241 seconds)
  done (took 2.646373929 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08308487 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082356645 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071846997 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070157506 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087424938 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070341947 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089696647 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066101752 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091279173 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067939494 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085631373 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070388674 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067040983 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088289129 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066688677 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087097052 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071179828 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083393814 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068002302 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086566717 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071861298 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066061178 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087695189 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070710499 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086601222 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068748352 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085900165 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066565557 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087821955 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069629506 seconds)
  done (took 3.223154745 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069782218 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062678154 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080383266 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070151863 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062446336 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0825528 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063173853 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063010694 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082295978 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06308329 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064106785 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082154249 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063359917 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081575189 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065100776 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066177027 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096022963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06440955 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062385378 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082337054 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066526396 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06251306 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082660381 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063209319 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080774679 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064484103 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063708889 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080245722 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065735739 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063600697 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084033606 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067463482 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063231021 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087893507 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066950604 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062833138 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08555936 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063591687 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062849008 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080830334 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062778207 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.079105787 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064327108 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069765072 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080649304 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064870731 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06275002 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082682577 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064527452 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064943394 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081257544 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063643198 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081683997 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065551586 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067229 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080059534 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064625323 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062273181 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082063128 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063315786 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062205847 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080929292 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065606146 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062833631 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09573732 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069621321 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080471443 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065877714 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064414898 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083110905 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065798477 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075697513 seconds)
  done (took 6.036710359 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090818638 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1050257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064503639 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083289957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061370951 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080900055 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068435136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062815079 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083112404 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068847754 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080890594 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065324898 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064701398 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093936812 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063659186 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08261412 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070187823 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061359713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081358254 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067826241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080818759 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06839366 seconds)
  done (took 2.564846726 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.282932052 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069393511 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.123618695 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090685548 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067847503 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090949148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07030544 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06916656 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088889269 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067645035 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086267375 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069513309 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085131221 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068439668 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084960691 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068713376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086576941 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068702651 seconds)
  done (took 2.556799272 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07819932 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065068185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103397152 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065256692 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083946988 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06866828 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088934946 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074201833 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084822541 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065987304 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073423531 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086709042 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067959619 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083530064 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068328214 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064945512 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086773798 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065583897 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091910112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070702363 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089063881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074038813 seconds)
  done (took 2.619077195 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0803151 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06678796 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101398974 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067994781 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08034965 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065007196 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088036464 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066815203 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069420237 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08555048 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066666526 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081050118 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070451193 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066163357 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.087383768 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065975585 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085033355 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066595779 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067517884 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080550864 seconds)
  done (took 2.426962401 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086971092 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085068145 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06829686 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093342307 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067913753 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084426718 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076646198 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08442794 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067897987 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10570366 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068434803 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066440036 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094617833 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090570045 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067604184 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092872731 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075457753 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093186401 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067601223 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085720201 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087468425 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085572484 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075657917 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085321603 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067278098 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085319495 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068440804 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09009759 seconds)
  done (took 3.183502241 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066911328 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064978226 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080720012 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064090609 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063155335 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08079236 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063855693 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062432782 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083020074 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063510673 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064570549 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082886724 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066114387 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065300139 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083539276 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065453266 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065351168 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081397239 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063556188 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06214562 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08365135 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065773228 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064425903 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082037807 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063282246 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082425507 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064448217 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063324948 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083276386 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064218214 seconds)
  done (took 3.027869645 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077251947 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071533906 seconds)
  done (took 1.068811543 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065702213 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079027538 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08215571 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070179725 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087701397 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067145044 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073491794 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088793832 seconds)
  done (took 1.539566822 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081579474 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075782865 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08580699 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077578289 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095404716 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081653406 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15412925 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084785096 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073380629 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064004827 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098696451 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065685404 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09018864 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067464978 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071392938 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091326837 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065014238 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089192092 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069700559 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064907857 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086013761 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07515603 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086584893 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061883158 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066477979 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093913951 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076369227 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085369839 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069193168 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091913479 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073009295 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059959564 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084764417 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066477836 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063354916 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094192977 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07961821 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087911982 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074220042 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085020791 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075252216 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080233203 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070446715 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089081564 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076356655 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065730284 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085050614 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061220929 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063651838 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087221491 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061662518 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083852271 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06193133 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072095931 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087900404 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075734605 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086108706 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068565397 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068273663 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087952413 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072543077 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085612776 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069291923 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064871721 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095109947 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070310346 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092869325 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061769762 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059933113 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082939144 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075088469 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106468015 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071797769 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085378139 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067841678 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06305791 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088191862 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067278622 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090011285 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072717814 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065343676 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091172466 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07181324 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085145954 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068147489 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091971577 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065360199 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08541541 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065044922 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081291734 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083681071 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064243013 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081378656 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076896383 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069294391 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084384136 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063741418 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09052536 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061169309 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066361744 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086220246 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067049611 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094256313 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072114775 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089596586 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075090013 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072296565 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085492277 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068388117 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080767457 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067999714 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064573482 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092109995 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060934171 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085966459 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068035565 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065807902 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093437976 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064442606 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083857368 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074542202 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071167798 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083336501 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063241551 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086344494 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067418464 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069254781 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092929727 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065268456 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079414555 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061886588 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069183333 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084780423 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069777913 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089147964 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07012477 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060237303 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083144911 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069915629 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092914738 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065922066 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066284664 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090738766 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067106103 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083578328 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072853442 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086210958 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06629467 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071175469 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08574933 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062101466 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086827364 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069386057 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064641428 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08864844 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06943329 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085898266 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068304667 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064475161 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089721978 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066629815 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082952762 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067024756 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064128815 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095518854 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068524135 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078908487 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064476492 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072770158 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082400517 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065702044 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064470427 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087553651 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06642778 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082082915 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066772997 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067557117 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095902477 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069756765 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086098119 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071033218 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096159201 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06630533 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067669279 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084794388 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067256214 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085799949 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075370546 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089953774 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072405713 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068193539 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082575119 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071156858 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092072077 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06636635 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064181047 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084357125 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070593447 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090665621 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070210278 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066039504 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083691114 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067201927 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087438552 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069021916 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065347352 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084068217 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070890649 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083168373 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073147354 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084752564 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07723272 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068513875 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080492344 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068945275 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082922269 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072089032 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061199724 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08346321 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065634264 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066538656 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084531425 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06813078 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079031652 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073743238 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07297728 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08563191 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06479851 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083989595 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073612746 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066701791 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088487676 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06947381 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090577434 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0767269 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064599023 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089212422 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076235496 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084972968 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061505584 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089309988 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065404416 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065270445 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083582575 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06496841 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067902694 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093470892 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07226598 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080016985 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069801078 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082509631 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066440924 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061671934 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089829833 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069365773 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066661114 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091739481 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067345455 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085677693 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070527937 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065503931 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086292168 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066933055 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087343983 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067345681 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066732117 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084839816 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069000076 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083186588 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064492652 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067671378 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085669645 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066109802 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088873564 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066802062 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066437588 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087083982 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06726437 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084566011 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067746731 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065560616 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08795639 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067689418 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065602996 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088061062 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061406163 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091714091 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065900013 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072901473 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085534637 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063017749 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089670756 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068094914 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070112085 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086667085 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066398489 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086445053 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066625911 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068480362 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092246198 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06381845 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095529485 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073341169 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085028822 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069440046 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066477763 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08672062 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065822567 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067298465 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086230396 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066731175 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084685994 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070981017 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067339452 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085957601 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067936121 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085101338 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06704186 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06646211 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080480627 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065758398 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064658199 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086133638 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075257769 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086728209 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066507394 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083294575 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068174343 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064629405 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082088935 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073226375 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093568139 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067215419 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091424408 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065851796 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067984466 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095823491 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060501828 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082466025 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064949344 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064536115 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09243446 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067491041 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093495055 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067343505 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065655218 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082228887 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067269154 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063910141 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080139602 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063569193 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08804288 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066197614 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06529077 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085339025 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068949417 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066437919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095589811 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064926095 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086072164 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066385391 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062718148 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085721342 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065026425 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08705664 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067365317 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063760458 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08307222 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066160327 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066672459 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086819363 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065779492 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087005376 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073009869 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064786482 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088563471 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069577491 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082506697 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069514507 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065355799 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085314913 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065471101 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088404103 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069693276 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065893575 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094083677 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065163496 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086548266 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066678732 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064142425 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085842569 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065562447 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085218266 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066489716 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067069719 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093120764 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064506592 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088167956 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067276246 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066433663 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092574724 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067837926 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08844151 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07372974 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065813387 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087312171 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073409613 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088918792 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069800586 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085768136 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068355167 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071978786 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084985382 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07253064 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085346553 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068711154 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067906878 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083765661 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066528004 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065381859 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084126756 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071457886 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085515382 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065786661 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0649851 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084199977 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066882532 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088627795 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074163085 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068656247 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088931127 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061910391 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082019014 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067627984 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063775669 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087471657 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068705441 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090121267 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069302243 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066602606 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084079251 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075866401 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090440886 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070828312 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063423514 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089133406 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066915294 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087117166 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068041792 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066202615 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086756643 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070301895 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066871978 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085867309 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073172731 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088924345 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067456493 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066669718 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087467058 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066495673 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080060641 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067960854 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068436287 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090629013 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068665758 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085168831 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077082665 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06414359 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085888689 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069149478 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084908741 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070758455 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060708473 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087018851 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067639257 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086378512 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061827938 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065293431 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083661893 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068392014 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064789122 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082301284 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076434149 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095135344 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069220559 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08403637 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06586728 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060978886 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080964335 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066291273 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067077115 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088342649 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075488348 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084873728 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065664206 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061398385 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086609661 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068985562 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089123562 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064655856 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061203664 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085275933 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06946904 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089428195 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066296203 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065196408 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088534839 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068665235 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063654751 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090088464 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06252227 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088709306 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078894675 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085804804 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067661727 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07184531 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093751387 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066615119 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08072071 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067239203 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06885485 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086605219 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067806441 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086509662 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081502813 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088513284 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066326168 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065069275 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088410898 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066290815 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092206085 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068360068 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067192477 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090860006 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068914652 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093407882 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070041686 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092780005 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070419673 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069114248 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085184482 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066529374 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06310621 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086173928 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067046645 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086633115 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071132551 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093251816 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066448834 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07605953 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095397174 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067591641 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083164032 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066297292 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065413572 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081468133 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068399062 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082896861 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065774534 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064857893 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084130488 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068246563 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070335167 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086835327 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067194539 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084754089 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061590777 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068087123 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088800185 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067195033 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062219561 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086503582 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067216159 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089268024 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070406165 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063906961 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087708488 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067556412 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085758284 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062498626 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071874695 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085008728 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068911896 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065327115 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086881025 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06725739 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08901092 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072494247 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085825239 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069468149 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06907685 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088618625 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063424545 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081745295 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072281669 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064081562 seconds)
  done (took 46.092232818 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098353744 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081841048 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062627226 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061474354 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093815999 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062412782 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081515363 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06325588 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06171471 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08511339 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061401663 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081413641 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071636346 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096821887 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073984122 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086642977 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061301164 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082401577 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062095289 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061809045 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091723141 seconds)
  done (took 2.553551581 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074780166 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089355434 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073982617 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09598855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06712556 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090420108 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071974773 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089869585 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074990022 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0870532 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075033893 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090134201 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065763678 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087284353 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066973005 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090059552 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07582634 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088189812 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069383851 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092901992 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070106323 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093656224 seconds)
  done (took 2.747572875 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067787757 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064922456 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08681871 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061583124 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065059204 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080553659 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069576612 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081769943 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070673301 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064921818 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084599734 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065152641 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075097131 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080821637 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065784363 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062787011 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.128683507 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089585027 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065406926 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085841383 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061673182 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066827672 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.081391853 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061989694 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063551938 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089590752 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065988867 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083356147 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066144531 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064124941 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085760477 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064433351 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066453386 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086196091 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065199796 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063904204 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086195583 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065535954 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080814863 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064804887 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066455176 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082347336 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066444794 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066693179 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085084911 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063340088 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086853251 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066767205 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060331088 seconds)
  done (took 4.566316654 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080883938 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128760065 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067250626 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087015654 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101812266 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07260561 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090570823 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108313323 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063895675 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063534641 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.102573168 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102821885 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066258929 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090359592 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072568635 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084334099 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067811134 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063642756 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090602877 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064484686 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090743876 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072118496 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099545881 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.098013877 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070238025 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083350128 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065886407 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068723209 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099596945 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.08998351 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071217575 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091300377 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081641091 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091625346 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065012007 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087798282 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082249169 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08622327 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068314297 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.082471736 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068828706 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088323774 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073228686 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101222687 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065964517 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09018475 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066700297 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062285087 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099257789 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067086595 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094502189 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100282693 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069766679 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086034645 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070925952 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101251526 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065760547 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082843591 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069842317 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098232152 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064226489 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088036443 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081472096 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087857829 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074441004 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100779907 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071024398 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089837032 seconds)
  done (took 6.709727946 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075516937 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092333896 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080760693 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101369406 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071699372 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.094638711 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091178946 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073530623 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09149149 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077085389 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092065169 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112870454 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067729671 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09513471 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073470381 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091999898 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072847302 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092226092 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072230035 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092142376 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072743667 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100050455 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090982199 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081057215 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117552694 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067365521 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09164524 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071982283 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100092257 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090444842 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080167647 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09179115 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073084172 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100895274 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078887225 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093709186 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064837134 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092988634 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071792589 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092544478 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066365085 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101002913 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090823256 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067998199 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092052279 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072589153 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100184676 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078609029 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095371004 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09630915 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072405563 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100792858 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071105997 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092211111 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100712657 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104416542 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100523054 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100585648 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072074663 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100530667 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10036327 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087314415 seconds)
  done (took 6.376791936 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085767007 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095250311 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075832506 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082850738 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06479657 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091233241 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064852292 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063647864 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09508127 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074133248 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098644893 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089770917 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073520405 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096507877 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070175183 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093759907 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06910766 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090939147 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074295597 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090819096 seconds)
  done (took 2.628039607 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076358601 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080944518 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088207748 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070550304 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089982347 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071915934 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088956165 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06975142 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085905331 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06997589 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074232976 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09664135 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066205428 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092486301 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094517057 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073164096 seconds)
  done (took 2.277074384 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077191767 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.092113947 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079530189 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086020161 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065294067 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062256938 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08816695 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061567231 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061483911 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.098937254 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0652989 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089997811 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065644943 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084471987 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063636328 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068177658 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.083796295 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063643992 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084760395 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078948694 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096327976 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064879045 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066518537 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086595984 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065694462 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09201184 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065754168 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083186752 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064256725 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066037312 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087380483 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069335982 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083875563 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064551833 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.0640235 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084341222 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065527491 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085966812 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068678833 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064932549 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085334753 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065098981 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085667432 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067145921 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060656981 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087894917 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062190786 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.088337139 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064394779 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086004358 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066664553 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067421635 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08753178 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072162109 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089139037 seconds)
  done (took 5.133893503 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081194695 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068633733 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082582465 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064235079 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067531132 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.088982429 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068714577 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08844545 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06793346 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083053725 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067915895 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067392326 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087628758 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069081193 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087024281 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07009718 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060645975 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088240114 seconds)
  done (took 2.345185874 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074802327 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065901181 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092815843 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06635392 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064353225 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089962593 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062058327 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084689491 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064932124 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064539158 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086042786 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067950606 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083912241 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068909124 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065200054 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085888426 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068712586 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063915556 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086853602 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062265008 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088180195 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064928364 seconds)
  done (took 2.610571634 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074567942 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091525699 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.158233106 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.103964389 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081577038 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.076994917 seconds)
  done (took 1.580969609 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092341302 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099263353 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066582907 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086297948 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095318151 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067209423 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090060711 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066958693 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097464831 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097499098 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068156963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096251657 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076721921 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097419166 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092787296 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074672157 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087355343 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068622883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065237946 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105262068 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088098084 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07655925 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088249799 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067574063 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089217041 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075622503 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096674715 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095795037 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068537876 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095336995 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073638069 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087787123 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07649778 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096248084 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068591388 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09697417 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067700445 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105152408 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093151012 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076954772 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089202516 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073606779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096118857 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07281445 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096979068 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067486689 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093270459 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067164032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088526102 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106077485 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073375693 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096191475 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072945517 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097517625 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096372029 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086109583 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098306911 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095893433 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074278897 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097845142 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075924676 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094454777 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095417577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077485131 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094004223 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075556025 seconds)
  done (took 6.629254756 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087437408 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108563888 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067749239 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097717743 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075583317 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089364536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068293983 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087863643 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067195079 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08843907 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128708491 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068523713 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0963527 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076078329 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088702854 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067855957 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088393601 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075541686 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088248698 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106380575 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06880733 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09633658 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075154996 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096136482 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096847814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073731305 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088313673 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067679223 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088272608 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068000885 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092634818 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068058542 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096205309 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066685814 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097100863 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067244987 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08855371 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07260866 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089543862 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072276982 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097708812 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105009291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066551783 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088515657 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076593276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088788177 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066932781 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088006861 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068029985 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088001004 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076772655 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096971496 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075380321 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097007938 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088552694 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068054001 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088059651 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068378357 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087902916 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074074937 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096328822 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067351453 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107463869 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067645168 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088674268 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096045262 seconds)
  done (took 6.535599456 seconds)
done (took 130.585559182 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205096037 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188715592 seconds)
  done (took 1.390500476 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070032247 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094053655 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098404735 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127048346 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087008816 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099565548 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.096910073 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099399154 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065708098 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086438325 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066654088 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067200434 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151556554 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06660048 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065236378 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090466308 seconds)
  done (took 2.432828362 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104363119 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197845978 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109831758 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065063048 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098237652 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078278064 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.0638946 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097997919 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072857447 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0861105 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077642153 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095449507 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06572506 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09469751 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075585799 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096648264 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065458743 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076901446 seconds)
  done (took 2.628306814 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106609696 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145998851 seconds)
  done (took 1.261420568 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206065046 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124179475 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204901258 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.404187195 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.203726288 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278908021 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.176457309 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17763733 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156721266 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172884176 seconds)
  done (took 3.103750336 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101192639 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168866343 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307031018 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114381242 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106194837 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114149599 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137592495 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089045737 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100818777 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07914988 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.101360414 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075685759 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117990255 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094294736 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074759495 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075429868 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120466966 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071679478 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097714005 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074226861 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117451765 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065308614 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095128995 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072879673 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097796568 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075584647 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087000435 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066319836 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073375805 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09674374 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076865231 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11154505 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097130768 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128949549 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080322678 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129511502 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097867577 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071131041 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09456422 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072247545 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096522249 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076062564 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103815286 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076156381 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085982832 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076490588 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065028073 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086518817 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078303956 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097603312 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078043822 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098204468 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128004638 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095736163 seconds)
  done (took 6.274582988 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.703636777 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127238436 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069448958 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.779280826 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075640197 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097237962 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.684050533 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09022875 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200044382 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.714636587 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111491425 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072257335 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.192257307 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.207117148 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.880787637 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.247194535 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.608840695 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073030658 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127503461 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.121673626 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136820306 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149717818 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144463079 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.398911692 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094165882 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071373532 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132109614 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.092007634 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.133414558 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081496174 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068830397 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163813209 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.217082388 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.14395949 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072736314 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090942381 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069877358 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.139132619 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223121087 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.157847731 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.151228705 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067235694 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089596652 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134403353 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128295439 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068000061 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.132204007 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.144004551 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.140553826 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091257888 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072272768 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135940539 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133383497 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155505121 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078187381 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.270360109 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.247298821 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089737488 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09620431 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.095631519 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.199676035 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10044825 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.166266804 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134860046 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.175480565 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06984701 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.742917525 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.141683806 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069847947 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070253741 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115313436 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090122946 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135566606 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139186189 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.358368631 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135924068 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092032212 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068737917 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.1683085 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103224021 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068573705 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.133714634 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095195294 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117224507 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140377585 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136625994 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.139123004 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.198544706 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136795247 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.154931721 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071684013 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120125768 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073139776 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.183536156 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.181608936 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.134137082 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.178346178 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135062469 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.133074643 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.137961645 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092480446 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.142573975 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115496929 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075346642 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132958759 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.17754168 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.095389481 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101572633 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069426171 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.154700663 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.098809478 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103372443 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135128449 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.14015151 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.417618571 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.1386412 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088174739 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082773042 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134547806 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.133826453 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091756875 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.20126476 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119746798 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.139287282 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117642668 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066515438 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116862067 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.13320456 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095103851 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117598377 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134220586 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072223759 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.20378842 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.178147747 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072611608 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.180486624 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.155517966 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091910501 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.140630124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094747901 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.138390655 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094459416 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135826223 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093324959 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.715873319 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139139143 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117111508 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069595877 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159948642 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068304319 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101187289 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100449283 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067763575 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759081833 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104172274 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076649348 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102508363 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07118528 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117315882 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131722125 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091313891 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.131313996 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.165369788 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093252918 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116361165 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081060393 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.133731113 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094218888 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080504565 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101596679 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080160015 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119262222 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089834 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081104432 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140119006 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.132914109 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.17821541 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.528401092 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068707637 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101651132 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.163260986 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091526605 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.227287953 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.152661223 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.167375171 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.134149835 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097893239 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.24659186 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.136853749 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.159873496 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102532642 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14379906 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067962329 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134129608 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.136149482 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090154068 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072122779 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.134915655 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139768225 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137869175 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.897581685 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06882311 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.197611434 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088535828 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.143092205 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074402069 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093242587 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.228794032 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091302083 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14131524 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.137079775 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069365598 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102218812 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.80802931 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101853947 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135419677 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072092663 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180745178 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.136111658 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133653858 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135500605 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070767084 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.130640926 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.181471457 seconds)
  done (took 38.736137185 seconds)
done (took 56.827558022 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257993437 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171273471 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240171652 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117026459 seconds)
  done (took 1.892039993 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146885484 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100008481 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117417335 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063770824 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.124710998 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08610439 seconds)
  done (took 1.673618509 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.40749621 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258464537 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.223763835 seconds)
  done (took 1.920092294 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218880205 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.232639255 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446401137 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.274757148 seconds)
  done (took 2.310394443 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.165402146 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112023959 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06687059 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105592565 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.157833477 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206033282 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123804845 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.171559916 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077809111 seconds)
  done (took 2.267016258 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.189426797 seconds)
done (took 11.283625476 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094971501 seconds)
    (2/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097766949 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.237521804 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227649619 seconds)
    (5/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100600794 seconds)
    (6/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.132023281 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.173678764 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080688896 seconds)
    (9/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101076273 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.285590382 seconds)
    (11/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080088706 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101278815 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.135398885 seconds)
    (14/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075347572 seconds)
    (15/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.145638062 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072123678 seconds)
    (17/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.211175438 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205154445 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.150848885 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072895368 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194345026 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133763146 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.196174854 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088318394 seconds)
    (25/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110277633 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079448443 seconds)
    (27/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.212281643 seconds)
    (28/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070549409 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.129278794 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.161188753 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106161807 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09395801 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092356557 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.177177424 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087602787 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.200603035 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088920308 seconds)
    (38/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.232968646 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072032025 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198130532 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072656286 seconds)
    (42/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.184292431 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128637369 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090026465 seconds)
    (45/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.122977469 seconds)
    (46/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.16393321 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097707238 seconds)
    (48/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098413644 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.187857618 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.09617167 seconds)
    (51/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097083696 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079105597 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088506236 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067352545 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191533521 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072034716 seconds)
    (57/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.213428686 seconds)
    (58/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157982444 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121572204 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.173073105 seconds)
    (61/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.163086072 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087181555 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095278013 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080968659 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074324951 seconds)
    (66/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124515927 seconds)
    (67/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080239006 seconds)
    (68/309) benchmarking ("sort", Float32, false)...
    done (took 0.15038895 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088495983 seconds)
    (70/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099544769 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05199664 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.211658871 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075602353 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.168843253 seconds)
    (75/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061932597 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107573581 seconds)
    (77/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075792206 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083651435 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213468101 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.169132684 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.089606849 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080521494 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10673782 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194441271 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.183013238 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080468005 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073222306 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088952515 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076791306 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113179985 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073348528 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088824595 seconds)
    (93/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092749514 seconds)
    (94/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196377274 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052235105 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066394654 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08830165 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090760871 seconds)
    (99/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.17877184 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071032941 seconds)
    (101/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091833108 seconds)
    (102/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068265023 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076429462 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147064352 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07239527 seconds)
    (106/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160051412 seconds)
    (107/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073436879 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077121175 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.159203727 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101147648 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066551291 seconds)
    (112/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.075587018 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052046848 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.161476439 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144720293 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.313244128 seconds)
    (117/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067674665 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050807695 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111181248 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073513867 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066177298 seconds)
    (122/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096372713 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.156411926 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074378361 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168531875 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073027894 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078784122 seconds)
    (128/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.085019712 seconds)
    (129/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10106522 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09399224 seconds)
    (131/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062518297 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071353877 seconds)
    (133/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113807068 seconds)
    (134/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06182003 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137329876 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065712845 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.189739524 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089633934 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095484165 seconds)
    (140/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062205949 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066870733 seconds)
    (142/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071030042 seconds)
    (143/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.101229706 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064739103 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094611121 seconds)
    (146/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069586969 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075979796 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098984061 seconds)
    (149/309) benchmarking ("sort", Int8, false)...
    done (took 0.161961222 seconds)
    (150/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105468426 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.187631669 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.131002847 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074351634 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070689703 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088636435 seconds)
    (156/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.138817214 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09100168 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051513158 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080912726 seconds)
    (160/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.13062707 seconds)
    (161/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.182991954 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088401895 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089820749 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09284559 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078688043 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09409945 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.15884871 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102246013 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.191946299 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106602023 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.172830678 seconds)
    (172/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053368657 seconds)
    (173/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075468001 seconds)
    (174/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054966587 seconds)
    (175/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.098519946 seconds)
    (176/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158127479 seconds)
    (177/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.094744376 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095051182 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06679509 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072028644 seconds)
    (181/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096798436 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108298602 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094193978 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068831538 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07359758 seconds)
    (186/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.073741259 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071552214 seconds)
    (188/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068663866 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073593029 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065342646 seconds)
    (191/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062097881 seconds)
    (192/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.075005028 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072469009 seconds)
    (194/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078839464 seconds)
    (195/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08977557 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052610083 seconds)
    (197/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.158098179 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066391212 seconds)
    (199/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072616309 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111858945 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05093867 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062721115 seconds)
    (203/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075839687 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065071122 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071361393 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089617468 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050947526 seconds)
    (208/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.127955148 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061917627 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071965171 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091965784 seconds)
    (212/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068352159 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.134915044 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.114113392 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050764324 seconds)
    (216/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089898018 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.0744529 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053075069 seconds)
    (219/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092733936 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052643777 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051109547 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.196462506 seconds)
    (223/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107226285 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051945637 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065355021 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111689924 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067311706 seconds)
    (228/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051484121 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075080869 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052727878 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065696296 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15491491 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070346326 seconds)
    (234/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168415979 seconds)
    (235/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050938381 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050534158 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090389161 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051492627 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156508533 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064573501 seconds)
    (241/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075282804 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074583388 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093335233 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070781584 seconds)
    (245/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.075256698 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069060224 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067607605 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.161308598 seconds)
    (249/309) benchmarking ("sort", Float64, false)...
    done (took 0.147989146 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067477223 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088468049 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077006239 seconds)
    (253/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052436869 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088010974 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078010797 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105219897 seconds)
    (257/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155825396 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.188555809 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072927388 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.076198544 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076549819 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.137069094 seconds)
    (263/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090139025 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09131341 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064619436 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.076241864 seconds)
    (267/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06030543 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07041991 seconds)
    (269/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.089696363 seconds)
    (270/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052660179 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064616673 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116345323 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073344214 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087771419 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053356912 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065594274 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116182249 seconds)
    (278/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052211834 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065027119 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130196268 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.134429125 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158147304 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051061284 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09598034 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102602826 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064017541 seconds)
    (287/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112525442 seconds)
    (288/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050780935 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.073650509 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074018959 seconds)
    (291/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062250856 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087167724 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066885734 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064198714 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095935516 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053024549 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086722948 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089752277 seconds)
    (299/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051643106 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070405403 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.075643829 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066606709 seconds)
    (303/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05087282 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073626142 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068062761 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070590923 seconds)
    (307/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050506961 seconds)
    (308/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.085421723 seconds)
    (309/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118247722 seconds)
  done (took 32.813427447 seconds)
done (took 33.850385673 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083833326 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115074685 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074964905 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090271254 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.103633044 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075604893 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.095847718 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077231896 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102729669 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080729091 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101067679 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055172322 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07352344 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09790347 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073846886 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113481458 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078157459 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095072076 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074207508 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06406903 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.09651712 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065711156 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066510044 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078320219 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077882596 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070594644 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096398686 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072589117 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088849616 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066572318 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068481837 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096506361 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065656355 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076048354 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095629119 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072976378 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097731568 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076586474 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066942287 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088744648 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074906395 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065077136 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095833604 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0729219 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070681667 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094658336 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072691792 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101020695 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091103305 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090656569 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074598458 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075194768 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09990273 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072051353 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092230211 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073862442 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07058352 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115610434 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072725232 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090714523 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074190759 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073352093 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094939536 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072412265 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071414164 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099069752 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074691647 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094519319 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074321965 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070465394 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089666122 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073531421 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067724721 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089661971 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075627951 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098738185 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065539736 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070514142 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09590496 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071178431 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064172924 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091219025 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067732524 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071035418 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091968025 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054950716 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068883915 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09519791 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064840035 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095777828 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072535658 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072361052 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090118613 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075894862 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064051498 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094151876 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066732905 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064937009 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091427815 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069273551 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064334 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091372084 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074577171 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065744361 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095584705 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079079566 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089069837 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072409151 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064690648 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.088666215 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079818233 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097448606 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066336486 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067527892 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088531901 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073461618 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064451133 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089121281 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065760867 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064819824 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095332597 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066152771 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067195029 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096849009 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077717738 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087176124 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070337035 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06749418 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0887854 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072022582 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065504175 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089363532 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067642054 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06118147 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091222618 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066040464 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07203971 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092299344 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074024655 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065940161 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097195238 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070360921 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093095274 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071938324 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064582284 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080641825 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069631125 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067064221 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08943051 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066543994 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066922604 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088830261 seconds)
done (took 13.202585 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068685797 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168635059 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.121199649 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095573472 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109737165 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066219418 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074535404 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126697468 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090162408 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102538385 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109782496 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084352185 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.136480526 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064166047 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.089259543 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070143329 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066213545 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111467997 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12421273 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087076104 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.133962287 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064486414 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119305003 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089371519 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11154914 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12479381 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067858411 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069118011 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093182428 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091288393 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109912122 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069852173 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065559669 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122780486 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116112991 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08386334 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089190324 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083434998 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065170327 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089925587 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.087123348 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12288326 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10267082 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081259998 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070845605 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092911562 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067243314 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.107637357 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08918183 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.103289018 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108747552 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10555181 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092811981 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.080126655 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08822405 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086328954 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104396913 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069081968 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066088723 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092397946 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065748212 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068837345 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110797797 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.112097775 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070463247 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104180557 seconds)
  done (took 7.264542099 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086365633 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089430086 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.107108979 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082190285 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.089660711 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066418139 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065867577 seconds)
  done (took 1.68381801 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069999858 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088232334 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113400723 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089025607 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108171736 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086118144 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100084919 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068068101 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081327303 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093393539 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086077272 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125885645 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067947195 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097462591 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090540654 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065752616 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115449966 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066322942 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093622946 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09022025 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091927044 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.086633767 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.067921199 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091245212 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080626206 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09013305 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112504756 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094475432 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068861522 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069514965 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089125553 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104830529 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104809557 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073926133 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06529316 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105742244 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08012114 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088663825 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082632831 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070473234 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.105422679 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067284506 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092068709 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065813109 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070463945 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101952483 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068234214 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06650781 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093903901 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086421091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091497298 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080911292 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065900411 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094616967 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068439946 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094670468 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077475223 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067287791 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109977515 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068667018 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10684551 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084210501 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078994866 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.107680589 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068987725 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104050366 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081165786 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06811575 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094284769 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070337267 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107732708 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064906627 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067596569 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102287224 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068262962 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113991681 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090075414 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066999286 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101922055 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06689958 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090820792 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068065594 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088294573 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094926832 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066388247 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094715228 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071177029 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065296626 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089680326 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071033868 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064366785 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092704717 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07041947 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066710351 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094333736 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083736458 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091144528 seconds)
  done (took 9.339663889 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070766259 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067885707 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09279295 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068159947 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067195666 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092036797 seconds)
  done (took 1.564962992 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097116907 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091975706 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080854684 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071509648 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128097125 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080236059 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.106535079 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102489607 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084474813 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077950678 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.106903169 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.081314887 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.111893568 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071828517 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104884773 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071816562 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104875683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076505654 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.102065892 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074340655 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.110786683 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073350386 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072644954 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106240305 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070182542 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09741144 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07632207 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103212187 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079198525 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10328466 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074347914 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06997657 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095045062 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078219827 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106285312 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069963741 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096499465 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072311844 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099826035 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071119823 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.080341301 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097929704 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074382625 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09555403 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079252457 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094928208 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071078991 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10022283 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082147263 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094735641 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072140817 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07133505 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094855068 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071431196 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.09414758 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080314661 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094076389 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082199585 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071933595 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095150098 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069602711 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094834495 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078952126 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094648393 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079770171 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094133942 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071431413 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072559264 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098382603 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07191657 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095026755 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07025507 seconds)
  done (took 7.350288295 seconds)
done (took 28.293088553 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.676458956 seconds)
  done (took 1.780785011 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.746860373 seconds)
  done (took 1.853839413 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.943852592 seconds)
  done (took 17.057675797 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.599195186 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.761488892 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.766566044 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130807479 seconds)
  done (took 3.364622224 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.911974914 seconds)
  done (took 2.045543315 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239664999 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222345607 seconds)
  done (took 1.575096765 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77612721 seconds)
  done (took 1.898766389 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.273580978 seconds)
  done (took 2.386471112 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318051439 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175979145 seconds)
  done (took 1.617424879 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.479476696 seconds)
  done (took 1.602500095 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.802020803 seconds)
  done (took 7.930755193 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208966724 seconds)
  done (took 1.347056653 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269484558 seconds)
  done (took 1.401370864 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.342075627 seconds)
  done (took 4.467828017 seconds)
done (took 51.447115729 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080796671 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080107631 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104861159 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078055632 seconds)
  done (took 1.465597224 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080965286 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073186386 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10275105 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071809731 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100658176 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072639429 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07292886 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101634316 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071617776 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097529729 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073218338 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070592357 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09941349 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073125451 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09449504 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075263203 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098014912 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07341521 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074744425 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096611976 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071118511 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073181826 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100534823 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071612151 seconds)
  done (took 3.124756041 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079637908 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071581143 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098149323 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071227107 seconds)
  done (took 1.457230297 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080778013 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089794269 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11376798 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075755464 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.116364208 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110234519 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069177367 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067786899 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094707438 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07684261 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066325799 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.122028342 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111762058 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077105542 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07762618 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090963099 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068361305 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111347059 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077797369 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076292419 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095778893 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079706182 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.0919155 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08931261 seconds)
  done (took 3.26836548 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0798391 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100822838 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103172353 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085882159 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.1151949 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065106919 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100307873 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088336634 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.148419544 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065104181 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09455459 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065767687 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072009104 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090154173 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076275178 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.128995051 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10888468 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067565987 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120621774 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06531889 seconds)
  done (took 2.982442872 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075690552 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069551733 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088975187 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069685789 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076800221 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096962363 seconds)
  done (took 1.61842166 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071697373 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067445453 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090801083 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067413842 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071389968 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091229748 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066618598 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066422349 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092022518 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067978384 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066032391 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090539843 seconds)
  done (took 2.044254069 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.400372946 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095474702 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069298886 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091028767 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070549128 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090451581 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080013038 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067485134 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115445222 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065749152 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090258965 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069647976 seconds)
  done (took 2.440964851 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263392525 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077324046 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290258516 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162143009 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138719181 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14114286 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129481275 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138594933 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.169584162 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128729038 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22095727 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194635723 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132931283 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163260165 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114695301 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097947335 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210698069 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190096908 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130178552 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217348363 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171722791 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151260238 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172155084 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127495747 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131964825 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148794704 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07128076 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105793956 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223537418 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158508555 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17221256 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137114698 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12018035 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227437764 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223100719 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168153726 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160171357 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083539327 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.153552331 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165166978 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256978288 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113995995 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192602678 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13409599 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104434204 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168393129 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147058734 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.14503256 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132622292 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089432151 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198673711 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209267258 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191309139 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086824019 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137359232 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140378312 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141424993 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127807295 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234991925 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186929849 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152415458 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095336353 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099048078 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2039414 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156962139 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.133577162 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.151531456 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092312405 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184951997 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180002749 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1452753 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168984918 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18254863 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087449224 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144841964 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19015573 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155088226 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196893964 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150524871 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097794383 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150850135 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128516312 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081579265 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.164689816 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075454745 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226178671 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122430351 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106716856 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138958666 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133755687 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133603347 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191000304 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198143177 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127167347 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066102086 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127982396 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.144135838 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174182309 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111988047 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10623566 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142302189 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104013556 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163528984 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098934168 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149843518 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075246643 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150589015 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155183309 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100657308 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150135505 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100317844 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125928083 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159165098 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212552291 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088362829 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108967765 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193252308 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149139592 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129736758 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193736592 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184791489 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.123107849 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103233222 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204503187 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233262169 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088586225 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21722645 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134135779 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082633301 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112677906 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15154466 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137941945 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147603674 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083159212 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.14504226 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222294646 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073640402 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121581546 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159936833 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104266679 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081282308 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128864876 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127139362 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093890661 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126861632 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13047609 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167225226 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150527881 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131638544 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1514917 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125113203 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223901626 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113318964 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101229063 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128799884 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069115214 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188624376 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185778238 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077874727 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218414753 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.148674542 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131533985 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144099523 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081647103 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164377831 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104716301 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069287041 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198658495 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135691837 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109799982 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205483344 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103059208 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179748614 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.146309222 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163713729 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159382286 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.154504746 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131351286 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086134029 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137814237 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176580022 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07457287 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.116977433 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081439518 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130243542 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121952824 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083353289 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167450254 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178052269 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099730837 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138350017 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12327111 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172703004 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102831299 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157385642 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145698651 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093284081 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.207519864 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178704532 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158138832 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125860673 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198908346 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071148131 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073056525 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116872343 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148401186 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108333647 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084104176 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143916856 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199925328 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156857473 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16568416 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136518757 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148336842 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181969618 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069060861 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141789851 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173483038 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147258857 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.151815835 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091219838 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125142504 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16971937 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135050321 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236110509 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140458658 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149677508 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208333763 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098378205 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106768202 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131684622 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165645906 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133775837 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172112918 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126341049 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113807477 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110197832 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.100892289 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126903963 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155090245 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147213141 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162671731 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.141712337 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158681852 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103809254 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144523883 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147341867 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150194181 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062851118 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146587574 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223000913 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121187294 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144807 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181247607 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106209215 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.149818586 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205168741 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200031533 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082908156 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136529603 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145662784 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153166245 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144894738 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193544603 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111154992 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187815825 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109052121 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111065006 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086622795 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123911935 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131630274 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.120150912 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.135415874 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.141515536 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094828658 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157217796 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12987502 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135736061 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144444727 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095500717 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116969502 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122759307 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202597004 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145493896 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227335428 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125178061 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17363647 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219587872 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074591322 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105346069 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078139625 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165117915 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110253252 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158704301 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123326014 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105195396 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176580735 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171347038 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094057065 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095782766 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135219181 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16182818 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138489081 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098674267 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132506183 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218293541 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101963682 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107738735 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139472954 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104288782 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129465969 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228819447 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061380019 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124836634 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07481517 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107768757 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153943693 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205959 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081901942 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.126598013 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142797372 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137406557 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179277571 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10303382 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126291504 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141303213 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178994237 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154501832 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116743234 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13831162 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157144206 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211722162 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132225878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095672913 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226650794 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179168839 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.216487085 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113861075 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115767718 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140818449 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134910704 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195042469 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082998314 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21924804 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081135285 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193368045 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130531615 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090155683 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182775781 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099467325 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114558395 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174931276 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143851125 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109577306 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07698358 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161488662 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146955831 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134111723 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1013041 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168506172 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071918249 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187912174 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198069952 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107905636 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104303067 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12166331 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106236973 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135186303 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102447138 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113705076 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.128138806 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225285445 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.115379682 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202704171 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169994897 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13976428 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164014712 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126900229 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664151101 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07709723 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207563519 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147221271 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228505044 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096151025 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144847674 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13569265 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151553665 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200109703 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132496916 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17626017 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158628899 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.142947799 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107426408 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129343807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129222953 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089533741 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131446265 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141387859 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144320247 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.119455685 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.143428675 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152611112 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081355933 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122629069 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184250449 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143130828 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199222613 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167974831 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084018452 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144924925 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196601708 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078886368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.149407843 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208247934 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13347122 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125261717 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081616018 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13020805 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224515027 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073837706 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217804443 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147984406 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108601554 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139685737 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.167246829 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160816807 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135003284 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150142858 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094681522 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.136638627 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140090398 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10909341 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077086272 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132355489 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140153177 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12396858 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125153014 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121647719 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180982008 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097997935 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095827501 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130376986 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198362213 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203924821 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.114865444 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082249611 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147489336 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141509403 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142119782 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148900964 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106317933 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081433205 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109580612 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.103231418 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136463212 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140062846 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131887181 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138148347 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193460813 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109286686 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22142391 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122788615 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131940004 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070312783 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105275484 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095640909 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125312617 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136082894 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127528073 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198846364 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122644807 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.115574121 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093812096 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.1000175 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082964825 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154868221 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138357872 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147774147 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125472967 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06203969 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13693691 seconds)
  done (took 69.40721509 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137631705 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107225736 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122226411 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.174748682 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148941319 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238865986 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182742063 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226013166 seconds)
  done (took 2.547697438 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071433526 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118901645 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098654412 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.10879428 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06729117 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.094692199 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.275025323 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08111732 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092928282 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088627188 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.106317945 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093931997 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.472316119 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065951472 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.092680582 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063693056 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093599994 seconds)
  done (took 3.290582973 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.425230159 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.659832643 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.421281862 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101259392 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.975273271 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08956748 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.606107475 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168346235 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071387169 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.450178025 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.75397448 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13357428 seconds)
  done (took 18.065722537 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076990027 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068383618 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110704738 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083010712 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071256028 seconds)
  done (took 1.629963257 seconds)
done (took 114.467128258 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.0821089 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.349155897 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052910064 seconds)
  done (took 1.652930439 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085478035 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082530084 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111630217 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.080687509 seconds)
  done (took 1.587242422 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077359823 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075236035 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109935711 seconds)
  done (took 1.484552028 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281027551 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138076272 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.11581621 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084599255 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076442225 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103870509 seconds)
  done (took 1.485349243 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074156847 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074130043 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099458675 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076226455 seconds)
  done (took 1.54076018 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079463511 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052584196 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05397006 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082374211 seconds)
  done (took 1.493803903 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089277999 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077791516 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104776697 seconds)
  done (took 1.491271572 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109886655 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111149526 seconds)
  done (took 1.441408902 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084525379 seconds)
  done (took 1.303188088 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102097834 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140409168 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155212067 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136969651 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165314898 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135581385 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.111258661 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089279669 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104350024 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087684865 seconds)
  done (took 2.454373721 seconds)
done (took 17.772872627 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081280463 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.486434855 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363247842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090890613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69742649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354988178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004514087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09074535 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147294838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093521337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083465972 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646562632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993877728 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.412732517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980860093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318412116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673093637 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069152863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067280716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093397116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.962067451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065457045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094576524 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067617881 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673061435 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371877095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066184844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.345152368 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067984289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094151482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355317498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06768777 seconds)
  done (took 16.194746243 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073536439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144010266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073756449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083019816 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097660027 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068928093 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097527117 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070493677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151314833 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068020093 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110084103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068434717 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071451551 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095727752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087169491 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093301269 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070158761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06801757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09428279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069160053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085483845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094983698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068412083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093926199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068440026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079181442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095673267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0679506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067007669 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098098411 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070348522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095037873 seconds)
  done (took 3.971581683 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118267302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.150993735 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073913977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128980474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111452149 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098071994 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140697049 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120299878 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153532919 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067467906 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111342705 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068255842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125929228 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069138372 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086252495 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096054281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06840405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094621013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069297342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06763739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113653516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067932401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093374508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070103058 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068119051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107182773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068499866 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066934134 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096048892 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070187489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097443957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06929214 seconds)
  done (took 4.237588402 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075254436 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075048727 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109487755 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082991778 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067534908 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.098887863 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072133636 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095126012 seconds)
  done (took 1.913270865 seconds)
done (took 27.544416024 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081571385 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069984617 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099984075 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080757583 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071555291 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.105814254 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066859906 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100239227 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072479546 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071670106 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101277175 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066953676 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070256927 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094553274 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073474678 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066391077 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.107710276 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071425837 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.106396389 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078514626 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067800475 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100931442 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073213561 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.105477412 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078931957 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.10395814 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077775803 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070913754 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.097046914 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070572524 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074653765 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110535301 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067433944 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104999955 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067555959 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066183093 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099169832 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067220614 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.105779494 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076570945 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068282967 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103252611 seconds)
  done (took 4.74033802 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090869684 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090667047 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113450207 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061300756 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06461743 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.092725151 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087296199 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086374376 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059865257 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08649945 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.082776092 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059386048 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06172673 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052971023 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.087005105 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056482424 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060038495 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.082695882 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059450283 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058278006 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.056104043 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.080916093 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.05962329 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.060746868 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083091742 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061797965 seconds)
  done (took 3.130631852 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077744778 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084828166 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117952777 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124635727 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131457087 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075835306 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105743557 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086703162 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111680743 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067883351 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070372757 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.12065067 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08592826 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100158487 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070628343 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082523571 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.109691876 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069268383 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.099352385 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090498777 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082583014 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.105117171 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090822229 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.106856563 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066419932 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068212948 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098704538 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080992653 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098410269 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077024452 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.0708933 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097984619 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068964124 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104194107 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07249984 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068478006 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116587537 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076583873 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103925938 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069222355 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070278702 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.095540306 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.099568837 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.139659773 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066999996 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072760418 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.1032524 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076304484 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095006781 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086344374 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076736532 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095335131 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070197039 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065397834 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095227896 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079159754 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09608696 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070688086 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074629577 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097693806 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079980139 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070386073 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110007946 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066315099 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102196532 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067243849 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066856791 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094264716 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091876883 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095872038 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107478511 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067288855 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096697366 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075471761 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101706758 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073341436 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066583587 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110365019 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076941001 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097603731 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076448258 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070488966 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097989731 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087202782 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068731332 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.097021983 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068360868 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100147473 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071219292 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067910784 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107818798 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067308026 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069317363 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111655275 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066469911 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095994533 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074045451 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071052456 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094658847 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077332075 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099788414 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068598889 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075210757 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.095291204 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07049158 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103363881 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074992696 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065971825 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.09946823 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07314284 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067665241 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.097328744 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07007002 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09493208 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077673304 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073111567 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100373476 seconds)
  done (took 11.348151072 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.189005508 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151750167 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.098467395 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.172015376 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076238986 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077250921 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.174821949 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.12263034 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067745716 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067240675 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098931656 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114480413 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.134732553 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.149458597 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078526642 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.096845802 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082981078 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.145415588 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.178606251 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141473567 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112772077 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076326339 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.098639692 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069458079 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073231599 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110916715 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090160545 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104904966 seconds)
  done (took 4.399456358 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084263467 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130676876 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074637009 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087549842 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120576808 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066650595 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098867013 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069961459 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078598056 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.107970897 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066722222 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.101747032 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073583695 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099752013 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069658691 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073367936 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.10347807 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069485054 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069160997 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100573197 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076415779 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108305077 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071750321 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065714563 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102593566 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06665883 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091816588 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084006409 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.095657989 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088656803 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064609662 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102278198 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079945515 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096200486 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068388772 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06661017 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.094947967 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06756749 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068497897 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094310272 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065968013 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05682921 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094564265 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079521092 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100742935 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059643964 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07146504 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101514575 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072316082 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064602127 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098530148 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070417269 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069456303 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105133364 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071472316 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.099469895 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070101781 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065161029 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102468542 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068442762 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064345477 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093880499 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072940725 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065463097 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104223445 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071616302 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093586506 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068425504 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069024703 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101194421 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068882279 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069449924 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093454508 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070735447 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070802562 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.100137452 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068528443 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065264327 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096237021 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066802467 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054610623 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095937804 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053843673 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069361105 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.094033984 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066002335 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066298482 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.100598964 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079734745 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.097017314 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07373786 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095903775 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067530245 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070330498 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087966949 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071165419 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081991211 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111252118 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067391128 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.093360147 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081810472 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098374155 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067936114 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056294159 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100977416 seconds)
  done (took 9.827369278 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098010532 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089125203 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101814696 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084798891 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.11966429 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087009595 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072753012 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.10272332 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069227658 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107272703 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068353378 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075091606 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095049108 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077207963 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09227594 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104539512 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069195213 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10446497 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073093762 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099688639 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111184205 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081230096 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108069787 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068691638 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0713712 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.108580543 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08914932 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107044861 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079551745 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084322132 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108591244 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089539329 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113053146 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072893318 seconds)
  done (took 4.340900851 seconds)
done (took 39.015977647 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.331838006 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.542639868 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.307396423 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.289131195 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.363997788 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.315403338 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.340849249 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.310918333 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.744340977 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.310492425 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.578703054 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.028310203 seconds)
done (took 60.717699297 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.327250718 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.455725479 seconds)
    (2/2) benchmarking "String"...
    done (took 1.587643007 seconds)
  done (took 4.296560693 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.677122954 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.241957309 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.572590619 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.313058029 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.315916921 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.630069776 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.029033412 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.169346806 seconds)
  done (took 28.524964881 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.323959981 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.68912821 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.863859341 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.864679645 seconds)
  done (took 18.996292488 seconds)
done (took 62.072719487 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.301616252 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.357290444 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.325539047 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.296162387 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.421918665 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.34651067 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.541655448 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.514737885 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.31438732 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.298250883 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.312870644 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.324716062 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.324436794 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.560032434 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.314408799 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.314662446 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.368204114 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.796516076 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.722351433 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.318014851 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.349046629 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.321787999 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.344483763 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.315720303 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.316672334 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.313291946 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.313683745 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.356214106 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.749379526 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.317421505 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.311177356 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.814766386 seconds)
  done (took 195.151574535 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.316616151 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.432799993 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.520461896 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.351182239 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.959031393 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.513108686 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.452850955 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.015430827 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.332704956 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.324376422 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.569792609 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.313879525 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.641058891 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.28024578 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.325012607 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.315448191 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.492299062 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.648804162 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.331343017 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.588733535 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.330976512 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.457334265 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.386734361 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.540685567 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.336810387 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.359389348 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.342750519 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.33614392 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.50623211 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.438048953 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.316862858 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.354457159 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.918719306 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.17408133 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.322690262 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.346643722 seconds)
  done (took 154.448189705 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.604515202 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.316171246 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.317609048 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.317521135 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.349910585 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.316402949 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.875546443 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.879794609 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.822610348 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.486245219 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.377467263 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.57522179 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.3171461 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.412691686 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.328691257 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.316793392 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.33233322 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.343035586 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.31687096 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.318973127 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878956733 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.331936954 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.333635062 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.321830388 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.317950718 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351108595 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.714633897 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.319229807 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348957437 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.646229684 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.368397352 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.31967398 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.643787827 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.77950949 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.316430839 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.429911959 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.319328697 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350308295 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.319407444 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.592090337 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.320700405 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.318942132 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.323141401 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.919759072 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.320244507 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.878681203 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.318287697 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.217983997 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.3170276 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.319208616 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.843687268 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.82499468 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.319266365 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.318700044 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.321466305 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.319439611 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.320502118 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.350241691 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.676564012 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.418673997 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.321437436 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.322633178 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352343859 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.321131817 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.559890439 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.31887523 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.569494333 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.379519672 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.425216052 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882255308 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.320192209 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.320348164 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.415277603 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.442412842 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.318923361 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.319855057 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.32149006 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.32062065 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.429278224 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.320315053 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.73228682 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.325113676 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.322833813 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.380604975 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.419314815 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.321751226 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65322599 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.322270174 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.320436597 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.042831458 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.319416634 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.414714863 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.321903219 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.322204095 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.321397843 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.731505808 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883461783 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.521328926 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.322076258 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.708598841 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.322890117 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.743530032 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.856008837 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.951498897 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.323010866 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.432508163 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.325998428 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.323286413 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.320728765 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.320698379 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.322004008 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.349789743 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.323984109 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.381285452 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.718205504 seconds)
  done (took 359.258953755 seconds)
done (took 711.716636207 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.959788135 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.955477247 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.066991388 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.949483056 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.908081481 seconds)
  done (took 11.09946245 seconds)
done (took 12.361373545 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517285571 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.518146788 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.382479963 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517260599 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.350843705 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53791187 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.497398746 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.340154379 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428347643 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.405495652 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428554161 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.376522154 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.352016884 seconds)
  done (took 19.913468204 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.644920037 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.638445593 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.383583227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.64635998 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360097147 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.638032082 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.522427694 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.529709192 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.515546163 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336645448 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.336167962 seconds)
  done (took 17.814175364 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.64156818 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.63106213 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38765986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.640909475 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.362397449 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.642174841 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.518340227 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.528546621 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.512035274 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337309518 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337599597 seconds)
  done (took 17.800653319 seconds)
done (took 56.789038697 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.333770598 seconds)
  done (took 2.594046296 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.366336829 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.532179954 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.351149108 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.337337984 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.334613134 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.33671852 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.335768727 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.333648241 seconds)
  done (took 12.192010597 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.329439613 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.332260199 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.331641944 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.329523442 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.329678873 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.332234615 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.332027799 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.330151574 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.332862821 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.332869551 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.330983425 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.334105174 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.330657047 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.331544961 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.33219478 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.330468422 seconds)
  done (took 22.566977534 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.332508914 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.331562695 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.32935427 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.331208835 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.330571775 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.331445386 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.331383993 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.330554079 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.330892809 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.330762621 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.330769939 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.331473666 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.331013815 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.33044899 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.331121584 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.331290464 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.330954053 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.330550951 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.335902352 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.331549354 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.33264668 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.33028049 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.331487209 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.333539414 seconds)
  done (took 33.219545884 seconds)
done (took 71.834304323 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.407248743 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.969263599 seconds)
  done (took 9.641026925 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.334761011 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.333991809 seconds)
  done (took 3.934284366 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.334986275 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.334277896 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.334594621 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.335412003 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.335422738 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.335514732 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.334323146 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.336845856 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.334360996 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.334594631 seconds)
  done (took 14.617001782 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.335289352 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.335160987 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.332812976 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.335042989 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.334844535 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.331706151 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.335722675 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.336803291 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.334441141 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.332165869 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.336315459 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.332360917 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.336026014 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.335210517 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.334314444 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.334118414 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.332558251 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.332095649 seconds)
  done (took 25.282751244 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.335295028 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.334687689 seconds)
  done (took 3.936415318 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.332870752 seconds)
    (2/7) benchmarking "second"...
    done (took 1.334196942 seconds)
    (3/7) benchmarking "month"...
    done (took 1.332670112 seconds)
    (4/7) benchmarking "year"...
    done (took 1.332931463 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.333371767 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.334471447 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.332922027 seconds)
  done (took 10.600850529 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.337734553 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.51355902 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.587459854 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.016631431 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.337607649 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.340599728 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.296484879 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.340684686 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.340823768 seconds)
  done (took 15.378229586 seconds)
done (took 84.654463177 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.337224152 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.32760933 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.284827577 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.348392873 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.343564386 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.627502181 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.36543852 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.451833948 seconds)
done (took 38.357276503 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.345272743 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.023899024 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.063159826 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.32842434 seconds)
  done (took 11.683051943 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.322770079 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.269023053 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.31678456 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.370279326 seconds)
  done (took 18.548496395 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.961039699 seconds)
    (2/2) benchmarking "read"...
    done (took 1.676216878 seconds)
  done (took 4.905646105 seconds)
done (took 42.751039413 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337842384 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.337132835 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.333995773 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.338540503 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.334272035 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.33782244 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.337493277 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.338274627 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.337876468 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.340246697 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.33954975 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.337387662 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33794491 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335634497 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334537544 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339198585 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.336878839 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336458631 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.335596812 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337041538 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340068998 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.334668947 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.337872919 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.337213174 seconds)
  done (took 33.363392817 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.342079532 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.340422753 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.34322035 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.342311622 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.338691503 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.341693795 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.342047423 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.340433099 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.341147918 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.342904323 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340670788 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.340007803 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.343285415 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.340270786 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342012267 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.34006068 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.34242089 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34151686 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342543355 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.338855324 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.344252375 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339119774 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.341124933 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341673862 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.343798208 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339583329 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.344295775 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.342290148 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.343298149 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.340563261 seconds)
  done (took 41.517774487 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.347310547 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.349955179 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.342874792 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.341245849 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.339401785 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.33881246 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.340481512 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.339560162 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.342784769 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.339142107 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.340892144 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.339688413 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.339724518 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.339898792 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.340837663 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.339666814 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.34205546 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.341700941 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.341676798 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.342033727 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.342203955 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.340592739 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.340469005 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.342428708 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.342701021 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.341503849 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.342146372 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.342885089 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.342082068 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.343638595 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.341765239 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.342053477 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.342355385 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.342842901 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.342416478 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.343243953 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.348209879 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.351200715 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.342859868 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.342564592 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.342282419 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.343501961 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.343411107 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.343699482 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.34270422 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.342152776 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.344078737 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.34413775 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.342757353 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.342854722 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.342880147 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.342373781 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.341988584 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.344370242 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.344124598 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.343114882 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.343155416 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.343214068 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.341640891 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.343433457 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.342579327 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.343696709 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.343344382 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.344685198 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.344007291 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.343717899 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.34227778 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.343050725 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.345039784 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.344544119 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.343780859 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.344361155 seconds)
  done (took 97.951259423 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.344102844 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.341128338 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.342849794 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.340671394 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341604542 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.34422077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.342228413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344395167 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342141162 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.344806827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346869999 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.341805616 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341787022 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344324797 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343547065 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.341721336 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.344594616 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343961582 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.343650075 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.344962255 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344798313 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.341022279 seconds)
  done (took 30.825949367 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347085782 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343439058 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.344488466 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.345563426 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.344377786 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.346492086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.345065043 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.344862539 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345833245 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343471081 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343354832 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344514234 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.343906478 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34234066 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.343126949 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.345575475 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346103188 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.345018967 seconds)
  done (took 25.480615161 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.343962275 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.345577979 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.346910148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.34430514 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.345410042 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.348902612 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343448962 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.346505273 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.34635375 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.343031301 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.345782381 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348044237 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.347593382 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347029833 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346453115 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.344581663 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.346873847 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343978288 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347360879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344658314 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.348730403 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347146719 seconds)
  done (took 30.890545514 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347276807 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349115002 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.344073834 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.3453725 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.344695234 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.349195597 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.346479687 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.345164157 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.348923551 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.346092679 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344403184 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.347469746 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.350304417 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.345942637 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.345462652 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346009201 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.347591775 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.346539845 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347145842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.349764931 seconds)
  done (took 28.213694244 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.34986888 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350479577 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.349334796 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350323661 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350845709 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.350238251 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354060589 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.350632763 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350764122 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.352882807 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.351804044 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.350802128 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351845674 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.355129343 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.353417949 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352371749 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351409188 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350630757 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.351692183 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350717134 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.353790516 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356136623 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351902337 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.352212857 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.352567839 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.35184169 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35439893 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.352571816 seconds)
  done (took 39.134301444 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350878156 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349019428 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.348252481 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.347397277 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.349261325 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.347574031 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.349884074 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.350068158 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.349917733 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.347377256 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.350470275 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.349470717 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.349501158 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.350920919 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.353388814 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.350739489 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351224427 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.34795 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348182538 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34815454 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.351728151 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354585125 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.348541414 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.348019845 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349612516 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.352278027 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350143071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35106833 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349686103 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.349741243 seconds)
  done (took 41.78216564 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.370694289 seconds)
    (2/2) benchmarking "in"...
    done (took 1.370109286 seconds)
  done (took 4.022738435 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.349868334 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351751702 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.353455121 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.350032823 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.348684051 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.350919808 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.351175799 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348390289 seconds)
  done (took 12.086469359 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.354758135 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.35334491 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.352893827 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.352108103 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.352791867 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.354007119 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.363594942 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.371122838 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.356494921 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.354221983 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.35928504 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.362117509 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.358928356 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.353413441 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.353209488 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.355774816 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.352639737 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.354885033 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.353215614 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.354637905 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.3555577 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356018477 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.356687322 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.352089022 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.356008995 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.368465923 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.361554635 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.354727818 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.353307767 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.361216523 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.353967819 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.352408524 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.355518395 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.355936975 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.355837086 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.353825374 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366167351 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.377399314 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.365782941 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357157693 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.35521226 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.351494863 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.355401831 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.357092084 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357280579 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.354588978 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.356258464 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.352102577 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.355783023 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.358809354 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.359249619 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355107227 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.353278588 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.361680831 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.357927399 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.365702786 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.372146098 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.360866814 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.365141171 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.368420248 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.371135887 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.366295618 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358123593 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.354968946 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365989036 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.383536017 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364860347 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.370179994 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.353160126 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.354740435 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.36744536 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.371095099 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.369464822 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.357362533 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356931698 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.356479458 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.35820655 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357569219 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.365677984 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.379049849 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.356692107 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356110825 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.368498859 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381893577 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.355701764 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.357012057 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.35726614 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.356918616 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.359174831 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370114898 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.374416503 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.357217332 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.357252405 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.358897979 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.360690646 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.358029651 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.35782341 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359717942 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.355271732 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.356199552 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358608575 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.362577994 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.367957713 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357763978 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360460083 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.367555876 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.358410098 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358017102 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.371407749 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.359840637 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.358135047 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.36204607 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.36927856 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.355395746 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.361687636 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.369251186 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.358179211 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.360361349 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.362808172 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.359390876 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.368955786 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.390121329 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.359470435 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.359216115 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.364744064 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.372779557 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363992203 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.364559389 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.359667612 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.356978086 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.356906414 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.361815284 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.35812844 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.361299596 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360297406 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.361426455 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.356750527 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.361114079 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.359303013 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.361842517 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.363898042 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.361025938 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.362398575 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.362554094 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.359823182 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.363689031 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.370261053 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.361350794 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.36305688 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.36261632 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.359089576 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.361944039 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.361588917 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.360618844 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.363104612 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360481593 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.361947218 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.361642727 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36144386 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.360271816 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360857009 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.361447464 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.365999429 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.360308245 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.368700146 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.359964913 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.359197414 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.360385325 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.361261569 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.362525873 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.362075923 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.361181356 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.365432622 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.3702687 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.363933016 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.361745595 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.365866171 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361775658 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.363371255 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360934744 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.366914228 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.371264497 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.362156173 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.373457757 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.363425554 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.362489705 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.363533098 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.365553548 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.364142138 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362159198 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.366320937 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.371869644 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.376506276 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37473681 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.363572639 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.36570976 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.365126597 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.367926967 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.368545248 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.363252982 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.364710304 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.362655412 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362930555 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.363252195 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.36580436 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.36380759 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.363124861 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.363907244 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.363392937 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.362826483 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.36500791 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.365321738 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.3673086 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.362527151 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.363015889 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.363312241 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.361928502 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.362408149 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.363081747 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.364760236 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.363837804 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.363288557 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.375631731 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.361607414 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.365946463 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365644723 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.363647787 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.362328602 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.364860241 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.366869807 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.366178185 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374973286 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.384179145 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.366512853 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.373352402 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.38575149 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.36394417 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.369881817 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.366504276 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.362482124 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.367731317 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.374510927 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.365855775 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.365165246 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.365121308 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.365560684 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.364660924 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.374851103 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.363467936 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.36495328 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.368205328 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.369788367 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.363944821 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.366912369 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.368279455 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.366227497 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.371493384 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.367030916 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.367457674 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.368556893 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.366954452 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.36600231 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.366684366 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3684085 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.375455152 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.374962474 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.368151817 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.371880088 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.367948052 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.372384279 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.368365428 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.368152136 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.366502073 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.381346989 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.377649773 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.375470248 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.3717377 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.367186755 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.375181316 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.369494381 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.372631239 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.367753259 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369753456 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.367856872 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.366632407 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.365141486 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367747336 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.367173919 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.368973023 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.36919248 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.372060099 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.368203301 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.367725327 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.367342219 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.367425603 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.370593982 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.366809409 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.367627085 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.373288598 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.371260264 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.368304987 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.369249977 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.376490152 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.38974428 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.370899146 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.369163735 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.369338676 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.369326216 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.371518851 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.370982361 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.371924578 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.376842272 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.371702668 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.380256924 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.371633943 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.38061938 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.369808649 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.373405069 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.377864699 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.367801063 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.367703378 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.37100553 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.369529465 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.379864798 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.388282533 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.371003493 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.375712053 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.371236311 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.369899193 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.37104294 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.370248294 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.37012362 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.371016215 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.383039653 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.391741091 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.37497606 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.376000246 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.36824173 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.370182216 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.37183432 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.369457375 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.377114441 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.371235062 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.371385754 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.371761278 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.373828106 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.372004672 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.372672869 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.372645853 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.36677614 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.371749114 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.379271023 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.388865889 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375938768 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.370809444 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.382740095 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370849808 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.381806789 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.390236156 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.37261705 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.370844264 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.37159668 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.374883879 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.370947504 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.373758015 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.372094295 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.372861319 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.375799192 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.372852674 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.376918643 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.373606909 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.373540291 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.372960994 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.382048865 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.397571195 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.374848299 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.377301816 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.367352517 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.374627432 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.378256376 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.373589912 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.37319562 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.377414626 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384184816 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.381136904 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.374110202 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.373335255 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.37549453 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371930445 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.373704025 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.372339493 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.373879197 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.374838189 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.376361011 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.374679194 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.379072201 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.373322178 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.374817086 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.376985945 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.374284341 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.387424941 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.375702034 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.376595786 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.373381611 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.374670557 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.375344039 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.374186044 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.373589729 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.376206458 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.374519476 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.377121432 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.382507078 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.381498863 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.377941428 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.376132438 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.374688516 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.376036633 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.379445921 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.375640713 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.375052473 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375610708 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.375882694 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.37439856 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.378779051 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.374044278 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.374737705 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.375176388 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.376391226 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.378863156 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.383203255 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.375152397 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.372395072 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.375618994 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.374778686 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.375415282 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.377954477 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.390171949 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379369017 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.388005457 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.386426065 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.379887715 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.377293187 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379077169 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.385587887 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.375812415 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.378630575 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.376686013 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.378738994 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.376823051 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.380892875 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376951967 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.386440966 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.378750882 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.377856895 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.389420655 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.3999347 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.377196898 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.377487482 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.382031915 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.377094178 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.375003649 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.376613467 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.377626025 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.385170222 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.399020996 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.376300689 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.3799183 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.377434004 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.37818075 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.38304454 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.378423711 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.37845832 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.375465117 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.378348972 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.37802313 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.37715645 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.3764686 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.378228993 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.379038014 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.381679345 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.387540277 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.376144339 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380591061 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.380082269 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.380767257 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.378628604 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.379390017 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.376315588 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.377180908 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.378693523 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.3775075 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.380918633 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.382596278 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.378594865 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.381453489 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.382165936 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.380815948 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.381218554 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.391317446 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.387641119 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.377114564 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.377388518 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.381017587 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.382865796 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.379337396 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.380104676 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380891598 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.383112052 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.379321911 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.380959752 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.380709596 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.382375783 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.400163198 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.401964573 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.381578431 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.381404298 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.387627616 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.379814878 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.378362285 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.379916473 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.383591575 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.382526455 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.390578453 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.381060322 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.387604615 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.398360026 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.381753416 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.384459943 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.384991591 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.390832072 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.385346299 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.381050375 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.381740526 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.384441862 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.401925841 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.381743888 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.390619955 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.414911938 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.397996807 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.383269898 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.381610101 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.382144639 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.383544075 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.385463619 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.383316806 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.38340274 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.382160737 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.38044152 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.382384189 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.390487122 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.385162669 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.381779319 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.38158967 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.38404295 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.386746742 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.379692412 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.381783486 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.383426664 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.381078754 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.383945802 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.384224352 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.385737139 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.398620719 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.396398888 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.383238572 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.38404914 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.380869802 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.388714743 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.386807569 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.396424876 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.39043148 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.38327456 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.383383873 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.387012037 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.383104071 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.380769042 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.384298981 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.382999367 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.381760049 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.380757796 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.398733667 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.394618887 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.389567113 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.38362284 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.383935409 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.384316011 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.38679284 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.383603176 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.38487354 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.386859299 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.385254971 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.388272146 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.384177988 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.384604998 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.389265357 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.391566566 seconds)
  done (took 818.794417822 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382439717 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382319662 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.381604609 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.382638437 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382205989 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.381644771 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383388691 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.382135192 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.383660932 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.381778469 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.383226249 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.382003028 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.382267608 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.383259145 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383094257 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.383074425 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.382072445 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.383085993 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.383830534 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.382091588 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.382251697 seconds)
  done (took 30.349088066 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.386723973 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.383802547 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.382716736 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.385566896 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383233984 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.386922893 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.384236238 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384437434 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.386619255 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383246284 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.384724531 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386190608 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.38240909 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.382551125 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384300786 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.386697054 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.384786419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.384132948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.386786772 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.38452943 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.386715336 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.385067238 seconds)
  done (took 31.781183165 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.389015298 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.388055147 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.388449673 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.384638651 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.387605388 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.384243692 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.39026723 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.386321481 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.385737791 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.389940819 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.387757152 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.390144566 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.396151645 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.39314257 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.392556193 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.387072701 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.53081349 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.388162807 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.387945119 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.387876603 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.386436738 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.39620984 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.384658075 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.385223948 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.38850188 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.387365351 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.388684564 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.387130711 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.388615885 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.389816253 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.391062441 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.389692616 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.389192897 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.390257201 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.390438199 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.392939434 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.392774376 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.388909817 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.385381077 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.386630214 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.399008713 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.411100739 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.388230402 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.398540786 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.387112178 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.389113413 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.392647232 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.397429901 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.38545664 seconds)
  done (took 69.561497321 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.389418599 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.38795088 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.384931339 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.38863237 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.392333578 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.391020587 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.391215945 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.39169474 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.387911253 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.387501201 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.390595738 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.388814886 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.387012905 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.390684638 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.392995722 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.389666435 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.390482781 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.387036176 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.391259404 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.38669333 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.388143559 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.388912134 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.390207952 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.386993355 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.389620915 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.38786827 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.387294684 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.38988993 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.387789523 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.386008351 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.390399642 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.391250526 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.390810814 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.388397388 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.387435854 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.390598129 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.389566662 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.388015954 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.39044767 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.38842561 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.391498894 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.39014123 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.390808876 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.391528041 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.388275477 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.388782809 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.386565567 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.386157372 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.38724787 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.391382025 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.390439039 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.388550191 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.392461594 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.389008735 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.389987271 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.391160068 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.388854002 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.388737592 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.391240578 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.388063594 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.389268045 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.392598309 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.389139252 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.391682254 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.390117726 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.390044407 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.389397683 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.391079394 seconds)
  done (took 95.800658536 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394925416 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.395174895 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393527418 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395993897 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.394235245 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.396250193 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.395047044 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.397135806 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.393418403 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.397557319 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.396192159 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.395478003 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.397119155 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.395182563 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.396610287 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.397213355 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.39734962 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.396249296 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.396730864 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.396300383 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.397923906 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.396100073 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.396731313 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.398928025 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.397672577 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.397121336 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.395835863 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.396700272 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.397338542 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.396411054 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.397587579 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.398751594 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.396203192 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.39759687 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.397510016 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.397042479 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.397730744 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.396685037 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.396989452 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.397030075 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.397793839 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.397090587 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.397035849 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.397009781 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.397720687 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.397599376 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.398441334 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.397573569 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.397202031 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.397759845 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.396599063 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.398315677 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.399508121 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.399144334 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.398963194 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.399202386 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.399151713 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.398248142 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398090813 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.399564633 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.398620414 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.398876361 seconds)
  done (took 87.944739767 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.398426094 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.397953651 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.394332094 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.395212794 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.398843215 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.395793532 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.395081483 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.398300948 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39725315 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.398913285 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400118662 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.395144879 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396409104 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401664351 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.396151257 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397348117 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.39580835 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.396118514 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.398656966 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.395647741 seconds)
  done (took 29.267060036 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.396287164 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.399344164 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.395581696 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.397646218 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.39886001 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.397412245 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.398164448 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400262833 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396415423 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.399561887 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.401086935 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.400338861 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397480271 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.396785174 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.399153233 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.398376704 seconds)
  done (took 23.698760074 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.397678308 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.39887757 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.400090193 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.402045925 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.398436016 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.395975146 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.398628645 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.398319662 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.397805502 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.401787293 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.399591954 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.400667792 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.400798175 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.400335648 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.39790438 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.401551038 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.39791683 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.398248607 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.398194179 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.402380623 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.400090503 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.398020872 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.400805523 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.400205928 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.399332145 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.398626736 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.397316788 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.398807375 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.399329416 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.401882152 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.398538459 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.399441217 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.398417411 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.398866523 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.403829896 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.401137867 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.399600215 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.40011068 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.402173797 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.40262653 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.402575594 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.399774683 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.402420535 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.401983065 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.398686227 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.401995984 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.399651636 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.400121637 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.40076775 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.402230189 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.402622282 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.403325368 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.402110449 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.402223018 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.403264163 seconds)
  done (took 78.337939766 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.403368707 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.403061255 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.400352657 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.402498597 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.401808835 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.401058919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.402177366 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.399832518 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.399817486 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.403046745 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.401390914 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.404658769 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.401365886 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.404146837 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.401689298 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.402051438 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.400251645 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.401000164 seconds)
  done (took 26.562813155 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.402289922 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.402057334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.404340948 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.400008558 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.400923257 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.402012643 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.403238751 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.40203585 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.403727427 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.400544198 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.403490464 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.405938821 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.404794037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.404858995 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.402622078 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.401922852 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.404824194 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.403112413 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.401871942 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.400899791 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.406401555 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.404725888 seconds)
  done (took 32.197298876 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.401704426 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.40176011 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.419056904 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.447685536 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.433445102 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.402382226 seconds)
  done (took 9.836409291 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401365708 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404890119 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403043839 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40539346 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403404615 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401521691 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402746968 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401692806 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406681638 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4024654 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40338565 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404974428 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405477524 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404285674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405127801 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407594874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403227784 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403544915 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403935467 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405900408 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40356373 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407047536 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402771727 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403669355 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403567736 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404384418 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407741332 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404638826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404737671 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406810308 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405370757 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403392196 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407881865 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403811701 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408044135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407529584 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403594244 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408542532 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406624304 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403722372 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.408204196 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406440335 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407375194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404002802 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406152766 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403437257 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402658921 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405358755 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405698695 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408469437 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406602896 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404701013 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408492565 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407376676 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407315291 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407639459 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405069657 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403953386 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408212389 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406232111 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40528196 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409205894 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405179174 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405420418 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407556646 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403931588 seconds)
  done (took 94.080587706 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402780141 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401243058 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401912166 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401486765 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402853633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402884505 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402859087 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404585315 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405008457 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403511679 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406303353 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403397141 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404231074 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404979981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404903458 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405985549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405390372 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404507373 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404060243 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406630774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404750738 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404271267 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405044835 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405162433 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404071868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407042231 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40642351 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40503912 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404654245 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404067572 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404615295 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405113985 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404089857 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.405270508 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403563954 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405695407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404621825 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40657707 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405286351 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410479345 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40731739 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408077401 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405328741 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406362306 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406227093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406455831 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405057813 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406498557 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405580345 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406858634 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406879163 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404458059 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407042769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406720493 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405004396 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405660004 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405498741 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406660938 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40691833 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410266411 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405129864 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405562749 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409718224 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406687062 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407388063 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407551062 seconds)
  done (took 94.092096018 seconds)
done (took 1908.843202945 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.512135408 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.435170532 seconds)
  done (took 14.284071102 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.573792636 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.526703985 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.40969587 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.403502284 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.406658333 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.419110077 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.422899606 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.406225546 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.409958807 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.408757172 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.409069864 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.601100363 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.413228837 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.407630722 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.411336444 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.501222106 seconds)
  done (took 44.48093715 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.437727357 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.413860476 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.533799355 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.428244411 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.436106762 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.605714297 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.467503573 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.414923956 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.599264053 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.45327406 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.030109103 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.435515109 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.411881844 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.563789955 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.429226515 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.607359845 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.674935398 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.02666128 seconds)
  done (took 32.30883579 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.885220765 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.438146154 seconds)
  done (took 9.663390564 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.441118969 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.445862256 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.423942974 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.427508385 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.424705518 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.440891425 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.409876595 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.429178394 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.474017519 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.432655323 seconds)
  done (took 65.700444355 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.433320318 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.415736417 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.414621319 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.412323235 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.40665511 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.405491635 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.414364972 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.407250202 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.247169673 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.548786248 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.435188947 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.421185503 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.413971254 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.414456134 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.412166527 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.451035013 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.550931718 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.41110211 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.409629914 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.419309617 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.413549039 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.503260762 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.457008976 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.412914377 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.547371647 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.259467638 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.41675581 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.420089424 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.527658083 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.41175095 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.413717601 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.416035713 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.416513865 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.989070723 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.877894372 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.422819926 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.43622299 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.424889498 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.410741431 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.540149975 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.415602558 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.418497873 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.412294592 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.853384637 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.580387425 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.536684539 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.785467979 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.41854794 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.416165696 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.480943896 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.416599195 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.418916072 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.446263692 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.208830182 seconds)
  done (took 116.314399431 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.436605769 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.897666683 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581989385 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.436483267 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.089179947 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.09178225 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.407858006 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.718335205 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.453842457 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.409899185 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.761931631 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.934937882 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.416796542 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.456954706 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.042923317 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.458667452 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.411199809 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.221555078 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.410279591 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.414847603 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84615638 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.440180345 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.405855902 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.589092473 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.450723904 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.894916464 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.993934835 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.862872689 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.406883671 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.407998837 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890571849 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.415334016 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.422428107 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.40684606 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.700842716 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.789169024 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758088329 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.408378763 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.459081617 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.408416477 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.425035232 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.887965839 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.767672962 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.412037864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.406500991 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.889534836 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.408057702 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.4097656 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.418070947 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.617753879 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.125035864 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.412225049 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.958674195 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.409964632 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.754706794 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.417174125 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.453396307 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.922723762 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.408114038 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.493248326 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.43238635 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.411731243 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.412690369 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.416192693 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.413421987 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.775924632 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.543754069 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.412292997 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.77877048 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.890457783 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.412486199 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.953222297 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.359867064 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.41369351 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.487909873 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.41226668 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.999487741 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.915697701 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.423582486 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.408557076 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.762442249 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.408087527 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.746398182 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.426238673 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.425477753 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855538146 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.431034245 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.450758652 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.413496 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.418364444 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.047540267 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.414366688 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.691902009 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.438829918 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.412164751 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.414490081 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.428147473 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.411546239 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.414112225 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.419118297 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.952022425 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.413005554 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.565823398 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.430228909 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.411832708 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.41234778 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.413005867 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.413006426 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.633574735 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.954388471 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.4152018 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.414522589 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.412130436 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.412354225 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.550792134 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.416536334 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.736072681 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.413486323 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.411582993 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.413424504 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.080223675 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.412658024 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.422407903 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.413895992 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.266640445 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.627948669 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.433910545 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.412800459 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.415406137 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.428909559 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.851358593 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.413911675 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.4592835 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.419018266 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.134312817 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.434307678 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.446274478 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.793685242 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.422437492 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.429517207 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.41764385 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.416635876 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.73194328 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.707522889 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.468353777 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.41556316 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.413956335 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.104821319 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.449281517 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569633646 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.438503544 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.395870595 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.619327259 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802898716 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.41666842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.993842136 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.41773372 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.631060388 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.416122683 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743835843 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918267577 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.414703115 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.420836071 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.13045251 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.076402799 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.039610022 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.421909277 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.764838098 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.428849742 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.875519482 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.416978902 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.418442028 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.861358427 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.420664305 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.421686664 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.41860439 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.417979643 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.476450687 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.595509991 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.133667092 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.419604007 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.891496642 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.437960067 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.41432562 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.422829194 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.421172634 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.771526024 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.452394887 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.422045677 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.452223254 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.417005856 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.423371149 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.90764157 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.414482874 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.420209725 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.575500492 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067054507 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.415365937 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.4312745 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.093613349 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.644168331 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.942549968 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.415096163 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.742252125 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.417397481 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.45989872 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.045229479 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.441041872 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.905220237 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.417086394 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.418437528 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.029687716 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.416528951 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770638285 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.419114275 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.419891122 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972781287 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.418173257 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.424282396 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.860470318 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.417492082 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.681495063 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.421478967 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.434639696 seconds)
  done (took 1130.43173004 seconds)
done (took 1414.519794186 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.41891442 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.420879761 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.409107768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.420530277 seconds)
  done (took 27.022352184 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.431264779 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.426664041 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.431324012 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.427366907 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.430331366 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.428136321 seconds)
  done (took 9.930590493 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.533418394 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.420724694 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.422915208 seconds)
  done (took 19.730911323 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.660057097 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.75987004 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.812650175 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.736950282 seconds)
  done (took 11.326015389 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.430534527 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.426950973 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.428733665 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.429936458 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.431294156 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.43079353 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.428294164 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.4294672 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.430867683 seconds)
  done (took 14.221880285 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.586288212 seconds)
done (took 89.171164624 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.450554095 seconds)
    (2/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.509345599 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.365184963 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.967635135 seconds)
    (5/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.440750519 seconds)
    (6/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.532762528 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.463676946 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.682804343 seconds)
    (9/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.01740533 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.618698998 seconds)
    (11/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.442990754 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.46063101 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.001604159 seconds)
    (14/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.424872824 seconds)
    (15/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.679209665 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.467936162 seconds)
    (17/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.425397152 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.84678095 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.405094652 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.462621126 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.425897919 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.425932924 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.418697246 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.436686777 seconds)
    (25/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.425802732 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.616612428 seconds)
    (27/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.745081656 seconds)
    (28/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.526331032 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.429377444 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.51999567 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.160317658 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.44797724 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.84977398 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.438716273 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.42695485 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.409041301 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.813458002 seconds)
    (38/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.055439378 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.450064176 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.423473086 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.529761027 seconds)
    (42/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.408489989 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.031189496 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.681332779 seconds)
    (45/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.095027244 seconds)
    (46/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.058931316 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.742772943 seconds)
    (48/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.424771189 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.432187023 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.725472291 seconds)
    (51/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.077829085 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.13932301 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.855567072 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.497577289 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.423971557 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.447471019 seconds)
    (57/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.402821148 seconds)
    (58/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.049434912 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.503570793 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.448558367 seconds)
    (61/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.819301137 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.556958084 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.425953164 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.679960821 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.426992991 seconds)
    (66/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.081897781 seconds)
    (67/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.832810687 seconds)
    (68/309) benchmarking ("sort", Float32, false)...
    done (took 5.462670304 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.619794385 seconds)
    (70/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.54563816 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.410958206 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.876915695 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.53440637 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.784860125 seconds)
    (75/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.410584992 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.964426565 seconds)
    (77/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.433566319 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.31305344 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 6.42363497 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.087135704 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.659921985 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.522422049 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.429040932 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.410324756 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.128542704 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.134591296 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.510582339 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.339811161 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.433381398 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.541410516 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.450018388 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.025030416 seconds)
    (93/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.424967806 seconds)
    (94/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.029247939 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.713075156 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.447762346 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.177200339 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.855763404 seconds)
    (99/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.538507311 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.925581422 seconds)
    (101/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.486180237 seconds)
    (102/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.476145134 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.512600127 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.448798333 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.625871714 seconds)
    (106/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.053371352 seconds)
    (107/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.51448548 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.423599654 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.94196915 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.427481625 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.431613495 seconds)
    (112/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.110827083 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.940484413 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.428186588 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.426309965 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.509904295 seconds)
    (117/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.056424779 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.596387072 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.86099523 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.530966364 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.428721 seconds)
    (122/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.436379195 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 1.943327533 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.455208703 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.430015959 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.688231009 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.86104055 seconds)
    (128/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.829124869 seconds)
    (129/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.709468674 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.258771813 seconds)
    (131/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.82240891 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.682169246 seconds)
    (133/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.457646928 seconds)
    (134/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.332739233 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.549545472 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.906351041 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.442107814 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.095797886 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.561565187 seconds)
    (140/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.227590332 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.527556886 seconds)
    (142/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.455850116 seconds)
    (143/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.542122678 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.268743399 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.451758967 seconds)
    (146/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.493321984 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.454745032 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.801359609 seconds)
    (149/309) benchmarking ("sort", Int8, false)...
    done (took 4.51031199 seconds)
    (150/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.812887489 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.430890155 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.431214513 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.471099254 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.257018803 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.239596146 seconds)
    (156/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.481211738 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.450867295 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.780887657 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.165037659 seconds)
    (160/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.016700288 seconds)
    (161/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.909344448 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.325091673 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.568444915 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.971791003 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.85476167 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.55172269 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.537257318 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.503565151 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.427859363 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.001221027 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.437012089 seconds)
    (172/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.469222818 seconds)
    (173/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.934946478 seconds)
    (174/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.418367458 seconds)
    (175/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.834583424 seconds)
    (176/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.575697699 seconds)
    (177/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.62929752 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.460955751 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.432255914 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.457394337 seconds)
    (181/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.45874858 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.852319158 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.321040544 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.242383108 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.475370672 seconds)
    (186/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.859181268 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.563427326 seconds)
    (188/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.559972934 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.310208243 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.53062364 seconds)
    (191/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.432919418 seconds)
    (192/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.01933832 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.449904064 seconds)
    (194/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.178719835 seconds)
    (195/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.535935681 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.628938123 seconds)
    (197/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.272581286 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.203219176 seconds)
    (199/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.457315488 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.096060524 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.438408546 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.500735012 seconds)
    (203/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.418340915 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.867408189 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.471040835 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.369573294 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.8261757 seconds)
    (208/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.843051148 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.857385602 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.333833388 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.704533713 seconds)
    (212/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.53139101 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.857419915 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.645926499 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.673534299 seconds)
    (216/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.435357871 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.158393442 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.418329834 seconds)
    (219/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.497945481 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.541614542 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.150857327 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.434816252 seconds)
    (223/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.461210987 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.827291635 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.106914227 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.676922121 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.507611962 seconds)
    (228/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.095819191 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.458379728 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.354264183 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.095038801 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.542253107 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.458032604 seconds)
    (234/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.772648477 seconds)
    (235/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.0684298 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.632205112 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.453824745 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.558444695 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.452276676 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.487471109 seconds)
    (241/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.519741094 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.946088175 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.479761092 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.006046057 seconds)
    (245/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.658440751 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.45573598 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.500211326 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.436223546 seconds)
    (249/309) benchmarking ("sort", Float64, false)...
    done (took 5.793719114 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.436258215 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.33785007 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.419100886 seconds)
    (253/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.384197478 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.013662853 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.559155606 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.818372511 seconds)
    (257/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.724760894 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.527961365 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.559386314 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.447820929 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.417499278 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.253476848 seconds)
    (263/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.438334199 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.435923107 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.665823678 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.049316048 seconds)
    (267/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.819532538 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.463981861 seconds)
    (269/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.440743919 seconds)
    (270/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.069288554 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.289475092 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.485451327 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.82479563 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.858562753 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.184058508 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.401963771 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.48561762 seconds)
    (278/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.673253099 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.685295153 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.437532805 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.319353782 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.438659883 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.145331973 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.484697991 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.509888056 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.541379201 seconds)
    (287/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.43794019 seconds)
    (288/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.76284457 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.757048434 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.520834225 seconds)
    (291/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.20540214 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.538190059 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.44734971 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.550938773 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.602247477 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.437298691 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.163057449 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.441303165 seconds)
    (299/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.897551274 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.481841765 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.635239907 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.009130085 seconds)
    (303/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.958697979 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.885486815 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.544070399 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.461170546 seconds)
    (307/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.460773368 seconds)
    (308/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.317662642 seconds)
    (309/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.438561932 seconds)
  done (took 968.35537636 seconds)
done (took 969.710546446 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.468793216 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.463006991 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.446406526 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.468123787 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.556973865 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.475032888 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.457234087 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.449200148 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.495271457 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.495120414 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.447108381 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.473142162 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.448915107 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.448553075 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.44685252 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461841354 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.514177908 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.446950183 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.463667329 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.457958907 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.464635727 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.446987373 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.497399734 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.47420614 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.451968791 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.451469718 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.451077693 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.467116872 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.560559824 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.452529604 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.451526671 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.460336128 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.514458396 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.444037953 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.442128976 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.469225063 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.461420436 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.458795101 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.452189918 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.481183177 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.004964902 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.449035732 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.45065504 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.449013204 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.449677385 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.452827755 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.449941262 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.454820641 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.461422687 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.464125816 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.018648454 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.465885813 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.452925094 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.450482969 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.45955248 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.449147479 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.452405546 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.466269119 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.469388971 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.467316704 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.512245224 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.451588619 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.452349557 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.466538258 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.460148338 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.976963916 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.442509401 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.454129155 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.949565527 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.453885862 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.981940046 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.457198035 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.452337718 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.465224494 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.483722306 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.523860782 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.443515844 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.450342765 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.459869609 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.449480019 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.461083978 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.463699765 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.456120202 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.453199554 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.463441873 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.478955792 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.461789248 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.450787827 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.460190696 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.470760747 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.45849748 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.463157722 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.45499807 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.44768531 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.460571117 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.455547443 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.45367111 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.455522113 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.45557253 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.461427278 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.948611406 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.465200362 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.449973279 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.447807857 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.451732539 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.466054659 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.952345452 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.451352528 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.475273814 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.499756797 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.455404648 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.517783775 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.455965175 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.469830938 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.463656536 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.456666721 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.448414317 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.520231964 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.948274944 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.465812107 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.456048165 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.452821243 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.470371414 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.454650693 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.450607626 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.533049927 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.45207318 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.467984001 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.575796106 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.465072124 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.48575299 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.452618991 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.457224783 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.481872768 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.470806198 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.485289689 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.456973893 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.469906205 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.470399373 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.451555955 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.467640147 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.46460163 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.456042136 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.461082815 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.449211292 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.486159266 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468020624 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.467670307 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.475914389 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.575729324 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.453119814 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.522606957 seconds)
done (took 244.346857265 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.515022403 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.451863241 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.554607807 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.451259182 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.553407488 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.551348013 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.449406962 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.449803081 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.450757237 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.834702972 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.449297137 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.449421471 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.452689246 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.451116108 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.53372894 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.453376283 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.449028668 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.849477019 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.454400631 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.523810753 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.452949301 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.451842454 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.452077447 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.896937662 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.45099815 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.448970224 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.524490509 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.45402659 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.802298623 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.448125606 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.451783422 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.856485014 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.542922142 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.469296571 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.463382196 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.461656267 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.554313431 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.472699087 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.533839126 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.533799583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.556538979 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.494071858 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.449258394 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.44977547 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.455450843 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.455776296 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.4527669 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.479157353 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.451344332 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.452168726 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.798536266 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.466135651 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.452534685 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.451921946 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.452556997 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.484543583 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.453694844 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.457743517 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.544641508 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.456432682 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.519863032 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.839081734 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.899655178 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.455355088 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.456147848 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.454392089 seconds)
  done (took 156.770209562 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.524182657 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.529566564 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.573939038 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.455726478 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.507512727 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.577374242 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.454699177 seconds)
  done (took 12.004924304 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.461407412 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.456775762 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.505127482 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.50732172 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.456549452 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.602848324 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455146591 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.468363389 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.454336479 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.509741776 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.458292063 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.457899334 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.46384429 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.45405142 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.506707754 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.467984827 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.573361989 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.457805528 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.457385525 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.614196809 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.456287772 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.463168563 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.509521345 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.469690188 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.458829686 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.464354955 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.043557602 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.457675484 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.457055203 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.458560971 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.455919322 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.496955784 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.458357329 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.454089345 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.455961812 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.580868362 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.458797136 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.457033331 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.458028941 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.452485865 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.457464591 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.458411123 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.458355648 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.456754865 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.457054777 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.482488829 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.459084803 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.458484707 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.458215266 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.459984715 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.508997987 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.459399432 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.45652411 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.454543303 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.517284081 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.467092242 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.461450113 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.455155825 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.459702823 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.456487003 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.615616931 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.507225472 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.459653179 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.508942116 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.460398866 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.461223201 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.459932117 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.459756506 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.515715045 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.46125476 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.508107417 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.457413505 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.622123226 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.483395037 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.460562945 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.462584946 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.463203252 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460174349 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.454755853 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.464431986 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.456678499 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.460993332 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.466979131 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.4586249 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.456396121 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.562637628 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.574410509 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.457821001 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.472664714 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.468159249 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.456935919 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.514850559 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.463253274 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.456810314 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.514284992 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.577278972 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.515619788 seconds)
  done (took 165.52558866 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.46620343 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.469643677 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.463158267 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.477583151 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.459891341 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.461737496 seconds)
  done (took 10.184431654 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.465593191 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.464393342 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.462260276 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.459851704 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.462261385 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.461636862 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.462722159 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.463928849 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.467150715 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.461223319 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.927289694 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.463109432 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.462184863 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.461182726 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.462865991 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.461252742 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.461584148 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.460262817 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.462934808 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.461681251 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.566867623 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.463217943 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.462683951 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.464872261 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.465923188 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.461620465 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.470062592 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.462264663 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.462107619 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.471715617 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.465903837 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.463625899 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.464140948 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.469873793 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.466038356 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.466157925 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.466209863 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.46370182 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.46225183 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.463382115 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.464642288 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.464337987 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.462545741 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.465383204 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.465725607 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.469345928 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.469133552 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.471131776 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.463847793 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.464324442 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.466978188 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.464374107 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.465053911 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.465884342 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.470246968 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.469685763 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.469088929 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.465734473 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.463765565 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.466028122 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.465457175 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.463343459 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.468924714 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.467911093 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.46292224 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.464769353 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.46833533 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.468680958 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.46531921 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.466311295 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.466757249 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.462629612 seconds)
  done (took 108.426915013 seconds)
done (took 454.290642218 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.742154041 seconds)
  done (took 8.131021475 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.705614844 seconds)
  done (took 8.098104922 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.389459153 seconds)
  done (took 22.787341784 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.473091779 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.488178725 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.479174182 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.46434334 seconds)
  done (took 27.296474303 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.595914109 seconds)
  done (took 7.986940965 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.461306755 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.453997462 seconds)
  done (took 14.307968741 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.826526454 seconds)
  done (took 8.218538127 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.03124467 seconds)
  done (took 8.427669502 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.459132647 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.469635457 seconds)
  done (took 14.593965687 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.45011416 seconds)
  done (took 7.842526722 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.610308252 seconds)
  done (took 9.001505295 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.466964447 seconds)
  done (took 7.86003659 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.478897043 seconds)
  done (took 7.870917211 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.75642473 seconds)
  done (took 10.14806771 seconds)
done (took 163.962181748 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.457718915 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.45893031 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.459596642 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.458966909 seconds)
  done (took 27.224686133 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.500154014 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.500056526 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.501314705 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.510520318 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.503452641 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.501884662 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.491510139 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.492619026 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.510123789 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.502075826 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.501909959 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.501155837 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.501113153 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.492408707 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.502350187 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.503422502 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.511313219 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.502605306 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.49134389 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.503682843 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.4676695 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.511424857 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.504726811 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.466930686 seconds)
  done (took 37.370590059 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.66709391 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.53964686 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.623753843 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.518136291 seconds)
  done (took 7.742157284 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.518971802 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.520790155 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.532308668 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.57234829 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.598245556 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.529612315 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.495706174 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.489633527 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.475442942 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.520902316 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.596288546 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.537590583 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.616015967 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.467814765 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.652729157 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.468227469 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.465961096 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.519897775 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.571277888 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.586631401 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.466667585 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.520476514 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.523611737 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.53600997 seconds)
  done (took 38.176175906 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.467256063 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.476342452 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.4741295 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.466548484 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.4682362 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.466971934 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.474122977 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.467281055 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.4883663 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.469368392 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.467799907 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.467671968 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.467700795 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.468497974 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.469029835 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.4809739 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.480618216 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.469950309 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.472509018 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.475062496 seconds)
  done (took 30.832408832 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.464402784 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.376818725 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.816329193 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.719461055 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.462408664 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.459320893 seconds)
  done (took 29.695488307 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.546055447 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.689342893 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.468900922 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.861853909 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.937639782 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.469995974 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.469332903 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.728441359 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.056373999 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.067978585 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.531337101 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.543623006 seconds)
  done (took 21.768500394 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.471826301 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.464642046 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.479868986 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.481955339 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.532410073 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.476737597 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.478414911 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.465251996 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.533375382 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.538396743 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.474977906 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.532617995 seconds)
  done (took 39.329521002 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552026125 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.518185394 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.477836116 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382771693 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.844610891 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.675615147 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393261237 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942053273 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.466214087 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73989265 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473067984 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554988933 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.722480476 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47224521 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467697546 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.558115168 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688567407 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017504092 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465952778 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.767602386 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492354491 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.47179664 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.893414202 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.4948147 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.676697369 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.601517915 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.726854664 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.466922458 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771080365 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478988472 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476850181 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465631872 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74168858 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151905777 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556134204 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476866712 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.413681634 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.180452417 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.466632225 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.775207415 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.474411172 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.467052751 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478491329 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466125371 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.402559425 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482591116 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94936616 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.467895783 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.178346827 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.466450643 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478917449 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56044692 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.469096456 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.289601708 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.653990453 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465673353 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.464500459 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475653804 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038459875 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.352557384 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468683031 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.425327549 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.637979249 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.782983763 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18910998 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.570052518 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.470819757 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.470213065 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402238131 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.836158258 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485208854 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607032654 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.48637554 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132403927 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272275314 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.467231305 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.39981846 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079178241 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.478929732 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.404817215 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697426621 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469322089 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411232909 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.421223515 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.405292486 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238137549 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478631728 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.951334802 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476326935 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949858601 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.477699012 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48610739 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49227146 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.694947868 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.354158474 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470355419 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.475432987 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586214463 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488250215 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.951232113 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402165548 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.470448208 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727188118 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.681743726 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475424823 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.572323909 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701984324 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46778016 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.487312892 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.481138017 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.481894558 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.159763695 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.482938419 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354421107 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489427852 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.472589006 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278451962 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471985754 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.572938081 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.469242508 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738427905 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.324557241 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471721157 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553063231 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.480510816 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473143215 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.882656077 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990647879 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.469602055 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.473299699 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.471743163 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483460098 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.473376534 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432456717 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.471908686 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487254526 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.473281226 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.697142317 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474191121 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.748674005 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406680553 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611067643 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.536140124 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.693641951 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.745748772 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.467669841 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73112249 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475820211 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.481038441 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485432765 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490538664 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571386606 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495112891 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.47323751 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.749223156 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.475493141 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.478084959 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.889298232 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.475799957 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473541934 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.479550379 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.431313085 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16365112 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47444662 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.478428702 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368786881 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.488703059 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537779698 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.47863309 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.4841955 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.465682435 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.521851487 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.475417995 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.471009961 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699401345 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486110451 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.80296177 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553006362 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.703738872 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169389065 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486003297 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.410252341 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.187016521 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.167192498 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475782724 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.413689559 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.474371852 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484171999 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485579062 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.801655859 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.168395623 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475795522 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.80890587 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.481767903 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485530232 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.480864739 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475038777 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.45405395 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386621121 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.491409594 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.486241144 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618627424 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.489584254 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.410866565 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.479240676 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.480969276 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.47732783 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.475573252 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50880838 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825793339 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991233256 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732642577 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.392770735 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.484612744 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939747485 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.509745327 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.479929853 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.485670522 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476096959 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.480591481 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503261168 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.486328493 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.827647974 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.160382152 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045814325 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282028693 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120475435 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522382931 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.475240284 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.477499704 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.962215994 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408424104 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037602733 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686033705 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96292342 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430682089 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70705791 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.74461328 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310384726 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487791675 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706634499 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522637047 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.475113281 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486611873 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.689607637 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512701031 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.477166189 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.425018543 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.768629941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767161438 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482208111 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557159936 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965710018 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488761085 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.477130454 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.476798271 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.903569023 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669705077 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.187095314 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.657756886 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.475337069 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.494588005 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997464274 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.48242263 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.710366506 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207274598 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.488046664 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.711274082 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41656482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.490981734 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.490447525 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.480617731 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.970141715 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.481916019 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.737633399 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491345994 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41417747 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.480767373 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113582151 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.333578333 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.485176906 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480570163 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290354909 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.491709589 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789024606 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.496416096 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.449586061 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.48604911 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.415793019 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416238553 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.173525727 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.486856957 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451074403 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032195255 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.594961129 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650698613 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.499793689 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332072346 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.739391539 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.496461455 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178610721 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706121032 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.504536264 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500077886 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.582875929 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490753749 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.468531679 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.480955306 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.71793774 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44103692 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.704517173 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.490448961 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.38291787 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.480894078 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.690851784 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.481385531 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.482379516 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769591454 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.194426357 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.489664852 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274263403 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502326464 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.482015142 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.425837887 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.651961636 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490375459 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563452907 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491100795 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.493253864 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.49340681 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671021872 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496955214 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485636799 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.497653406 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575361069 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409363656 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.455619541 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.489615531 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192025998 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310660928 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179387097 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495252258 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.484033065 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488709287 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419442269 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627427539 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.712791668 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759310367 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606988131 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.697017538 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506443375 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481725894 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.508267322 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697485132 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758142499 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.385340692 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499150981 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.499821206 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.484911228 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494393833 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.696535984 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057743174 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103842436 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611901021 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.483662449 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.966854879 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755586047 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484675219 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485578286 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.084385199 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.488667491 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.911450868 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.488244136 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499144166 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632004699 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495322766 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176150229 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.492213356 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.646005945 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.260942235 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926281304 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.742198101 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.042546013 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.496843916 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189893186 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3260657 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749427014 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551728347 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494827206 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.596472629 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632531957 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.484949608 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.485182954 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485929122 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334325649 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.195283198 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.495594043 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19049929 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751211074 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.482990721 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.489238272 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510917121 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.495833304 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.71158777 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.269875932 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710957057 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496275524 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.492909483 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.306907744 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189441307 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498663564 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42283572 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.489679245 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.755689468 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.722160357 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509681006 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.940097983 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.198313535 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108975262 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.462186741 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509282383 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490479374 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.300860323 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184180139 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.464801505 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05028633 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.047975172 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487676707 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762281597 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.492592378 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.497612045 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764482593 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.491902383 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.491658132 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501299188 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.192038967 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.333848945 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.500735196 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.856326294 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.427310687 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.833965338 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268482585 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42412762 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.497460768 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.695776741 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.487516582 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609136668 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497717244 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.490760172 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499660334 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.221843776 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.769218963 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.491231595 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.474098426 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.487102584 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.50072254 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497018088 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779737545 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486671736 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.166851168 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.842887711 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.747212872 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.496339008 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.475472096 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.493565185 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490662499 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.489175135 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.694255618 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.816489671 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113459984 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.496455972 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.501128266 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494062645 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.708129002 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705047121 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.507667746 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.504329126 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.49168424 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50685599 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.628879604 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.006338681 seconds)
  done (took 1677.570256075 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.522349908 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.518238126 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.522939509 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.573097265 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.546022411 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.568493831 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.593606646 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.569102702 seconds)
  done (took 53.836408063 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.499357816 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.703806372 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.522634411 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.492758281 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.504455424 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.501774065 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.982016374 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.500035258 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.499097595 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.501986563 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.495738962 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.500247552 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.185934284 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.50161858 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.506119534 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.49141715 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.497934291 seconds)
  done (took 68.316391143 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.502133199 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.918240307 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.528981483 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.491859828 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.058132386 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.50711289 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.936011361 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.527681688 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.49029092 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.812379512 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.170475127 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.49313914 seconds)
  done (took 82.861379245 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.500070917 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.49887188 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.498051514 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.49992696 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.499100476 seconds)
  done (took 8.919937687 seconds)
done (took 2125.036131732 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.747510416 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.292556443 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.20345923 seconds)
  done (took 5.920065992 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.642080715 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.692239816 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.854387185 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.827975211 seconds)
  done (took 8.442953309 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.819930304 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.868972977 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.708658885 seconds)
  done (took 6.821324104 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.034746985 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.502675515 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.583680217 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.493360415 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.492611668 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.491654259 seconds)
  done (took 20.902602282 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.497170733 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.499731675 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.498419045 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.500415688 seconds)
  done (took 7.420780501 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.478251324 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.265526395 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.481261467 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.49260465 seconds)
  done (took 19.141960548 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.255087349 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.258065625 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.24205631 seconds)
  done (took 8.180086595 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.503364117 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.334658216 seconds)
  done (took 10.262116144 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.821573724 seconds)
  done (took 3.246578139 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.629864741 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.761204719 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.740419763 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.576724016 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.761333966 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.791579633 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.334099482 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.866493272 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.568336866 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.936463487 seconds)
  done (took 31.393703786 seconds)
done (took 136.023635689 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.593467045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.897703396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.701567682 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.562188474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.729767307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.700864862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.779596305 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.561046541 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.264206913 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.070244712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.604839757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.729669419 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.728446997 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.89711293 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.726465206 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.518430683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.730545614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.83300234 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.46529768 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.453546585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.777000127 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.195200925 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.441276888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.411787135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.729249643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.65090666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.778102538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.511904927 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424882088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.008688915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.652308368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.500381168 seconds)
  done (took 201.056527123 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.505178625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.49415637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.493507213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.4932834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.493470925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.520507515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.503751549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.494280659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.500076954 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.497427323 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.504327134 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.49374379 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.496775324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.502604697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.497015702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.495576689 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.511686477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.497034843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.49902355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.498126655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.497225252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.511450596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.49453272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.50265957 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.496868116 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.495648272 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.496189038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.496631459 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.508097737 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.502243033 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.501372271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.518459762 seconds)
  done (took 209.443973612 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.504456638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.505427561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.497334914 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.498114067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.521008261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.498344212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.500751321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.499144821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.495942093 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.516102121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.496622375 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.510867199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.499181639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.494813552 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.498502956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.496588596 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.497654487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.498777294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.501543117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.513355571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.498389816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.509074043 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.495297607 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.50907961 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.508620337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.497413524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.517297875 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.524011328 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.496938498 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.500114174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.500664442 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.500978961 seconds)
  done (took 209.534614909 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.703074925 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.507132717 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.506510014 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.463225455 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.506934707 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.506481852 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.505018617 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.698086493 seconds)
  done (took 15.828408756 seconds)
done (took 637.289991244 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.908995988 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.609279748 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.71132925 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.529537306 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.360230836 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.528229186 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.529203361 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.717930414 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.073520797 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.701290787 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.825790851 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.523869032 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.968749894 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.524355847 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.806130265 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.630184202 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.442746503 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.55539007 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.867506544 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.105824409 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.79528944 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.142538927 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710941551 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.118084664 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.967591341 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.158573716 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.395658935 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.444199917 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.527374308 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.874328589 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.247029065 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.626104126 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.597928142 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.576617767 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.634291633 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.615801503 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.635922114 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.575489671 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.724943377 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.942434665 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.111228384 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.868854289 seconds)
  done (took 102.642071488 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.499823556 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.500696649 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.499827617 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.501486518 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.500551689 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.501383835 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.500261503 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.498755992 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.500709611 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.499357346 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.497389154 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.500770846 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.500477698 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.499979521 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.499770096 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.499152973 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.500565586 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.50148237 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.498314782 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.497765329 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.500003391 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.501520406 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.499965691 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.49986942 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.500081082 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.500417599 seconds)
  done (took 40.437076365 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.512561762 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.760560626 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.95279714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.516606631 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.50972809 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.515229788 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.597505566 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.512449784 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.515368467 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.513623318 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.67541441 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.513715749 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.548290357 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.982524517 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.514756658 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.513159817 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.511340179 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.512948964 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.769073595 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.520858698 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.61874093 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.511910646 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.597410319 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.520388165 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.531295407 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.513762354 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.516549364 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.017936198 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.513994642 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.677227417 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.391390721 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.596540032 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.968043546 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.967839679 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.393530803 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.515049407 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.51257971 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.680317744 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.51161374 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.513484876 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.599963638 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.515151609 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.977355768 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.165656385 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.532452433 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.513755724 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.043735147 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.677025725 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.788721397 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.522203088 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.990724741 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.518348429 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.514703387 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.514826558 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.792317065 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.522067593 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.513738879 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.074827065 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.536719141 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.601868655 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.515053257 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.515238266 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.778573108 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.511611376 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.764874974 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.513380388 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.521895881 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.516783447 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.968341824 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.518653306 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.183968185 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.532593986 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.520650659 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.68276145 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.76862937 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.080647421 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.520626903 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.782406775 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.983688141 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.600521476 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.521736341 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.009710197 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.602467131 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.522075034 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.517934914 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.51659488 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.514267869 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.56158311 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.60092329 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.113755153 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.172677134 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.087432776 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.620144512 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.531758187 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.520000511 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.076536856 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.536966535 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.520252535 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.960585155 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.184181217 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.538054606 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.528118332 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.17539822 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.537496745 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.605502492 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.525586949 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.976543438 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.520065296 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.562308914 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.517321484 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.525534546 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.523275952 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.604068014 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.524309596 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.519031575 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.161860524 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.704038109 seconds)
  done (took 197.915086486 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.511191066 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.509151004 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.512232086 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.510549322 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.512420383 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.520181742 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.514628006 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.512987255 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.518494939 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.514179313 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.51285698 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.520410965 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.513105894 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.523079162 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.520640183 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.518210876 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.129214471 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.52221773 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.518161289 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.514462959 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.334862859 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.517070378 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.518886254 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.515712359 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.517230229 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.522528388 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.531661417 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.517757737 seconds)
  done (took 157.348397452 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.521293299 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.152743208 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.520257417 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.668906766 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.545199712 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.520999675 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.666179946 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.585627502 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.522978518 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.520318511 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.519515372 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.867768622 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.524508178 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.111635621 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.729565374 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.67050026 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.093902912 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.520705584 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.519790808 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.518950753 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.668514512 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.53015883 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.86906346 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.168147699 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.52447505 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.167634754 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.512843667 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.523597865 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.520586648 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.172085652 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.521191057 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.87206938 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.606236586 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.584993448 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.170353925 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.095174852 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.112455649 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.685659262 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.522348148 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.522116249 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.522054027 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.509993912 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.171261977 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.525585462 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.52152202 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.163916071 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.540046249 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.524264187 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.532221342 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.520773298 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.589105413 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.590708541 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.872582669 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.173399415 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.610744049 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.544761058 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.671640544 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.894579787 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.52059551 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.094346188 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.507843648 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.172158642 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.525431749 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.51198341 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.522593101 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.527216141 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.689366555 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.668226703 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.116726079 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.527923192 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.11750282 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.690113191 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.518215401 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.524367361 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.524340452 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.176287016 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.119604817 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.687893292 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.67381932 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.739102034 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.51399622 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.528063806 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.514196511 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.612156828 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.518720158 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.176861227 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.120257598 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.525914506 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.526325676 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.524710244 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.52593092 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.723302955 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.181661745 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.617113681 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.110003688 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.893367401 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.879791407 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.527120394 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.591966321 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.524274163 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.880966632 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.527496844 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.58865749 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.960280784 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.876811897 seconds)
  done (took 181.703006931 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.78666655 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.769943076 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.622539779 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.649487706 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.107449764 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.142740902 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.766120948 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.656411423 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.643226354 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.791324644 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.799208503 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.613770929 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.727517978 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.606136919 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.253535945 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.599239976 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.623854912 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.675484198 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.642737243 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.601947648 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.183188798 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.840214232 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.709926264 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.646412016 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.627918243 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.358820506 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.304829064 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.063773516 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.707709742 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.850806174 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.043394271 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.717480695 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.567571898 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.263008347 seconds)
  done (took 72.414831097 seconds)
done (took 753.891603918 seconds)
SAVING RESULT...
DONE!
