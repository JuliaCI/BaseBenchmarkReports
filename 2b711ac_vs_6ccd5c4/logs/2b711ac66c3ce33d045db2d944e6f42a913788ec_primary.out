cset: moving following pidspec: 25786
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.259387356 seconds)
loading group "string"... done (took 0.522299556 seconds)
loading group "linalg"... done (took 6.507817352 seconds)
loading group "parallel"... done (took 0.151727206 seconds)
loading group "find"... done (took 1.160291512 seconds)
loading group "tuple"... done (took 1.648635495 seconds)
loading group "dates"... done (took 1.150368572 seconds)
loading group "micro"... done (took 0.218703411 seconds)
loading group "io"... done (took 0.993551714 seconds)
loading group "scalar"... done (took 36.019762883 seconds)
loading group "sparse"... done (took 12.056523537 seconds)
loading group "broadcast"... done (took 0.900903456 seconds)
loading group "union"... done (took 11.802748625 seconds)
loading group "simd"... done (took 4.053220634 seconds)
loading group "random"... done (took 8.16390797 seconds)
loading group "problem"... done (took 1.860454237 seconds)
loading group "array"... done (took 19.64552601 seconds)
loading group "misc"... done (took 1.695347454 seconds)
loading group "sort"... done (took 3.063460247 seconds)
loading group "collection"... done (took 16.23841657 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.491114503 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118591796 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127417598 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.129252524 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.164766617 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124701214 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.135995678 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.095909283 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.974798805 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152081042 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128794283 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.444774722 seconds)
done (took 4.907965071 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.216162448 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08036848 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092000016 seconds)
  done (took 0.92593373 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064246693 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.117611887 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063586606 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079901643 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065035181 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063045472 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.079794674 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064033066 seconds)
  done (took 1.291327295 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071164409 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065637946 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081019838 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065701278 seconds)
  done (took 1.042486953 seconds)
done (took 4.304984403 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.806213721 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.23099658 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.178726168 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.432257807 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.141075915 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.176685881 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.650184268 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.252182786 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192454957 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079893604 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115417697 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.343953177 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.119672518 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672683041 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074234157 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.102001288 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.155264328 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.348983508 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079390672 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081387067 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100980407 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.125979104 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.099089313 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08857536 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152642905 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.079226403 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139562058 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07908952 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080187266 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218136913 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.184882356 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661290305 seconds)
  done (took 10.038662056 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094180874 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10891375 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066806339 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135663534 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092947364 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083508558 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069363446 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064796328 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.099583309 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.139334165 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.0859935 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.113339469 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062926225 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082379927 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.081877607 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.21545027 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079190168 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094681161 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068300849 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088874701 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103306272 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090942233 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076841581 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.089762637 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126804571 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202440181 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09580709 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110015139 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067870695 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093393164 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.126813535 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127071795 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0637478 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080537514 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120390885 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107639784 seconds)
  done (took 4.384213191 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.98575586 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149264633 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.087911077 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143646287 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065206068 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081724008 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.119409524 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063553398 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098346126 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.224044815 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.043024058 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.435769278 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12259571 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.082983341 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080623333 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.066573976 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079631335 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.420623326 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.139514344 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116842948 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081879714 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086409609 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06822551 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.351588101 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065453471 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06398097 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081347015 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056990757 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13632151 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066044846 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.090083361 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103271781 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067147197 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114488655 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.17232808 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065410034 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100889707 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147484927 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0643605 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063378824 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159116199 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08879798 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063907324 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.097377468 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100279055 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115505643 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081871167 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066208735 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171285954 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065095078 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099414634 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.787339993 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164456323 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076001213 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064234431 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.275466299 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.081612786 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081618717 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062518482 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.2395282 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.145204392 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065939195 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080632055 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064424148 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.065975245 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359763096 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080863247 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.806991986 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066353462 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073945854 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082534208 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06522456 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086604764 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070034599 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.103605486 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.082301662 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06367083 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082375061 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.063399054 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079866736 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067413154 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095970783 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063092094 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201014548 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063998212 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081021512 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062853725 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.082647331 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109836069 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082938591 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064142083 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111267045 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066650684 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065413994 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115307039 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.064252779 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.097913285 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082285435 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111932214 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079730698 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.105288565 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066273473 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109858594 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073110806 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112561333 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.091517248 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066291593 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.146775374 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062912774 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06248447 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082093991 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065858346 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081524219 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067334573 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.075510626 seconds)
  done (took 20.162910384 seconds)
done (took 36.329952513 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.275600097 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08736272 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.070636028 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.088764964 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087815775 seconds)
  done (took 1.441066764 seconds)
done (took 2.246130426 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.114223276 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112536683 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062270196 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109849974 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061711209 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113596709 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094251878 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095365533 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110878005 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063093835 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092010098 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078766133 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.061720257 seconds)
  done (took 2.001821011 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079911095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.079801096 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083617182 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079393696 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060459477 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095465796 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077993313 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100818526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078205541 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069240193 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079039781 seconds)
  done (took 1.683966062 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079320687 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.079869803 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083235247 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.07912967 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060895484 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095200092 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077864802 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098108486 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079151432 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085736949 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062774368 seconds)
  done (took 1.682746392 seconds)
done (took 6.162773348 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075373764 seconds)
  done (took 0.871379532 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.656280109 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.848401195 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078868079 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.125387316 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192578678 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.132096241 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.323102245 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.102362416 seconds)
  done (took 9.423805251 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09739623 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08308202 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069241085 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085436263 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070181316 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067865806 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083557679 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066924162 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082387128 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066698012 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068088353 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08613088 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069651032 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083303434 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067168027 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081623625 seconds)
  done (took 2.088368111 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.088664601 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105428982 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07019035 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.090598434 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069069531 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.08754741 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071365982 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088620471 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067941101 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.085576282 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071994539 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.087109202 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069679525 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078930766 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071981585 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089758707 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069730249 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.086997046 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074081289 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.087578377 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073010907 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061442227 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086498542 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070639137 seconds)
  done (took 2.790446339 seconds)
done (took 15.976309203 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107364783 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08558769 seconds)
  done (took 0.996516715 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079363029 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094934449 seconds)
  done (took 0.981974165 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080890213 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078279718 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085906072 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092286026 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06369314 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080320832 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.098718343 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064284442 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063169981 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080398195 seconds)
  done (took 1.59744477 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066981273 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.089919718 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069722995 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094079868 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071727148 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.078014771 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070774241 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080440152 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076472732 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060168563 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085675899 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.0952379 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069284988 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097114785 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070850195 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083050345 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067943933 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081243517 seconds)
  done (took 2.216632431 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06498435 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064515137 seconds)
  done (took 0.938809299 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066541988 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061208642 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081692005 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063664234 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077738787 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061477008 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077445169 seconds)
  done (took 1.30158927 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391051648 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10732592 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241437884 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087089203 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.096077225 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261278975 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081068342 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0698616 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068294284 seconds)
  done (took 2.25247112 seconds)
done (took 11.093965622 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07842721 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082286696 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.107623772 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.395929185 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090976156 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080118245 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.129306717 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.211400085 seconds)
done (took 1.991547353 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124307981 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.590805163 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.387101775 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203872938 seconds)
  done (took 1.996289613 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.320145956 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.104634604 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057496711 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080828929 seconds)
  done (took 1.384577786 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06515604 seconds)
    (2/2) benchmarking "read"...
    done (took 0.066762247 seconds)
  done (took 0.95015464 seconds)
done (took 5.270450148 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082917602 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063046079 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082198982 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.061283293 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08072811 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062365017 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06135299 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080901734 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064445557 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.063851806 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.07979081 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066892672 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061307911 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078129814 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064747312 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061171452 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07767381 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061653572 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063195811 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078144478 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063963405 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060685561 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078263642 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062375781 seconds)
  done (took 2.514801966 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081308324 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.079731549 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070398625 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068165568 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08591513 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0683687 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.086584937 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067558896 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085123574 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066425058 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083112384 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06858178 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064650964 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085210042 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065933288 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084987467 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068636719 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081095101 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066638872 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.083090981 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070826189 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063819002 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08510321 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06814793 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084306134 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067728387 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083729507 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064692954 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084070502 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068365804 seconds)
  done (took 3.074209649 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068042771 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06153602 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078313438 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068935465 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060985648 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079408919 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061589063 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061629475 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079834534 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062108285 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061639126 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.079016134 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061923297 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078780451 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06310958 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064780436 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09413664 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062809701 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061304658 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079973989 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065136308 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061182682 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079492679 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061921406 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078071397 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062561018 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062245805 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077608091 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06369897 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061359434 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.081473705 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065660355 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061622722 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085249436 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065312335 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.060631952 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083273626 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0619924 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061972109 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078659942 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061826545 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076720497 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062918056 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068149448 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078800858 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063998594 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061190238 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080205126 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06270254 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063755947 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078769968 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061915235 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078919522 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063878867 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065474997 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077438282 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063089123 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061134393 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079411206 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06223032 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060799765 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077908918 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064565052 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061359757 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093469373 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068912403 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.077787641 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063709447 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062293021 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081431052 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064113695 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073953661 seconds)
  done (took 5.816538027 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088661899 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100983533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063035809 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.081477239 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060160628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07841707 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06597553 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061867529 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080994246 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.067738563 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07885678 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064169853 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062850272 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092251458 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062448828 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079601321 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068052803 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059902048 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078600204 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065624947 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078498348 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066490917 seconds)
  done (took 2.433078057 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.267803504 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067620685 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.119517056 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087875205 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066679609 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087050583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068490139 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066694529 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085777049 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065757626 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083576164 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067936631 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082796785 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06643732 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082859016 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067118654 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083812785 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068060436 seconds)
  done (took 2.413308472 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076400259 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063734417 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101403681 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063467887 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082130528 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066790226 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085718344 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072482207 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082654961 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065974437 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071555755 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08479203 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066175047 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080496968 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066863331 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063697098 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084363412 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063893545 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089006278 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068560255 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085866959 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071888569 seconds)
  done (took 2.487198135 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077649534 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065252721 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097367575 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06629846 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077552282 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062547093 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084463594 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064608612 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067291966 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082774596 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0643373 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078445789 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068457907 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063234769 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084413954 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064174228 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082523867 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065459934 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065852909 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07758736 seconds)
  done (took 2.289769657 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084548233 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082346951 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065927849 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090133949 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066620904 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081887651 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074458265 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081408779 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067235756 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101192674 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066574317 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064924233 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090963728 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086765113 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066738842 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090305161 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073365205 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090042993 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065272581 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082424123 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084811659 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082890669 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073054863 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082487961 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06566437 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082977602 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066118158 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087923644 seconds)
  done (took 3.027579342 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065379849 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064004954 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078230804 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063307952 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061698536 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0782083 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0629043 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061407492 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081292586 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062349549 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064203407 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08105602 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064481591 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063811065 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081798331 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064501502 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063587349 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079120997 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062092264 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061148139 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081244211 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064136515 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062937069 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079470783 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061547307 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07985928 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062807802 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061228977 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080562619 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062595018 seconds)
  done (took 2.891118924 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074155213 seconds)
    (2/2) benchmarking "in"...
    done (took 0.06946178 seconds)
  done (took 0.976583852 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062757568 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076336008 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079017383 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06833289 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084305335 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065763691 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070872673 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086786535 seconds)
  done (took 1.428722545 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079768725 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.073733957 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083221596 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.074138642 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.091824364 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.079707143 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.149026468 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082428405 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071864478 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061859649 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.09480487 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.063261344 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.087036978 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065896178 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0693092 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08813958 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062583095 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08539183 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067564555 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062538459 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083147214 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072535193 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083815566 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061039085 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064591916 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090488404 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074487399 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081406958 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068002436 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088456697 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070619744 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058387393 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081990165 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065133704 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061579571 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091893836 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094630569 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068803057 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07215983 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08271086 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073284208 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077547616 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06916449 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087228505 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074852553 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064218067 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083023138 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060805556 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062067536 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084739088 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059598452 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08116235 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060733403 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070561836 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086272443 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074556894 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083096164 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066651512 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066742761 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085540249 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070494 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.082597344 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067520513 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063407916 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09169337 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068506619 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090200988 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060203541 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058061025 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080401619 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.073558819 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103637827 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070138784 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082173067 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066015328 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062514819 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085787237 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065388203 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087979659 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071152621 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063826078 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088525263 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070842083 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082602847 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066945346 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088961524 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063723032 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082515904 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063488752 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078760914 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080911729 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062344163 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07957214 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075101797 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066684732 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082216804 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06294643 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088123942 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060026716 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064504365 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08331679 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065491369 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091372041 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069740808 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08617361 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074037524 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071077203 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083553201 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066911199 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078117181 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066325153 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063411471 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089128358 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058820157 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083356027 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066657273 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064392701 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090598097 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062330572 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081353431 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072573599 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069544474 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081216584 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061231839 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083604435 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065812386 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066663125 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089949368 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062674583 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076738508 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06072551 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066571364 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082428147 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.067544734 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086096956 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06823296 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058152757 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081178829 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.067934362 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090018737 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06521731 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081313146 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072058078 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065265322 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081197842 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071106797 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082838499 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064750517 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069496089 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083505245 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060618877 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084606393 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06737189 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062466269 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0852608 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067659694 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082914059 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066179331 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062577706 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08745712 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065498358 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080418252 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066073633 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062446719 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091804225 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066892137 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076826481 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063441345 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070787755 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081160458 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064430273 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062438196 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084731526 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065342159 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080685724 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065482849 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066074753 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092689962 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068221267 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083340737 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070524087 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092795997 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064902659 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066050922 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082068814 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06552393 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082430913 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072941369 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086478755 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069914151 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06581095 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07947819 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069888992 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088752225 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064823016 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06218593 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081873686 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067005138 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086887055 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068909714 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064376115 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081830655 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065231144 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085017694 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068066623 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063682869 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082460868 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069319638 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080377603 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070655159 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082551752 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074870686 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067012951 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077978628 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067571921 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080642068 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071294803 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060176385 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080989109 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064264749 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064222419 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082547321 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066769719 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076049565 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071181233 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070619969 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083739228 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063542294 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08159367 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071514819 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065409875 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086122764 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068168828 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087670312 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075071611 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063038855 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086161622 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074091908 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081889214 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059305144 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086090309 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064893778 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063477808 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080542525 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063304761 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06730022 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090386431 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07074982 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077461434 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067770726 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080213442 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06520281 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059727932 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086791823 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068149735 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064735884 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089876966 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065405568 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083146852 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069095309 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063316328 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0849155 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065488364 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084936169 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066049786 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065463889 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082434409 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066853078 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081234991 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063344448 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065591198 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082538622 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065013916 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086101711 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065463051 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064900843 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084797764 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065302076 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082070279 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066235927 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063882857 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085540821 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06589748 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064705451 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085618864 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059357272 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088466854 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06542546 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071231593 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083019885 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061615198 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086347353 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067830886 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068329114 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084113212 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064091365 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084076689 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064822012 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.066523451 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08896568 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061846353 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092207295 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072325488 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082509384 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068442543 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064330099 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083869414 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063612575 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064305912 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084053961 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064866759 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082015254 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069955664 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066477117 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083937295 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066960392 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082891096 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066680215 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065358942 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077371987 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06485432 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063655767 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082960197 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073353519 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08336905 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064360477 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081027565 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066732723 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063746394 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079442746 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071980991 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090463587 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065348783 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088571217 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064837683 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065472258 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093020735 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059755869 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079807003 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064140294 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062293042 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089776989 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065785823 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090421489 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065069195 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063556927 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079692502 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065829648 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063237468 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077703973 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06282002 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08562976 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064648863 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063673828 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08269733 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067932328 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064844306 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092132075 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06326635 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083600284 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065514957 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061601626 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082808654 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063392553 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085051936 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066350995 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062152998 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080426145 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064277973 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064676822 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085091989 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064006769 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083922142 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070825405 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064054536 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08589687 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067876022 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07999001 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067852545 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063508008 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082697124 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06362354 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085243896 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068765013 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06466449 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091904981 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064071757 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083686323 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065588674 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062092885 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082973272 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064290138 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082482484 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064687895 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065174149 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090414182 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062453873 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084928404 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065570916 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064901629 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089229811 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065457297 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085092804 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071577129 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063822136 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085175914 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071935089 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085997193 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067641183 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083486681 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067522598 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069089374 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082714172 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.070536316 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082276512 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066486818 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065791154 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08059542 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064230916 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063971505 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082544535 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070044188 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083261254 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064936598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063385829 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080969287 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066307349 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086300949 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073707026 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066113909 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085897943 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059354938 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.07948641 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06678417 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062720042 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084115011 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067177696 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086505458 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067447829 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065492886 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081792433 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073261118 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087348582 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.06888488 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062824098 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086530292 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065719086 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083732704 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066395739 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064217795 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083551951 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068938753 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064987053 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083281563 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071732722 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086173454 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065634196 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065633821 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084875095 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064951699 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078097271 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066171329 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065892028 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088293828 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066339827 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082593793 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075342155 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06214301 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084213996 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067850202 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08257202 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070203737 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059877173 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084909015 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065582976 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083037404 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060942012 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063530974 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081489436 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067640577 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063835196 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079181812 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074789885 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092167635 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067952024 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081637189 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064381977 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059976609 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078347679 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064798897 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065507232 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085596343 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.073313788 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082381374 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064602637 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060004645 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083771115 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067662637 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086243934 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063190234 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059456079 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082097485 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068543787 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.08707134 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0646967 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063453678 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086359218 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066886917 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062822219 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086508865 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062444619 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086159413 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076868802 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083221182 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066001712 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069503155 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09061284 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065485893 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078137072 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065784384 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066447807 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08429105 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065333384 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083845189 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079867851 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085076412 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064670775 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063194833 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086025691 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064712982 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089216591 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067021051 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065068798 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087855348 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066966281 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090005967 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068264502 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088928452 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069431741 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066495546 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08256294 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064949091 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062886747 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083251598 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065427635 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084352023 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069224671 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09007659 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064417294 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.074056418 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092583295 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065965556 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080485145 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065143853 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06363334 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078425467 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065883886 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080703445 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063985333 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062896952 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081239764 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066652408 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069217563 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084587175 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065910017 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082060997 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060243356 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.066198232 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085471028 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066376205 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060552051 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083285068 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064885335 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086603177 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068042391 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061542805 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085020653 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066007449 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08317494 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061014633 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070430767 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08212346 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066580539 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063443989 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083549586 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065157599 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085737688 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069633239 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083682904 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067772919 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067141072 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085457116 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062203679 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079527676 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070446363 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06276336 seconds)
  done (took 44.770861257 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096802242 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079383333 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060685571 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05932821 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090923054 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060744167 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079415446 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061808749 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060264306 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082665741 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.05973875 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078810792 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06866958 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094347998 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070647263 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083775578 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059524668 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079392897 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060223162 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060519433 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088156905 seconds)
  done (took 2.417183324 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072732194 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085568229 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071413865 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092171989 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065551689 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086873551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070322031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086953905 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072871466 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083802032 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072777923 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087660219 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.064955822 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.084476697 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064597364 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087655164 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072471477 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08462774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067493572 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089246341 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067398872 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0902632 seconds)
  done (took 2.600706822 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065995947 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063959313 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.083268306 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060281353 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062981105 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.07846337 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06828631 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079295805 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067958061 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.062316961 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081753287 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064151048 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072859148 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078608853 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064423352 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061279012 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.123432341 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086861096 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064060432 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.082336668 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060217778 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.065672111 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.079103567 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060729394 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062455782 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08686635 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063941861 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080602807 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06465763 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063473174 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082540864 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062560089 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064970878 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.083715667 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063777546 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0623171 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083513882 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063500143 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078311319 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063298838 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.063791024 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.078733532 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065484164 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064445669 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081613973 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062417712 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082986934 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06489254 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059143989 seconds)
  done (took 4.374271417 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077897319 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.124334395 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064184552 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085275266 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.09855005 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070268221 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0871175 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104647485 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063178818 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061624991 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.098368843 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.099029417 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064469547 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08759379 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070957926 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081477027 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065782305 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061951707 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08652388 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062824701 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087151986 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069478816 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.097018479 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094614049 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067319708 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080518908 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063938652 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067193023 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095293938 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.086873085 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068999283 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087705757 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078401391 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087741466 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063430143 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.084574687 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079363874 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083318849 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066608013 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.079952276 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067285197 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.084763201 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071288997 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.097130859 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064625533 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.086635344 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064599105 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060553675 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09624046 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065787532 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091146859 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.096818182 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069071642 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083036705 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069955265 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.097006758 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064521078 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080132666 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068273559 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.094054677 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062768606 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085309002 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078519106 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084815391 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072272423 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.097202846 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068989178 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086586464 seconds)
  done (took 6.433444351 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073638775 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088842811 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078353804 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097312139 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06870539 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090848232 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08828982 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071359441 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088657033 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075586268 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089150453 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10877761 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065977562 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.090805022 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071094581 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089344482 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070752883 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088947673 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070765264 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088650096 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07044075 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096661613 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088332569 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0790758 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114795037 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065063769 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088952516 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070298843 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097009342 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088189987 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078374019 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089040525 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070560908 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098052617 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076066607 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090670452 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062735033 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089873147 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.06963827 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089733 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06522665 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098118066 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088955038 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.0661367 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089428563 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071054576 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096681927 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076116906 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092554626 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093263959 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071097578 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097293168 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07012021 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089893434 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096287852 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102093727 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097763504 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09692355 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069562302 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096245869 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096216272 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084059912 seconds)
  done (took 6.120915822 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081068895 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091374284 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074041649 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079734191 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062721991 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086378407 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063357137 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061839468 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091891277 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071417052 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094009126 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084936333 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070988984 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093031866 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067021827 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090016439 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066924907 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087164403 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071266553 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087774625 seconds)
  done (took 2.466425643 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073281013 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078396821 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086013528 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068050671 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087005136 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069042633 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085493671 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067066232 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082534389 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068124259 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072542549 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094045508 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064189562 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089726854 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091417845 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071456304 seconds)
  done (took 2.139089007 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073396655 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.088833115 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077548196 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083195757 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063941336 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060559243 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083640197 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060386288 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06011382 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096014275 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06346106 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.085792455 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06475026 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.081537712 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062017433 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066046352 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.080322032 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062044537 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.082750732 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077051462 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.092630088 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064242173 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064137355 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.083697254 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064505573 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088875788 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064091868 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081445144 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063314807 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064077843 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08384783 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067758207 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080794986 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062892194 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062889301 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082255583 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064776699 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083914641 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067080133 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0632976 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083428711 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063584817 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084127622 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06609686 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060064742 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085080549 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060847413 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.084959784 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063061188 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.082995356 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065209672 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06610875 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.084253397 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070401856 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.086085721 seconds)
  done (took 4.923794654 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077292502 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067280258 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080465399 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062712983 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065622853 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.085734375 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067467527 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085412774 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066432976 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080165867 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066714453 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066125624 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085094176 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067679921 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084213602 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068770738 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059216178 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.085405205 seconds)
  done (took 2.215529753 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070196683 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064069549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.089912807 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064660135 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062884563 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086453632 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060148802 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081709699 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063463713 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063458871 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082903099 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066032409 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081248831 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067852765 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063637693 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082936983 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066749803 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062489493 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084734465 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060644128 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08486946 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063615291 seconds)
  done (took 2.469563358 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071337878 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.088288511 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.151794616 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.101150316 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080301506 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.075015284 seconds)
  done (took 1.467089096 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088774958 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095592741 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065198795 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083659764 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092455439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064370591 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085891052 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064346573 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094025475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092835053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066562755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092548478 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074271919 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093306553 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089393612 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072825755 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084303572 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066742401 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063954329 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102036254 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084865817 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074283213 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085185486 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065209042 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084375816 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073310848 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093438862 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093057942 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067068699 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092484104 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071616381 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085138531 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074445119 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093304905 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066769635 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094031799 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066049147 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101860167 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088911992 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073801139 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086312791 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072121832 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092815299 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070394023 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093911591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065235868 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090578266 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065032701 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086554707 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103578562 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07163314 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092577108 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070959657 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09358781 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091987503 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083277714 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094717827 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092406277 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072331005 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093741649 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07390101 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091287572 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092390299 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074909852 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090463153 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073997241 seconds)
  done (took 6.347576566 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08154927 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103330442 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066202965 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094361054 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07310295 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086672959 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065411667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08574033 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065507694 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08478996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123758207 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067952053 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093033269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073953437 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086153324 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065313794 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086044078 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073083879 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08591285 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10338198 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066942426 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092842822 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072780626 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092789033 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094265386 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071492141 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084968369 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066854769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085166106 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067477086 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089832616 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066364361 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093768944 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065677521 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094151785 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06600772 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086519866 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069955703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085760268 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070526949 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094495285 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101828373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06612587 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086029062 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074290591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086605142 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065634527 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085980824 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065847317 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085093297 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074982691 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09452084 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073883334 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094314566 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085186237 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066079823 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084928074 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06698393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084912397 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072397327 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092954602 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065595874 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10449595 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065068201 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086736328 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092991283 seconds)
  done (took 6.274109843 seconds)
done (took 125.194583191 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188130203 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.163477637 seconds)
  done (took 1.251975676 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067266712 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091521582 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095260573 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.122546004 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084598559 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096894504 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.093799311 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095842441 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064203555 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084206454 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065961717 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065869897 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.145212482 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065418361 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06407468 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.087523101 seconds)
  done (took 2.299415312 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099838101 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.188926103 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105381127 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064503468 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096386835 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076704112 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06344668 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093893843 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072433728 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084203681 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075792594 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091829265 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063918694 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091431598 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07351114 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.094387505 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064688573 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074873709 seconds)
  done (took 2.486722115 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.1007005 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.138372636 seconds)
  done (took 1.151682334 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.192149703 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.119771143 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.197010457 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.390877289 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.195193624 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.270183943 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.169793637 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.168555847 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.151986392 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.167071512 seconds)
  done (took 2.92940254 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096423293 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162871446 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298360032 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11223354 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.103847047 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.109826221 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.133737713 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086915696 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.098405063 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07670616 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.097762215 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074164113 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.114417991 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091339338 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074408355 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073179131 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.118305 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070956282 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094952953 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.071624946 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11527909 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064485407 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092420308 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070922502 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.094951534 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074367181 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083738072 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064891471 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.071914827 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093395675 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074843024 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107575354 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.092927563 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.124357116 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078426455 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.124633584 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095337508 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069962837 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.092545195 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070012337 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.093481005 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073408317 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100073716 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073640986 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083817902 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075395599 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.063627171 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083721272 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076136487 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.094412205 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074999089 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095176516 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.124493211 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.092501804 seconds)
  done (took 6.031186357 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.690834436 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.123621369 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068243396 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.763962156 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073989466 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094202373 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.670095175 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088353364 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.196325432 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.697676551 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107593222 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070441571 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.184180289 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.202263034 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.874273319 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.240581467 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.591963848 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07052515 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124938364 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.117577631 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131461793 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14464181 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.139167621 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.395161505 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091645147 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069349097 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128439116 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.090031126 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.128234319 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.0786778 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067218295 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157609502 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.212857252 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.138565665 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071359459 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087711124 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067202205 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.134481006 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215277678 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.150780045 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.147010892 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065576493 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086907408 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129215354 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122947929 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06551942 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.127310664 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.139761861 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.135427156 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088093301 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070480176 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131098132 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127861285 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.150062891 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076309449 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269148083 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.241387212 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086503129 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093089288 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.092387577 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.194312371 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09721508 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.161814765 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130537725 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166234553 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067684584 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.728388797 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.134986794 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067891969 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06851803 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112040238 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.087604411 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12919608 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.134727215 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.355620217 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130078479 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.088285577 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067282689 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.16615925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099220575 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066646185 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.128489954 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091666584 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113112487 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134500807 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13184044 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.133780203 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.194487834 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131431886 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.149706107 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069314613 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116308196 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071739792 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.177908721 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.173984508 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.130346566 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.178320519 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12939258 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.128118405 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.133880148 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08936795 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.137364544 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111395472 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073609006 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128117121 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171479834 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.091175367 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098083311 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067346359 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.148470319 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.095907446 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100524313 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129418359 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.137193786 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.41297465 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.133271098 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.085310932 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081072327 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1295054 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.129028339 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089248312 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.19592696 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114699305 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.133998476 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113230381 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064730568 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113969812 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.127814231 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092439031 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114284214 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129563351 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070222249 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.201316166 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.170680371 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07168329 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.174934893 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.15034058 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.088672864 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.136181077 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092594705 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.133390197 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091613509 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128862223 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090344136 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.707695692 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13495128 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.113781521 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067653843 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156296829 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066316686 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09777174 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.096102373 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066454195 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.710940188 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100619128 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074821528 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098086476 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069804563 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113266308 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126126077 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.088276181 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.127204836 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.15975973 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090229929 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110486112 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078351525 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.129093483 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.090830681 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077662024 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098527926 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07775102 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.114615487 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0876293 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079834915 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.135068748 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.129244694 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.170315483 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.53161303 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068415268 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09917917 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.157902892 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088405583 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.220534182 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146212077 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.160010691 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.130204956 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095019675 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.244016249 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.131874667 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.156708359 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.098795885 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.139972398 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066361038 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128418749 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.129967433 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087045194 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069358449 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.128982521 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134849775 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132957875 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.891158785 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067420155 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.193124124 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086438017 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.138863392 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072415534 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089736694 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.220846448 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087475302 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136806496 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.13086644 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067635668 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.098635088 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.802931991 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.097207206 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130321625 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070022365 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171711877 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.130708824 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127858999 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128252917 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069092639 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.127545289 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.177908606 seconds)
  done (took 37.642813962 seconds)
done (took 54.696974718 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.244525011 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166325835 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2326741 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113425749 seconds)
  done (took 1.7579874 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.138967609 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09787441 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.113631179 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062616868 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.119759629 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.082917865 seconds)
  done (took 1.54985892 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.386461676 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.248184703 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.215139271 seconds)
  done (took 1.783569928 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210414073 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.222601358 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.434318297 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267270544 seconds)
  done (took 2.165104816 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.159767938 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.107449365 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06484641 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102187184 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.151498145 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.197800728 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.119614486 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.164161028 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076515358 seconds)
  done (took 2.117444079 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.160027297 seconds)
done (took 10.46766857 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10790653 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.254250162 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.131348274 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119438412 seconds)
    (5/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076058701 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.182699676 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098066223 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080746773 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.114963779 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.207349227 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078122492 seconds)
    (12/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.214419951 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.20512486 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069613177 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110183917 seconds)
    (16/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.206433216 seconds)
    (17/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.169267255 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.229647964 seconds)
    (19/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076480097 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.15131233 seconds)
    (21/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.1055887 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187892403 seconds)
    (23/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.0690196 seconds)
    (24/309) benchmarking ("sort", Int8, false)...
    done (took 0.15782161 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.151960858 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.200108278 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.20840228 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.17579518 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184278496 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.148289248 seconds)
    (31/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101877916 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095725364 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.091606554 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.085577465 seconds)
    (35/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.164443482 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070243247 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091837218 seconds)
    (38/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064630758 seconds)
    (39/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.180258586 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075901913 seconds)
    (41/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.151356003 seconds)
    (42/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.152053784 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072961843 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.166498473 seconds)
    (45/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070474003 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155023822 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078200274 seconds)
    (48/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.10965868 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073179177 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.096069941 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110491261 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.212123152 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.107289394 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111566515 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070039782 seconds)
    (56/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107429466 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.108812915 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075253148 seconds)
    (59/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.061123598 seconds)
    (60/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196481115 seconds)
    (61/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.09414255 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086539877 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.074765853 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.204126581 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.049608545 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.092116835 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096251008 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113958897 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069389987 seconds)
    (70/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093390847 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088379203 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11757591 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074308281 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.050734178 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085027645 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088872788 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070595321 seconds)
    (78/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.134039883 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187571088 seconds)
    (80/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.142474836 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093006443 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.106399983 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 0.202515812 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.091711269 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.065626835 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.180565774 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.129873081 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086316244 seconds)
    (89/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.049740812 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1377892 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072130424 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.153766491 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.133487897 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164468216 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070854263 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090713573 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07124718 seconds)
    (98/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.091745305 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173220053 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.189362548 seconds)
    (101/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070374263 seconds)
    (102/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.122673655 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.116856582 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065837931 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067477248 seconds)
    (106/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108154064 seconds)
    (107/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070074694 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.0644897 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085987136 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07118164 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.049232337 seconds)
    (112/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108377934 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 0.347304663 seconds)
    (114/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.134224076 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062793696 seconds)
    (116/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072260197 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.062780439 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.146700616 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171447148 seconds)
    (120/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.081998061 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.105846725 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.161793258 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.090286481 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093203319 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106894097 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.186039386 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06412268 seconds)
    (128/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.050373678 seconds)
    (129/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.100630074 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064210436 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138430657 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.050873212 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.177829138 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075513152 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06362601 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.154011395 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093364524 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143043842 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.110301931 seconds)
    (140/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06097524 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08544991 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070137058 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0704953 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.188300341 seconds)
    (145/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.048879433 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163256576 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088124657 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09205828 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05236433 seconds)
    (150/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068596733 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085659331 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078454951 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091766544 seconds)
    (154/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06760875 seconds)
    (155/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.092746582 seconds)
    (156/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.155661791 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050545892 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103148815 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086264573 seconds)
    (160/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.071421398 seconds)
    (161/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077516265 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.104754925 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080248676 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071311509 seconds)
    (165/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.127124825 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064529397 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.049368179 seconds)
    (168/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.082125073 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094082148 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096088117 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09046331 seconds)
    (172/309) benchmarking ("sort", Float64, false)...
    done (took 0.14418004 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064531739 seconds)
    (174/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064684784 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.191062391 seconds)
    (176/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086209122 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091593244 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064513065 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087623442 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.103664922 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.097686623 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050247943 seconds)
    (183/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060143491 seconds)
    (184/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084275154 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088770956 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063276918 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.129662112 seconds)
    (188/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053191207 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.129872855 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070023349 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091496912 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073087578 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071531166 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.111626596 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063795343 seconds)
    (196/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049603185 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088347155 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.110395366 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.109335908 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063496704 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.04893171 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085410902 seconds)
    (203/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067177048 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.048679396 seconds)
    (205/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095564384 seconds)
    (206/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074481069 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.143290119 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050124404 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13406477 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050488572 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.049305514 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.106017292 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.161143793 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.097444325 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069365042 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.094475403 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071139316 seconds)
    (218/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06367789 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.164838987 seconds)
    (220/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.049494107 seconds)
    (221/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095772848 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063731578 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.105912012 seconds)
    (224/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066423119 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.063889243 seconds)
    (226/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092180291 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069636597 seconds)
    (228/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050728621 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072620118 seconds)
    (230/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.131714503 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093300809 seconds)
    (232/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06660116 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.10474209 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063994682 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070246468 seconds)
    (236/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.090410547 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052157724 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13448064 seconds)
    (239/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097312113 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063865938 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085177394 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065120644 seconds)
    (243/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06602787 seconds)
    (244/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08653297 seconds)
    (245/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059743292 seconds)
    (246/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.058978426 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071497953 seconds)
    (248/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054293041 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.129935837 seconds)
    (250/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.120529451 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050152426 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069267324 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.072701968 seconds)
    (254/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07168787 seconds)
    (255/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.189508638 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065420448 seconds)
    (257/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06046161 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.073504161 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063858669 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062825832 seconds)
    (261/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100302415 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064118566 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084675671 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071171093 seconds)
    (265/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.050346504 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.092719928 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051064938 seconds)
    (268/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051221057 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.049364921 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155729718 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187664423 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050240344 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.186124194 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05049663 seconds)
    (275/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07527466 seconds)
    (276/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089392694 seconds)
    (277/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051389276 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070600686 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086019264 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051360173 seconds)
    (281/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065558782 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085801769 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05091345 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.085782205 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084639082 seconds)
    (286/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068787281 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.106987595 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071208595 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.052612408 seconds)
    (290/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.073312926 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072338974 seconds)
    (292/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067437045 seconds)
    (293/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110582729 seconds)
    (294/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11661456 seconds)
    (295/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088467169 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065267389 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106664251 seconds)
    (298/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.073964047 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069125281 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05088867 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072098413 seconds)
    (302/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06771719 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051597245 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.072719953 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051081446 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071434511 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090014696 seconds)
    (308/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066756245 seconds)
    (309/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.049847806 seconds)
  done (took 31.851083956 seconds)
done (took 32.78474215 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.079353902 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109518933 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073261763 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.088970515 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100536522 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.073153753 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092909474 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075733633 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.099228915 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079673348 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098246743 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053789449 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071305924 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.094749806 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072279274 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110600159 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.075824319 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.091418185 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072360815 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062938039 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093050295 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064103208 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065394158 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075844186 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076556859 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069301665 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.093390359 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071476329 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086054448 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065512014 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066881778 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.093468253 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064474582 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074937843 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092024352 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071338482 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093923202 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075198959 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065190869 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086543148 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072600787 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062983085 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093379575 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07174728 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.06868685 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092152901 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070592424 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097132165 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088817706 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087927878 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073490041 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074283812 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097271154 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071400995 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089335542 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072372597 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068614643 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111714427 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071535076 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08796681 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072994426 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072008537 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.091702176 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071696204 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070150494 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.096238449 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07324492 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091901998 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073131457 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068806739 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087013961 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071423111 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066336355 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086950289 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072981455 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.095894681 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064266042 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069044245 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092656888 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069972666 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062695854 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088935791 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065871533 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069122468 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089234844 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053298135 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06672957 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092501829 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063626261 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.092221198 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071313556 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070541034 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08753092 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074304448 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062657161 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091807898 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064833802 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064493091 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088273421 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06815199 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062933122 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088667662 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072845227 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064796191 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092454547 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077319918 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085835527 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07001077 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062514462 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085915248 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077642912 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09411602 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065531306 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066307362 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084705484 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071421109 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062672763 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08691758 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065283237 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063500126 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092218763 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064129188 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065291084 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093284879 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075929651 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085424721 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068702407 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065620374 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.085799018 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069975999 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063828321 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.085773425 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067047513 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060538157 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088059312 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065246273 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070154963 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088617057 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071102884 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064735629 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094225011 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068300849 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.090909318 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070552954 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062551916 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077753137 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068013575 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065643496 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087258527 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064755583 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06558965 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085528108 seconds)
done (took 12.776397088 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065539207 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.161717545 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.116206652 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093043406 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105859945 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065372976 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073074516 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121841624 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.087560873 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100113578 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.106667227 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082059719 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.132473922 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062550654 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.086244054 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068684599 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065236176 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107156672 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.119057016 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085108204 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.129254006 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06296964 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.114345059 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08666543 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107392878 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120501228 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065983764 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068005431 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.090033289 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.088991932 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.106082397 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068683191 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064095549 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.11806471 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.111851523 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081856707 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086023586 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081602397 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063718185 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.086252065 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.085124266 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.118599348 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098522393 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078795927 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069263242 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.090582783 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065317526 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.104105403 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086457732 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.099889651 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10442405 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101639194 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089111583 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.078276037 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085372738 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083764456 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.100207063 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067446335 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064795716 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089614018 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064305256 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066621438 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106699483 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.108083002 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068449547 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100091905 seconds)
  done (took 6.968472225 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081686086 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.086963011 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104172974 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080030545 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.087499996 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06460501 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063591198 seconds)
  done (took 1.561357015 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066497912 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08434254 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.10926814 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086176506 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.105190975 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08458568 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096854897 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065628225 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079828675 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090046354 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084071223 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121227259 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065883376 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.093157687 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089212299 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064858999 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112079168 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064513019 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09092712 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087314483 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088667093 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08453714 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.066436942 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.088391558 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079343373 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.087545286 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110057137 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091124683 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067611747 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067724539 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085658592 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.101332663 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101182088 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07229221 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064225844 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102183075 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.077747076 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086014386 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080846239 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.091939579 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080501668 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065128607 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089014786 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063857819 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068281449 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097944762 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06674923 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065630003 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091779994 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083203134 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088745825 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079362648 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065185642 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.091845668 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066796067 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091653768 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075535566 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065864329 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.106682976 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066413467 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.103309713 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081673548 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077538996 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10452135 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067075338 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10129409 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079148201 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.089879588 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068397001 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068480988 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103446052 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063831245 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066349761 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098822793 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06703903 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.109818172 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087448667 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.065589528 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099161855 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065379142 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.087510317 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066360976 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.086093355 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092742709 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065137996 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.090966225 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069277425 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.062875082 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086802637 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069124709 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063158622 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.088916674 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068722894 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.064992359 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091389288 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081179611 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.088481592 seconds)
  done (took 8.999602783 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068461305 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066188907 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.089509788 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06716104 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065526709 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088701328 seconds)
  done (took 1.44786789 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09228946 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.089070283 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080451646 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069552582 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124872668 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.077774814 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.102921063 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098658757 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083327814 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076285677 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.102870499 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.079208401 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.107825927 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070604483 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102767282 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069305995 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102094642 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074396 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.098838672 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072318508 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.106726459 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072447294 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071047785 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.102619735 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068402514 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.093525686 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07427331 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.098988769 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077269281 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.098880091 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07136226 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067866348 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.092122615 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07637751 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.102835098 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.068344135 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093060735 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069797556 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096501849 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07004984 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.078379575 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09554866 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072191091 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09209097 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075926551 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.091797881 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.069255709 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096611885 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.079038103 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.090589102 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071246006 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069206363 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.091043735 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069343799 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.091032987 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07794429 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.090992592 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.07996301 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069771062 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.092442134 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067640469 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.090820989 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076601265 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.090959297 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078061403 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.091660295 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070442522 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070389134 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094878627 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070375049 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.092231564 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068240323 seconds)
  done (took 7.059560148 seconds)
done (took 27.024605628 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.658745608 seconds)
  done (took 1.659862584 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.718157473 seconds)
  done (took 1.72113848 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.061685116 seconds)
  done (took 16.071041992 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.564886938 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.714776392 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.756204364 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128138259 seconds)
  done (took 3.168185014 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.878220732 seconds)
  done (took 1.903533793 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227755204 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.215194301 seconds)
  done (took 1.450679433 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730978522 seconds)
  done (took 1.749267881 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.261823632 seconds)
  done (took 2.27242492 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.303052123 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.171412587 seconds)
  done (took 1.495144685 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.467267018 seconds)
  done (took 1.48558242 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.330818802 seconds)
  done (took 7.352406697 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.199436995 seconds)
  done (took 1.229094417 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.256777086 seconds)
  done (took 1.281068958 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.17183439 seconds)
  done (took 4.191925861 seconds)
done (took 48.041845344 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077039314 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.078130451 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10210996 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075701762 seconds)
  done (took 1.349240011 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075878589 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070051593 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09746065 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070397347 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.097008077 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07088434 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07093726 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099086554 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.069355875 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.093357339 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070922101 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068920438 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.096801511 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071787426 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091596645 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073857017 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095134486 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07192156 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073762401 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.093756033 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069072165 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.072448509 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.097080971 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068829671 seconds)
  done (took 2.956951484 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076373356 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069935009 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095182727 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070460004 seconds)
  done (took 1.342719319 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076517846 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087278231 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.110880439 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.074325852 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.113378038 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106692762 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068597064 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.066926597 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092222959 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07552664 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065203957 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117635712 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107763417 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075376191 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.075507677 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087859887 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066462215 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10782933 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075069036 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07380477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092055217 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07693237 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.088784103 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086891036 seconds)
  done (took 3.101106248 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076279302 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.098255121 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.099598746 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.083752325 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.112270187 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063359867 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095980186 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087066076 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.144245072 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063639585 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.091483383 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064316421 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.06983222 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.086638709 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075423262 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.124562397 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106823463 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066149005 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.117727218 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064013032 seconds)
  done (took 2.824434317 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072235851 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067503065 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086175949 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068005801 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074958886 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093838259 seconds)
  done (took 1.497149346 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067581896 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065745187 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.087733981 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066135545 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069178245 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.088633927 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065345096 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064872333 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088338699 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065897819 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064306869 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087416575 seconds)
  done (took 1.91070973 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382269153 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092119806 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066499702 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088252118 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068098881 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.087592187 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078577159 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065670245 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.112508669 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064488208 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087763014 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068553035 seconds)
  done (took 2.293494364 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247744926 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075888993 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277046649 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157275206 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133820137 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136721321 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125836163 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133643246 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.165666323 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123839658 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211055077 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186342542 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128319769 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158441245 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110544804 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.095376203 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200997255 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181673678 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125351717 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209764047 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16567882 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14630092 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167478473 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122954728 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127924489 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143638985 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06883884 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102520954 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214029681 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152860939 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165865866 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1332505 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115133593 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220243803 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214917907 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162676068 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155913746 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081581249 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148072328 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.156047567 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243722111 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110171372 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184670553 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129954154 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101508447 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161907376 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140534769 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.140588106 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128498215 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087437421 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190005215 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199857936 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.183177798 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084998167 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133524959 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135667302 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.135396555 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123205841 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223835577 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179977296 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147722538 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09203488 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096799075 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196190236 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151690032 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.128394915 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.147383332 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089317419 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177221807 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173972401 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138941407 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16295552 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.174854805 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085351878 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13896647 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18271282 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149996059 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189847419 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145086735 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094593058 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144632032 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123496679 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079375341 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.161266242 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072331881 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217708587 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118191112 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103413026 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134760605 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12920075 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12944879 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181742338 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189517556 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122468105 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064334075 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123909136 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.139592939 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168319033 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107367397 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10374426 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13655158 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.100260925 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158145316 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096125319 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143236354 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.073479104 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143906973 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149286484 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.09719768 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144235461 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097195425 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.121378523 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152306507 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204639236 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086728065 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103960527 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186263604 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143313989 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125537307 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185315676 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177793338 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120189075 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099798875 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195953611 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224355534 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086592801 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207602189 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128724371 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080946671 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.109126024 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144464691 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132599142 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142168977 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079477464 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.139614307 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211766556 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07147984 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116336102 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154811592 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10027191 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079528169 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125038257 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122171869 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.090675211 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.122277158 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.126729268 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159411056 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144725272 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127447999 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14472261 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120497234 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216732031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110228397 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097339351 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124494316 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067424058 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.179459293 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178221742 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075998975 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209439038 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.142881102 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126975949 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140453021 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079573287 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15850074 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101954396 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067863743 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189991554 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130394102 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106816044 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196599508 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100218797 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.171130122 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.140601347 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156498541 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153424421 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.150223274 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126866679 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.083908106 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132754101 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1701251 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072682772 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.11293105 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078942239 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126042637 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116696526 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081131465 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184706888 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147692404 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096850426 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132181873 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119428007 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16708358 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.098615803 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149942329 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.139347096 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090626016 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19755245 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172913067 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152491462 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120854191 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191140158 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069515419 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071353441 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.112507902 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142866747 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105374929 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082389455 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138287278 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191105156 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151103081 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159125834 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132430213 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141782054 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17510113 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066905342 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.139359304 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166901451 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142310365 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.146411931 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089243656 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.120069938 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162104063 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130605083 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225525825 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135893991 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144527541 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199804624 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096097933 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102643228 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126743831 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157176715 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12636537 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165367756 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121543152 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109674149 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105833158 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.098128228 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121961332 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148759352 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14259361 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156757541 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.136269283 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152445513 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100150938 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138832564 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140949849 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14518047 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061481625 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140795546 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21344118 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116092406 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139044997 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174066455 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102054438 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.145764679 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195737212 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191377902 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081301502 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131718796 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140347327 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148312066 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140103281 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185026567 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107797302 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181833297 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10689983 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108813535 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083396075 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119432551 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126581635 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.115434235 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129737912 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.135618335 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092724785 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152389803 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124567415 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13088528 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14000132 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.11696752 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08845313 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118769511 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194934984 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140484257 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215770553 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.120821552 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1661014 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21088283 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072918284 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102015565 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076107295 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160439805 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107212124 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152714387 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.119357317 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102388987 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169211908 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16409612 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091852525 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092126289 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130146231 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156485531 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133720597 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094984013 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.126134461 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208845364 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098190675 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103462449 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135582262 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101789922 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124889643 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220679761 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.059629813 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120694026 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073054413 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104289696 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14896607 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198815712 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080041582 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.121622638 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137584283 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132674527 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172175806 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099916332 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122623477 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136524075 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169064844 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149659964 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.113118487 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133391246 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150594749 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201947353 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127391635 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092724741 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217933404 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172731347 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206498165 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.110306567 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111572877 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135862302 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130381019 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185537337 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081371994 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210913435 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079484469 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184418733 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12632043 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087807203 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175516337 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.096886722 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110940663 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169034644 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139568257 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105518726 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075338114 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154373609 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141835848 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129140996 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.097870073 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161692194 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.06987305 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180584824 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191191781 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105100312 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101552717 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119300819 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102455569 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130290335 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099071191 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110628219 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.117105747 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21644939 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.110901222 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19610628 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164144943 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135305268 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156754173 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122350049 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.657736749 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074434105 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199812359 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139893712 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219668459 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09363254 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140953306 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131929507 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144848434 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190232661 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12617302 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.172364317 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153501981 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.138123835 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103696686 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126149719 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124411576 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085956257 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127149988 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13585558 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139509014 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.115130313 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.138109025 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146186758 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079631512 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11848498 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17525088 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138577639 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190395771 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16201337 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081667922 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14064875 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186996468 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077390877 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.142270416 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201151368 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129963323 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120274028 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079561165 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.124827555 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217039428 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072606469 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209182029 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142122676 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106061355 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134719051 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.160889131 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155054458 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130189156 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144106707 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091175099 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.131207029 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134957323 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105646918 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074623861 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128724982 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13426293 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.119688817 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121036277 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.118242148 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174390498 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095171827 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092921535 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12650512 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191053789 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196897072 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111869414 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080556257 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141891314 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13607038 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.136122089 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143978675 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10388119 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079296813 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.10653936 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099215049 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.130937271 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134885508 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127027537 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132876072 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185327361 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.106497418 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219280539 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117801271 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12834805 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068859634 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.101275445 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092672913 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121695844 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130879647 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122589312 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191243937 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.117910005 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11182788 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091224336 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097327707 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081395913 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149799728 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133348663 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141939362 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120475015 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06057037 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13144717 seconds)
  done (took 66.847435342 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129390553 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104172794 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.11845618 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.16767577 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145175718 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23418623 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.176253731 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221775127 seconds)
  done (took 2.397376719 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067871423 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.115893147 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097448713 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.104357333 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065346061 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.09115792 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.26515521 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078371283 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090103931 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086489653 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.101870805 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.090514598 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.45712769 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063916353 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.089324796 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061524278 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090107414 seconds)
  done (took 3.116130086 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.407897059 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634894859 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.411734571 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097613063 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.794213049 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086899041 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.448743818 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.160531671 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070220837 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.432513824 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.744976899 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128468791 seconds)
  done (took 17.51876162 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073470986 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.067000232 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106847763 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081330072 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069271257 seconds)
  done (took 1.507008977 seconds)
done (took 109.67926663 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078837196 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.329255613 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.051826429 seconds)
  done (took 1.520093628 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081313614 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080547836 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107311783 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.079301502 seconds)
  done (took 1.466056668 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073254709 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.073211935 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.106495933 seconds)
  done (took 1.368156634 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.270468633 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137012014 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.110853801 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079782986 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074162051 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.09999706 seconds)
  done (took 1.369418007 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070828836 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071380815 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095551219 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07354067 seconds)
  done (took 1.422896593 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074519247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.050397218 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.052395981 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07889016 seconds)
  done (took 1.373710395 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084602502 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.074303943 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10147047 seconds)
  done (took 1.372454704 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103327571 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.107033759 seconds)
  done (took 1.324356771 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079004012 seconds)
  done (took 1.192618999 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096162611 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.135451786 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149600379 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.130774219 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.157403338 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.130602368 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.106566851 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085154806 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.099978889 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08389001 seconds)
  done (took 2.293215561 seconds)
done (took 16.409148474 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07705343 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.229117978 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.351851257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086821638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674021164 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.345545435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.892703225 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08794523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142400208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.090773491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081428038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.629658872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.878203319 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.16285607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.866086048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.128204625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652467526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067317831 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064934453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090083635 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.850946917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064809048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.091805826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066105453 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651660114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.361743708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065481969 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.154942622 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066046597 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.090805272 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.346492037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065895455 seconds)
  done (took 14.584215337 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068799166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.137822238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07236109 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079734448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094173116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067211305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093339155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067930759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145564203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066251231 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105610294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066674951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069253932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.091991801 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084832861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089251795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068586554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066622682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090742738 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067031726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082816687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09172344 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065905619 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091077681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067075765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076084146 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091845864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066794774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065066494 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093991148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067701815 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.091091798 seconds)
  done (took 3.767481831 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112402541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146086025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072069672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12478709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.108112907 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09452607 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.137700657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11694141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148283238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06557773 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107784696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066839773 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122205533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067589334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083867489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092447431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06641708 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09084636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067285743 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066406393 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110366345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065950637 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089961989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067953748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065555683 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.103387715 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066535683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065146526 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092471831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067566193 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.094219744 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067996818 seconds)
  done (took 4.033945489 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071637127 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072571087 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105056355 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081973129 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066254913 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095715938 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070148736 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091899759 seconds)
  done (took 1.78104935 seconds)
done (took 25.283994218 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077319799 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066561783 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.095321201 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.078822051 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070406751 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102278753 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064636788 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.096390656 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071466258 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.0703078 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.097904839 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065386159 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06774303 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091150049 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072330318 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064723413 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.102988622 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068986202 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.101607192 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07705522 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066188881 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.097534752 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071308786 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.101786175 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07629506 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.100551697 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076123831 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069921289 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.092816294 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068409066 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.072475004 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.107211425 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.066052601 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.101769151 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067034727 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065265556 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.095832005 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065972534 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.100905293 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07507391 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067485227 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099923019 seconds)
  done (took 4.527299466 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08623338 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087082948 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10847347 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060405709 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.063348359 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.090091339 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085080066 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.083553541 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058924122 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083948102 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.079394927 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058375549 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06012086 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.051320384 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.084545794 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.054906863 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.058621313 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.079878146 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058867145 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.057009915 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.056221073 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.078871 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.058880292 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.059978576 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08002944 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061101811 seconds)
  done (took 2.971208522 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074024647 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080256892 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111225297 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122949694 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.12719819 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074305513 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.102024212 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.082815167 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107697905 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066041642 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068123712 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.116998518 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084928853 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.096074857 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069866464 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.080803374 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.105641542 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068332726 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069928526 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114814678 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082673793 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100781157 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089648438 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.103484242 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066425828 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067549632 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.094945448 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078923858 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069339892 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.101217779 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068928618 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.095133473 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067446843 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.074706601 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.096161278 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066784182 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.113125629 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075024509 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.074809631 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093004181 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.06835758 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.091315201 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088059656 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134485649 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066349583 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071280908 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099286566 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075016481 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064289552 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110360811 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075871846 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090417818 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069378057 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063898847 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.101977224 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078778738 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.092179424 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069386989 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073236794 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094301743 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.07749614 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.06843539 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107051344 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064693773 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.097955167 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065347796 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065482553 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.090789099 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090179227 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.091727015 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.105389232 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066970572 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093224044 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073821041 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.098134486 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071976061 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06565192 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106820922 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075273693 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094081962 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075676097 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068918649 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094900746 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086072173 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067124644 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09371957 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067037468 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.09544152 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069351764 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06684819 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1032571 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065865907 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067112077 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108526449 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064983295 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091799079 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072255001 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06939254 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091562626 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0757043 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094770648 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067105649 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073372764 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.091104218 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.06865026 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.074216351 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.097931819 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064155609 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094691659 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071845587 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065419541 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093046674 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068442942 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06625105 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.100226279 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071781306 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09585218 seconds)
  done (took 10.94477178 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.178650167 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148997721 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.095209179 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.167970544 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074991992 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.075848145 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.169421115 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.118579886 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06633545 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065481529 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.094529952 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111605341 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.130184208 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.142152013 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07576762 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093176838 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08086794 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14043811 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.170667422 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.138512953 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108838413 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074726358 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.094599397 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067614343 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071871368 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.107780251 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085364472 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101472955 seconds)
  done (took 4.188314706 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.07994843 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.123999672 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073481005 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.085697375 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116455559 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065783552 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094963381 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068526187 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077601427 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.103871263 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064836797 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.097456341 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073062796 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.09675371 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068030434 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072181484 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099960121 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067143921 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.06739997 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0969945 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073960708 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103929063 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069680234 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063408416 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.099129427 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06502111 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088495963 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082643337 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092469065 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.087317131 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062611255 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099026181 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077551215 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092700913 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066508564 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065304346 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091477129 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066821752 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066148468 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090645184 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064474623 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.055304332 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.091012181 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076856843 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097617772 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058654811 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069711139 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.09728299 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071016555 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062714417 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.094757597 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068013893 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068103811 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101170507 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070328585 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.095826665 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067671955 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.062592405 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099241305 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066321461 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063122503 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091160497 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070867315 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06349711 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101327874 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07084902 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090380733 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067388341 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.066930832 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097847999 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0663911 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067191461 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090086162 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068588882 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070284043 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097514966 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067282713 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063164948 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093473573 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065699417 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.053307762 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093434326 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052360671 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068065642 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091129709 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064395359 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065470099 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.097932491 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076771203 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094580892 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07117866 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.092488909 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066099895 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068791665 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084621471 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069273317 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079603429 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.10801934 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06523518 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.090119642 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079897293 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069369322 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091457932 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05476276 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.096978424 seconds)
  done (took 9.460525599 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09146688 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08389919 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094274296 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08075744 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.114341286 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08490336 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071387282 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.09904957 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066396804 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.102384815 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067052815 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074409317 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.091568138 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07473743 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.090207877 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10031044 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067038813 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.100382156 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070502266 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.097493906 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.107986461 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.07880325 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.105210133 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066918668 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.070492911 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105108672 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.087358777 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103927092 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077460453 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.082547889 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104394097 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.087830065 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109405514 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072186608 seconds)
  done (took 4.133812967 seconds)
done (took 37.348082739 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.216866908 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422742578 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.196633028 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.110205993 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.200350636 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.216219445 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.208709961 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19837487 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.254252845 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198463834 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.467059367 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.827392579 seconds)
done (took 58.661365018 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.260102539 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.338982878 seconds)
    (2/2) benchmarking "String"...
    done (took 1.472077518 seconds)
  done (took 3.954011881 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.563666405 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.111432808 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45963673 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.20776511 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200705453 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.500723798 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.786829677 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.013386236 seconds)
  done (took 27.423704321 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.206230381 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.571600094 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.651027189 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.653604196 seconds)
  done (took 18.226677833 seconds)
done (took 59.570192716 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.236857259 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.202040064 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.208318153 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186376606 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.32787641 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.233425611 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.372021663 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.077528832 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.201831361 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.187935977 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.201104967 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.207210052 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.203459144 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.447729941 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.209553218 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.202718374 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.290334292 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.366227576 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.592667735 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.219234981 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.209412013 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.22885371 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.214319835 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.204982523 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.215512837 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.20170997 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21330072 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.217866001 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.504802086 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.201784033 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.30252228 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.630054886 seconds)
  done (took 190.663972374 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.201048114 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.247279857 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.33490362 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.23245489 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.644946158 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.416771273 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.364953971 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.859764495 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.218549273 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.211262417 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.429899826 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.203254403 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.501340124 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169046826 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.21107028 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.306439712 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.386785617 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.515182182 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.218021068 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.50789087 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.220454806 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.291188892 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.223348186 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.392384571 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.233289251 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.30155184 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.217247772 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.231333299 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.417681427 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.308647477 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.218883005 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.205363727 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.786421346 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.060042457 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.206529753 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.205182261 seconds)
  done (took 149.845522143 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.484255026 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.202605609 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.203135025 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202849989 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.233898504 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.20349367 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.203119841 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.743009874 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.734147458 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.707041513 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.723190692 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265255366 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.409951803 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205844417 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294960093 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215927029 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204283634 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218717232 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.230748947 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20641015 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204341909 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.748077905 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218522893 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.377139816 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211171521 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.205287894 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234984118 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.597828323 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204456027 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235112144 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.520408477 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.25194713 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204727071 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.427406315 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.130347605 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205855967 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312779052 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207441683 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236239453 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205603887 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.473238336 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20584721 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205781451 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208067585 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.759014744 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.208200528 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.746467058 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208182453 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.097348202 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208170245 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205970023 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.985133321 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.651002724 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.207941118 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205896376 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207787667 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207293156 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205687272 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.236741136 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.075248763 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.303047854 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.206960808 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.209038043 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236696543 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.206094119 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.374431572 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206502928 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.141749568 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258648483 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.313460514 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.750738754 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208564997 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294964759 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32558153 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.20680792 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206573305 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.20699408 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206362243 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205794831 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.313345884 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206990336 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.578721424 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.206865394 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213084768 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208380394 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.266217927 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.300057774 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.207212514 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.444156161 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.209722177 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207213045 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885747955 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295588212 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208003168 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.207075356 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207304568 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.580194753 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.739494955 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.373433889 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21029715 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.067652357 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.210392851 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.591030319 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.731446111 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.804341901 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211321156 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314150203 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212962201 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.21020865 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208331725 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.237768525 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.20866058 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263825404 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.208249363 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60420104 seconds)
  done (took 347.230987741 seconds)
done (took 690.367586285 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.847295483 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.839017268 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.955895907 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.837468409 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.799744898 seconds)
  done (took 10.430471359 seconds)
done (took 11.580855097 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.397638339 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398545025 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268781531 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399684258 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23758453 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416376524 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377866206 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.228109346 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.312186002 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290346385 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312329133 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261753171 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236091908 seconds)
  done (took 18.288722594 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524528607 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520480626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270833635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526821304 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247000568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51311077 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397849565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42103448 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405606296 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221732656 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222206571 seconds)
  done (took 16.423772971 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523639827 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512164133 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275376747 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520476706 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249201879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519561969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399468847 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.414925011 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396995902 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223835912 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222053745 seconds)
  done (took 16.410506962 seconds)
done (took 52.273960288 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.217713419 seconds)
  done (took 2.370703322 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.250504008 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.415944661 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.236125388 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.221463593 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.219522132 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219351665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.222689201 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.219852122 seconds)
  done (took 11.159708629 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.218592227 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215536778 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218492561 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.218460966 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217680347 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218232851 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.215115932 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216200108 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216182315 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.215133742 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21892982 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219500511 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218208107 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.216225048 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215905173 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217084908 seconds)
  done (took 20.62961964 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218182003 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215890639 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215170911 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21620248 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21590666 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.216050348 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217087791 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.215969846 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.215960897 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216672511 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.217012521 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.216207854 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216644907 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.216987069 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.216256679 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.216990678 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.216729904 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.216700801 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.221093085 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.216601881 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217040616 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.216791198 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.217397577 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.218163726 seconds)
  done (took 30.360480295 seconds)
done (took 65.672669577 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.034208125 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.653282816 seconds)
  done (took 8.84253778 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.219365578 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.219447154 seconds)
  done (took 3.594718107 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.220225202 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.219384731 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220483218 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.220877442 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.220248307 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220152424 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.219680592 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.219873776 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.220086299 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220669314 seconds)
  done (took 13.357513244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.220847296 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.21997435 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.217093094 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.220358698 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219995526 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.216866093 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.220810037 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.220593024 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220268201 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218252646 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.220458162 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.218502462 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.220772854 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.218228234 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220485547 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217871819 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.218493993 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218176499 seconds)
  done (took 23.103874002 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.221121222 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.221426904 seconds)
  done (took 3.598446241 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.218748141 seconds)
    (2/7) benchmarking "second"...
    done (took 1.218620723 seconds)
    (3/7) benchmarking "month"...
    done (took 1.217938703 seconds)
    (4/7) benchmarking "year"...
    done (took 1.219185882 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.218977493 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.2183349 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.21886881 seconds)
  done (took 9.687015863 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.222838763 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387308028 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462964936 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.89713734 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.223664222 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.225007902 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.188944621 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224660756 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227056795 seconds)
  done (took 14.216255306 seconds)
done (took 77.555050989 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.240595455 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.21525758 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.066633283 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226348422 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.232202016 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.557616093 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.24594745 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.338208767 seconds)
done (took 37.279681648 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.231014948 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.869327021 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.903806033 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.221426695 seconds)
  done (took 11.152911385 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.205397755 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.136697412 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210578958 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.251719969 seconds)
  done (took 17.962948028 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.823661302 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552629782 seconds)
  done (took 4.534212279 seconds)
done (took 41.03818357 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.224510437 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223122482 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223372014 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.221156249 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222765494 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.221645678 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220897166 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.223447547 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.223640885 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.224566681 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.223891555 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222616452 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220138942 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220772221 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223283585 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220477693 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.220084254 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219994319 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22269014 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220437979 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222790623 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.220294549 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.220554494 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.22065987 seconds)
  done (took 30.486932622 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.223163986 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221167317 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222893853 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222761622 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220773678 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22327002 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223283991 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220866954 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223639676 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223221673 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220504399 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220696649 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223595136 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22135373 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223501551 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221323678 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223404465 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221002735 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223622115 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221140387 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223085947 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221036076 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221628585 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223215732 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221434944 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221723441 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226570597 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222594278 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22340575 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.221793818 seconds)
  done (took 37.831225812 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228715347 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231117959 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224403282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.22469563 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224083528 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224516277 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225124984 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224228818 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22467439 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224272613 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224915769 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225068391 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.22477901 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224956015 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225102601 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224665841 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225565562 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.225228806 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225095894 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225364667 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225311055 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225831526 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.225040314 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224963525 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225348981 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.225125883 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225260346 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.225809165 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225298339 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225144897 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225493716 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225247144 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225473975 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225461087 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225734161 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225033077 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.229930608 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.232412882 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.225101922 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225952411 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.225773904 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.22539182 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226090425 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226706706 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226119379 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226036004 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226926655 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.225924684 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225784776 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225827632 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.225990198 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.226303522 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226934806 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226876723 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.22588465 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226937602 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226407588 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226821604 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.226841062 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.225881239 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.226760591 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226891232 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.22661055 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.226599713 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.227307948 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227077349 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227041395 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22667501 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.226791508 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.227828022 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227875624 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227825867 seconds)
  done (took 89.438694553 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227044483 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225511729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225025078 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225054857 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22459195 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.227670401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.224330235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22727816 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224948281 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227178423 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227453729 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224914402 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225376449 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227658967 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22785203 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.2260499 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228616837 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225604401 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.228071062 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228588187 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22827363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22578098 seconds)
  done (took 28.14628999 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228878903 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228600287 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226515985 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228275203 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226094838 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229169914 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22894419 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228677901 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229056654 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227032647 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226387215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228831265 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226551125 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226868105 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227636388 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226853998 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229257551 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.227401474 seconds)
  done (took 23.265470714 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227568948 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.226530646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229493364 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226840034 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227635954 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230695888 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226849596 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230134122 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.229676443 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227334225 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230051726 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229835007 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.229427803 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22735654 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22933963 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227980341 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.229697256 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227328153 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230397491 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22796056 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228107871 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230515845 seconds)
  done (took 28.195855861 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230230065 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.229723154 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.227626893 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.227639977 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227684039 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.230247149 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229792662 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.227751283 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230135985 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231179176 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22995087 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232966216 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229396991 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.229965342 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.228980785 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229437508 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230542993 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.229596222 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230933257 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.227909911 seconds)
  done (took 25.757898373 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232360383 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232498244 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231927939 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232170991 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233127333 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232252956 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233143406 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.233102399 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232923284 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233548623 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.233508655 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.232837998 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233631564 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233506033 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233362008 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232815792 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233735358 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233928609 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233229453 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233885345 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234049916 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233611199 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234380355 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23407524 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233752125 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234149655 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233817077 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233686892 seconds)
  done (took 35.700798731 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233529624 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232216229 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.23159634 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.230052057 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.23043329 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.231130116 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.230859316 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.231169547 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233257576 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230278524 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.233413446 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.233388904 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233487232 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.232827331 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232901285 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.234169062 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232979612 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230284268 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230743769 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230459253 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.233670811 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233361725 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233928565 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231198508 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231315173 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.234059004 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230496852 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232280644 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233155684 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230626643 seconds)
  done (took 38.132614611 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253327541 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252322631 seconds)
  done (took 3.674761429 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.231250147 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233878055 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233653304 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231204632 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231752502 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234073464 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234017901 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231851942 seconds)
  done (took 11.031577568 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23565277 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234547305 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23434005 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.235015195 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.235278972 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23685356 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244113228 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252198788 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237402263 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236786548 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.241364111 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.243901892 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241599532 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236783831 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235737871 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237849967 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.2353831 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.235884755 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236040913 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.23533214 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235876731 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239390755 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238726843 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.233436348 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.238035833 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250016731 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.244042261 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.235869301 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236764466 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243871919 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237883355 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.233665314 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236736771 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.236911351 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.236239099 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.237679567 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248368094 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258285714 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245596082 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237581399 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23776092 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.233948901 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.2394173 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.24089353 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239285439 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237772477 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.236698486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.234580565 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238263582 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.240277685 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.241472233 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237712634 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.234131415 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244525129 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.23993 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245824722 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.25567268 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.241343767 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246841706 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.250839101 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.252142952 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.246342632 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240467872 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.23841311 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2480485 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.26125366 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247763751 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.252408169 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.235470979 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23814053 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.248020702 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253462439 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.248803584 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239148885 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240090352 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238404243 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240025396 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238516085 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248507064 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259942107 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239338192 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239427767 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249037146 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260068265 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.238427406 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239521268 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.239485827 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.24002509 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.240874893 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252255824 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.257063507 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.238920593 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.239651105 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.240944395 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.243997796 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239487596 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239507289 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241747236 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.237211231 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239662104 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240372385 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24340654 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.248887818 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240592388 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240711557 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25116859 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.239998508 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240207128 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.251782248 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.240226218 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241428115 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242206695 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249506321 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.238327334 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244195391 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.249525331 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241140055 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243799075 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.24125872 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.24065915 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251667308 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.267120641 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.241102675 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.241130949 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.246870539 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252353088 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24189563 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246149982 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.241641647 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.239000487 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.23929383 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.243886035 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241956165 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242643272 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241715562 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245541043 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.238527805 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.241509274 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242186648 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.24432676 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245532777 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242868508 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244496282 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246289624 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242943688 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244830415 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.251245548 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.24387866 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.243829047 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244215579 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.239731586 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242455864 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245427228 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243233755 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244236542 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242976164 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.243173196 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242594279 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242918097 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.243034155 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242808341 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245076116 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247383684 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.242519721 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.249950847 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.243132209 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.24016524 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242407553 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.243036338 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244787285 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.243446017 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.243655158 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.246715636 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251344694 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.243412585 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.243652698 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.248754156 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243260481 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244146172 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244099788 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247563062 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.252415259 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244234228 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.254241052 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.244837568 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244363445 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.244446704 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245824705 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244612115 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245028736 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248957318 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251687157 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259385454 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255108533 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246562723 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.248459467 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246650364 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.248730993 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.251928933 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246449527 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.245104876 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245313819 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24657042 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245050721 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249152876 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246091399 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.245394807 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.246618136 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.246274086 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.245663566 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245612234 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247931976 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249287403 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.242492607 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245273043 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244893314 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.245481171 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.242912042 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.245214375 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.246990429 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.245941977 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247083717 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257875128 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.243374519 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247280384 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247785617 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.246809739 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246214615 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.245919189 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249577388 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.247759932 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256818705 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266079113 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248626203 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254738182 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264508429 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247220961 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.250065884 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.247773914 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.243875918 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.250109763 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.254123757 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.246400249 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.247949171 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.247362675 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247946009 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24746024 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.256591169 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.244371915 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247221058 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.24685152 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.251194459 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.244710625 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249633869 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249238269 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.248754685 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251175694 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24793714 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.247380484 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251368313 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.247748026 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.247705727 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.248225907 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251223624 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.256291012 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256514627 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.249727723 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253094249 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.250161367 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251489187 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.2506463 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.24915852 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24896888 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263118251 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.257548545 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258477658 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.253081841 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.24905262 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256529851 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.251404487 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25563602 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252500973 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253505503 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251810935 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.249588708 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.246305041 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251835902 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248790412 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25125621 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.251097193 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252949953 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248607061 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.249271907 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.249412415 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.249541287 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248828432 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250088827 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.249527798 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.255618572 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252254293 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.25030187 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.250577927 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257968983 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26846985 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25243647 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.250404228 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251243014 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.250103342 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.252256341 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.250302684 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.253867338 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257892072 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.254108019 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261820858 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.252190619 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261778633 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.250644061 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.254031608 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257892799 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.248347999 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.24983393 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.252185608 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.250935717 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260288389 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268569737 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.252442809 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.254847873 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251759062 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.251376561 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.251717975 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250832977 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250712691 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.252174661 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262073021 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.274168826 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.256013167 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253784295 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248673223 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.251297195 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.2516987 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.252131444 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258565719 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.251950487 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.254211027 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.251296559 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.253369738 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251796756 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.252282592 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.252279783 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.249379005 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252076607 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262331378 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.271404003 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256152278 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252359911 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264827432 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252855621 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262113038 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.272012643 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.254710241 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.252314366 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252957933 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.257477317 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.253666352 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.255753347 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25279204 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255830459 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.256550632 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.253470965 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.257772179 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.254429122 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.254685931 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.255135345 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264257807 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275414921 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.255747722 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257414377 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.252188487 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.256130436 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257178081 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.254081632 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.253263171 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257199233 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26505805 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26117536 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.25554722 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.254292017 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256294301 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254329411 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254086273 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254021255 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.254970377 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.254485895 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258169503 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.255200783 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262384211 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.254110835 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.255851278 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25726136 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.256089548 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.2677395 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.255798387 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.257287557 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25473436 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.254729177 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.256281291 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.257215612 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.255711844 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257718277 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254988049 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.257356339 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262859929 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.262235173 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258918459 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.255766997 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.255992524 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.257271774 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.257785243 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255220929 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.256257187 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256600139 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.257675285 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256096121 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260585598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.255170035 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.255521869 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.257992685 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25588095 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258963505 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.263591321 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257834123 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.254271869 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257301028 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256995571 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.257366505 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.258332849 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269285685 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260560212 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.267514437 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.266237074 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.26180393 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.258174478 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261053139 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.266011382 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256917732 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.259198849 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257083318 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.261909141 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.258664994 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.261896969 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257635357 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.267202846 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.260200244 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.258377752 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268163681 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.279761405 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257748584 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259827631 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.262743571 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.258806947 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.255559233 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257130621 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.257724914 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268486423 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.279448667 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258390934 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260569641 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257227039 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.260678043 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262454564 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257907009 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.259379871 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.25519424 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258562505 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258266739 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258360162 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.255369067 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.259450299 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.259690964 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261828047 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.266981623 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.25649768 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262107926 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.260012413 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.259349382 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259696367 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259763145 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.256036867 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.256655839 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.260481294 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259175477 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260668873 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.263182523 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259850254 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.261034394 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260886194 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260007405 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263955978 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.270167906 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265869524 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.256606701 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.259287306 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261011612 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.263609256 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259896433 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26010601 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261368002 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.263871535 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259505402 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260201725 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.260313458 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.264097843 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279180814 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.281672021 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262137456 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26194311 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267450244 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.260708891 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.258015746 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.260876498 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.265043432 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.264371088 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.268347024 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261949589 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269201896 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279048398 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262870097 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264459498 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.264967811 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.270560936 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.265877739 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261275901 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.262003627 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.26682737 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.279954811 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261538752 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272174074 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292053153 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280647724 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.263255103 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.261487385 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261720948 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262333104 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.266525453 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.261749506 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.262917216 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262090898 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.262008675 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.263906697 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268349795 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.264039219 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.262252601 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.261449525 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26320887 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.266382897 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259604481 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.262599742 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262712595 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262833998 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.262465735 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.263500965 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.264156137 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277124463 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.275129904 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.263494161 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263249051 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260734864 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268525936 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.266387011 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273431505 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269880596 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.263266613 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.263643846 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.265503819 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26339071 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.260915894 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.264787488 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.264174526 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264001772 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.260557611 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.277715351 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272843027 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270020456 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.265665387 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264648954 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.264452499 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266756154 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263580459 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264639534 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.268351315 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.265401954 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268894313 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264983625 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264391443 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.267910664 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.273152327 seconds)
  done (took 747.885050808 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262655095 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262088671 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262518699 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262458454 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262264929 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26263095 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262187293 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261652023 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262477117 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262067835 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262979641 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262748144 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263283423 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263357473 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263799227 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262799786 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262888028 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262770436 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263051182 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261694927 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261988056 seconds)
  done (took 27.714698301 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.265954875 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262525458 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.263478494 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264921563 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263083222 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.265019718 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.262955347 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265511364 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265898256 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26188163 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266006059 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265333828 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.262335067 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.263159516 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263844968 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265963444 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265937543 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263118966 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.266447661 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263634322 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266599669 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.264087124 seconds)
  done (took 29.018514739 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.267815995 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267302851 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.266985894 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.264097305 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267080443 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.264175882 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.267263955 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.26704427 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.266350551 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.269558393 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267191456 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.268663074 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274570507 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.271411296 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.270399409 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.267179874 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.411062639 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.267475688 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.268328907 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267596158 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.264609007 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274916925 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.265647765 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.265298115 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.267008205 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.268207019 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268657999 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.267655919 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268248441 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.270975387 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.272420631 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.268954856 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.268523552 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.271342511 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.268679389 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270889589 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.271945809 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.268842474 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.266006406 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.268336497 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.278687804 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.287645998 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.268529193 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.277407583 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.269145073 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.26890327 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.273372185 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277268397 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.266612773 seconds)
  done (took 63.549228043 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.268530119 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.268787651 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.266501706 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.268715155 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.268937056 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.268684457 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.26931273 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269615002 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.266995042 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.267668945 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.269831982 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268054819 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268028976 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.270775357 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.270225123 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267948375 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267782996 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.268783494 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.267439726 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268850088 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.268075796 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.270769383 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.270814933 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.268640644 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.270344546 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269778149 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269389561 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.271892983 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.269162645 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.268025363 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.275269582 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274302559 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.275058756 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.272982254 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271666681 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.275211448 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274491802 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.27232909 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274695867 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.271999313 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.274791854 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275316531 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.275621731 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.276718792 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273376536 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.274261917 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273405184 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.273484241 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.274375807 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275301703 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.277135909 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.274398313 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276359734 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.275342941 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276389229 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.276334781 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.274973602 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273650154 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.275782845 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.27405453 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.274560921 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275807422 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.27453701 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.27668654 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.277271115 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274240036 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.274715317 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276541378 seconds)
  done (took 87.717625722 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278124823 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.27639416 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276966701 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276409041 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276976206 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.27613129 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276682408 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276143745 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277221166 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277478248 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27651373 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277167183 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.276309507 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276383938 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277744552 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276438139 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27751632 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276829795 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278164918 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277540212 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.277788752 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277468292 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277848405 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277740866 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27934214 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27786998 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277664578 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277664134 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277114207 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276605698 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277404189 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.278636147 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279344093 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277680737 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.27881214 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.277522844 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278578252 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277638659 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279652333 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.278546962 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277591401 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279110194 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278296763 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.278035783 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278632894 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277648012 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278848614 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280127972 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278014363 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27808451 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279053136 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279249339 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27847406 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279773629 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279025666 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278815157 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279173269 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280793566 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278962918 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279681359 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279463448 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278723367 seconds)
  done (took 80.450099692 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279363847 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278662487 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276773295 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.2771572 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279478537 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277300267 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279460797 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.278991058 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279797336 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279707585 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279729979 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277536168 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276101856 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279796752 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277956535 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276144829 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277774175 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276741916 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279688358 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27698138 seconds)
  done (took 26.779109553 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277637816 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279461483 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277992294 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277957474 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.280322501 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278351206 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.279617267 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279928465 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277211554 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280577016 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281280791 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280916254 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277138391 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277783591 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281009773 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278175798 seconds)
  done (took 21.679878259 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277920141 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.2814881 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280950244 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.282421079 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.278320625 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.279636199 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.280165227 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.277590037 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.278361462 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.281853416 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28137234 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281380682 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.280616909 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.281709385 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279177504 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.282575782 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.277825925 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.278356061 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.280693317 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281677132 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.280453966 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279904643 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.281771178 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281680517 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.279512861 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280002965 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.279615101 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279564493 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279673508 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281787898 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.278838813 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280515228 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.279004066 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.280820225 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.282596082 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279919686 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.283469809 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.282080927 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.28245413 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.282830981 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.282676032 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280302518 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282914398 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.283156329 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.279627418 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283032675 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.279732106 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.280532811 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280750208 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.279879337 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.283045298 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.283481446 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.284322702 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.282972269 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282660993 seconds)
  done (took 71.666655931 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284323105 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282885742 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280713239 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.282741088 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285113305 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.281139013 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283296415 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283114813 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28216247 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28393459 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282833165 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283552679 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281534775 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283053558 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281815683 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283406065 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280926958 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281873733 seconds)
  done (took 24.305938672 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283461797 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282512612 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.284932953 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.282186549 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.281145256 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284316374 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282639764 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.2840624 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283603578 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282262243 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281527555 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.284201462 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284195165 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.284040723 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281570984 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281960865 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.28570091 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284616872 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283265243 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282412823 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285059739 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28549716 seconds)
  done (took 29.453370112 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.28451259 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.285134926 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.302539653 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.326950468 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.314084587 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.285076692 seconds)
  done (took 9.017688394 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282691832 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286224977 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284163935 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285226172 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28475932 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282520158 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284436517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281986312 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285484696 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284472258 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283036141 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285064236 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285222921 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283015914 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286660764 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286903739 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283305033 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283412959 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285198997 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286087167 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283667479 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287591058 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28457338 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282883581 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284497107 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283620624 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286973371 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2849322 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284430693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286352058 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285971671 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284647442 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287454948 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284514334 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28672007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28701447 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284144965 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287965475 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286540854 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284223583 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287516863 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287292596 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287523603 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284612239 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287813274 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283961532 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284336699 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283827645 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284010481 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287969352 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286928156 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285257535 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287497761 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286805047 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287551324 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288515302 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285856954 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284971299 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288658726 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28572452 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285022106 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287120045 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286065835 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286628834 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28915426 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285389048 seconds)
  done (took 86.06713733 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286704361 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285303436 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285503098 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286234488 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285986963 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28608878 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285468651 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286004209 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286191107 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285501058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288946486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286567942 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285941038 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286776386 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286846241 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286824135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285741938 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286489991 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28666911 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289511533 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285829072 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285956839 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286033123 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285301585 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2871689 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288257381 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286900745 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287777886 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286677165 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287224683 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286933645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287034187 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287535063 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28617467 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288568622 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287291805 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287986511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287200671 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28745838 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290636988 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287212777 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291001877 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288761816 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288876122 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378951931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411208498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412751972 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410844569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411755607 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411581468 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412709102 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413055288 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410802939 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411461995 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412717226 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410379384 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411074407 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409580202 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411255286 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413157638 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410435401 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410266775 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41444367 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410483248 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410524262 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411901106 seconds)
  done (took 88.874974001 seconds)
done (took 1747.000362588 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.404950042 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.430303932 seconds)
  done (took 14.180876607 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.576056368 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.53086946 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.412048057 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.413418298 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.412305445 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.416295428 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.435580577 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.41351433 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.413938952 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.412442311 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.413266982 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.60545015 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.416274989 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.412776485 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.412188204 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.507873086 seconds)
  done (took 44.553312241 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.439912151 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.417624671 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.537781419 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.433405371 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.4399323 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.608986475 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.475274313 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.418298825 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.592721011 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.454895366 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.010047115 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.437796795 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.413510155 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.545821852 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.432814662 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.604171812 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.66716995 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.995971569 seconds)
  done (took 32.271294979 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.879287016 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.439997288 seconds)
  done (took 9.661905559 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.457070604 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.435964963 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.41734663 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.431704177 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.419930232 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.415591891 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.41814209 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.472733193 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.446963188 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.403935508 seconds)
  done (took 65.66210351 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.43293909 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.412137659 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.411412956 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.409060752 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.402860992 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.419963138 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.409220237 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.40427631 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.111564225 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.541719337 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.431922572 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.415911326 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.410787039 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.412980337 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.408719564 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.449462341 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.54003802 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.40886073 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.408107121 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.41520336 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.412057183 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.50094302 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.454080444 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.408599824 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.538969051 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.127038556 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.415946642 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.416006355 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.547444968 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.407993164 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.410208033 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.41078702 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.413081762 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.982043671 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.875061115 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.419772231 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.45299218 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.419260859 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.408159489 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.549749215 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.411742578 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.417405873 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.4154797 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.847907324 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.573525482 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.526748799 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.719700968 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.414530596 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.412316294 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.475177555 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.412638447 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.414223664 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.440758719 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.209623163 seconds)
  done (took 115.863264393 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.439078636 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.892852642 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576218046 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.431031752 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.191741799 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.01964602 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.409466147 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.696810816 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.408926692 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.404589909 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.690277085 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.918237725 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.410853426 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.477320436 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.100187861 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.425517404 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.422280461 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.126492644 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.406436079 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.405938955 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829871762 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.432984869 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.418880331 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.569751124 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.445674247 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.867268664 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.842937316 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.845169831 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.408949686 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.405198236 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.865955752 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.408641346 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.451859203 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.409538467 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.682542962 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.758973839 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.732552876 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.409912886 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.422018178 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.405995003 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.426672511 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.85509843 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.738689484 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.402869715 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.401193856 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.85682656 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.400880144 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.40548631 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.404933762 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.60018965 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.334743969 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.40202109 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.796227141 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.401338079 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.637494172 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.448687685 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.431680929 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.880612692 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.401244653 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.458401234 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.415020734 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.402436564 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.400768418 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.404798852 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.403888099 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.735731911 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.506814109 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.408008101 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.737279745 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.847869574 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.401053566 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920973569 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.25407349 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.412919211 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.476950267 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.400646096 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.943325304 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.882911171 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.402464789 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.403989033 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.721112289 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.407285023 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.67660779 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.41861052 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.401917138 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82836118 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.421973167 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.406891743 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.400073344 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.418904115 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.031477081 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.404003904 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.659768161 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.46889009 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.400724538 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.400526138 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.42921756 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.399903682 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.401244164 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.403331717 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898657653 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.39966429 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.522114012 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.422066844 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.398754351 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.413588392 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.401302789 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.400572147 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.614528962 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.894505103 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.407327144 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.399481362 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.400275508 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.403248311 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.541961747 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.407420623 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.681882337 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.400631138 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.399751755 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.405053185 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.053734853 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.433190491 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.401599521 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.406170688 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.227422002 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.609969104 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.418177781 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.400627919 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.400353344 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.427118373 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.681804612 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.404505228 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.463617178 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.400985777 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082751469 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.409285271 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.420704349 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.999637987 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.404756081 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307008073 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.422775015 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.402652109 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.701798596 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.663911262 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.445133894 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.398470917 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.412625541 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.054710851 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.440589435 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.546994093 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.41821028 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.395716125 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.595968198 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.742838598 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.401606535 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.955245147 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.397061793 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.607705943 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.399143044 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.710936362 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860392141 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.397688458 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.405001823 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.073943128 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.046667714 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.184709504 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.403157819 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.664702319 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.398331558 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.850804482 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.398547131 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.40160994 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.823954257 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.402281126 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.410231395 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.401286255 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.402583201 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.473407355 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.573738309 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.701997554 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.410512021 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.835171886 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.403670794 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.401712093 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.401610181 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.401295924 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.751707356 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.443571693 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.407644022 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.414954579 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.402744059 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.404423014 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84415462 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.264707904 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.406559411 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.555983127 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999239698 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.400665545 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.403444035 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.064482299 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.647553981 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.924782147 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.404485289 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.6815123 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.405095692 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.440633372 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.086365411 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.451958337 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.890763938 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.402444813 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.403216055 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958925425 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.402536224 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.751325901 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.402648211 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.404972928 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898226673 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.403621151 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.401547675 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.673949365 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.405177436 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.659168944 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.401885479 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.40269569 seconds)
  done (took 1125.448209646 seconds)
done (took 1408.98670326 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.403513862 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.403592498 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.394043799 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.404243364 seconds)
  done (took 26.948902088 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.411880538 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.408287694 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.410955142 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.408543853 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.411268981 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.408880607 seconds)
  done (took 9.8017488 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.455862899 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.401914161 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.406227768 seconds)
  done (took 19.605253011 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.608247896 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.616577181 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.748819989 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.458885389 seconds)
  done (took 10.774579519 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.411487817 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.40927004 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.410995013 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.41204237 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.41264236 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.414111479 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.413116515 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.411455364 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.412169152 seconds)
  done (took 14.048356281 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.044632763 seconds)
done (took 87.564455211 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.022314029 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.605136302 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.592107482 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.120206013 seconds)
    (5/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.40361412 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.022167943 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.404324368 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.682491127 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.268956478 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.38908007 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.44695845 seconds)
    (12/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.236319709 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.535625652 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.429227282 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.763016192 seconds)
    (16/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.4054204 seconds)
    (17/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.617169137 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.388911938 seconds)
    (19/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.477163402 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.466405286 seconds)
    (21/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.732723286 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.748657367 seconds)
    (23/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.749787932 seconds)
    (24/309) benchmarking ("sort", Int8, false)...
    done (took 4.443557583 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.704743659 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.639972711 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.975551201 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.382324092 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.387016983 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.997506542 seconds)
    (31/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.098975474 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.43867883 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.49256826 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.487425699 seconds)
    (35/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.560775566 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.4165756 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.107415339 seconds)
    (38/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.387344484 seconds)
    (39/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.848737774 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.402329871 seconds)
    (41/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.549090186 seconds)
    (42/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.558762368 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.369657716 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.39765873 seconds)
    (45/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.496888733 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.556219167 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.498169974 seconds)
    (48/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.385732108 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.477545283 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.938216858 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.673387786 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.357398086 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.728710383 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.457518739 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.475989702 seconds)
    (56/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.379574968 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.627669914 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.413000193 seconds)
    (59/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.669412614 seconds)
    (60/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.14812294 seconds)
    (61/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.574001169 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.418369064 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.749780346 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.632913393 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.97288953 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.36255744 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.381607071 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.754433452 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.801475477 seconds)
    (70/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.440096701 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.138120423 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.351521018 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.362169416 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.167984851 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.766797152 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.677754931 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.36324346 seconds)
    (78/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.887021924 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.791100681 seconds)
    (80/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.417468012 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.394825632 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.56050348 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 6.349965493 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.480274929 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.493328041 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.97539704 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.892675305 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.217506324 seconds)
    (89/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.106217986 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.336157359 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.428388315 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.352238334 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.901266155 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.654268712 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.376700389 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.368738731 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.432086475 seconds)
    (98/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.373605757 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.349559023 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.34062898 seconds)
    (101/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.479063693 seconds)
    (102/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.355601755 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.912244124 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.122881412 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.414847561 seconds)
    (106/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.377986342 seconds)
    (107/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.547197223 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.364323138 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.476179544 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.56323525 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.518826722 seconds)
    (112/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.35203979 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 5.336554761 seconds)
    (114/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.506038166 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.691281206 seconds)
    (116/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.402144155 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.058073737 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.457622314 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.350070174 seconds)
    (120/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.684950664 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.52622253 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.353113968 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.40047761 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.377209472 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.690100568 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.410920974 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.771722871 seconds)
    (128/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.723030756 seconds)
    (129/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.368008419 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.901216452 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.375692022 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.381975274 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.830207334 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.409342117 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.352690458 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.855891042 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.37590724 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.352693364 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.60948626 seconds)
    (140/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.618486154 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.472672878 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.052392467 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.615767317 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.143996042 seconds)
    (145/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.553120442 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.453699716 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.398137088 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.480849636 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.337854859 seconds)
    (150/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.396922862 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.058806113 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.634943266 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.383476776 seconds)
    (154/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.417129221 seconds)
    (155/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.534235762 seconds)
    (156/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.64320988 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.367848098 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.573122653 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.549577565 seconds)
    (160/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.011027826 seconds)
    (161/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.460673486 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.708573791 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.046595869 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.39049244 seconds)
    (165/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.550883115 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.360761094 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.970337443 seconds)
    (168/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.71747582 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.341482608 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.200870575 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.144476543 seconds)
    (172/309) benchmarking ("sort", Float64, false)...
    done (took 5.619222913 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.844156141 seconds)
    (174/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.435976032 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.640423501 seconds)
    (176/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.480591979 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.757938409 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.35449659 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.480516125 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.355012063 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.443143396 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.88754269 seconds)
    (183/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.528680135 seconds)
    (184/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.373379543 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.425849434 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.780832278 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.082110451 seconds)
    (188/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.85476531 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.349321208 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.412583302 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.390012323 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.379906417 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.40734943 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.195084286 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.254246987 seconds)
    (196/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.058103259 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.170713006 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.350204781 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.364156249 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.227218011 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.789691449 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.432910222 seconds)
    (203/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.8389409 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.767725232 seconds)
    (205/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.374226255 seconds)
    (206/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.360674679 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.470932066 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.164468904 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.480328201 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.82451963 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.586713613 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.700067693 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.418861722 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.380570536 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.665689919 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.96776416 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.570416154 seconds)
    (218/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.365075334 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.36109286 seconds)
    (220/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.673901922 seconds)
    (221/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.502534306 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.063613782 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.692950799 seconds)
    (224/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.919855389 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.370082613 seconds)
    (226/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.392486369 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.38714844 seconds)
    (228/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.94865857 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.350256994 seconds)
    (230/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.658381721 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.448623867 seconds)
    (232/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.518809516 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.380929508 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.406497452 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.052395746 seconds)
    (236/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.39041663 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.947456911 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.361682583 seconds)
    (239/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.374879362 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.972238183 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.934979787 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.686672861 seconds)
    (243/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.419529118 seconds)
    (244/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.369568435 seconds)
    (245/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.692501297 seconds)
    (246/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.701247929 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.862113196 seconds)
    (248/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.365385923 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.35861472 seconds)
    (250/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.70776034 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.64038916 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.455852382 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.732997199 seconds)
    (254/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.36447624 seconds)
    (255/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.351642388 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.364090685 seconds)
    (257/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.062488021 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.142061415 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.551125209 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.155050945 seconds)
    (261/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.596681984 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.35470091 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.454111734 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.378027951 seconds)
    (265/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.126075795 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.743798266 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.633550597 seconds)
    (268/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.942821025 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.633837027 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.078223649 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.353728802 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.763424124 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.353971173 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.508429738 seconds)
    (275/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.429446912 seconds)
    (276/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.41397496 seconds)
    (277/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.941767598 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.432819683 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.589686116 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.349067462 seconds)
    (281/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.862805918 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.433434053 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.627001682 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.17674078 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.475911733 seconds)
    (286/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.431824312 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.140741656 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.374610718 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.336255931 seconds)
    (290/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.340947556 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.508417815 seconds)
    (292/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.441037327 seconds)
    (293/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.427882063 seconds)
    (294/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.343159927 seconds)
    (295/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.458847483 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.686355134 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.432666982 seconds)
    (298/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.692576833 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.381115739 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.881657794 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.551838546 seconds)
    (302/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406760456 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.983372844 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.339753648 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.122444008 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.350964321 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.364950849 seconds)
    (308/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.341145719 seconds)
    (309/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.384901275 seconds)
  done (took 923.363117441 seconds)
done (took 924.708141571 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.374175674 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367732467 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.351508763 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.374895202 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.462175723 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.384694565 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.36175849 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.355177842 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.399477507 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.399817905 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.351617696 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.385167873 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353524711 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.349586845 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.349018347 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364120194 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.275041353 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.35049089 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.366800761 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.359848553 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.365008671 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.345760101 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.39677141 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.379865409 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.351462507 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.351120875 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.350644422 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.366563597 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.459884815 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.349851133 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.351144178 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.358572006 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.279795323 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.347693524 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.341735994 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.366450517 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.359140909 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.355964147 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350537577 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.379905785 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.643654349 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.350130607 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.347974783 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.348198709 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.347262238 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.35199869 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.34892888 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.35384764 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360530114 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361168205 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.650359779 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.365610242 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.351627115 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348990068 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.358653835 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.348128571 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.351530655 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363570882 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.366198434 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363339396 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.265871508 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.353917555 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.349502472 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.365368833 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.356051534 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.672812799 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.344973645 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353193295 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.645193362 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.353428085 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.674107431 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.358510825 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.34992864 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.362439446 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.37980978 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.281813158 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.346440401 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.347240629 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.356768439 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.346189946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.358539146 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362773289 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.353806803 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349566765 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362763247 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.381778353 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.359526803 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.350195626 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.358515824 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.369602446 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.357409565 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.360889748 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.352666473 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344908247 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.360181352 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.353552885 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.352937486 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.35315367 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.354714785 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.361409388 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.648249251 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366572367 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.346847097 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.347102914 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.350319252 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.363980949 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.649374211 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.351359743 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.372815508 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.39859373 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.352249306 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.281716886 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.356489071 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36616735 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.36003171 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.353664323 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.346140722 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.285172665 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.668432938 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.368225201 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.352620012 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.350167329 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367142104 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.352018279 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.34817066 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.292039843 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.354489818 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364824045 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.472688771 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.363156143 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383497829 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.349916008 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.354638265 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.38470203 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367560895 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.383633718 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355217089 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368336166 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.367603691 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348778007 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.361999837 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.362743519 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353416972 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358379518 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.34693537 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.381081817 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365594325 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364510627 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.373929114 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.473962015 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.350769723 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.285867344 seconds)
done (took 226.13437549 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.411458728 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.3454693 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.450399073 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.348793218 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.44494493 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.443951566 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.345063563 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.345530484 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.34522832 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.722077989 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.34550785 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.343337053 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.345524968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.343968312 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.426778197 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.344319163 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.341779413 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.683191732 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.345306468 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.415567939 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.344943703 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.342926522 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.344621693 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.726115576 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.340819079 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.337085726 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.415944573 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.344210953 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.690104831 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.337804404 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.339826801 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.69101413 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.434408617 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.362020983 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.354723106 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.351475329 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.442344679 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.361385412 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.426104369 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.425376993 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.446810768 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.385037398 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.345285443 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.343505735 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.346179903 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.34655688 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.343609186 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.372216133 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.343709019 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34461609 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.684338465 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.355972991 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344100736 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.345577128 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.344652615 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.375437459 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.344765947 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.346738934 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.436430684 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.347792699 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.409029134 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.727910133 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.722748401 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.347522154 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.344493671 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.345199292 seconds)
  done (took 149.278379875 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.411851353 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.419434838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.453623086 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.346932684 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.3956927 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.458559921 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.348423902 seconds)
  done (took 11.116278635 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.354664724 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347257793 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.398980982 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.398212413 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.347198566 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.495317301 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347468204 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.360180633 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.344457202 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.401490912 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.348222243 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347619784 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.354298349 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.347244228 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396251805 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.359678431 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464546826 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.350034909 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.34745608 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.506542778 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346380742 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.35517398 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.401379727 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.360683924 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.348954593 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.357154664 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923331738 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348266694 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346257872 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.348319956 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34467836 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.387498343 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.348842703 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.344623225 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346187275 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.466776012 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.349696731 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345968654 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.349713159 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.34962932 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.350117322 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.349199402 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.349627255 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.346922808 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.349884588 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374928249 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.349947996 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.349272699 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.350021303 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349652353 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.400682341 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.350664512 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.34679059 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.347010019 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.406262731 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355738494 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.350328264 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.347239555 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.350100659 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346875299 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.507307562 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.399990827 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.350890633 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398544461 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349989443 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.351859159 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.350423602 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.349531138 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406374168 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.349906733 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.400102458 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.347699326 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.505493617 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37512617 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351916228 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.353479568 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.3547221 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351739914 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.345207272 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.358230148 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.347944759 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.353648994 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.358403117 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348754293 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34802307 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.454434474 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461837133 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349070292 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.365821348 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.35950174 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.348995866 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.404330203 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.352081592 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.349111524 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404277383 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467634763 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.40653707 seconds)
  done (took 154.832807061 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.357811961 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.361051833 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.353297506 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.367427747 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.352603596 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.351727652 seconds)
  done (took 9.430166643 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355488455 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.352819807 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.351851495 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.352782136 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.352305315 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353788137 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352557493 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354101906 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.355470905 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3527583 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.771045513 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.353714402 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353709168 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.352760739 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.353137112 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352460005 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.353745151 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349741425 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.352106127 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353298903 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.448589904 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.352458428 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352875232 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.355705225 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.355945504 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.352894206 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362129885 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.353286027 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.353222071 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.361630317 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.355550298 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.353889809 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.355395356 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.358777558 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.356318569 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.356377522 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357122364 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.353913836 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350679291 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.353927971 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.354053153 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353852348 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.353627367 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.355258721 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.357116064 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.358735215 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.357884393 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362945315 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.353846834 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.355303531 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.354340838 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.353692741 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.354499184 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.354822376 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.359929045 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3591548 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358100397 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.355409718 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.354452499 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.356356641 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.354478043 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.354537047 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356918866 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.357637885 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.361431693 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.356235409 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.356472972 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.358657667 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355469729 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.355075391 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.356367326 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.352388097 seconds)
  done (took 100.369013233 seconds)
done (took 426.310281647 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.811425754 seconds)
  done (took 8.101218119 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.50231541 seconds)
  done (took 7.793596652 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.819125905 seconds)
  done (took 20.116910594 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.404579146 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.462735645 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.365311473 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.356877628 seconds)
  done (took 26.879783898 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.545229293 seconds)
  done (took 7.835145857 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.34841358 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.362633276 seconds)
  done (took 14.002618349 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.867757081 seconds)
  done (took 8.157838569 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.167790505 seconds)
  done (took 8.460767884 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.377189663 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.372876698 seconds)
  done (took 14.050499951 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.336088559 seconds)
  done (took 7.62873003 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.025014225 seconds)
  done (took 8.317727692 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.354682128 seconds)
  done (took 7.649369383 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.390849143 seconds)
  done (took 7.682727844 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.706694018 seconds)
  done (took 8.998628171 seconds)
done (took 156.965538782 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.350898813 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.353308618 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.352600496 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.352398917 seconds)
  done (took 26.702608953 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.39122878 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.39239871 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.393908904 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.403884402 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.394103095 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.391538525 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.386188565 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.384170419 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.403939312 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.395326012 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.394588162 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.395018683 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.392526511 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.385691267 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.3942222 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.394184696 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.403417391 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.394058201 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.385274804 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.395880381 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.359710459 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.40322185 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.395362235 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.360061573 seconds)
  done (took 34.683827401 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.557840507 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.431493754 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.513771126 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.412034432 seconds)
  done (took 7.209640875 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.412190182 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.412826996 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.424610745 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.46398381 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.487969456 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.421987936 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.385712369 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.381094169 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.367734022 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.413661228 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.48804222 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.429547962 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.49635855 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.359417582 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.565160795 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.360016766 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.360257719 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.411277604 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.463865335 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.477626856 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.360593334 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.411669512 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.4145725 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.4314581 seconds)
  done (took 35.497382252 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.358655454 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.36837955 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.36531429 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.360211643 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.359756086 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.36133724 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.365426895 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.360467953 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.381253418 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.361619703 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.358944941 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.359140058 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.359405499 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.36086768 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.36090679 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.372544247 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.373943165 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.360445536 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.362229694 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.366392806 seconds)
  done (took 28.572491354 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.354287399 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.209521172 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.706812486 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.610435512 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.355132759 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.355905358 seconds)
  done (took 27.888188116 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.425213608 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.544873894 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.360395566 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.691369937 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.76955803 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.363195861 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.362624343 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.577731042 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.863370922 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.865326273 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.416877876 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.424986411 seconds)
  done (took 19.963692146 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.368797754 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.358717013 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.37096062 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.374461661 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.412900026 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.366877033 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.369975343 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.356217329 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.41587848 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.419563645 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.366684807 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.413448534 seconds)
  done (took 37.892949543 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444631229 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.454569655 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.20771921 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157792084 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.73223409 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570162765 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.129291273 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.809605242 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.360073734 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631724445 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3573877 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448773412 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612517457 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35852969 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361344277 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.340382054 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583028121 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833579951 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356501634 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.222623792 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383794141 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369106801 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.388738447 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.385033478 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568849724 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.493362275 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.619978309 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357415714 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626642387 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370324878 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368756042 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357996032 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631627745 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992178253 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451063098 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368460014 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.125544351 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.069204002 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.35321143 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.314408473 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.137936032 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36185038 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370695431 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359141363 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292380095 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364281577 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817346941 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.363727178 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.071026287 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359702022 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369452665 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454582098 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.363325683 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.174620651 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439803246 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359737726 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.357179995 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366592953 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933920423 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.697191599 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366864421 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.29721749 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.46665273 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.302563028 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991300215 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.45996633 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.362851133 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364548676 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294178905 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.311234325 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378942724 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507177983 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.381122789 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01118674 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058704974 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.360964339 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290599847 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895188687 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36357595 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.298890544 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588015649 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359769414 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297214582 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.310875217 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294956933 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036765782 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366566082 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.694844617 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367165465 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813104743 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.371679641 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381109324 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384490307 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584461386 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.248431169 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362320438 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.140592957 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52477419 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382763376 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.815371837 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296590393 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.365851476 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616220824 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.574935309 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365111859 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.349739531 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571769409 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361733819 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.379910878 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365983105 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.374609408 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.950463625 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372997976 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.701574613 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379424359 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362470823 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079618827 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363200147 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.464341283 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372691178 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598057797 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.123601304 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361763504 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444463584 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371492534 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363372929 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.340516179 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878271566 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.363870822 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.365095525 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36300095 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.392923779 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.362889081 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311539478 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.363373364 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37365987 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.365981864 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587415098 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363211413 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641847145 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298461455 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517681561 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45753422 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.585227164 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.517378429 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.3628212 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620995434 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374463137 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36676673 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377253861 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382673392 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462717312 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385537084 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.371527441 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621608317 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.369177043 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.369110505 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.364507276 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367669785 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364426302 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.369373859 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266740468 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953303406 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342231487 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372610276 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254995874 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.379570234 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428864274 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369779665 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.374207489 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.065053 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.242202546 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.370124175 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.366525877 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589664134 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375192131 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.322424792 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445766704 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.569913968 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95635417 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378891222 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.29963006 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.07704439 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.05871029 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366128624 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300886883 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366048369 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375325505 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377020575 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.592052411 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.957464561 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366608856 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.253320432 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.37237788 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376631007 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.371648134 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366085749 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.037830265 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.725758704 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369618568 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.380005576 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510808309 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.380891292 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302903421 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.370778036 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372885851 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367631089 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36804612 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399870779 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.254928304 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848422929 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625137526 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.171245481 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377994496 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.416032281 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.397745952 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.366859025 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209360121 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39005926 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.384178656 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376891695 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.378326547 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.305628519 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.027835979 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938439676 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088609799 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911249329 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325662843 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.372670179 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371702592 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.828212225 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302363293 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924984411 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545451527 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.827695115 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312648935 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575990948 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.527672785 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089436368 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379952245 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596118795 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301372143 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.212214001 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399775014 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580100227 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402998114 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374809577 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300275481 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.655624657 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634394439 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.185749894 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4478219 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826044078 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.213793056 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38994259 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.368151038 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662771453 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53575163 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.078117089 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.542103347 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36937787 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377909279 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85036405 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377936932 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.595949985 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005634235 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375455352 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.57833545 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305994576 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.380466954 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.379888906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.37234048 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.556805545 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.370658739 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.624557851 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380519113 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305173312 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369314394 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920240196 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.227694467 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.376845278 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371364117 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082363404 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382009441 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64228712 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.376774703 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.049098904 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376455113 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305981573 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305637547 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.064813555 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377078747 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353132111 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845480631 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.460810764 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437155766 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398120401 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21448317 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624962751 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.384696745 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.961576319 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594385345 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.234879351 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393345369 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.472364431 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.259617819 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.378983203 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371844389 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60756754 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277119463 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595283576 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.245124586 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.279312682 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371961706 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584023025 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37147348 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378886892 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605704354 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.084827211 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.375978088 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091905267 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397656134 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372383854 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289194685 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480003315 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379971162 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451011056 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383109136 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.38381624 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.382771715 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539738528 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373003366 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374657296 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.386405898 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466101971 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.745895824 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.058512539 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.378667537 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970589678 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097294286 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97065916 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385164967 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3732813 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37967848 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307910457 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522122497 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.600095255 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647194418 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50507799 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.518142062 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395203099 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229449946 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401571332 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58748372 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649214167 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26839756 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383608101 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387693192 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.374304905 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38439675 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.584104428 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855791077 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91260478 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490438154 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373260978 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84834723 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648043416 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374513992 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374197633 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967455987 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.380617477 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.668961117 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.37969623 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374426461 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537589995 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382964236 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01304272 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.384374486 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.537235171 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.148365926 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.332511055 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631503609 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.800589039 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.386959509 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97090634 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086221028 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636187708 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441276222 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384970813 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.47768273 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522249508 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.376042762 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376042855 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376771831 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221865975 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.085824641 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.388620895 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976093315 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637953952 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.372867631 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.377872252 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402799939 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.386361644 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59964817 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058328441 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598730153 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386642795 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382519836 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192141267 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976386195 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388193468 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310754225 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.380759297 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607357136 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614444973 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399961302 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.8297245 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.088741556 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91554252 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.347944626 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400323338 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386941619 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096056223 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974509883 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.064758124 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860289989 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93643575 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379751089 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651961233 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.381898392 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390885453 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656168434 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.38102121 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377120271 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391179444 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.971678371 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109959398 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.38428052 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.283120516 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.317408585 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718110953 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086962599 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314629192 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389249206 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.561366566 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378092829 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509951679 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389333677 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.376311836 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389373042 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.11473516 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663926314 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.384508082 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.383531317 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.292291983 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39304385 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388657453 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647387948 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379253106 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070852829 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.730485644 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633165248 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386088425 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.366558101 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.382731657 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380588825 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.367142269 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.576077891 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.606158225 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920502496 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.382157282 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.392061532 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384347344 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.595921231 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591931593 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386836291 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393756734 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379336333 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397585028 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.285762733 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.888497099 seconds)
  done (took 1605.84168671 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.413655715 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.384555743 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.381887113 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.429094701 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.400316522 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408702516 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.45999759 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.394158458 seconds)
  done (took 52.591925434 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.379858955 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.588566365 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.409136736 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.388530328 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.391419807 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.390991101 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.801419405 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.39411735 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.38948732 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.39122664 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.381222539 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.382820612 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.991528269 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.389916412 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.391914121 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.369518898 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.389390272 seconds)
  done (took 66.141978749 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.385393915 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.751536795 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.465975135 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.399974394 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.190592686 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.398729186 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.824744725 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.454155911 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.394679717 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.534105016 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.031766816 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.430007778 seconds)
  done (took 84.5843275 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.386799428 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.387727725 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.388406299 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.388042675 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.387279838 seconds)
  done (took 8.260239007 seconds)
done (took 2037.125537117 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.639860864 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.065015366 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.010936379 seconds)
  done (took 5.397614848 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.530939745 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.58020399 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.701328672 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.712206243 seconds)
  done (took 7.847998117 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.710170985 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.757496783 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.596289308 seconds)
  done (took 6.386781131 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.725053106 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.396490685 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.458532809 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.384203374 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.383964035 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.384752657 seconds)
  done (took 20.478295774 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.387700133 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.390376325 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.387714804 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.390724532 seconds)
  done (took 6.879851269 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.371442031 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.114868657 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.372183757 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.385324284 seconds)
  done (took 18.568254638 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.144496208 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.146257237 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.130846133 seconds)
  done (took 7.744986527 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.397509783 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.230897072 seconds)
  done (took 9.952714024 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.69643991 seconds)
  done (took 3.020007056 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.519480248 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.654144776 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.461328426 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.314884417 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.486305116 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.934884263 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.907920634 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.533953992 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.30736183 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.402559105 seconds)
  done (took 27.847489605 seconds)
done (took 127.665845151 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.99493817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.766749327 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.582269979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.968371241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.610330718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.580862297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.601531609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.937960257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.476836146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.471097959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.011938262 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.60857408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.556433356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.765985802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.553087616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.387024764 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.607503003 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.03750364 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.650710699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.851210895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.603645345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.605091482 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.837571409 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.621556689 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.607995457 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.538857599 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.184827538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.626573398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.820958559 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.198580458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.53853335 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.026882486 seconds)
  done (took 189.558370649 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.386933337 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.386266262 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.386270262 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.386611365 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.385946118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.400548178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.392172382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.387227667 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.386482709 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.388074936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.386788625 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.403374736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.386849659 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.386311098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.387487672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.395146591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.387033677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.38741112 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.387697129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.386161174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.387205724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.401102599 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.387498675 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.402517814 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.401506995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.387345759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.389876205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.387509251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.387313254 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.408013788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.387320137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.387174106 seconds)
  done (took 205.824408736 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.399198079 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.388145393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.387558996 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.38678405 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.391286051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.388230132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.402903508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.392869197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.398023214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.391633556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.398842803 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.388377477 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.387349474 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.399775925 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.390549323 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.388907604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.393160819 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.393562238 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.387977507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.401160049 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.390238333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.389656991 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.394639578 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.400766449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.387794096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.391678177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.402022619 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.399708198 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400995095 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.399038291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.391327511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.400409794 seconds)
  done (took 205.933413687 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.592198482 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.396462605 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.396970619 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.350950798 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.3972943 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.396962391 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.390092237 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.585656657 seconds)
  done (took 14.834132073 seconds)
done (took 617.475350868 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.590843235 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.316852598 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.592073538 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.417224905 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.117237846 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.417998343 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.416109638 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.577791731 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.887236917 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.562604488 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.626401157 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.414297527 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.752230698 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.415006888 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.65699186 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.51251194 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.269354349 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.370352158 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.7189206 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.890980249 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.663765593 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.908604628 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.577696435 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.925375808 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.7503578 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.930539429 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.108353722 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.261926613 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.4090488 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.709509229 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.941521646 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.322175801 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.463156857 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.446278711 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.499835303 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.482457168 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.325917675 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.444778921 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.589265496 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.668276958 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.887576903 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.664085139 seconds)
  done (took 94.834998226 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.379520297 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.379556608 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.378751378 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.379788966 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.380453253 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.379918258 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.379117888 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.377966407 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.380605989 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.378772612 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.379062866 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.380755594 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.378586357 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.379509717 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.378692832 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.37907439 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.380089135 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.381348327 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.379520642 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.379207454 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.380095856 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.37930653 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.38043149 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.380552636 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.380674545 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.381630001 seconds)
  done (took 37.198868744 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.39182148 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.618824796 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.790521755 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.398156448 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.392787197 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.395764131 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.464741131 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.392698733 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.396105718 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.395434073 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.54004204 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.395360953 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.425037323 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.813152785 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.396994444 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.39309376 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.393069747 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.392533367 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.625464099 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.402704056 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.482764097 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.395191372 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.465297432 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.404896938 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.412206463 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.39385327 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.397611553 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.886207079 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.39710047 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.541078486 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.131083929 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.464649041 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.840526389 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.802190007 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.129651463 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.397069622 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.394380804 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.545282999 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.39640507 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.394994641 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.466577247 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.395723126 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.801446358 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.018046172 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.41173866 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.394401572 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.907844734 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.546085892 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.625538592 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.402706539 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.821291044 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.403922715 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.402690438 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.403960938 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.633227159 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.409479814 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.401691907 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.920525544 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.423030235 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.473699524 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.404377568 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.403022917 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.643241239 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.403076793 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.629410315 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.404697897 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.411495059 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.402033207 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.808450539 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.405519714 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.031460842 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.419485699 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.403877988 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.550395799 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.631952642 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.944922815 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.407412165 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.646655385 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.857799149 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.474552278 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.408378031 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.885484331 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.478451953 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.408044794 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.405652041 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.405567879 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.403607291 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.447566319 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.474460725 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.965552586 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.025605165 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.937058712 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.493874388 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.416580624 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.40373766 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.922628558 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.420293104 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.40508066 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.80312228 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.037283392 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.412834161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.405757237 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.015329201 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.414612039 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.471018936 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.40392592 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.807492839 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.406133698 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.448836876 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.40630817 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.413455126 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.409314585 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.479155201 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.409544191 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.406265267 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.012654759 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.573793605 seconds)
  done (took 182.60870683 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.398399789 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.411420316 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.399024597 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.397373093 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.397391318 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.404161129 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.39722736 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.399045019 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.405659279 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.399722971 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.398433885 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.400223428 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.401001835 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.41180127 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.408516464 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.406822905 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.011454651 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.403575991 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.400053147 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.400812177 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.184654204 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.402080444 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.405353683 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.398757211 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.40044369 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.399901381 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.431615633 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.402380858 seconds)
  done (took 154.017394042 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.408979156 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.935619876 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.410833963 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.52987544 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.427536766 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.404022789 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.528575357 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.461039166 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.409855149 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.405420959 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.405366543 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.687624284 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.408882328 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.887333747 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.584659981 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.531892883 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.885329347 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.409547781 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.405482311 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.408373179 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.531441651 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.417447784 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.689093729 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.93402728 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.410674262 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.935716735 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.398437017 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.410272516 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.407804726 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.93788319 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.407258629 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.691300348 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.480391578 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.463271938 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.938658455 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.891646691 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.897130854 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.548006744 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.407923749 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.407526663 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.406976277 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.397340392 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.939519431 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.410573293 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.409688006 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.93530484 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.424455581 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.409882419 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.418597549 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.406253221 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.464512006 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.465228156 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.695108983 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.943037731 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.481735237 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.43011746 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.532157419 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.766208852 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.41169221 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.889619535 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.397236346 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.944562298 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.413300663 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.39787264 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.409069714 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.415524562 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.549040757 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.533250823 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.890371161 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.410772553 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.891306585 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.55141387 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.40971644 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.410096414 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.412517212 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.942760888 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.893698035 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.550715926 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.535763459 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.592085358 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.401079231 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.410534221 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.399678762 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.483426726 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.411007816 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.94531915 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.899320367 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.414447596 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.413600818 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.413240198 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.413446555 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.576777521 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.945796422 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.485190543 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.88938357 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.712070262 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.697420765 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.413589609 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.466834332 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.410974244 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.698568866 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.413544047 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.465612856 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.827742344 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.697878103 seconds)
  done (took 166.182835139 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.639619144 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.528779491 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.500834942 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.51802843 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.92734939 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.983775785 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.535243061 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.533530927 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.515198966 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.651315393 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.497713356 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.502279823 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.587399464 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.482893921 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.069404279 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.472534894 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.498988378 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.543431848 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.516315611 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.377680483 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.009610712 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.693607173 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.574253933 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.333695948 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.501327802 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.12616709 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.145276168 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.923544803 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.572218758 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.591672224 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.908214507 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.528030531 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.315581677 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.053582961 seconds)
  done (took 66.505849825 seconds)
done (took 702.678568925 seconds)
SAVING RESULT...
DONE!
