cset: moving following pidspec: 6279
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.33215346 seconds)
loading group "string"... done (took 0.477737746 seconds)
loading group "linalg"... done (took 7.71872252 seconds)
loading group "parallel"... done (took 0.174677695 seconds)
loading group "find"... done (took 1.183631324 seconds)
loading group "tuple"... done (took 2.144987474 seconds)
loading group "dates"... done (took 1.359804302 seconds)
loading group "micro"... done (took 0.251032774 seconds)
loading group "io"... done (took 0.672856886 seconds)
loading group "scalar"... done (took 42.523057714 seconds)
loading group "sparse"... done (took 13.177076809 seconds)
loading group "broadcast"... done (took 1.156466892 seconds)
loading group "union"... done (took 14.493120808 seconds)
loading group "simd"... done (took 4.804057128 seconds)
loading group "random"... done (took 10.025970761 seconds)
loading group "problem"... done (took 2.023679651 seconds)
loading group "array"... done (took 22.718224599 seconds)
loading group "misc"... done (took 1.470100359 seconds)
loading group "sort"... done (took 3.614832799 seconds)
loading group "collection"... done (took 19.627986953 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539641902 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141971163 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137830808 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.153510341 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211389082 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.148757203 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161793394 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.118169963 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.001021925 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.193800896 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.161687676 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.527478094 seconds)
done (took 5.230300859 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257331279 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096130672 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10652827 seconds)
  done (took 0.875200843 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080041754 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149830482 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098134283 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.081456426 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098891564 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083510627 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.098409208 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095948978 seconds)
  done (took 1.384084414 seconds)
done (took 3.28000932 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732221555 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286128821 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206503032 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46732943 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.20081421 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221520005 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687389989 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.357897938 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.262449219 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10364914 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.149176095 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.397217003 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140933836 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688982227 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091971263 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12885147 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.182176036 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.473086402 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086705279 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.114076694 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119939444 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14496538 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.133557179 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095938408 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.190344004 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085833203 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.202705715 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112115048 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082370983 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.299899055 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.204848284 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690540111 seconds)
  done (took 11.056006374 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11466947 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139967588 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101400975 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141778536 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139885891 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102756645 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087767444 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100130082 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126501082 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181008179 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135728634 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126152707 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098780019 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085164463 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.120114697 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248521883 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122138403 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.108114016 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104431231 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108399267 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127507513 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.117837205 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.113507927 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096766335 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171784277 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225862876 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11627633 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129844201 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101389228 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116704033 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146414741 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147946038 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.099230042 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083668672 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179079529 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.130101681 seconds)
  done (took 5.289130025 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195483271 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124974291 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175715738 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.169133161 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145866976 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166198381 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118018758 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255357258 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.121476157 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166942162 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145824899 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118649592 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083784295 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.102453278 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099936329 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.624535757 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169591916 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121003609 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120819887 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107605628 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090913196 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368984522 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10748649 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09977393 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086184008 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084683398 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165981894 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085487242 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.153834551 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126765425 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104807005 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140745876 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204002645 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12795192 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122287819 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101309121 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080538518 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.202076146 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09149217 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100448788 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107062479 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140082944 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.14086814 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10220073 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084200545 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.228205217 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084228943 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118601743 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.953851704 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184355036 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144526689 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082999286 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331592821 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116840751 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083942233 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098740572 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.253168481 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136720228 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102643533 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082813679 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101159459 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084203777 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.403689827 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084941017 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.646708255 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.091388166 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110657694 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086125941 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101120968 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108303814 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092050349 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119327078 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083337633 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.103196536 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082759553 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099902272 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08499962 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114504458 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.12688334 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105860643 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085337843 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166367763 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083730738 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119549439 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130486713 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088401229 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099370272 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135100197 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087830172 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102384749 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122445508 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10230262 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080164113 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099392889 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111329293 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101896888 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131236568 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100922938 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.174468522 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082230815 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129788384 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102729912 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118558431 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097881288 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11404224 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085262753 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10584761 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.08093392 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098712544 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152311173 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098253316 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083792794 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103232854 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113569242 seconds)
  done (took 22.91770409 seconds)
done (took 39.938461404 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.341503877 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107845898 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108250421 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107675913 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105572898 seconds)
  done (took 1.520243647 seconds)
done (took 2.244711427 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.293960895 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.180939428 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098941155 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.176609324 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079399768 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201759084 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.168048739 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11644583 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.192167156 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097172973 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.171481994 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07954374 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09769587 seconds)
  done (took 2.701541436 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096628516 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11956451 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085090675 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114706021 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079110378 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114919561 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096445307 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121882602 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113903217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089460289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09732756 seconds)
  done (took 1.848341737 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096308942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117809255 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08502234 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113587181 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079720166 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113358277 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095887106 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119876746 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114754771 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08908421 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097327477 seconds)
  done (took 1.843900244 seconds)
done (took 7.107992544 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.094132611 seconds)
  done (took 0.808064119 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.041670614 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.340689391 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113537036 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.156979448 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.334013494 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.202389316 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.568597536 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128688732 seconds)
  done (took 15.798626179 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.118350983 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.107135748 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.119929529 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089333762 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10539463 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086448767 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.106353445 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104933376 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089538287 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.104492619 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08809291 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105887197 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103351285 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087443976 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106628767 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089281817 seconds)
  done (took 2.393732862 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.124285317 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122383016 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111656185 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113621212 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090923754 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110004745 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110508908 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09357908 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105427963 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.108558755 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095606532 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110173923 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107985146 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083505929 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10987373 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.114706746 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090018453 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109321698 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112708735 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.093612366 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110442995 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101045795 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091285567 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110227422 seconds)
  done (took 3.364536587 seconds)
done (took 23.085136208 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163841002 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113573073 seconds)
  done (took 1.003358764 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098583498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118000008 seconds)
  done (took 0.949573927 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100306943 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099699684 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12830527 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114712731 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083109858 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100417615 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124070781 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084136704 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099892707 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08437749 seconds)
  done (took 1.756698554 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083944726 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.114603608 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.106852228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099588899 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109748792 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09876794 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092736416 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102908218 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115444448 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080191696 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106694088 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.1185771 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089279439 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121225511 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108940209 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087667987 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107494846 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102886144 seconds)
  done (took 2.584347859 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081136274 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101983288 seconds)
  done (took 0.918525319 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082429083 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098521034 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084760214 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101910102 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098093142 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079772694 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098353512 seconds)
  done (took 1.378484862 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487342572 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140505696 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262133392 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088098232 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126229379 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.315628656 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100047078 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.088587946 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107434679 seconds)
  done (took 2.509148219 seconds)
done (took 11.832597996 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09525864 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.122404957 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116632445 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.476748546 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108853389 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096904384 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163468537 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.260410553 seconds)
done (took 2.183780454 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152013065 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330804827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117999551 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06919132 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.100298119 seconds)
  done (took 1.358840705 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081535193 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104657122 seconds)
  done (took 0.926173916 seconds)
done (took 3.175309841 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082534982 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.101088271 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080645886 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101871061 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.080415239 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098900268 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083118711 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.136382016 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.101746611 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.082887141 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.103383021 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082862268 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100444348 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080768268 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100656772 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08075015 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098513519 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081848151 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098892903 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081477128 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100643799 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08091281 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.098437222 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083710823 seconds)
  done (took 2.997280685 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10275707 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102715275 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107168623 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089153999 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10549728 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089607361 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106349802 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.102436689 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089642214 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102943105 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105374413 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087670175 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104777097 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087569389 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10390176 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105204173 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090089635 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101850754 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086114941 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104900501 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107477659 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08380824 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105420979 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107179044 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087706421 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105431843 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086529399 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101496124 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108216105 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086817497 seconds)
  done (took 3.700798161 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086694403 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.098160961 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081878957 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106127624 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081155743 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101789149 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080793512 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099504387 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082217582 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099033476 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083168852 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09831633 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.081604653 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099443625 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.100734359 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084320009 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112638751 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081955543 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099323795 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08141328 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.103938342 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081820813 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099262498 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080823103 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.099015461 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081442602 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099592002 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081805069 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.100108536 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081542766 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102183034 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085605448 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.0996797 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106614656 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084990729 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.099514383 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08596784 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.099030478 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082992703 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.098968508 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08100838 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.099662851 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081778703 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106038274 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081406046 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101561444 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.082255341 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100782821 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082967469 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102288733 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098815021 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081751791 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101389655 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083380112 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103769906 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081591095 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099881856 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081289619 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100392009 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081200708 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09872933 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081231726 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.10137014 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082369845 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114722744 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105894967 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082107726 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.101286382 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082439595 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.102214338 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.083780796 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113861849 seconds)
  done (took 7.427285765 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085206067 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110861497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084060518 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10145092 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079563778 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100593037 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103929634 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081814808 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101842999 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089599687 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100404878 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083163251 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101499697 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111939744 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082301694 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101668909 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089107296 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097597767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082181069 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102501316 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100338117 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085881819 seconds)
  done (took 2.827290613 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215058052 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108528809 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148225072 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112334979 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086463841 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110554886 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107242976 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090049141 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106889801 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08765966 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104301109 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106628797 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087440767 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104844348 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105016111 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088814522 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107315237 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089310246 seconds)
  done (took 2.720011003 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095354615 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103165528 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125783172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08419835 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.104340256 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087287891 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108549105 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113137378 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087385611 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102675874 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095064899 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104655254 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105125987 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085174082 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105067168 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085305408 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105202089 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103303198 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094666208 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108290218 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.109428375 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095107239 seconds)
  done (took 2.96764604 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099271962 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103897243 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123778708 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088060988 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099248423 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082942006 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110882245 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084441274 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.112148611 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.105020433 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0854866 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102039206 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.092151073 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102487295 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109939382 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085962653 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1054763 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085621887 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105795059 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08207482 seconds)
  done (took 2.72465871 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105263235 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103973244 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104916342 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095206854 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104750867 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085896386 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115166124 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104067715 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086834845 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13043973 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104274097 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085911507 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11554264 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109915047 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104452829 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096452805 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11442461 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114381633 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087273924 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103699727 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.243201989 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086706629 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114521329 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104471022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086847788 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104302438 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104894388 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09341392 seconds)
  done (took 3.772209723 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0828025 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100437231 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081776106 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.102028507 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081581686 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.10116627 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08263369 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101011295 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08542316 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101230723 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085300829 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103044724 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085064981 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102624578 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085254791 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102208546 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087466138 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100364553 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082898613 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100413017 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084681406 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103317974 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085272083 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100517211 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082668385 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102223789 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083053285 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100076334 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102725999 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082345563 seconds)
  done (took 3.543808861 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093343917 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110870201 seconds)
  done (took 0.966765179 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081610377 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120070168 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082626538 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107051624 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.109458855 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085067041 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112606282 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091089741 seconds)
  done (took 1.551322933 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098815611 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115194356 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087230139 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117819782 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115896712 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100462232 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16690834 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10540214 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091466125 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101617557 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118199671 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083514397 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111414852 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086659282 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109819989 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091806357 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101016384 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092600523 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108035849 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10282237 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088127331 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1156122 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088805828 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100196562 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106260226 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096488733 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114476346 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.088145236 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107715439 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113619179 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092077529 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.098428888 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086016393 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10472983 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084893038 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113770355 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117987341 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08924161 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112655674 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08769831 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116430941 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099564702 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091875046 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110227892 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096030237 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104438346 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106278446 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081196014 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102180495 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088444543 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099453307 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086176929 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099013748 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094124345 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108559051 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118622739 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085174081 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.106586739 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089554929 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10747592 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092946872 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107024282 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106983774 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086079164 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111877604 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090457538 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111839299 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081419484 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097339625 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084601068 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112973225 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127774454 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09487093 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106871328 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10563343 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083837032 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107939348 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088576204 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112351663 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113045053 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086189638 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111977065 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094254426 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104073014 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107479893 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095727223 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.103062827 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089186991 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102586869 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120796628 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086375216 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.103076958 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083638451 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113823525 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090418849 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104601813 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083777684 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11544181 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.100127654 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087891623 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10672146 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087627343 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113644843 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112039178 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093978094 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.1133484 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09467903 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10520796 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089608728 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101448134 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106201132 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08920927 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112522249 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081066121 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10835393 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088705819 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106580445 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112914107 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084848976 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105513707 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094805442 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112178435 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085256158 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.102725897 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108540967 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087479766 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109947684 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093912426 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104479302 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081362926 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.1000662 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109554901 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087067319 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110196317 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092521114 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10787924 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080738448 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102087817 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110114911 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094552284 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10555872 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087471819 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111034255 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087941892 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104683094 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110842912 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089227173 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104478665 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091248241 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107645773 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.082569707 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110550827 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108422 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085047571 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109690155 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092907678 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108131697 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088551023 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104724353 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112321407 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089734908 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105061566 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086718371 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.104424358 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096530683 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.108963566 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101698081 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.084765054 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.113370927 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084268254 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106010311 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085707785 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108360572 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088736969 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103639874 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10474101 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088356092 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118467234 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092154109 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107956487 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111715237 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096851245 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10633546 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088438803 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105155177 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108266462 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087712209 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113636706 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092210134 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112072593 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088619673 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.102443561 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112227409 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094452356 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105184715 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.085422974 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103610542 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090605136 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112739246 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.109928768 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088233774 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103148488 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087641514 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109115308 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109213309 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087087241 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10470819 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092470569 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10511109 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095385616 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108537126 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115933118 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091480847 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.101050238 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092517393 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10469436 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112257039 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082583752 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103714359 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086357359 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108204699 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087175095 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108276075 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082212486 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112800078 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114745923 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086661266 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105071542 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087550278 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115452814 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088881201 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109266893 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090185128 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112374676 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119249453 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086977188 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109313114 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096455514 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106721744 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099714346 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093839246 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104238721 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086198853 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10448846 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085162982 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109689442 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116765793 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092317487 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099445837 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090413173 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105358636 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086231835 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102200793 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093486328 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109525333 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108066707 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096607238 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10773331 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087953259 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10977738 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107183719 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08900784 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107676864 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091704624 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108280026 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089255402 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105073316 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109128978 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086722707 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104170241 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089616904 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107030368 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088019341 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112750631 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089536353 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10757834 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110015212 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088893555 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10707038 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087834037 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106025625 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090766752 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107286179 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088149728 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109750883 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101423902 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096309658 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105692531 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095465097 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106458471 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085238707 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.113013124 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109697311 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.094386249 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107316731 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088948438 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108615803 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087702531 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110418385 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115335094 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0847749 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115718991 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09427821 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107285522 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110007861 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088133088 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108007153 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087127293 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108684317 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089029175 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106852722 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08768017 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111710728 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108932269 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087272347 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108525692 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089869548 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106260723 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089807686 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100505649 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086793237 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106532056 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088801521 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114605217 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108205919 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090442731 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104944349 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089520088 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10620598 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0839184 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.115765159 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117205547 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088529561 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115101909 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106600537 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089358374 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115926801 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08220793 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.105396565 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085763752 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104414011 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095619672 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108126616 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115494379 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088003069 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105981155 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085338203 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107694278 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086784488 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100855613 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085436847 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110499886 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10963405 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086976596 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107940794 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091156139 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108766126 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095788946 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106469184 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107886382 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.089464651 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104306968 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086074388 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106076486 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090872942 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109126562 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08555381 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104686645 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088397823 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.11737819 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088231113 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107403376 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107908955 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096079796 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107516851 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091529136 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111714863 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082983097 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110634418 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.107451988 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088111622 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105996121 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092579142 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111986682 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090153001 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114787375 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107875175 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088596226 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108070323 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086329981 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107539787 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088270731 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108006378 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087696891 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109872425 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117066062 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086175304 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109231273 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088143275 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.1082556 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09280105 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109674778 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110019416 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096867975 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110837167 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089910831 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113990494 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11265154 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091316737 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109190603 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090106535 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114204614 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086961509 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115677746 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.108156004 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.090178861 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10922551 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085147206 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106881225 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088673653 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106317222 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092240402 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.109457474 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.106698071 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087530417 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104655375 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090101704 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112504412 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096649974 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110478676 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111173817 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083525086 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.104754593 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090026979 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104569756 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089645903 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110580519 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094382696 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111063802 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.108852609 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087453779 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116456382 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094248064 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113301218 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086133189 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113693782 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109447368 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091384194 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10896689 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088668216 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109903244 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094259782 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110504005 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108006482 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097502036 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111678341 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089736407 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109319039 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088526343 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.108256695 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103917887 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090533424 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110510868 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095339165 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110676573 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087844962 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11835999 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107856613 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087835754 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111620818 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087281703 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114524106 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084357801 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109248139 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11007983 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089593765 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102675926 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08733354 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105532996 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091181519 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106771527 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083430931 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117842515 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115384661 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091699874 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10682914 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087484233 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103500117 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083914853 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107607461 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089465706 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110721933 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117887218 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087165062 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10687332 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084142891 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107376691 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091650805 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110809539 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084714609 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.10437724 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105900546 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090986443 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115449049 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087426332 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107726033 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092321453 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110284471 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086081825 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114105817 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.105344298 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092489148 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118886414 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.090603736 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108590264 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113411266 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097154858 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.109337393 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083834912 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109416955 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091014628 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.109040333 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109318799 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090215595 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123381114 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092165479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107350537 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08689019 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.11192712 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107473806 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095713971 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108949284 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089891852 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114184353 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09012625 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119795294 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111505821 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094497282 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110360252 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091215248 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.109327936 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109835892 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087855589 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106847362 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090359922 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.110306237 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094239393 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118514965 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107619882 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099496596 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116893506 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.093220892 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105165054 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087766913 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108506135 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104067614 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091141837 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106550189 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087851883 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.107115267 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088430513 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109216512 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095242009 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111219904 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110711693 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089185508 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103144469 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091296446 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111583771 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090875561 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106098171 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09043439 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110722521 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115394602 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097158263 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109323141 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090603554 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109549647 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089314398 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104970192 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095896397 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107347864 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111543991 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08777949 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109336272 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090857945 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112322752 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095576921 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110686272 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111142245 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.102909815 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11112393 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086505691 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105693695 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094010981 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108070868 seconds)
  done (took 60.815663306 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148904777 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083452994 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104250108 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084742035 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119761536 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105122191 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084273391 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105913063 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086682938 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107250011 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084712841 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103416063 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115639869 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131536188 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098304094 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110530446 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104415723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085990915 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104101318 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08611544 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114999707 seconds)
  done (took 2.985268348 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107209304 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121614871 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121099171 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126900019 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095410411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121238224 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120487891 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12176655 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10507163 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11643418 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125375296 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121119971 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.096728636 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116892504 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116685128 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099192535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126465154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115442935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122548483 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101651532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119142291 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120409079 seconds)
  done (took 3.351832981 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086670235 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108091144 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090516788 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103103452 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088721972 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.103693014 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092988257 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.106433184 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.09287966 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.108010969 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.106961388 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.087383849 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110595741 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.084732483 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.108104451 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086228069 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.160859041 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113783702 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088908492 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111420354 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.104563436 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091133939 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.104399899 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084528514 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107716589 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093478491 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110577387 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086589503 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108999296 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086497056 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.109909448 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.105962056 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090994995 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108730432 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087749793 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.107448114 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088516655 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108485196 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.084282488 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.107144054 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08973479 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.104465106 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089956845 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110653455 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.106683602 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.086993626 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.110535651 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089117099 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.103765892 seconds)
  done (took 5.72489481 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107226289 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166224945 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088638062 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150549776 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126702859 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119223574 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093328403 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149256599 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107401224 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087966638 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129928445 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12734108 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1101339 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.095196645 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113431492 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110523648 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092056042 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108505877 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.094575314 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110470207 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115473188 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.096518522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126219901 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124656425 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114822951 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088270998 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109216971 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116093926 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.104894102 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11664935 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115951041 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.096956687 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128739526 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.114192734 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088741689 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.114301275 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128974481 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110539519 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09244393 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.107472557 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.093268511 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115922064 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116883732 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.109989125 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111706272 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115560261 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090700994 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106855413 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125072333 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.092549084 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121284768 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126281432 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114791116 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090924388 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115685169 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127489955 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.090253798 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108591449 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.094190996 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.125211973 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108174833 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094972578 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12614367 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11323479 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119019572 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.106493588 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.116066716 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114617068 seconds)
  done (took 8.549679769 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095961275 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113166374 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127034966 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128885374 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097645629 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.118114485 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117335056 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.097290884 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118507371 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124424055 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117610648 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.143432184 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.092910957 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12203099 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118120511 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098287936 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118275631 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118599041 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097795327 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119184358 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118951594 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128577847 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097367208 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128870588 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.150494807 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112072512 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097807492 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118331837 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128550756 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117706786 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130839275 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.097931308 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11923218 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128868744 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131434068 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096825385 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110342805 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118294374 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.098036491 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117671565 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112952354 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108379158 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11879555 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113133055 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097749361 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119643474 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12891889 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132520004 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121972833 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103662729 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119029888 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128671898 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118377475 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097995336 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128092003 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.154818577 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128554993 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129548814 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119339028 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107622397 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129986736 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136936862 seconds)
  done (took 8.116019037 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111626227 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121104266 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.125647391 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106709894 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088033004 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115698148 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087819453 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.109191859 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121693151 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100536269 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124394944 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115949514 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119661888 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10432685 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116056576 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118840469 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095903071 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116024822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121250392 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116354626 seconds)
  done (took 3.066895053 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096126774 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127937549 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091501049 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119461034 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114805263 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.097450366 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113224873 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114867093 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091950104 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114157383 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10283965 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1254009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111196744 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098758046 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125592323 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117808673 seconds)
  done (took 2.59404267 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098485735 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122667016 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128283412 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090796629 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110931927 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107655696 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090518886 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.107508759 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087528468 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.129000473 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090613212 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.116872344 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.112092468 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089509973 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108666869 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094478239 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108085272 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08807261 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112618255 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.13017035 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.102944557 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110860232 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1129377 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.093044323 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111358059 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09554473 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.113539594 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.109418262 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089622524 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111280625 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091350639 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.120745721 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108065354 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.090163631 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109315387 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08915736 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.111616114 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.091296736 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.116658897 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110964329 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089176976 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110892567 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.091119085 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113272932 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.107691427 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.092347315 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.107778764 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097970264 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109768644 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090931986 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.112448243 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.115015418 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.092609816 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122247082 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115538089 seconds)
  done (took 6.617744762 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103250419 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114035787 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08578918 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109935212 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093944236 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115395367 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115891478 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094218463 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11402255 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088660435 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114575269 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0964726 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114592585 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117044883 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093197429 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11600051 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086633267 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113325083 seconds)
  done (took 2.723519477 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093302415 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108005829 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096342746 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110974168 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.091371206 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115115094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086152058 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.111693776 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110192632 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091365039 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112385417 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.09378446 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110111862 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092828352 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112143551 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09113215 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.115178259 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110449183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09147809 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107516449 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093387884 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1098069 seconds)
  done (took 3.094617623 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121935655 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.132150495 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.098507412 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.236025153 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.110219489 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.139517292 seconds)
  done (took 1.678515539 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113916706 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127339891 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113092593 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113834577 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122073027 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114878776 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094181364 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114467656 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126251982 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108133181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116618735 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125094567 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125926206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104012096 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123826813 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122406864 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115392591 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094354199 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113445349 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136370033 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094347484 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125549754 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114502772 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093643287 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115017115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125660588 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125523673 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130615215 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094412126 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126006277 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121071819 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094319025 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126051187 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131246041 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116597662 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104857703 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116719681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136520376 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122028382 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103957673 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115440423 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122549203 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104256125 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123357068 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12533418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11505305 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100465832 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115419729 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115119704 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144409116 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101614521 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125323513 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12285318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125746915 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12558668 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142808486 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109526154 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126009731 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122888092 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131411777 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124651491 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100916283 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125293967 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131709513 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122490124 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1254255 seconds)
  done (took 8.635313798 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105092051 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130676367 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112244332 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127815959 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101846448 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115064215 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115395458 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094114525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115420029 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113695661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161793211 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095158403 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125435559 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125682349 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115399381 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094618081 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116236959 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126089943 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093760861 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144106667 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115975314 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126945782 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125880009 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105306998 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131546769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121883165 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115967708 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095047695 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115074391 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115673011 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101367773 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115774689 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125831374 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093839451 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125727135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115817228 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093722449 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12341821 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115485248 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122704664 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104240396 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138021868 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115453204 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115796424 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108506295 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116160695 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115352222 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093205545 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115864779 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11419778 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109750119 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131486363 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131895227 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126426019 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115441071 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096903572 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115603532 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115544224 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095136699 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123491442 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126199905 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093884858 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166672287 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095901312 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115691768 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125994512 seconds)
  done (took 8.503228777 seconds)
done (took 162.39520463 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102753566 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143295489 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102973272 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175947687 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108179436 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121622268 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139551116 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099664588 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108842869 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090844493 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.114281675 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.0937915 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179097955 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10815678 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088159482 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11385313 seconds)
  done (took 2.736091844 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.204485982 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.260923852 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109105961 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108746431 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.115122989 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.091028066 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.108343418 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.094479936 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.116594729 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.091692312 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.116191152 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092651076 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113117326 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092922573 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.118011196 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.115476005 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.09232747 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.11560304 seconds)
  done (took 3.005750716 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115435695 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157759526 seconds)
  done (took 1.125888625 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122152082 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186362597 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301171278 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157174472 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121108772 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130313968 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157846382 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133912871 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203011328 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125748559 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124914197 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100027328 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143055466 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116731989 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096737875 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120511388 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143876967 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094658397 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117203268 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117607788 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118478347 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108467864 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117241325 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094691788 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184436923 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122669221 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.110283376 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089587317 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124535854 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.100958189 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120752842 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134230799 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.105777051 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.188603695 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.130870246 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.168802448 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104599723 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120482849 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.122219383 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098431719 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12683418 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.127084255 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.11036098 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.126199597 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115696415 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104505016 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.113194032 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.091663145 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.122614122 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126794519 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100567743 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121403884 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167731977 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127776014 seconds)
  done (took 7.813338092 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.81092886 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155597895 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09133345 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.902051379 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139255991 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104311285 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.79735258 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134741154 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237830882 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.767441904 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134272022 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126513425 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241764624 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.244338955 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935064984 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315438648 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.680846426 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125680857 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.118087805 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157760258 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119458299 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137890591 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13055075 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431476473 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094556675 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113841729 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116338943 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100739529 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163617625 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114617561 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114073448 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.183259082 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251693722 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210768022 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116216248 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091084813 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111327392 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1747863 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272868373 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218180432 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183011909 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088245182 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111155058 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100522351 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132269638 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108147614 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169868533 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177718078 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.197267461 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094580854 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1220025 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118819758 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100170375 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.189782855 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105238393 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315900619 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329175406 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111443914 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099903503 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128030241 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270190492 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123240544 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209700621 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138941049 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216422976 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08956883 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812752897 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173028237 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112874908 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118284268 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099003988 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11763542 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120475254 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169895163 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394201289 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10263956 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116630599 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111399354 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219992396 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.112948397 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09158329 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16552711 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116506428 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119907133 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103890486 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124001246 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174966148 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257019354 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101994638 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121258302 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115881173 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101852695 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117444783 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215119805 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223419447 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165345929 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.237512223 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100106447 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.191420416 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172806277 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121418432 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177173419 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118719737 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104891341 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123767369 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222852209 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148789547 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127011831 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099096848 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123634385 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157767393 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121225406 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10347941 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.202210326 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.471783446 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.176472942 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111864249 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098154353 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120187136 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164167328 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119825324 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263762148 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098694052 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.194749746 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098469363 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.114050928 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119927751 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168805865 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124070025 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099407759 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125106934 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119169284 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235322024 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227453626 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104875734 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247941171 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186552641 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120920617 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179445959 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123968864 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177581614 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124159667 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101010163 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11999092 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801396947 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10262431 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119812557 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11636453 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195109538 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090583033 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12654801 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090090855 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110326727 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780911984 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094358367 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.124711051 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125527557 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097685732 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1212689 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118454938 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096471898 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189236542 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233823453 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101458776 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118826752 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091972111 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.185036621 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095483776 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113580167 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091380677 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11413557 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119082694 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09577199 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127726082 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173300281 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164055116 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228202607 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.600746876 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111987182 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093050311 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23622542 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089686214 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294933329 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121107687 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231080487 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166594314 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123285301 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325892237 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170830869 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190349518 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.11515734 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177202445 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087815072 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119099451 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168199144 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113729205 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117999737 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168113676 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125913016 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102720106 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.976291393 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112097069 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229877967 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087567469 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.196510122 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095220769 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123602626 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299380633 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090444033 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12839051 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.189965507 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094285274 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.113427331 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.744802124 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.11350628 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099975767 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120664562 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229606408 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.169047935 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120407042 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119578621 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101314493 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187438146 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21228694 seconds)
  done (took 44.437983693 seconds)
done (took 59.968367034 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283621175 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219015273 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261164696 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172429053 seconds)
  done (took 1.883606398 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173108159 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150614693 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121160685 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110434936 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15099243 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086250377 seconds)
  done (took 1.669565165 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364682614 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27654088 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242888326 seconds)
  done (took 1.765542529 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253765262 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.269405241 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325558082 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.412407086 seconds)
  done (took 2.239887939 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208508994 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134215504 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112269373 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108435699 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.203083674 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.242053613 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143133656 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173494644 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.124231771 seconds)
  done (took 2.377102737 seconds)
done (took 10.814692727 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.235792142 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.253326416 seconds)
    (3/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.166289926 seconds)
    (4/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.222819788 seconds)
    (5/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.155461198 seconds)
    (6/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.186292519 seconds)
    (7/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.217958028 seconds)
    (8/286) benchmarking ("sort", Int8, false)...
    done (took 0.197605028 seconds)
    (9/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.205230851 seconds)
    (10/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.229675398 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.155723772 seconds)
    (12/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.207561547 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.136273441 seconds)
    (14/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.169103963 seconds)
    (15/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.121349862 seconds)
    (16/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.215587812 seconds)
    (17/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.154867836 seconds)
    (18/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.13529419 seconds)
    (19/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.130424307 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101521412 seconds)
    (21/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.186761774 seconds)
    (22/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.13556544 seconds)
    (23/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.225375358 seconds)
    (24/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.096025961 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.145076487 seconds)
    (26/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122178511 seconds)
    (27/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.2244942 seconds)
    (28/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091421743 seconds)
    (29/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.17321921 seconds)
    (30/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169894943 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.249316436 seconds)
    (32/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.129973137 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120843619 seconds)
    (34/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.129738924 seconds)
    (35/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112260641 seconds)
    (36/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.136365452 seconds)
    (37/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174414466 seconds)
    (38/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.213502842 seconds)
    (39/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.18351288 seconds)
    (40/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.134731451 seconds)
    (41/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15732401 seconds)
    (42/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.231332595 seconds)
    (43/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.124518942 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.101100535 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.141163578 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.168616662 seconds)
    (47/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.195758299 seconds)
    (48/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.228457681 seconds)
    (49/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136054997 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09191807 seconds)
    (51/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.212611116 seconds)
    (52/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096191023 seconds)
    (53/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.122570491 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.174881108 seconds)
    (55/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095161927 seconds)
    (56/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172895278 seconds)
    (57/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068222112 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.141066406 seconds)
    (59/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.11052927 seconds)
    (60/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155693964 seconds)
    (61/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124134943 seconds)
    (62/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094941118 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122434138 seconds)
    (64/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.087211748 seconds)
    (65/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.192106878 seconds)
    (66/286) benchmarking ("sort", Int64, false)...
    done (took 0.116353766 seconds)
    (67/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15879201 seconds)
    (68/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.12631455 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091898081 seconds)
    (70/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.095646034 seconds)
    (71/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102965556 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117027491 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126191533 seconds)
    (74/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.177873918 seconds)
    (75/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.093645457 seconds)
    (76/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.115492382 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.126063717 seconds)
    (78/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118938712 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.162506258 seconds)
    (80/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091248347 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168492605 seconds)
    (82/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.1713002 seconds)
    (83/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.093692628 seconds)
    (84/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098146236 seconds)
    (85/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091458693 seconds)
    (86/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090137352 seconds)
    (87/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172051932 seconds)
    (88/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.172350248 seconds)
    (89/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097644408 seconds)
    (90/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191825332 seconds)
    (91/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.085447085 seconds)
    (92/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.180043221 seconds)
    (93/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124985056 seconds)
    (94/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099812777 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120426933 seconds)
    (96/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138454745 seconds)
    (97/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067404342 seconds)
    (98/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.121966719 seconds)
    (99/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090878242 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088957563 seconds)
    (101/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139450896 seconds)
    (102/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.122428454 seconds)
    (103/286) benchmarking ("sort", Bool, false)...
    done (took 0.194120185 seconds)
    (104/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083806357 seconds)
    (105/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.121847404 seconds)
    (106/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067883623 seconds)
    (107/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184612691 seconds)
    (108/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111737122 seconds)
    (109/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.094469847 seconds)
    (110/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073159572 seconds)
    (111/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115386685 seconds)
    (112/286) benchmarking ("sort", BigInt, false)...
    done (took 0.226128729 seconds)
    (113/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069124062 seconds)
    (114/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.174856964 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094092913 seconds)
    (116/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091978379 seconds)
    (117/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096818302 seconds)
    (118/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127238572 seconds)
    (119/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091572858 seconds)
    (120/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11738787 seconds)
    (121/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067490995 seconds)
    (122/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.121071663 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098861632 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.129986619 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08727505 seconds)
    (126/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.148061505 seconds)
    (127/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123139466 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089599351 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111814556 seconds)
    (130/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097146006 seconds)
    (131/286) benchmarking ("sort", Float64, true)...
    done (took 0.236034671 seconds)
    (132/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.093688731 seconds)
    (133/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.104733958 seconds)
    (134/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.154398461 seconds)
    (135/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.07860492 seconds)
    (136/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.143455068 seconds)
    (137/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.092185093 seconds)
    (138/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125554104 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087725645 seconds)
    (140/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18835553 seconds)
    (141/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.144957204 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130926882 seconds)
    (143/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.115927304 seconds)
    (144/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112630519 seconds)
    (145/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.117105912 seconds)
    (146/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.099554068 seconds)
    (147/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.157713484 seconds)
    (148/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.120209689 seconds)
    (149/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111303064 seconds)
    (150/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09113695 seconds)
    (151/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.118211506 seconds)
    (152/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080371973 seconds)
    (153/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.122920842 seconds)
    (154/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093737673 seconds)
    (155/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.106077806 seconds)
    (156/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100948836 seconds)
    (157/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.146339947 seconds)
    (158/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099439606 seconds)
    (159/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.124856312 seconds)
    (160/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.191984828 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088786815 seconds)
    (162/286) benchmarking ("sort", Float64, false)...
    done (took 0.175227244 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082956355 seconds)
    (164/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13091564 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110212309 seconds)
    (166/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068926682 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120768507 seconds)
    (168/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12062274 seconds)
    (169/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078049841 seconds)
    (170/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.188457638 seconds)
    (171/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113602436 seconds)
    (172/286) benchmarking ("sort", Float32, true)...
    done (took 0.23642954 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102495198 seconds)
    (174/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176415285 seconds)
    (175/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112693512 seconds)
    (176/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160616388 seconds)
    (177/286) benchmarking ("sort", Bool, true)...
    done (took 0.230451415 seconds)
    (178/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.146534914 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137702496 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089894937 seconds)
    (181/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.096896213 seconds)
    (182/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.107774099 seconds)
    (183/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.151119999 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.120081797 seconds)
    (185/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.125955077 seconds)
    (186/286) benchmarking ("sort", Int8, true)...
    done (took 0.226945703 seconds)
    (187/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.149662511 seconds)
    (188/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074908959 seconds)
    (189/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073396753 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128342127 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.102248834 seconds)
    (192/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.129077552 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093570728 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.128914036 seconds)
    (195/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090135153 seconds)
    (196/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.128291178 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095033387 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094517748 seconds)
    (199/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069789628 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112480157 seconds)
    (201/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.100194043 seconds)
    (202/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091111494 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091324668 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.122625261 seconds)
    (205/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.102133875 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.123730313 seconds)
    (207/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085107274 seconds)
    (208/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.143771363 seconds)
    (209/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.083046947 seconds)
    (210/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083281013 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.11744239 seconds)
    (212/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072673434 seconds)
    (213/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.319589083 seconds)
    (214/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096136291 seconds)
    (215/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.189726853 seconds)
    (216/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103284585 seconds)
    (217/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121911424 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092828719 seconds)
    (219/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099088247 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.09676106 seconds)
    (221/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.151036365 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074149907 seconds)
    (223/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.096929785 seconds)
    (224/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.100823212 seconds)
    (225/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.124329003 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094364034 seconds)
    (227/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.096143957 seconds)
    (228/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095450099 seconds)
    (229/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.072880919 seconds)
    (230/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119053472 seconds)
    (231/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098464822 seconds)
    (232/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117940958 seconds)
    (233/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.172262155 seconds)
    (234/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.101485181 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116661305 seconds)
    (236/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.074053457 seconds)
    (237/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073420084 seconds)
    (238/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.120377569 seconds)
    (239/286) benchmarking ("sort", Float32, false)...
    done (took 0.182138573 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094396064 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.124166815 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094314708 seconds)
    (243/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117674859 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.103506574 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.097602568 seconds)
    (246/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102850582 seconds)
    (247/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.166307933 seconds)
    (248/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.106522917 seconds)
    (249/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.09877957 seconds)
    (250/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093921752 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.13432784 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.144449779 seconds)
    (253/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073873012 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.125194758 seconds)
    (255/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089609494 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113764043 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090154196 seconds)
    (258/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.112919923 seconds)
    (259/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.082014238 seconds)
    (260/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.102510531 seconds)
    (261/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.175151448 seconds)
    (262/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.119088938 seconds)
    (263/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07271197 seconds)
    (264/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.069309088 seconds)
    (265/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.11686865 seconds)
    (266/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.073756876 seconds)
    (267/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.097612131 seconds)
    (268/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.245719706 seconds)
    (269/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095040302 seconds)
    (270/286) benchmarking ("sort", BigInt, true)...
    done (took 0.244504403 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.120580719 seconds)
    (272/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092282557 seconds)
    (273/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128153615 seconds)
    (274/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071368177 seconds)
    (275/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122157575 seconds)
    (276/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073951695 seconds)
    (277/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082482437 seconds)
    (278/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.097799587 seconds)
    (279/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.074402702 seconds)
    (280/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.081462323 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.124815336 seconds)
    (282/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073716699 seconds)
    (283/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.124788549 seconds)
    (284/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093495047 seconds)
    (285/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.106955541 seconds)
    (286/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.074526365 seconds)
  done (took 37.502687879 seconds)
done (took 38.390094565 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103001007 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151429741 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.103220763 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.14436106 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.131373796 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097470956 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.122404552 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101973821 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126067574 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12649912 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105149521 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.098106299 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104479685 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127662189 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104424922 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.148181531 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.13096425 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101719152 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.128001876 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.093670674 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.127510871 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117517265 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.096349557 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075193312 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.129362793 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.101690035 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.125429547 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.128229242 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094890014 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.118552966 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.099982261 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.125494487 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093749653 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.132523368 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.100610001 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.126992086 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13045512 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104345073 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11992674 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.094130185 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.126093731 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094338646 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.124722874 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.102357076 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.124261332 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.099731805 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.12670498 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131951701 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124620637 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124614878 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.104428631 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.129768984 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.103741082 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.126496041 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121774587 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103827274 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.122449498 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124860032 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.127522001 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100714428 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.126518893 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.125867375 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.099955708 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.126754802 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.102711526 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12979973 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.106229876 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.123990172 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.104077072 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.121149837 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113205929 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098103719 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.121500991 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.094380471 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.127183161 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.105678234 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.117426924 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.100301958 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.124716366 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.099046735 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.118310696 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097254206 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12021533 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.100469421 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122953388 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.076383331 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.121919306 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.100853062 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.118770454 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.102757924 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.124770251 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.100852958 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121289064 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.130700678 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094852607 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.124298152 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.094973278 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.118004644 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097418674 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.122314803 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.09513762 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122867186 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.104321799 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.119911448 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.101342916 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132349798 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094394577 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.125736557 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.093182715 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.118610225 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.133038745 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.105037523 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.117699666 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101214677 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.117529782 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.102430551 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117928877 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094918288 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.118563791 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094388116 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124983988 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.094349654 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122118312 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.101365007 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.133353511 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.118289898 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.099222384 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121358248 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094326388 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.12381928 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095479812 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.118862618 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.097819733 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.109284559 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098723174 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.118647961 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.102997933 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122704305 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.104008499 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120359599 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104455656 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.124175571 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.101289419 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.124844175 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.09431937 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.106014531 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10171345 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121660255 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.096556641 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119948662 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0963708 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.119120099 seconds)
done (took 18.100451328 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090120407 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186561664 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.159925847 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14620252 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116235645 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119947439 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129850289 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128038797 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.120793487 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.151693225 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.120059256 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140388224 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.157672792 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094777828 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119347607 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099094574 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122231582 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135135517 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.130685279 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.142304441 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.175596094 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.093945607 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157561302 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145538946 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.129072272 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.123124322 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11950041 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.099116901 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.12314502 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.136162076 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.118394271 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122520677 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096173594 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.143009732 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.112379237 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.128714192 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11933373 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.103336591 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.1195446 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.096149655 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.150183918 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.142748901 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.102118957 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.126447192 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.099564024 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12319364 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.097243032 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.130834954 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.131057518 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.101050217 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.135318932 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.167919612 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.098788131 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.130964615 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118410482 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.107392912 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.130706335 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.098296232 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121494779 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.098001589 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.120574145 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.099701988 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.137313826 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151810826 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124065303 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106117617 seconds)
  done (took 9.15852078 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106860212 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146604279 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.113639595 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132819093 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113762612 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.096390793 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119510615 seconds)
  done (took 1.777958022 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091334027 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135598135 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114295249 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143259594 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137743123 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11878395 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129098849 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.091172721 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138544879 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.091034841 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136727128 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152217008 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095040619 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12311525 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139492674 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091489225 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139595048 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095229461 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123290006 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140201014 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093776431 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136630903 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093483197 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114333878 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105801092 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.121550576 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16855316 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098080014 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121620572 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.094172006 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114781737 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.153796158 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104814216 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126578886 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090409328 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132292994 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12985629 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088787183 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127563334 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096225233 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130641469 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095850207 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116746694 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088031778 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120137491 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124350021 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.112206999 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115217639 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094944097 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134608002 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092023809 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130436633 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093275608 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119669167 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116503072 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097345175 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124996861 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091995828 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136589444 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099184658 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139306606 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140355118 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.11219983 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140083291 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101064828 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137216617 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.111026864 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125060363 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120357407 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095803622 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131733986 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089364164 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116542085 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101928185 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123391722 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117042922 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140571199 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116066724 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102080731 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114706156 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091653327 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115103186 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.114531024 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120198519 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115726466 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094459132 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1178348 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090076375 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113653377 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094522205 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113255054 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092606544 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118670136 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.092844316 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122175574 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108687285 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12096993 seconds)
  done (took 12.136587825 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092780304 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115631863 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094498119 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116454848 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09326906 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116155548 seconds)
  done (took 1.587565949 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118656019 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120183446 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.11334481 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123587242 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159213983 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130741133 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.10839754 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129982996 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.110390568 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129744456 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130325833 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107787034 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14362323 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.126374801 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107274789 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126420776 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131292766 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102878341 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129064957 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099126511 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139377669 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122125961 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09851876 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.135635268 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119805738 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098363838 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130697162 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104705263 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.1297417 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124820015 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098992945 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121854458 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123452545 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101019439 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13140584 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097962441 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121948612 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120282906 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10307631 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11993881 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.13126646 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09952372 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12815501 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099066866 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126412197 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124047457 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096551208 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127420582 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.131180602 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096039176 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120170205 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09847216 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120523782 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120881867 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098744495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126014948 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.102855475 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137636895 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.130708886 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.106302109 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.129707693 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.126142427 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101263091 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119632885 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.107600054 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121650156 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123295904 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099593658 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124393299 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097034108 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12104108 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119642919 seconds)
  done (took 9.465546061 seconds)
done (took 35.06701521 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68624209 seconds)
  done (took 1.642313389 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.833383794 seconds)
  done (took 1.792204405 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.845420447 seconds)
  done (took 17.830299295 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498170941 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.599341138 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.987910306 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174232001 seconds)
  done (took 3.216550842 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.939036043 seconds)
  done (took 1.915945636 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286936882 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2428367 seconds)
  done (took 1.492673037 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.768554121 seconds)
  done (took 1.740935181 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.438688 seconds)
  done (took 2.402073446 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328182314 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185834427 seconds)
  done (took 1.488438649 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.561899077 seconds)
  done (took 1.531970298 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.028048816 seconds)
  done (took 11.005980896 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269493471 seconds)
  done (took 1.251998261 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308527643 seconds)
  done (took 1.281014017 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.453298366 seconds)
  done (took 4.430050081 seconds)
done (took 53.985345887 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10038759 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12888572 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104426151 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12986625 seconds)
  done (took 1.43312464 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.104386299 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123239818 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107073083 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128202002 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133703119 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100139536 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.129271739 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.106657523 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12769066 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103611525 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123081224 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121640609 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100559099 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.127256405 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101829667 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.130777018 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127631498 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097878792 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126844717 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101198195 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121564309 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.10037987 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127564217 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120707104 seconds)
  done (took 3.7716789 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102282612 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121140436 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098316806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120273943 seconds)
  done (took 1.421345812 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101906986 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133634827 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109117559 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127316577 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133892207 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108365419 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119181093 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096099308 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121537785 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101197844 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117396337 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.141454885 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107983393 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125371807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10389103 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116034403 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093172823 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.133379682 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126211352 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102164984 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118900946 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101104162 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117207631 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.111092956 seconds)
  done (took 3.748286681 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173493491 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128427177 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140817919 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097243671 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161860917 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142601448 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090609676 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142814932 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08905592 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132538805 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119467101 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135326101 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130785607 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.094977261 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115711907 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088583994 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127815995 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127666742 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093151418 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128988937 seconds)
  done (took 3.449115765 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09970188 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11797331 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090043487 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117077629 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101947908 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122055353 seconds)
  done (took 1.634590678 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092711971 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115481211 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092780111 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115542418 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09665993 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116206104 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090322423 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115766264 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091824945 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115720209 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091641413 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114674972 seconds)
  done (took 2.234886575 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507420649 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123310336 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122116152 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090731472 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12340967 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091224735 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131109885 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094573656 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143596645 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090906393 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118031338 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.118496888 seconds)
  done (took 2.741843404 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224375209 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127059317 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251552576 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.376050615 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158718198 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166351001 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285272473 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160612326 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.221687438 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154573632 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199715231 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180011401 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15468675 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195315252 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139382398 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146768895 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193909534 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256887716 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154795085 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213994455 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197772207 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168788193 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18313297 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125156908 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140247246 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167482794 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123286546 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132198793 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190253116 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178894908 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188436642 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189183457 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123750013 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231200549 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232670133 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194302368 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284253439 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136159378 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143281061 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16854574 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260403609 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139676472 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207619713 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158193905 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134151652 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201970615 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160845959 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176500537 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149200231 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142329546 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226233184 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199921535 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189287996 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141090919 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304474065 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150507616 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.162198244 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192028978 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238412123 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203672214 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221892994 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100669576 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218418127 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197137047 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186775463 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.156636428 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180191786 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150399812 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201471621 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191253417 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169797584 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174252366 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211093055 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112503697 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171670508 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174782316 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171034623 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26476881 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216013912 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098144127 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171932001 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151242631 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132741703 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197518832 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101456233 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244044185 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14522918 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138744983 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238853757 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162719488 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162860362 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19152274 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179288874 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155471376 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089877468 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156027946 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158239381 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17516203 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142325484 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161192255 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154565866 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107567345 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172111199 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126588813 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187590675 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119397305 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170273773 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188376803 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127830275 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163883171 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153749579 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125847499 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206110938 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201933922 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144242714 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10879228 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239083008 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184643599 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144280995 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17970778 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201409902 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147350282 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151856074 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202691672 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248751763 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141907272 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205007587 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15118746 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137187573 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.108444043 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212001291 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158046048 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.13789935 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136618747 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186584844 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231509761 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099766159 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140540042 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227250404 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10950865 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136139315 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150096995 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150479342 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112970644 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145174674 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14829634 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181481077 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183135544 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156913197 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169094992 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149146256 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236807204 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142272922 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.126464908 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149921667 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12377583 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193797697 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199690918 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13253571 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235195799 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17071537 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200529613 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172409003 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136171694 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179288707 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130953638 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095752321 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222529244 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168218227 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163770934 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197732345 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198398144 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.203403109 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187329646 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168790569 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175404735 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169145981 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156078315 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139353409 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163475984 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159694832 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099901933 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143286692 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134471502 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124889423 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145607359 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135690889 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196249242 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198359783 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194215345 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161943608 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15255861 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186443169 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131879716 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175738992 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179852324 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14769122 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199842805 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194826597 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218538679 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118967043 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232236373 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095500444 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127418992 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145298597 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172380948 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135572009 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11074572 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165843258 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210448047 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177483121 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175638377 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211813716 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200823025 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195084211 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097152439 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171069993 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179150125 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181339902 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181585889 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143848929 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152974005 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180583631 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15220024 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215541484 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169338085 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179859092 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229287396 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153152265 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107178301 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153285628 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176116827 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159643167 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176352818 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150044442 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140851332 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160881506 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105551917 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163357936 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205979737 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164732592 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183413917 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153016835 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19085055 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129977108 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171935644 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165504525 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166952421 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.089338796 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173727676 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224417884 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118014612 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163258183 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211458405 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106902382 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311447194 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231586668 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192269195 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139743555 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159539357 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16453233 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162884616 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166894725 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180592616 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162378413 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192089146 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160683276 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110611821 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140338084 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152317324 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156412098 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107272782 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14932888 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.207837651 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112768926 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18349323 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148980857 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162323409 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179522646 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153580966 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151847768 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157459855 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221927711 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192038636 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222877966 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126119056 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205726352 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211342051 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128484119 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10587524 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136926405 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18151419 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13918185 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196496356 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196145065 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237756328 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186757003 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180496029 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143064772 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12656941 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160150092 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173122478 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207490017 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152192117 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158073948 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204879144 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.1414197 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106229417 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169858903 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319841239 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121007779 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219088939 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087885648 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.290303284 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134026721 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140443779 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141809074 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215357636 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.116540116 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180930633 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174954703 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158756135 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166737713 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153192154 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197821073 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246135513 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205067111 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183065561 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137120333 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162094693 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172839584 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193953499 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161716418 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142115839 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194596761 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201408958 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223445507 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11709694 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170248009 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170662358 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161850464 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222200528 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108406058 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240665406 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139397738 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204305569 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155852912 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143209389 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183062362 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194971034 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150786239 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191566436 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216989248 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114691435 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138551789 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163746896 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181236123 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1544332 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131279267 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18424665 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099224286 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22918597 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269360681 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108351422 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158008282 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148888255 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139834792 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163079754 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169196191 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144745052 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139928089 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198623744 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139521937 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192381738 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237207413 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177482038 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16869693 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149121303 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.6968711 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10947713 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226174096 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15133228 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184012062 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123119542 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202502054 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161734817 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169368919 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201154958 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160352223 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234333634 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196143262 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208920813 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106045322 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162050408 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150603923 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14801991 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155541997 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171085053 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160061574 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14768524 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.182019462 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159112033 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107812577 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143036473 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202028606 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151188446 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182874252 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182224033 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144525404 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175718199 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219686062 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107750091 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.204773481 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186268924 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143480991 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124346818 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136932789 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15437934 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270245571 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098955885 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213426431 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189990936 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162751848 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170529592 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149210614 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196695255 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160777093 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21683434 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118467162 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15847927 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159390798 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140527707 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132842158 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158073782 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16735793 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124870535 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189096149 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139167069 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1980956 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127696762 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150644211 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285994666 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177042111 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252351899 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109609386 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139123923 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162597373 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148731279 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180497757 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182444291 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138397182 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110448571 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137084911 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15638845 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113680627 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159536918 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19555895 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161683335 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239646623 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111992501 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281141544 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14253019 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156870453 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091171286 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136489211 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153401736 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148971947 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124166428 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224240923 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2695749 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12035913 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13655144 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15344513 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127439982 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110972066 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166899581 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164394826 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18157164 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146527301 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109942547 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131266321 seconds)
  done (took 82.858119046 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175281146 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132722304 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148824302 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203306633 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180286717 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272196049 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211816722 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257230502 seconds)
  done (took 2.661118842 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095567667 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.149168999 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.162668298 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.136014039 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093611188 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121900412 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.3399792 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134958155 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117472437 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123137113 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172184732 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09575633 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.562642333 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092627505 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120786013 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108064082 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093893423 seconds)
  done (took 3.788426752 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.111089388 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.469081297 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.823288709 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195420824 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.17792997 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121006764 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.681939132 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.121326453 seconds)
  done (took 11.774059324 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116539269 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137422768 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.125851594 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154371008 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142779637 seconds)
  done (took 1.752718752 seconds)
done (took 124.240610919 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100665261 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129100418 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100163262 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131176354 seconds)
  done (took 1.523598923 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095517089 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071439924 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101298552 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075718337 seconds)
  done (took 1.415446719 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191046545 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169666367 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390788731 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072256088 seconds)
  done (took 1.569320247 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115986622 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133771756 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10568861 seconds)
  done (took 1.438227992 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10881949 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130328629 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105239304 seconds)
  done (took 1.424388846 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108448093 seconds)
  done (took 1.187339703 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109557143 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138384532 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111541272 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138458408 seconds)
  done (took 1.577661276 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100586174 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12768898 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111635916 seconds)
  done (took 1.419007388 seconds)
done (took 12.990627552 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104616819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419092331 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413173676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111649227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722265997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381866301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.038058453 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147703608 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164385203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096474372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14045136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674093645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064973831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373178204 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025174704 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372786969 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675595498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121845511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093571484 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123698301 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021349159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094658245 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122502462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094053458 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703020353 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425607277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09715522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372210113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094367078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124715095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382290711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123749541 seconds)
  done (took 16.988810898 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09686009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175494607 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099526803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123502488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123751866 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096374639 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125063533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095597038 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179644906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123810055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1126402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122644143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126463261 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097273746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14277775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093859233 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126278791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093462603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12249868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095578884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140777169 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12116682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096301556 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122153913 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095801469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136614151 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096330051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122489733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120900075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098866503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125447365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096009492 seconds)
  done (took 4.826097306 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143666464 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184433932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129294059 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128629306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170089771 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125939177 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201363788 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147547423 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156660056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124002652 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140451668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093807574 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158580829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122555879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115553892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121845818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0965728 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123095478 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094971596 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124290096 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141298328 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094854716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123036937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094969827 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124483727 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11007949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125081549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122332974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095597561 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125854319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100616582 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125058866 seconds)
  done (took 5.173751046 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098882441 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126902093 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110789748 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139279393 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096963711 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126760791 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098728464 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125195613 seconds)
  done (took 2.008214249 seconds)
done (took 30.077700978 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112236795 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128045 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108828304 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136487598 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103546979 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133115911 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093279483 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134194479 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134288109 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103326046 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138114452 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093528723 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124824591 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09412236 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136096168 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099005155 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134433978 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103950387 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134679159 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132173029 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09623145 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134292138 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104991492 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134408626 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106043771 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133318023 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137637054 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100689538 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123580913 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096243984 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125707114 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104402088 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125145611 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107090978 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128560579 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098770519 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124190568 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096045559 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134217358 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133682636 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101755847 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134935993 seconds)
  done (took 6.037488599 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109164299 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140095217 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106097037 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082477407 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117591332 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080898814 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.1382529 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07982591 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110907887 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109116536 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075072964 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106935713 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079124531 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101972565 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078267858 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075577115 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108864248 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076539073 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076764108 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106512882 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08012126 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073270533 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108363451 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079705816 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104067292 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082641647 seconds)
  done (took 3.580767733 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102308189 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135039361 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114999225 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185905344 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162483238 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101447363 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133117664 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141856799 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11134578 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121274699 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098627316 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151789442 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112514765 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130987247 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122660159 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110079369 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138085241 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096437693 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129940989 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11340299 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139638827 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104550813 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141982217 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134171127 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093783883 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124816576 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098672618 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137111149 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100047724 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132243521 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127362949 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097250247 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123334407 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106082109 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127638672 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094732889 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143573005 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132901987 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10373987 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123367675 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102951836 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123993368 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115784052 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162643812 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121793717 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102154995 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125658781 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105654514 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122893853 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112064403 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13305372 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093745244 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12647717 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.093308008 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122982239 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137063658 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096461054 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124662706 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.104866775 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129353136 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106803139 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127363803 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110030355 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122943248 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13151656 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.093638311 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124202173 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093764589 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145867729 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095882725 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164062743 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124347294 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096419528 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132358687 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101349524 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130169162 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094991841 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139821934 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132323268 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098842373 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132547506 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098614777 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126373668 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112687831 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125900352 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096845868 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124903427 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101314501 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126334579 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095856692 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137794777 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123577198 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099025407 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142240336 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094573049 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125743899 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101116093 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129836784 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.122125932 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108838611 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128665883 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095829439 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13382141 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.095285568 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127395912 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104045219 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129360934 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.122101788 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100364012 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130218073 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.09516083 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125060005 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097469199 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125598616 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104715244 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130775901 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099179401 seconds)
  done (took 15.000549512 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232353297 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218002475 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189857264 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.297401001 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136315139 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.118398701 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213916069 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157203292 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09383114 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160906646 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173063549 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183395645 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169802398 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181572761 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169915361 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12438792 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112846376 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166449286 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217827927 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292904344 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143549683 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102549225 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163391274 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162960127 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137623111 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10467735 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142630923 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137399666 seconds)
  done (took 5.813475115 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109862437 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156959105 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.101097959 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145654496 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149773794 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094907607 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128889659 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096339921 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136884757 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138134757 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094410592 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131481031 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.102490303 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133192235 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123805242 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104991961 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133911858 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096692436 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127333431 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098682998 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134894197 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135265529 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099050079 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124173668 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104957236 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122927861 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087678829 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144785655 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124000731 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116422967 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121649684 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103245605 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139026029 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095384985 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124421169 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096832936 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12663662 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.097057947 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125482265 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092812992 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123489567 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078601333 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123807614 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.138574924 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101391979 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110504207 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102719283 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129309108 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096408895 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121681144 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097916228 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126837905 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098630682 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132159186 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097592232 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126474216 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097664322 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116519129 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101683794 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126997056 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085572995 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123459332 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.10053005 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119671559 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101993954 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130267586 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094025126 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127561935 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098963339 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130560451 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.125869289 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102250109 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.122586677 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098538934 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126233743 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.100707342 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127455774 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094443212 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124124341 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095535953 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105821544 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094672879 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075092384 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127623999 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121892407 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095071222 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126289164 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.102437454 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140795113 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.0971775 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133698169 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124865005 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094933482 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12666038 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084531407 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126190524 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112089343 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142801599 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095079831 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123152297 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.13786271 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097914701 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12281553 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077305196 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103190193 seconds)
  done (took 13.107748121 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131968857 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156067873 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130087049 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113844454 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15751874 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159291887 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103015877 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132797818 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097347604 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144448732 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095820109 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133808834 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095862513 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139023609 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158089626 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106492972 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126722872 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.111228083 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129371832 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170918785 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113170211 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144640361 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141786529 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097131165 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129691651 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.113279352 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162810163 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138424327 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109992123 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144060468 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110464225 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162975251 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143920023 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100439723 seconds)
  done (took 5.533310701 seconds)
done (took 50.158320433 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.194453659 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.417438965 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.18442321 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.060682807 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.223774335 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.218996887 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.19914804 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.189747872 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.645879244 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.183624767 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.432131666 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.662322705 seconds)
done (took 59.724332388 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.296950668 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.338826119 seconds)
    (2/2) benchmarking "String"...
    done (took 1.470378452 seconds)
  done (took 3.93135538 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.808323351 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.100411055 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441082666 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.182629878 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.184660789 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.472361269 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.847132751 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.519597894 seconds)
  done (took 27.856575962 seconds)
done (took 42.004025918 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.196982051 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.270096467 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.222527425 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.180061449 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.298186967 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.220496454 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.270530407 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.252820668 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.200642182 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.168474771 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211019755 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.18414044 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208650166 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.289987607 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.190819589 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.190196159 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.229119544 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.776840925 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.579433357 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.193400182 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.218109215 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.190144749 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.194140879 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.191295671 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.208183909 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.194982216 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.1867815 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.216406529 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.579171791 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.190813222 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.187065447 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.455844661 seconds)
  done (took 189.458039149 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.190851558 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.347566931 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.42994663 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.232992741 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.882800953 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.384643815 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.334148291 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.951521387 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.203872505 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.207633263 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.510088746 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.186991428 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.57192595 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158613832 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227534713 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.225462444 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.403299634 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.557230768 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233855107 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.328528901 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.197245229 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.544276423 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.487198166 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.449780631 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.195797747 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.232544199 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.216768634 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.235760344 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.405296072 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.341536795 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.237182612 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.19660406 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.786664618 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.043952514 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.201711129 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.202689473 seconds)
  done (took 150.658146186 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191609347 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.189839692 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189859502 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.221924429 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.190441973 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.744210211 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.746603703 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.740170561 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.459624821 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.455283581 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.426706192 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187422396 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283914203 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20373178 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.1893692 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.205748394 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.230135823 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194800856 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191050301 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.744095774 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209145133 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.17007489 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.367337772 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.204721335 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223747844 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.579282916 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189795928 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.221852248 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.516181059 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236921758 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189268265 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.551191118 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.930616692 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306606225 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192701848 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222298516 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.19122235 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.469184905 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190572966 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.195980145 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.198633667 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.842720597 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196725424 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.744279441 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196195058 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.116045213 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190373179 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193956834 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.908118903 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.844168301 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.213267176 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.194545884 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195179028 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194399486 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194160439 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225572416 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.894144872 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.290326432 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.208155211 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.199723904 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226402639 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.195329405 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.635320236 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199088345 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.538607748 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.271601969 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.310808791 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.748178322 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198218087 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29300993 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312978058 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191664164 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.195244048 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195833385 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.194496051 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.303388642 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.193166225 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.595351401 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191107807 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.36772876 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.20892576 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.54318057 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.294357055 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19374153 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.601088587 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.200363738 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.196630142 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.93365402 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288557713 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.193973538 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196219285 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196954607 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197552969 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19770294 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.602759497 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.749546816 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.436255692 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.200143864 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.699150116 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.200843028 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.615748236 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.731744346 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.870528283 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199362359 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.196131313 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305777522 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.36580502 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.210639286 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194553786 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.507738907 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.199634639 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254709725 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.19367327 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.592588241 seconds)
  done (took 365.834306087 seconds)
done (took 707.059909693 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.794154962 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.792589104 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.900335157 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.783447107 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.747888103 seconds)
  done (took 10.136607812 seconds)
done (took 11.256698833 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.378758756 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375652344 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252410987 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.37870933 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227351125 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.394706577 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357650278 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.216879209 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.292536603 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.271153199 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294657325 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248275323 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231267677 seconds)
  done (took 18.040333012 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506016771 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.504017547 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259278106 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514018921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236699185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509329904 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394532591 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.413876735 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413768716 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228820658 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21017994 seconds)
  done (took 16.312322909 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518542736 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.505474271 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262199394 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511561514 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237386327 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503049825 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398623673 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420302275 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419950805 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229572274 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210205958 seconds)
  done (took 16.337773933 seconds)
done (took 51.813381477 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.205134874 seconds)
  done (took 2.326629429 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240888129 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.406667541 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.223694263 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.211800467 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.206670466 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.208819732 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.212933465 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.207987068 seconds)
  done (took 11.041902698 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.203372359 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204168783 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206572577 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.205835643 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.203613775 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.203352843 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.205369994 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.206988137 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.206613818 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.204154604 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.203079644 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.206919159 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.203786482 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.20414277 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207149017 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207343525 seconds)
  done (took 20.40502255 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204497158 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.204112262 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.204407448 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.203991578 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.205527939 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.204543368 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.206324315 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.204983422 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.20517602 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205317055 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.205634354 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.204365264 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.205929102 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20578677 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203638589 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206282881 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.205191627 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.204873282 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.210690967 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.204136702 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.206028296 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.206171949 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.205605367 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.205462827 seconds)
  done (took 30.053899528 seconds)
done (took 64.950076143 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.803538054 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.833137941 seconds)
  done (took 6.761683752 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.208239706 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.208791847 seconds)
  done (took 3.545943953 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.207471603 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.207420243 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207727942 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.207721537 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206919097 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208641277 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.208054375 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.208321448 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.208848296 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.207842564 seconds)
  done (took 13.203651003 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.209780335 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.208761048 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.205812233 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.208850069 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.208615963 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.205920392 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207639022 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.208712717 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.20873856 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.206013407 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.209389584 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206758488 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.208998767 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.208128266 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.209185111 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205651833 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.20822517 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.206974842 seconds)
  done (took 22.867683529 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208432081 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.209248088 seconds)
  done (took 3.543652581 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.20877393 seconds)
    (2/7) benchmarking "second"...
    done (took 1.207427693 seconds)
    (3/7) benchmarking "month"...
    done (took 1.207548987 seconds)
    (4/7) benchmarking "year"...
    done (took 1.207187839 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.207968463 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208377356 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.2074142 seconds)
  done (took 9.58091715 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211368769 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.388378892 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.49226407 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.777200487 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21112325 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214408542 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.068410389 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214478934 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214588423 seconds)
  done (took 13.918768358 seconds)
done (took 74.54815798 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.220024675 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.220137103 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.476057235 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.216983963 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.224395166 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.503698454 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.210880917 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.335107398 seconds)
done (took 37.536390393 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.213835369 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.186283951 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.958607865 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.205374916 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.270912766 seconds)
  done (took 18.749009665 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.240062568 seconds)
    (2/2) benchmarking "read"...
    done (took 1.546271155 seconds)
  done (took 4.913878479 seconds)
done (took 31.005130373 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212847359 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212179498 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.209314863 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.21265416 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.209800493 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.210006768 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21226398 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.213123437 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.212147414 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.213205327 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.212353619 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212277007 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209627679 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208976375 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212194931 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.209369491 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.20973166 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210890617 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20927213 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208555311 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212608086 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211241434 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210444535 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212644554 seconds)
  done (took 30.196837873 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.213341911 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.212026032 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.213370728 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213973003 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.210820607 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.214234385 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213636683 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210456115 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.21550009 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213535774 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210460837 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.21101161 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.214056245 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211105232 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213857969 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.21062082 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213622334 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211507773 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213804894 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211838686 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.21519536 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211666604 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212788461 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21438405 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212424229 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212250685 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214042187 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214048337 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215858944 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.212932958 seconds)
  done (took 37.51915491 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219682207 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225795329 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.220605206 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.221102343 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.216362888 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216211485 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.215524342 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213630675 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.215251833 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215072912 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.216563499 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215739025 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.215484046 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215391253 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.21695785 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215541489 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217277802 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216750634 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215919029 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214891551 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.216592969 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216381929 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216413287 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215789165 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.216082927 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.216062737 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215710805 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.216175727 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216230114 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217182411 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.215959687 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.216728269 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.217585428 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216584365 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.218374601 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.218283748 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221680463 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.225762528 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216627125 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.217647889 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217244353 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.217614392 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.217943707 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217001147 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217260861 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217923347 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216096406 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.217695456 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217214341 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218250143 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218463466 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218390743 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217473364 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216094918 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217921705 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.218812872 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217440765 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218212514 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.218625062 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217335617 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.218400989 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218589622 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218001267 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.218886353 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.217498017 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.218140152 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218331652 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.219681566 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218644886 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.219024159 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219845812 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219173057 seconds)
  done (took 88.797353574 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.220390944 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217114691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217022261 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216647901 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216730903 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.219176277 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216507729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220125278 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218026258 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219387024 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219686746 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217687303 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216640386 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219762934 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219482328 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217318291 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219805499 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217762384 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.220204573 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221566673 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220800097 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217588354 seconds)
  done (took 27.945451707 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218523545 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222615608 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218581243 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220053716 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218367963 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2194997 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220390568 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222880419 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221309478 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218175539 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218384665 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221040738 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218805073 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218032538 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219318508 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221115364 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220755213 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220193758 seconds)
  done (took 23.094704801 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.219154177 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21760519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220420696 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217707634 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.219639135 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220907029 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219901207 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222418876 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221054823 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.220320031 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222419712 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221836463 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.221091454 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218147734 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221072389 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220233767 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221347772 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22096379 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222648355 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220439807 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219154408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223261508 seconds)
  done (took 27.990235197 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222568593 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220883913 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22051041 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.220057637 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219779044 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221812345 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224238183 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.221089029 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223427449 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223494117 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221870468 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223197922 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221594514 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221837276 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222073335 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221803634 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223817398 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221180589 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223141633 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222038294 seconds)
  done (took 25.579313082 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225330172 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224101287 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225651697 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224049057 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225232878 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.224462429 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225690276 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.226900447 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225677462 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225089166 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225593787 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.227506604 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22707 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227152886 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228148655 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227853241 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22650875 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227672321 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226553691 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225794327 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226991822 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227054172 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22654117 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227557453 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.227703247 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227874942 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226868569 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225960263 seconds)
  done (took 35.478886068 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22650315 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226292974 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.223555087 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.224480983 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.224848271 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22436332 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223571795 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.223405692 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227073397 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223985801 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.227192258 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.225853303 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2274146 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.228250762 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226677119 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.228082741 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226965278 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22439075 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225585092 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222163754 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.228550925 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226789296 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.227215177 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2242753 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223298513 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.227611575 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225793506 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224356589 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229043632 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22555752 seconds)
  done (took 37.916830333 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.246953926 seconds)
    (2/2) benchmarking "in"...
    done (took 1.244074066 seconds)
  done (took 3.63422847 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.225982034 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228123882 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.227116784 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226497087 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226225816 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229248183 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229210556 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225977222 seconds)
  done (took 10.962700255 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228617663 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.2278278 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22881077 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.2272509 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.230930492 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.230202382 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240832578 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.255991834 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23537599 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.235870434 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242247478 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245009796 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23346238 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232669323 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232585881 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232024013 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.230116436 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.231798184 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.232259715 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.233598062 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230798294 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234803373 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234447344 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23121687 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.234441738 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.241231088 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.253439487 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.231681107 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231306872 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.235661932 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.232988967 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.229828467 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.232129204 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.234016627 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.232552673 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.231973994 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241705658 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249557598 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.237415067 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252095877 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23367171 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.230467344 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.233798655 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.232611189 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235044708 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.234216786 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.232866863 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227169422 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.232776058 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.23787207 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.240400172 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23262244 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.232036864 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237384394 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.233520045 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242127383 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.252786116 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.237571334 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.248031865 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245309683 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.264487476 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.257532092 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234761121 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.234022536 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245329345 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.258556037 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241147595 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.249718842 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230856483 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23332686 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.239442067 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269876806 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.260164682 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.235158487 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235894473 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233717288 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234002531 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234871237 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241515126 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.254606171 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.235217547 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236830868 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250211423 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259633767 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.233960772 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.234939998 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234806623 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.233481773 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.238694565 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245767791 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.252827459 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.234230966 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233126031 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.234647297 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.23589605 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.235739452 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233270016 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237316286 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.234503978 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235205791 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234180207 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2393431 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.246037144 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237436811 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23669393 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.243936744 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.256403586 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237659511 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.241101059 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.238334825 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237558984 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.236295334 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.242420905 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.233072408 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237704853 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.249765495 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.235452009 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.239149002 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.241012828 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.2398007 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24624185 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.264705491 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.237699912 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.236559994 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.242438101 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253634103 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238027292 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.241391729 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236251511 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.234888706 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.235508387 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.23907493 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.238193335 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.238770743 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239180117 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240341864 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.238777399 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.237839576 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.239434628 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238980723 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.24214624 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.238129384 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.238440881 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.241499994 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.24014215 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.241488893 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.243194324 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.257870102 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.240696418 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.242722331 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.237286342 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239094106 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.240142539 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243359772 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.239574402 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241891243 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.240677774 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.239638173 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238698284 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23979814 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240441118 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.241355958 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243751927 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.239793575 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243583668 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.240112786 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237697741 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238640866 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.23995369 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239465665 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.239957192 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.239751609 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24641393 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251611622 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.242645676 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241534911 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.242682724 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241464102 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242685742 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242186044 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.244498904 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251550133 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.241941868 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.24604807 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.261609296 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242742091 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.243116798 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240443523 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.24271723 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242762582 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.245805539 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.250599894 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253797108 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266982329 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.244614114 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.246009772 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.242255327 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.245747883 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.243906901 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.242037687 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.244027868 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243025675 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243119056 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243045634 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.245512997 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.242195095 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.243450103 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.24280376 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.244126551 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.242157101 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244773043 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24224814 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242243219 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.243996358 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244136576 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244771513 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.243065871 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.241281766 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.242298876 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.241430481 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.243304883 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.244948807 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.249877273 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.241728076 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244443859 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245032872 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.244321456 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24445213 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24583705 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24539001 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.242047422 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251679925 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.261627976 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.243444163 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25179654 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.261555329 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.244634582 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.249002862 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.246906581 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.241775984 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.248751833 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.258587268 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.244483518 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.245089517 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.246291649 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246988842 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245772828 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.253110253 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26290895 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247492145 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245680792 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.247084806 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.243534367 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.247293263 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.245329876 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.24882482 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244765772 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244836804 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.247705596 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247216208 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25091146 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.247074623 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.246545774 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251428856 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.25659444 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251670272 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248236704 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247967262 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.247032628 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.250763095 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.24810479 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.250283722 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247002497 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262385829 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.27122847 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252663349 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.267423019 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.24932922 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254142121 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.268954827 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254073956 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248936442 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249132261 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.248655568 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247442175 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.24732904 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249236833 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24812337 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249442833 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25075058 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.253463474 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.249780409 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247409263 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.249697145 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247073259 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248903176 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.249667296 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.246824506 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.24869777 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252938494 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248396469 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247635382 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259893017 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272159884 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.252101873 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.250559003 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251981399 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.24763743 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.249818474 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.250538466 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.256836534 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257937056 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.250193691 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.26191591 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.253980066 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260867794 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252318154 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.254113092 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.262398771 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247541653 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.247725423 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.250406685 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.250485427 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257427775 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.273125786 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.253980324 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.256405099 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25318261 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.250880243 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249699536 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.252319478 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250435587 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.251537043 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259983537 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.271191549 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255364494 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252003273 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.247567291 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.251576135 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251151223 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250802862 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252066438 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250946846 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.251601372 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.251067807 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.250315287 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250995053 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.249730964 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251646992 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.247876312 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.249587094 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256044338 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.274778815 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257043029 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.249712998 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.260479794 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274581103 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258800552 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.271955711 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.252808423 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.253236209 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.254817201 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.252431139 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251993629 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253163791 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.252624022 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.254666622 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.25673388 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252391932 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.254227171 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.255058034 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.255142765 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.253997773 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263887733 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279836299 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.255864377 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258342371 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.251648013 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255982269 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.259946733 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.254012616 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.252651146 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257611645 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26794408 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263169187 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256598702 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.2559084 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254679909 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252885983 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254967146 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.25634051 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.255969024 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.254842261 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.257339544 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.25344681 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255245584 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.253437972 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.257170224 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257107301 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.258138947 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.267146059 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.276221509 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.255803369 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257336452 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.254931328 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.256519835 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258827522 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.259218343 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257341672 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258869706 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.257081705 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26408001 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.263989936 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.257004298 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.256580185 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.257660157 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.258048566 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.257812471 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257186865 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.258232189 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258839216 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256369511 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.259516714 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.258046767 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.254295283 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.258095625 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.257380562 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256556387 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263526626 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.268693371 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260647392 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.257910338 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.258524308 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260711403 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.256014423 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.258749253 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.262787813 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279032813 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.271441828 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.26880464 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.263745626 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.258757913 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264715266 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.268382415 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.259592746 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.260172024 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.261198765 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.259329102 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.260028821 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.262336638 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258045249 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.264651831 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.2753608 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.256031372 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266139069 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.276595184 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259968627 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.25965756 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.267291881 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.259739234 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254847196 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.261205126 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.260726657 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267815795 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.282690008 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261798525 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260795795 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.26070486 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.263469479 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269566619 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261782345 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.262627156 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.258598662 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.262070497 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259374909 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262835894 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257259827 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.262711915 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.260003601 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.264245818 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.270123478 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.258745196 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265697194 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.261549031 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.263213441 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264528056 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259971463 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.258122488 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257401703 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.261947129 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261680287 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.259410739 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.266293215 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.26174447 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.261746956 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.264081485 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263322069 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263904606 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.271559886 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.270107693 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.257712802 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.261762707 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261427728 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.264596245 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262351789 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.261570525 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258971073 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.265090007 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.263864937 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264511687 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.260620946 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270834465 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281143341 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.283714281 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265910065 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.266775225 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268255708 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.264567285 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.261850077 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.263313798 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.265741349 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.270212041 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.276088584 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.26154102 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269152347 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285238858 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.26758199 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.269140079 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.267930014 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.276441608 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.267368427 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263666701 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.263615706 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.269164169 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28659287 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263519792 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277204874 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299845745 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.285324209 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.264719205 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266648662 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263125703 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26540718 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.26693591 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.267666969 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264677429 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267309277 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.269562728 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.266542199 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274617075 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.269402946 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.272206931 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.267896229 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.267841088 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.267373066 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263405156 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.269736138 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265163132 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.269763918 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.26756012 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.265456678 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.265006801 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282001022 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29232354 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269091403 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.269056956 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.262457342 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272318703 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27060662 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280906078 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.276303052 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.269202236 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.266943018 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.268688134 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270107442 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.264930619 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.267903625 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.267725116 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268194019 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.266738549 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.282468146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292849165 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270263945 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.266177595 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26831006 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.268272592 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268353179 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268901081 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269965513 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.268056302 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27054872 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275366883 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.265247005 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.270321237 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.272589633 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.279221652 seconds)
  done (took 747.65170717 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267553099 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267103022 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270401939 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270420822 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272203616 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265329063 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268505468 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267236068 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269112988 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267975302 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269738864 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270380385 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269032741 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270821403 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267889483 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266810279 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267720312 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27049322 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269689196 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266922412 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269746076 seconds)
  done (took 27.825695121 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269234139 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.268253724 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270907949 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270963563 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269526766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.271994545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267576076 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269570497 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273815091 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267388279 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.271451659 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272335773 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.269879077 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268437466 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271570965 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27138445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275116402 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271478029 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27140807 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267633151 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270938836 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26908027 seconds)
  done (took 29.132527256 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.27111972 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.26884035 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.269471421 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.270121602 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.274299073 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.268420228 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.274336759 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.271445493 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.27556217 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.273870435 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.272275 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.274410565 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.278493577 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.281800925 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.278531784 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.275695087 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.416707253 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.276874601 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274573342 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.273745659 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.269594756 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277275572 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.289076918 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.268664729 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.27077695 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.274522172 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273435644 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.274415654 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.2766649 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.274252146 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27927721 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.273710795 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27507445 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.2753784 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.27487017 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.277841903 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277313099 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.27676516 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.270245603 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.275055381 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.2852256 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.29998572 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.278714786 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.282959565 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.295146616 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.276847005 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280591601 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.286151555 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.274540381 seconds)
  done (took 63.867543396 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.275221603 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.278485867 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.273053409 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278068605 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.277326547 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.275631341 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.274189567 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277011244 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.274009203 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.274957824 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.277056843 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27479535 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271003279 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.276267943 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.274057153 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27411419 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.276709102 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.27483218 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.277952278 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277841059 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.278265564 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.277748457 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.27907556 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.277511848 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.279859588 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278181522 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279177395 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282276687 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.27755024 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.279703935 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.278478925 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278104284 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.279452184 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.276274956 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.278543256 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.280535475 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.277034439 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.277559514 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275959645 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.27735843 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.279459954 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279673506 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281182733 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.279670265 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.276960242 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.276594511 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277516535 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.279239129 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.280356512 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.281443095 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.27977786 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.278793685 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281077962 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.277610715 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282159948 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.279851715 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.275715669 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.277649806 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.279560867 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.275573343 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.275813306 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280366059 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.279313721 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.281938039 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.279158458 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.27842559 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278944037 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278018232 seconds)
  done (took 88.078655178 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279041849 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278082651 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276414547 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275570092 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27642144 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276027946 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276942167 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.278154657 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278547687 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279892707 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280401545 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277746022 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.282398963 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279656772 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278073179 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280386645 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27893245 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27763406 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277915049 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278474667 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279792963 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280681032 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277696539 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279500861 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279426165 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277541589 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279176659 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280508514 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28061422 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27928968 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279836522 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280180308 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278971328 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278036248 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.281111119 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279958996 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280369461 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276726392 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279185365 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277879596 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277600638 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279409313 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279181054 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.279159836 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278192905 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27823181 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279024804 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279856916 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278185464 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279688918 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281403105 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281219306 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281022839 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280628995 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281085824 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278565395 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279374332 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279754869 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279813758 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280679475 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282599363 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.280619917 seconds)
  done (took 80.496252854 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282669206 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282141474 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.27819879 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.282472629 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28208316 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281279982 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282466634 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.283078713 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282930605 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.2842877 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283283042 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282780766 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280223951 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285649156 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277083651 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281843133 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281346101 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281135109 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285937549 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28324386 seconds)
  done (took 26.833877061 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.280797122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283608201 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.280130492 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281011434 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.285306644 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283472113 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.287349071 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286252575 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284309209 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2860424 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287521594 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282349433 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280364051 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28298609 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286341405 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280584883 seconds)
  done (took 21.730569301 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.279640519 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.282304526 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.281840281 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.282204979 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27994801 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.281520384 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283340566 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.27920512 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28448413 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283144276 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.285214009 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.286137814 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.285244167 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284977298 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280664298 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.281980347 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.280577194 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.280296126 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285958004 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283663327 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282113068 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.281655886 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.284035993 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.284039018 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.283110154 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.281281359 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282125163 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.282372985 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283761588 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.284452762 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283400224 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.284403502 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284133363 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.282932584 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.284222111 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.282911497 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.284810824 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287235081 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.286883041 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286955487 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.287215885 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.28416394 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286785553 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.285602361 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282741777 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.285325406 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283430565 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286465434 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.281827642 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.283964455 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.287901629 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.288486174 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285597305 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286893296 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.286395252 seconds)
  done (took 71.807394816 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286187383 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287762619 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284505036 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.289010616 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288046048 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.283351063 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.285269989 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285725239 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286372418 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286337691 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28487062 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289208136 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287859466 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291335627 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285682701 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289795537 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.283539205 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287410699 seconds)
  done (took 24.358866545 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286621366 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290938779 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.288872006 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.286658517 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287655066 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287838933 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286415473 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.288653889 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290237503 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.289049158 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286906614 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.288341706 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289880128 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.289919124 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287233169 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28583018 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288913192 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289520932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285966881 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286741791 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289585648 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289973244 seconds)
  done (took 29.54110695 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.287639191 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.287767421 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.28728178 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.305046573 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.310451771 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.312542245 seconds)
  done (took 8.991681519 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302011593 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290903534 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291355997 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293513941 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291596939 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290253767 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290762679 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287364083 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293574303 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289383733 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288175206 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291634662 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293557575 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292667582 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295633251 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294515994 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288299548 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289695484 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291772221 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290558541 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287759416 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290847079 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289182336 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288292393 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290242104 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290222709 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291594104 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289065601 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289485867 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291777397 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291075854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290315025 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292041077 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289983168 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294952451 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292011198 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290399131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291252684 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294099538 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29174817 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292164808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293270704 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292941663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290059129 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294249655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29111339 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291540451 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292501516 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291339461 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29433256 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294236342 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290942389 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294482459 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292812172 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29461867 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294543914 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291509648 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292747271 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294961471 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292614138 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291447169 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293755345 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292087173 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291263011 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295570153 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290289572 seconds)
  done (took 86.494818666 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291860138 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292959249 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29318752 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29223771 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291297512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291988705 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29233555 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293474464 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293125875 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294586024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296790196 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29377485 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293948972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293061505 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297152579 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295701192 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293900974 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293221746 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293285734 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296401 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293752377 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294466083 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295702625 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295103073 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295723772 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296517199 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294891991 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295542821 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292814572 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295008532 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294541651 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294899403 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295187469 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293158363 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295002847 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295144075 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294160316 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295632967 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296882745 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300405342 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293975629 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296988665 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295287116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297053218 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295205482 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295157115 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297220184 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296527989 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296013694 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295814079 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298934547 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297236558 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298840441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295827676 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296746527 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297928361 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296597631 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296712328 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296532068 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299349801 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295490811 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296935414 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29986425 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29676565 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296577184 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295346748 seconds)
  done (took 86.701251462 seconds)
done (took 1743.757602858 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.460520364 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415426494 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.296969538 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.292893953 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.297038572 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.320366808 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.292605583 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.297137667 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.297749937 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.298415214 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.297618531 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.486707086 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.302673524 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298885859 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298165709 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.391693768 seconds)
  done (took 42.555720038 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.327894338 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.301162731 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.419749525 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.323511407 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326133251 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.490174815 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.362177639 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.302959057 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.478629108 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345757323 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.904423305 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327860853 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303269195 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.440616404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.321116933 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493499027 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.550413246 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.905038502 seconds)
  done (took 30.133594726 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.765418573 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.333237518 seconds)
  done (took 9.308051801 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.323496231 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.304057824 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.303302742 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.30086321 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.297974168 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.313270359 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.300250646 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.295973996 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.135556824 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.439426823 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.304644099 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.313653851 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.326174685 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302307992 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.30083992 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340468477 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.455421404 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.303212373 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.298580309 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.309477967 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.301485606 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.412328601 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.344543575 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.302610809 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.431748755 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.113044365 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.3132621 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311543758 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436573028 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.302611629 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.303890168 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305734291 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306157597 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.222393803 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.79362428 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.32787264 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329504086 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.313367844 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.302495401 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.466418776 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.307017328 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.312655171 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.302933698 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.784407116 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.439470779 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.422383345 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.625191774 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329152551 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.308017489 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.367265323 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306791876 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307919702 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350846005 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.091315237 seconds)
  done (took 110.684888796 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.349025867 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.688835674 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46738478 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324011753 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.96725933 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.951071018 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.316298131 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.597673919 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.332890058 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300209891 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.599031627 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814025136 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323514583 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.305766156 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.055284973 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.306467005 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30052707 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.054064712 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317726005 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.300559722 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806137904 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301292421 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29953813 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.434964772 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337909961 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765111892 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.77363837 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.766591714 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319757308 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.298794798 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.775167602 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.329398244 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.365543543 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.304025404 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.567739692 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.668307808 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.663985743 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.324791067 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337832967 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305889565 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.331105017 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7606393 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.670115914 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319148938 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301230251 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.764959493 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318451965 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.303208426 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.307419072 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503371503 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.172715183 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304606652 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.714791567 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.301649338 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.581643389 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.358822082 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.370826063 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.7942737 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31853302 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.403557024 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354296736 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30260312 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.308625126 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303191498 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.30610356 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659162733 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.67199739 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309010046 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.659642426 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.788002998 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.321068913 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.835773809 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.149919101 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317929669 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.348431625 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.309854281 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.85772678 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8067749 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.330041621 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304994413 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.648001202 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.325035765 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.589782236 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318582203 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304923703 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817567812 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.310936362 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.316248326 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.303547967 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.314874876 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.923551327 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306288588 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.578872582 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.329047054 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304188817 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.30427606 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.308703049 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304153232 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.305848259 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.308336761 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.836480273 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.32326789 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.422550822 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323223465 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314834908 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.303705041 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.306176585 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305061634 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524394343 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.775970014 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.32972084 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303936085 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.306022841 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.314215174 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.44346179 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.312787409 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.623928611 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324657275 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303732976 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.30696497 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.011172399 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.333802036 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310336986 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.310557918 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.199769194 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.518561249 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325182988 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.324745726 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308540615 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.324663246 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.598295036 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327250436 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.346398276 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.310226227 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016426012 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.335872839 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.316139236 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.837973172 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31530518 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.211093888 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332462651 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306929881 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610678282 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.576813989 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.599384445 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.308908166 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.332677594 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.00952779 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.341300311 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.446541263 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325262753 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.369556435 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505161411 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.443987159 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.308160203 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.910784175 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.307664338 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522076872 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.30857538 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605273277 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805263684 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325462184 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309220921 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.018232835 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.040015012 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.981231533 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.308223176 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.590554647 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.28190782 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.788993561 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.309460684 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.310121841 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.751202398 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.311914935 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.314880166 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.310574388 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.310291384 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.449860788 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484042616 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.153064984 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.310810494 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771587754 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342242799 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309919402 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.322891854 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314804423 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.657631037 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.381678805 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.315245324 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.343171321 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.309897627 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.31542244 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.793542174 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.193295887 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.31825907 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.461504925 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954442113 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.327952797 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309939019 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.940258271 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.610381644 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829989689 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.363753029 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.629536904 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.336099128 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349147996 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.891328437 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.372117797 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.794230048 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329803765 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.310364329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907195082 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.327759014 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.369835732 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.31145263 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313258163 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84753976 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.329359786 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.315915459 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.589399281 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330450308 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561182105 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.315178703 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.357821924 seconds)
  done (took 1105.912350829 seconds)
done (took 1299.806201092 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.312125505 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31761225 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.300318181 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.320313885 seconds)
  done (took 26.476860163 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.331413836 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319417001 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319271829 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.317003711 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.323543537 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.316802463 seconds)
  done (took 9.155301737 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.360573633 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.311600852 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.318638515 seconds)
  done (took 19.219776383 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.533989433 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.643539884 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.662405068 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.576437948 seconds)
  done (took 10.646101689 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321259898 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320594719 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321207394 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.322548141 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.332237242 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333337118 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322258578 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.322837023 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.333625868 seconds)
  done (took 13.156665821 seconds)
done (took 79.882607498 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.149170052 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.962308389 seconds)
    (3/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.324151725 seconds)
    (4/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.643415371 seconds)
    (5/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.332392726 seconds)
    (6/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.091368702 seconds)
    (7/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.08579622 seconds)
    (8/286) benchmarking ("sort", Int8, false)...
    done (took 4.426039635 seconds)
    (9/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.582257584 seconds)
    (10/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.293922507 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.229347545 seconds)
    (12/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.294980927 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.73029414 seconds)
    (14/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.377695569 seconds)
    (15/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.579444444 seconds)
    (16/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.180442448 seconds)
    (17/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.31006214 seconds)
    (18/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.336045255 seconds)
    (19/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.365201048 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.342452068 seconds)
    (21/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.298715681 seconds)
    (22/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.168182989 seconds)
    (23/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.312356542 seconds)
    (24/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.791379128 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.329534035 seconds)
    (26/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.324604623 seconds)
    (27/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.836677302 seconds)
    (28/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.316697572 seconds)
    (29/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.816340094 seconds)
    (30/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.308192972 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.345218745 seconds)
    (32/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.155057945 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.447285156 seconds)
    (34/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.652825322 seconds)
    (35/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.80759063 seconds)
    (36/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.420970022 seconds)
    (37/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.745120183 seconds)
    (38/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.55479341 seconds)
    (39/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.309761795 seconds)
    (40/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.791044928 seconds)
    (41/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.284682347 seconds)
    (42/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.426283849 seconds)
    (43/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.364585429 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.429263428 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.579732328 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.046616695 seconds)
    (47/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.444944272 seconds)
    (48/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.298579059 seconds)
    (49/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.371014205 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.377700435 seconds)
    (51/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.314863189 seconds)
    (52/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.390963859 seconds)
    (53/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344905491 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.338885536 seconds)
    (55/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.345351194 seconds)
    (56/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.296560595 seconds)
    (57/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.330713467 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.060685855 seconds)
    (59/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.399180361 seconds)
    (60/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.332062635 seconds)
    (61/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.327744 seconds)
    (62/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.371524115 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.687131954 seconds)
    (64/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.94744197 seconds)
    (65/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.300017657 seconds)
    (66/286) benchmarking ("sort", Int64, false)...
    done (took 5.537939075 seconds)
    (67/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.658768407 seconds)
    (68/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.428826923 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.749698595 seconds)
    (70/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.158352307 seconds)
    (71/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.404953208 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.688555938 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.353181634 seconds)
    (74/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.825331998 seconds)
    (75/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.965021184 seconds)
    (76/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.196777717 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.433537127 seconds)
    (78/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.403020047 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.133102201 seconds)
    (80/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.949259329 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.299629167 seconds)
    (82/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.939420677 seconds)
    (83/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.302277167 seconds)
    (84/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.605959033 seconds)
    (85/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.843803269 seconds)
    (86/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.379512438 seconds)
    (87/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.300802748 seconds)
    (88/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.333004139 seconds)
    (89/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.535552687 seconds)
    (90/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.416681428 seconds)
    (91/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.300274425 seconds)
    (92/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.745839755 seconds)
    (93/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.443423401 seconds)
    (94/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.406409581 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.346573996 seconds)
    (96/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.335684481 seconds)
    (97/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.092412488 seconds)
    (98/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.717102618 seconds)
    (99/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.308409126 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.922554927 seconds)
    (101/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.4061176 seconds)
    (102/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.406632576 seconds)
    (103/286) benchmarking ("sort", Bool, false)...
    done (took 1.845538151 seconds)
    (104/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.84789637 seconds)
    (105/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.344945456 seconds)
    (106/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.301456002 seconds)
    (107/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.358964992 seconds)
    (108/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.601141992 seconds)
    (109/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.613894385 seconds)
    (110/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.309609905 seconds)
    (111/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.381580395 seconds)
    (112/286) benchmarking ("sort", BigInt, false)...
    done (took 6.323818732 seconds)
    (113/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.305071871 seconds)
    (114/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.570476589 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.168806753 seconds)
    (116/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.210978756 seconds)
    (117/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589228094 seconds)
    (118/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.676063157 seconds)
    (119/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.388266373 seconds)
    (120/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.349712372 seconds)
    (121/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.853392217 seconds)
    (122/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.43068773 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.433055763 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.448140642 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.30448339 seconds)
    (126/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.324243036 seconds)
    (127/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.396229345 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.334903573 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.168775812 seconds)
    (130/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.358260984 seconds)
    (131/286) benchmarking ("sort", Float64, true)...
    done (took 6.324614321 seconds)
    (132/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.321485939 seconds)
    (133/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.360506326 seconds)
    (134/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.764488734 seconds)
    (135/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.163223973 seconds)
    (136/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.870786248 seconds)
    (137/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.480397134 seconds)
    (138/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.346767144 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.049141214 seconds)
    (140/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.305815114 seconds)
    (141/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.541909433 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.843934644 seconds)
    (143/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.795587169 seconds)
    (144/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.328533984 seconds)
    (145/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.200526891 seconds)
    (146/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.748802116 seconds)
    (147/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.577060021 seconds)
    (148/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.663784128 seconds)
    (149/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.327121352 seconds)
    (150/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.395754107 seconds)
    (151/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.455719838 seconds)
    (152/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.562504317 seconds)
    (153/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.451320067 seconds)
    (154/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.334067559 seconds)
    (155/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.322177348 seconds)
    (156/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.361807746 seconds)
    (157/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.343485972 seconds)
    (158/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.161935512 seconds)
    (159/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.360229828 seconds)
    (160/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.307066492 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.74498502 seconds)
    (162/286) benchmarking ("sort", Float64, false)...
    done (took 5.682017982 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.322930497 seconds)
    (164/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.670723848 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.335535349 seconds)
    (166/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.029112386 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.378060897 seconds)
    (168/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.206746679 seconds)
    (169/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.309514985 seconds)
    (170/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.89083552 seconds)
    (171/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.437116558 seconds)
    (172/286) benchmarking ("sort", Float32, true)...
    done (took 6.328481772 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.745882916 seconds)
    (174/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.581018957 seconds)
    (175/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.373938214 seconds)
    (176/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.425633718 seconds)
    (177/286) benchmarking ("sort", Bool, true)...
    done (took 5.479367371 seconds)
    (178/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.371973756 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.928548293 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.386711635 seconds)
    (181/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.309057615 seconds)
    (182/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.076342309 seconds)
    (183/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.537435398 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.017982103 seconds)
    (185/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.3598345 seconds)
    (186/286) benchmarking ("sort", Int8, true)...
    done (took 6.327884914 seconds)
    (187/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.529826736 seconds)
    (188/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.307119781 seconds)
    (189/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.310208145 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.993264621 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.5311048 seconds)
    (192/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.449419406 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.128788842 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.233156421 seconds)
    (195/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.40149944 seconds)
    (196/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.41133786 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.327826809 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.333997815 seconds)
    (199/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.313766128 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.101365534 seconds)
    (201/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.34755664 seconds)
    (202/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.3884853 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.747656476 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.212609816 seconds)
    (205/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.355428643 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.351090603 seconds)
    (207/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.092916005 seconds)
    (208/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.893848603 seconds)
    (209/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.699864686 seconds)
    (210/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.241127677 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.377303637 seconds)
    (212/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.851990349 seconds)
    (213/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.353827463 seconds)
    (214/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.43363361 seconds)
    (215/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.308542719 seconds)
    (216/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.335809537 seconds)
    (217/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.401847665 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.34069254 seconds)
    (219/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.31781508 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.439284198 seconds)
    (221/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.515406196 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.310211823 seconds)
    (223/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.414713835 seconds)
    (224/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.368664876 seconds)
    (225/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.354062229 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.995360107 seconds)
    (227/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.559906693 seconds)
    (228/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.433396568 seconds)
    (229/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.716934527 seconds)
    (230/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.348352232 seconds)
    (231/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.445379092 seconds)
    (232/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.43211626 seconds)
    (233/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.347342979 seconds)
    (234/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364040671 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.548480751 seconds)
    (236/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.017512667 seconds)
    (237/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.319596428 seconds)
    (238/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.430375381 seconds)
    (239/286) benchmarking ("sort", Float32, false)...
    done (took 5.347150713 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.349640434 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.358893224 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.287318688 seconds)
    (243/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.229498906 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.722785118 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.312299522 seconds)
    (246/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.355937588 seconds)
    (247/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.445820961 seconds)
    (248/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.341898374 seconds)
    (249/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.32345799 seconds)
    (250/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.339181067 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.869146686 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.34898249 seconds)
    (253/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.312861895 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.422959116 seconds)
    (255/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.414407659 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.286450549 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.445888669 seconds)
    (258/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.341652194 seconds)
    (259/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.6998172 seconds)
    (260/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.130061642 seconds)
    (261/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.315172238 seconds)
    (262/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.15363514 seconds)
    (263/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.926443041 seconds)
    (264/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.132559392 seconds)
    (265/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.434767807 seconds)
    (266/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.978301238 seconds)
    (267/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.320555463 seconds)
    (268/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.332689222 seconds)
    (269/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.823138775 seconds)
    (270/286) benchmarking ("sort", BigInt, true)...
    done (took 6.332573373 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383849502 seconds)
    (272/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.387942706 seconds)
    (273/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.762490219 seconds)
    (274/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.314776955 seconds)
    (275/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.364724923 seconds)
    (276/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.314076159 seconds)
    (277/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.93230749 seconds)
    (278/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.341186181 seconds)
    (279/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.981166172 seconds)
    (280/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.918021181 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.382263342 seconds)
    (282/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.313681634 seconds)
    (283/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.44997149 seconds)
    (284/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.553121662 seconds)
    (285/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.727543153 seconds)
    (286/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.315376462 seconds)
  done (took 943.54125353 seconds)
done (took 944.772043015 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383724919 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370152991 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.345423538 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.366588267 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.46314251 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.368392521 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.35719197 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.348689865 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.393500535 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395062617 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.350885299 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.366932115 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.354062277 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352600737 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.346254615 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368336952 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.453071051 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.353775609 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.369654481 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.356461673 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.370039433 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351751326 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.39609448 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.368367788 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.35034837 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350241759 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.357331532 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.37334113 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.467179404 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.35732769 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.350268804 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.36488157 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.455051318 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.34553615 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.342066308 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.374091104 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.364970425 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.357023007 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350770557 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.386805665 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.886908704 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.372542896 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.35577652 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.34859195 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348350817 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350651552 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.356078648 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.355156342 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368592215 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369742683 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.867136214 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.387409953 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.3588984 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.350173248 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.359409677 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.356330723 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.352281226 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37331658 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.375877469 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373972492 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.461846861 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.359693407 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.351007432 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.372172232 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.363866309 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.902637976 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.364254848 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.354020166 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.880228265 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.372920994 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.902848191 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.383637631 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351488287 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.371241006 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.388567214 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.503999004 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.351175256 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.349503188 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.36433664 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357323584 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.362197803 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37192204 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.356826306 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.351662863 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372088215 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.372685563 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.36040906 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.357439079 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360001372 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.377089975 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.365581172 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.368941898 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354522087 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346622854 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36115428 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.355180708 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.360815982 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.361315735 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.356371741 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.362062126 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.882942608 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395679796 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.348764004 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.349956712 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351203553 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373375579 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.885479965 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.378418663 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.375374449 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.399721792 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.353990677 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.494872072 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.368078781 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377922662 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363706902 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.356766896 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.348204619 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.494428444 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.880295294 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.393883484 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353715866 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.358152623 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378111761 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.354673233 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.3507029 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.508374299 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.362115832 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376174434 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.481369485 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.364189275 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.392000137 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360174426 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.359135839 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.37667058 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379511847 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.392430396 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.35837684 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378613997 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377314864 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.350098149 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.372017576 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.365494585 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.356282522 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.36098898 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.349378189 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.377188458 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375854316 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375973592 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.377076245 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.481953731 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.351937254 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.496811145 seconds)
done (took 230.237695041 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.414118863 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.347172247 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.436756741 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.351075581 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.453388541 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.455689939 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.348644942 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.349496549 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.348828945 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.730666783 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.349758019 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.350856078 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.349720542 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.350077639 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.435390525 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.35238175 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.348744132 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.7470597 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353505749 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.42267283 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.346844585 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.34996248 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.35225616 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.793720222 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.347161509 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.348036682 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.423714623 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.353049153 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.699566433 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.3496345 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.345700043 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.754132707 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.443438613 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.371099133 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.363832243 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.36048489 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.455926987 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372950703 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.436269818 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.436371624 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.440194974 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.393050443 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.350344953 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.355107914 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.354804824 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.355872533 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.352067799 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.381222546 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.347527392 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352232654 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.696612632 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.364416697 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.352836966 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.352938425 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.351563831 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.384527897 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352938146 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355343102 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.443685011 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.356326623 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.417108631 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.738704548 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.794146352 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.355779031 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.347364403 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.354101909 seconds)
  done (took 149.960386504 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.422475324 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.430036482 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.47143165 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.374388455 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.405161005 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.47602411 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.37431388 seconds)
  done (took 11.21468013 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.362432598 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357534383 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406868235 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406255558 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.357177605 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.534967063 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357902366 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.367419276 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355634195 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.410107767 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360128305 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357269329 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364376321 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.356604343 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405343179 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.3686523 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.47292965 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.358229916 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.358389295 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.518433161 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355822208 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364784232 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.410131571 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.369349468 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.359542737 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.362879846 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.180801231 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359139207 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356099081 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.359097955 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356004571 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.434503366 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359996575 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.353901812 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355655178 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473458335 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.359682536 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356373418 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.357894208 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.358802915 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.35834264 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.35892578 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.359681973 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.357036368 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.358888249 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380844543 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.359808269 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.359331889 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.359469754 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359429408 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.408116054 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.360484012 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.356902987 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357610814 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.415714467 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365850324 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.360883434 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356596758 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.36022409 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358142974 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.521208334 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.406703026 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.360982356 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408113944 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360790455 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361070454 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360621674 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.360464381 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414878293 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.36133144 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408487214 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.357736875 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.547048015 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.382317963 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362499012 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.362750938 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364373318 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361925868 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.362074341 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.366753615 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.358298807 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.361872872 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.367393733 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359766704 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358707168 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.527296634 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469659531 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.359837223 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.373055899 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.367644701 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.358992033 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.413808425 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36182184 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.359432769 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414291546 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476937868 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.418246762 seconds)
  done (took 156.157640449 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366216572 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.369523333 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.365421541 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.383432624 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.383299983 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.360736042 seconds)
  done (took 9.496818469 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.365287556 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.365675316 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362320584 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.363804295 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.363632545 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.36385792 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.362055761 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364287291 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.368256094 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.362700852 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.365275713 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.367160207 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.365006505 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.363914211 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.362933055 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362639904 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.364741094 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361786059 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.364337668 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363842463 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.461314567 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.36475423 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364490798 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.364698072 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.371706729 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.364893776 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371675013 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364210917 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.364970653 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.3716178 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.386934996 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.366306564 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.365533576 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.370608957 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.370165906 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.365395755 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36930824 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.369585093 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363324551 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.367382432 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.369300475 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366522526 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.365061819 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.370843 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.367441606 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.37143236 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.375556806 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372705654 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367384653 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.370420134 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.369012144 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.36588631 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.368771233 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.36950143 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.366326032 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390315877 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.376630013 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368486128 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.368586517 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36699368 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368454172 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.367358419 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368999822 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.372966315 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.373353696 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.372202729 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.369189962 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372422337 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36791157 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.366311685 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.371610945 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365186261 seconds)
  done (took 100.854506408 seconds)
done (took 428.943253629 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.458052668 seconds)
  done (took 7.729246277 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.489129776 seconds)
  done (took 7.76523465 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.168819611 seconds)
  done (took 24.444447228 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.398023963 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.433983449 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.392391461 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.370321561 seconds)
  done (took 26.868320136 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.844594263 seconds)
  done (took 8.115175952 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.363274035 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.358628664 seconds)
  done (took 13.992144208 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.488490002 seconds)
  done (took 7.759457012 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.096790965 seconds)
  done (took 8.37068546 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.385684078 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.383463832 seconds)
  done (took 14.306048981 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.339063903 seconds)
  done (took 7.60968924 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.830588236 seconds)
  done (took 12.103617078 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.362362843 seconds)
  done (took 7.635992622 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.427567676 seconds)
  done (took 7.69909783 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.071320468 seconds)
  done (took 10.342955642 seconds)
done (took 166.01625929 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.358933523 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.362240876 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.361360081 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.361269735 seconds)
  done (took 26.715724867 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.400922902 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.401151309 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.400909373 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.411806686 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.404206577 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.402466667 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.393471835 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.393429113 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.412262346 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.405230378 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.402103676 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402757386 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.402530146 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394066631 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.402873127 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.404815597 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.412282796 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.403695395 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.393024444 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403588163 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367961428 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.414131814 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.406521504 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.368968911 seconds)
  done (took 34.876957601 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.891140021 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.440367108 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.5238014 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.420934972 seconds)
  done (took 7.549245854 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.419109481 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.422417657 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.436842839 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.473983303 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.497992861 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.43296996 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.395353093 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.389815196 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.377124303 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.421883562 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.497173166 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.438380528 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.505128592 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.368330342 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.556385434 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.368861188 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.370973519 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.423178636 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475246663 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.494236308 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.37128553 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.423122366 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.430889137 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.438935611 seconds)
  done (took 35.704253216 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370966994 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.389810661 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.369880916 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369349635 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.37799499 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.370651707 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.370095773 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.371478173 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.370175168 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.377546264 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.370013989 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.382842955 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.367363518 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.36911949 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.374938149 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.372553491 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.375009473 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.369254648 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.368240814 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.377062533 seconds)
  done (took 28.741926955 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.364863066 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.291345597 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.714541076 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.618892526 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.366322889 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.371990946 seconds)
  done (took 28.003499321 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447069063 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.621862393 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.375317294 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.755852437 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.843369621 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.390934422 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.371751637 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.641250078 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.981774425 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.97690687 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437357843 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451036884 seconds)
  done (took 20.573290593 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.370431102 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.371869633 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.385990439 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.388526716 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.434773784 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.398848845 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.376464693 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.366095425 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.440861546 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.457192019 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.397451244 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433272002 seconds)
  done (took 38.098477452 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451656024 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411207017 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.404896527 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449506083 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.086033171 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579103547 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446820416 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106433285 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.390200566 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643641791 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370328722 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465996085 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62529235 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384281754 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375664913 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.433604913 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618908682 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875120832 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371037344 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.69684011 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403761778 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38274094 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.796526681 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629793187 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604884226 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350051225 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.630858226 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.146673626 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680754582 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391918431 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382045297 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370707337 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645417972 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068450965 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493475539 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603083442 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398268071 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936397749 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.365496887 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.720298239 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381415738 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37957385 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380602837 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372216304 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30730901 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375638574 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132620668 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.396021758 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.079993862 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369832331 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656525969 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474232439 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.374048625 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.941202632 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406919279 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.384180978 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.374713168 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468240186 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960642224 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.949412368 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38571179 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.316509891 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371502845 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.706574179 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034071411 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393846406 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.376457225 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379296852 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308152917 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.718643781 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398515269 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518520035 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.398405025 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021853049 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091407837 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397860593 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.31472267 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944145017 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38518248 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.313948139 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602258274 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154095203 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309288652 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.318916248 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310323238 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103795198 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384080566 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.961009699 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395748826 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135208415 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628229154 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416856228 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39972252 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598345196 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.252830806 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375065104 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.384880994 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512588336 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397291521 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.110005111 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326483152 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.380259767 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628004044 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.586919062 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378065023 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.459489562 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905147671 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397967125 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.400605649 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.379753538 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620693002 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.03255351 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415889173 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.014392532 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401456563 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.151740198 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147102161 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378591655 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.39023436 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.379501444 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67456979 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.170466321 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.258349408 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446201055 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38542393 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378155032 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.744137578 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.234420502 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.271072814 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.597710813 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409641398 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.395143967 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.383444056 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3258438 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.374272225 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379916442 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.177802954 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605096759 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395199542 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660446642 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312521969 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524772538 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385412307 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.601746554 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.699769782 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.411650709 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641957388 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387897432 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39191159 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397321904 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397024082 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479555358 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401331217 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.383731788 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646948063 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.384048124 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.387169329 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.737149638 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165922494 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39288049 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.386382086 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404067738 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0009676 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377161199 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385835323 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26796281 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.395210874 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452930987 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391597237 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617060737 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.813494156 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420362642 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.38846697 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.39263052 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60607396 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396180998 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.711045503 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470025519 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.884492606 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025223364 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416511135 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.326038286 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.101487312 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.083524206 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393088694 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.577914317 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385055596 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623458849 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430483336 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415396636 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.016898907 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414857546 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.728788109 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.396609412 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398461644 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.390608384 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385159299 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.781883573 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.013415063 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407548925 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410285395 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532043024 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.405113382 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.326779028 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905121577 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400669927 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397240137 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.170505365 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422343553 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.758373224 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228037065 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660883181 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388785579 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676167469 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.837992954 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.429196053 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.383065191 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399087033 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412000219 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.410575837 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404289253 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.400338026 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.74406544 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.834367113 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956257349 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132811749 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975464404 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.754356794 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.415036384 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.281246266 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.137406818 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341234734 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.040529227 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643801881 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1588741 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349391831 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890133594 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.733044199 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234295998 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67174058 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620527174 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.730222046 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.40550321 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701119195 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604324725 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422038772 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399334545 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.324031363 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.906022646 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968667347 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406778241 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474037526 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140159845 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414224148 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173471719 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.418662002 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.173674333 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833294646 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.957804657 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.77422224 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390436204 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398725187 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233413161 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410764176 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915142607 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048275032 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40581423 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.895511725 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348751434 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629197668 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.425223428 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383637988 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.082783704 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.413662583 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.648997743 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673802393 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3375131 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387437544 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989988813 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.267411122 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.397640393 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391262203 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159278922 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402726304 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711724004 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.404862761 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.820833188 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416638126 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323782786 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326345324 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.090092045 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400594231 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365090174 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900164753 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.388929539 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400225203 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403030531 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242925942 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648330295 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407797643 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026047726 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6393823 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397977218 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415573073 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.394949599 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398922178 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.380889486 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.752154418 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623629857 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446165281 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639053703 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.435813658 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.292137503 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.473088893 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605905382 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.282399847 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407327231 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662939637 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.134314451 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.395177719 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161799203 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442607979 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405984896 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415989057 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395372127 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417335536 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477536594 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630464302 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.426682679 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.40203438 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839288646 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421749065 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402374195 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407550537 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487956696 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.02863464 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.818240415 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.19161785 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021825756 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216996966 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.060841677 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707906594 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406297468 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393253917 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330149239 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538285722 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924415992 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668242108 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523831592 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.404840273 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411330251 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394174554 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408994587 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615175656 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673458059 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.260909185 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409644912 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05966359 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.55385267 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40351881 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.606317417 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907297353 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974441401 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510685714 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395765056 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154436687 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684605524 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.483589729 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401479221 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989659196 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.406112857 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.185779872 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.40158315 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393469214 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551835843 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683047529 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101160963 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.4188016 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.550788105 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.171380915 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.759962235 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656966564 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.961877786 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.641107034 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050718023 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.176515279 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665148895 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469358571 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634502539 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.524271729 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541194814 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.402350206 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.301799064 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392447497 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236043456 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.106547087 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.405280563 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035721173 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68445484 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.403507141 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.404668498 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425449387 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.406248231 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623060038 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143397823 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622535723 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406285361 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404161864 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.972225778 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038353069 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710641549 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343015065 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398189558 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668589804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657333071 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420137322 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.849333168 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.109305331 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973995665 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.367571688 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419992907 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413991036 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175517754 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028714103 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.844272129 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93479336 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057077369 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402205254 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701693256 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.406709771 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399024937 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683673213 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.398970214 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.403422019 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652735814 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.05857748 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274253922 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.409677878 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.790546604 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.343342922 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.625090834 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466384464 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352520456 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400012344 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.856453164 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426037913 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527862359 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407945167 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.398393557 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405547166 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.142424742 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686694826 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408044121 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.399258946 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.394302299 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419203395 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500024306 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989121755 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419469028 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.078486651 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.751028215 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651758163 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403174434 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.393348259 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.402849759 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401761498 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121534083 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.366877218 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398708741 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995287021 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.401229061 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.43934253 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409070686 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.618039537 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612761967 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40151693 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665947687 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423230707 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425188432 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.307150675 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.168461783 seconds)
  done (took 1695.002383321 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.449972348 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.441933027 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.434301807 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.442815294 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.424226845 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.415554383 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.464035648 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.432952962 seconds)
  done (took 52.812721406 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.410827965 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.569511151 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.439486356 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.416178149 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.420022209 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.4083917 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.921121537 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.440830108 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.417252055 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.413042434 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.403123417 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.421597035 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.122216575 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.422542684 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.409924928 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.405415913 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.419216231 seconds)
  done (took 66.779510201 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.800151896 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.80427343 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.75832411 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.455752306 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.428030462 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.430338608 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.880753027 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.418084309 seconds)
  done (took 55.285910847 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.421287036 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.42271884 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.42304851 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.427477252 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.422809767 seconds)
  done (took 8.422501605 seconds)
done (took 2099.841669078 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.410804171 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.414239474 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.407699076 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.412418601 seconds)
  done (took 6.947604653 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.382333146 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.131430054 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.380959098 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407761555 seconds)
  done (took 18.614405121 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.423248036 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.429227999 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.184565825 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.109885363 seconds)
  done (took 5.609864338 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.163239631 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.170608648 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.161762657 seconds)
  done (took 7.813621792 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.416677858 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.42352383 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.423086287 seconds)
  done (took 20.581716106 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.726694312 seconds)
  done (took 3.049269227 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.562356771 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.612125873 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.770049769 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.760157931 seconds)
  done (took 8.021669546 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.807945318 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.779797184 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.601754475 seconds)
  done (took 6.508078105 seconds)
done (took 91.308755054 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.510543444 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.437389668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.61996274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.476669121 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.643160411 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.625412819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.721623616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.451453883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.202138381 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.973038314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.479342561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.643340051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.872329044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438450152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.876896019 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.438244209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.638130399 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.545765302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.163950947 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.396477941 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.720688922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.114693654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.297619154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.125702113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.640764551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.56743962 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.693063066 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.44488071 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.339726614 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.727342743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.567482383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.41822884 seconds)
  done (took 197.134300804 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.427953203 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.414473323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.434727515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.414135954 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.413001242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.432499809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.414282659 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.409891518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.427224097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433731625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.418189085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.419749315 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.414281011 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.440075421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.415136149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.437275692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.415578763 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.43360583 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.41222189 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414524658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420357838 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.417573943 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.448543191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.415644152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415068283 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.43592302 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.436585167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.416619228 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.429360651 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.417211633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.418427132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.43271993 seconds)
  done (took 206.865106337 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420166349 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.452350287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.422226222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429507997 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.425296442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.425097162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.425269925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.423890321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417777696 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.438823141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.412438018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.450118372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.417303843 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416810096 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.420649581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416147818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.424014521 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.431189533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.443173831 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.423587219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.413066472 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.416506218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417513117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.435182078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.425387351 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417071315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.417679573 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.426994997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.417602683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.417122055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.442943942 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.444017707 seconds)
  done (took 206.949319402 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.622900338 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.425105522 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.424556027 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.381566515 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.429491668 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.432338108 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.426090937 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.61675907 seconds)
  done (took 15.079759301 seconds)
done (took 627.348414768 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.828047325 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.558716819 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.637262126 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.455786759 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.27385544 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.463624501 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.445488005 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.624890635 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.36629227 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.638009675 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.821363968 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.460299959 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.918424817 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.440302973 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.724540714 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.557266006 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.419895129 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.54587368 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.794415657 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.100568814 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.733916912 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.015994143 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.654086478 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.370860553 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.933743235 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.010643465 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.245419667 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.367526353 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.460591815 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.792941479 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.187229985 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.476439433 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.506973375 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.50756239 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.576451502 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.557557601 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.469880219 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.503276973 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.655546406 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.716682027 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.024129154 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.17719643 seconds)
  done (took 97.345486197 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.410100562 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.408034933 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.412530958 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.405429409 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.413364982 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.411387119 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.412107752 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.408129174 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.408004087 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.410341136 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.407996522 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.413551421 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.407400552 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.409767823 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.413663666 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.412853606 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.413582901 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.420086993 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.412324303 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.413208336 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.404169007 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.411244838 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.413346824 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.410247972 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.412399432 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.417199118 seconds)
  done (took 38.018235205 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.429701332 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.695310916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.874664035 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.444642244 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.426132306 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.429049988 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.514683943 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.429656343 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.428114961 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.433805545 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.591176959 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.433466278 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.467403884 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.901927895 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.440835504 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.430418022 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.42823276 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.426919105 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.698692693 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438254223 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.536211001 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43246084 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.513389618 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.441650667 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.453819357 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432420724 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.435021921 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.021411476 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.452882579 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.590571583 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.293570031 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.517149667 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.960586352 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.904609769 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.303996011 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442111274 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.435783733 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.59311705 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.43473603 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.428809316 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.521578896 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.435025445 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.886002975 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.124521148 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.454050299 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.433405061 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.045299028 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.615829786 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.708724937 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446678126 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.9083958 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.438492722 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433124289 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.428459573 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.710456632 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.446159782 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.435336335 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.056520272 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.457698844 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.51891416 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.437873124 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.433303023 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.703630162 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.435362635 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.694269448 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.432015332 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.443171474 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.454024558 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.877130263 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434915735 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.135843734 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.451488234 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.431507655 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.601176282 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.696361558 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.083818699 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.45685186 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.718884044 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.984768325 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.543932223 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.445400505 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.02609758 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.548480795 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.449027011 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438155685 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.440198074 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.434300323 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484230564 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.518118559 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.085333748 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.155367731 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.096689071 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.548527026 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.454772566 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.438842092 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.072309966 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.456860036 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.436842855 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.888770824 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.158500514 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.461278031 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.44522122 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.155595536 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.46675655 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.528664774 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.451714127 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.901382451 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.444440223 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.485833756 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.438415966 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.44481571 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.461889008 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.525489935 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443530516 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.437678901 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.115053066 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.628008467 seconds)
  done (took 189.683162597 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.438327272 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.431760163 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.448035141 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.427781711 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.431901476 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.441921927 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.430464444 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.432798835 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.437734031 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.431736542 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.43134204 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.429394459 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.434158352 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.432788414 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.444453109 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.438862892 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.04308824 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.431149334 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.432253257 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.432030219 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.242471222 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.438854483 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.430155634 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.432948338 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.432220632 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.437093948 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.433873508 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.434016373 seconds)
  done (took 154.923750485 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.440211978 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.083513045 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.463157251 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.582711077 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.466452072 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.438469545 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.582555975 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.510565089 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.468747694 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438975138 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.43765627 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.775533493 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.445616142 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.995458855 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.651821208 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.612326882 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.003628803 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.45891231 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.439981798 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.437207495 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.58945694 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.448517542 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.769419668 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.057279252 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.46178169 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.087024791 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.427699406 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.444426217 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441066095 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.091451841 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.467627423 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.78416941 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.528720262 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.515129191 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.115894928 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.029072287 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.022454387 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.606904707 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.449950969 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.437243055 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.440156028 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.425518728 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.055141626 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.461941549 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.442624736 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.047731282 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.461713321 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.443610101 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.449787805 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.441368741 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.507992993 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.535841965 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.800473646 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.063572037 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.545670885 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.465665723 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.590312027 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.838418572 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.443426757 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.034148454 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.435092246 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.062739894 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.462048082 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425765178 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440135937 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.444917339 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.607309487 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.598954166 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.04082126 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.468494278 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.035467882 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.638014698 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.450326504 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.442922131 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.445718168 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.060761926 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.03526873 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.630303119 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.603818788 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.661330086 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.433354593 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.443832865 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.427884932 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.534077979 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.449226431 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.065531204 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.024190738 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.461191941 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.44589767 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.446174298 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.442388832 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.641655818 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.087911096 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.54854437 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.006169924 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.793461183 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.772295064 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446116979 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.508530569 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.471271062 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.77831651 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.448092497 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.511935887 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.900246588 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.778001646 seconds)
  done (took 173.204859802 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.704452441 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.695425158 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.541594864 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.607053431 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.086706865 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.038013382 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.738931752 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.589815077 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.573334027 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.724233047 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.66861859 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.536583886 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.681806039 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.542966952 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.219913466 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.539696902 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.572110553 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.622605896 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.61394533 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.522628776 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.145659049 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.760117602 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.652550741 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.376864346 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.541752443 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.296535246 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.05288373 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.983962272 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.629821548 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.822570829 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.985973444 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.63139786 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.465278433 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.189759164 seconds)
  done (took 69.695484537 seconds)
done (took 724.198338329 seconds)
SAVING RESULT...
DONE!
