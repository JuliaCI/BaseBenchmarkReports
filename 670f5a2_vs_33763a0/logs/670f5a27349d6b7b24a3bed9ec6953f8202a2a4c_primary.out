cset: moving following pidspec: 6152
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "string"... done (took 0.628282619 seconds)
loading group "linalg"... done (took 7.251214697 seconds)
loading group "parallel"... done (took 0.164061575 seconds)
loading group "tuple"... done (took 1.677892209 seconds)
loading group "dates"... done (took 1.204582441 seconds)
loading group "micro"... done (took 0.161002876 seconds)
loading group "io"... done (took 0.413011459 seconds)
loading group "scalar"... done (took 35.924022253 seconds)
loading group "sparse"... done (took 11.537322728 seconds)
loading group "broadcast"... done (took 0.957360569 seconds)
loading group "simd"... done (took 2.373240061 seconds)
loading group "random"... done (took 9.39923345 seconds)
loading group "problem"... done (took 1.928281103 seconds)
loading group "array"... done (took 17.90940936 seconds)
loading group "misc"... done (took 0.839828165 seconds)
loading group "sort"... done (took 3.274678924 seconds)
loading group "nullable"... done (took 5.649872794 seconds)
loading group "shootout"... done (took 0.749708046 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.469337267 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.14614959 seconds)
    (2/2) benchmarking "String"...
    done (took 0.155615948 seconds)
  done (took 0.889051813 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.116341122 seconds)
    (2/2) benchmarking "String"...
    done (took 0.116418087 seconds)
  done (took 0.812950725 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.107496421 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.138014897 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112341241 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110028447 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.11003592 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109786168 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109071482 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.124502355 seconds)
  done (took 1.401012587 seconds)
done (took 4.322363689 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.400501209 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.851444587 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.501048493 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.168152668 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.298032941 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.245508595 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.24110119 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.229102947 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.137609957 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.109617082 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17938147 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.41808927 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.342999902 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.808924585 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.111925685 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.125559891 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.1449354 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.784753564 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.110640047 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.144405933 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453287391 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.16779089 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.146003274 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14247999 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.227453644 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.14383505 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.1702111 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.109031672 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.704308558 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133625862 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.216904607 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.115000518 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166069722 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.182656677 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.199205499 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.133540725 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.715078293 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.218266303 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114105502 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.110822473 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.719132091 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.109669323 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185874614 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.121959574 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.094161276 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185903529 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103192941 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.108558847 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.136640211 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10840345 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.192088254 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.500662479 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.136453107 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.177598912 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.136948072 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.723196015 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.132819404 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.281978036 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.159546615 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.135890814 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.112446142 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.109134059 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.177289444 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.114894569 seconds)
  done (took 20.604632475 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169352611 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161674749 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.10983352 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.160933803 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.146081915 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.111327564 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.118104475 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.110958733 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124386977 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.167727195 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.122382672 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.18739436 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.10864084 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.139378618 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147315102 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250784545 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121627758 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12555165 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.118606213 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.125359307 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141165577 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.119341782 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.129258406 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113378174 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173440841 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.235756586 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.144436174 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.153578887 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.120665973 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113953597 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.159973066 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.165648159 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.123438113 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.118487414 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.164713892 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.140144008 seconds)
  done (took 5.815224129 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.188033897 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193131543 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.136795608 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.204452605 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166038223 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13872232 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.173961507 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150672513 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.266742509 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.188616653 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.45573875 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185870354 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142714586 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.14830622 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108340313 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.113510943 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.107478402 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.131797486 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.167682916 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.181081407 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.155401046 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113610396 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.134984554 seconds)
    (24/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.123154558 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.111988822 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.110108834 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112302409 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.153347363 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358212382 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176745032 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111227273 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.764164144 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110635787 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108048377 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14358851 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.235858135 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110909704 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115836448 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149997426 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125533282 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.112694359 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.1124034 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114144473 seconds)
    (44/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.895925103 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.108406174 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.111177825 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.145294035 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146908416 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.159072952 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.124723891 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112061387 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.212137661 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.110739432 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103257963 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.895742608 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19891482 seconds)
    (57/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.167913322 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.109700822 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.26887623 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.129715239 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110878834 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.123395022 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190013898 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111665946 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.110494847 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.111327355 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111727406 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.112107832 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108717736 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.345787897 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.112775723 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113682124 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116478988 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.368039399 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116196899 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115058765 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.1304008 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.111071247 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.110323945 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.108348554 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.126467898 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109747057 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116964664 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113911902 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.108299456 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174020034 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111826441 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.145619565 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140445025 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.113397101 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.110562244 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155496799 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114409242 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.111212816 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170863488 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094214285 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.128933785 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114250352 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.169818941 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.110751724 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.20176602 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.111608746 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.13393414 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.124562837 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141387044 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.108684351 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109875494 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11298853 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.121016227 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.110219043 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173016764 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.111985818 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.114308391 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.111420593 seconds)
  done (took 24.541252838 seconds)
done (took 51.543630934 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.355670369 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095630597 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095691988 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097462743 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095906539 seconds)
  done (took 1.389098642 seconds)
done (took 2.013899533 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59409133 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.781101424 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.16541482 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.188685027 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.309541528 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193012184 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.284864228 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.173963812 seconds)
  done (took 4.394228763 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.183079985 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.12765967 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.1240817 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.125039365 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.127984641 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.140633037 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.123722367 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.124449485 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.124055161 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.126310197 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.126648997 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.128485542 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.141241075 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.126674768 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.125529231 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.129223695 seconds)
  done (took 2.806230108 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.16123007 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140990276 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.123442653 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.125655435 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.125350088 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.126017562 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.143740345 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.124800018 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.123268119 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.123639396 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.128888806 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.123967789 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.123583592 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.137591449 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.124871535 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.142926765 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.122248367 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.125533841 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.141808676 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.125298196 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.143518879 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.12343525 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.124428043 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.124816222 seconds)
  done (took 3.880918656 seconds)
done (took 11.715837677 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146225578 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117531705 seconds)
  done (took 0.895971897 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.159489275 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.161462781 seconds)
  done (took 0.960006507 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.147637699 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.122614685 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130798965 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.125646565 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.122056653 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.121749002 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.143102625 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.123522202 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.121055199 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.123788018 seconds)
  done (took 1.968855048 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.120084334 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.121341897 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120426348 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.155260665 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120258938 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.120728342 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.137385906 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.119893948 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.12382692 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.11859504 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.119022398 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125736311 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.11896876 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.145384479 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.123870501 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.121530328 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.122134805 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.118915262 seconds)
  done (took 2.938651557 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.118341864 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.119900512 seconds)
  done (took 0.880629583 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.117849274 seconds)
    (2/7) benchmarking "second"...
    done (took 0.117730125 seconds)
    (3/7) benchmarking "month"...
    done (took 0.118042804 seconds)
    (4/7) benchmarking "year"...
    done (took 0.117809953 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.116850683 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.118232424 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.118856175 seconds)
  done (took 1.478455536 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.490276382 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27938909 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336023805 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.118415617 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122119161 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.331537691 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.117577522 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.118213846 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.130723607 seconds)
  done (took 2.741962229 seconds)
done (took 12.515329708 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.119611789 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.167367023 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.577645453 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.155111135 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.12020956 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.172311716 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.215826119 seconds)
done (took 2.189788869 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.301999367 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.157095954 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.156227408 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.161769454 seconds)
  done (took 1.420783816 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.110436879 seconds)
    (2/2) benchmarking "read"...
    done (took 0.123979942 seconds)
  done (took 0.884606974 seconds)
done (took 2.957506398 seconds)
(8/18) benchmarking "scalar"...
  (1/16) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.118446067 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.118324055 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.118436639 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.118472049 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.119702094 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.119808462 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.118912398 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.135897798 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.118240874 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.117921839 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117748353 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.118216569 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.117621033 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.118774601 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132745581 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.121255573 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.119264398 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118525338 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117400963 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.118971763 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.119423567 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118807775 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.13600703 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120683154 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.120382906 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119881795 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.119537198 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.119375865 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11970824 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.135656287 seconds)
  done (took 4.347289136 seconds)
  (2/16) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.152572823 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.116247115 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.119719903 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.125050958 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.121407338 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.119441516 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.119074848 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.139553081 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.12139763 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.1206497 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.124796177 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.120422855 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.119132537 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.121157585 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.139527729 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.124690716 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.127283015 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.120356925 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.120758373 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.120310691 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.120474189 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.136676319 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.121269751 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.121568392 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.120470487 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.117885661 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.1205617 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.121966138 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.1212261 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.137361532 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.120801255 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.12165723 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.12089135 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.12318871 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.12157852 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.120067084 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.137589843 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.11675067 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.121291332 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.117385458 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.116296772 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.120222481 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.119590138 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.120129103 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.13686936 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.121142989 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.120664856 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.121272195 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.122428278 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.120409655 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.119363433 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.136831017 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.121984716 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.12183344 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.121167224 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.11729662 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.120774226 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.118067039 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.137028877 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.121420887 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.120993389 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.118045598 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.121640748 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.120857408 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124899681 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.12095763 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.138318148 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.122130335 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.120819344 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.123958501 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.122295719 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.124150634 seconds)
  done (took 9.759398595 seconds)
  (3/16) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187743427 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120643554 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149711357 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121340151 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121821566 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.138648427 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.120443808 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.122972482 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121200678 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.120857408 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120651865 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120455751 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.137366561 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119831929 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121530747 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122335808 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120694678 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.122594291 seconds)
  done (took 3.022904379 seconds)
  (4/16) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135329779 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119046004 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128989238 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.118485388 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.118733395 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118370919 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11983102 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.134979036 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.120516653 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.119412601 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.118927414 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119315382 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120796715 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.120434309 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.135242338 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119740017 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121047446 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.12104144 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120665204 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120815643 seconds)
  done (took 3.154320672 seconds)
  (5/16) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175225774 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13122381 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.133580813 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131792947 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133381417 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.149239928 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133015868 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131990109 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130872579 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130910781 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.130083092 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130382432 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.148588937 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.132265842 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132017486 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131528528 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131451353 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131917054 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.146919032 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132069587 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132250966 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132220795 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131752788 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.133809194 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130532661 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.146406677 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132169531 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132150883 seconds)
  done (took 4.522266204 seconds)
  (6/16) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.122791243 seconds)
    (2/2) benchmarking "in"...
    done (took 0.121638093 seconds)
  done (took 0.908376617 seconds)
  (7/16) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.158156774 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163571569 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.120244411 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12901054 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.180891858 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.153614995 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.146966664 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.123056571 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.11645196 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.163203436 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154822621 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.109619037 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.116657362 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114738543 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.134870084 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117221261 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.1190789 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.126367955 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.124242545 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.121919065 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123654551 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.134780407 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114849591 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.123214551 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.112319102 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.123733402 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118075978 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.125090838 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131322356 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.117553636 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.117471154 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.123527021 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.123143453 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.122409351 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.120770665 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.185613687 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117298436 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112244092 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.123362824 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122291948 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126698654 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.139106516 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.117056995 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.118469744 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118631217 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.123306812 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.122756532 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.122723846 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.129560959 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.11503509 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.122138786 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114860905 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.121874018 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1157738 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.115564067 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118384887 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.141082745 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.117459769 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.114001718 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.115217305 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.11575187 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.111990568 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114088949 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.136586992 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114660181 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.116482061 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115548772 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.119492919 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.120959656 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.120348823 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.1317032 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132773588 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.116148639 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.122166164 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123930284 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.122919821 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114933401 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140879227 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.120408119 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.117023192 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.124078837 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127124756 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117210156 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114232194 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.131418109 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.1279676 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.123044278 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.121494291 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.111136549 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116733908 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.120840856 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.135427697 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.111228251 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114820956 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.115071476 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.12028024 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.110700809 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117182081 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.119720741 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.139556294 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121681884 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113104117 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114720664 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122850748 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122955579 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.116323731 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.169372097 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113025825 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.114788898 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.121169249 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121130278 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.113992638 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.132486191 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.119738481 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112994956 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.112129343 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.120904691 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113132054 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.119543693 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.122375966 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1337191 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11529448 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.122546449 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.120850354 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.112663279 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.120884437 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122111199 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.130887175 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.120803351 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.121392252 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.120422297 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113385368 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.12024483 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.117154842 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.138648916 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114103825 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.121008684 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.120048366 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.121379123 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113584207 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.113986841 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.115254461 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.129511092 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113944658 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.121579846 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114767318 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.114116327 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.110628942 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113579736 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.128565511 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.120450024 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12300831 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.11305453 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.121458951 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.113881521 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121970469 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.129113346 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.122125935 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122589192 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.123191225 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122010208 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.110719107 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112491261 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.122821345 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115632092 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.113054809 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.120759211 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.119674506 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.122749128 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.110574397 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.120865789 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.128254088 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.114070791 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.122837618 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.120731415 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.122493301 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.112804917 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13186628 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.143395679 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12289817 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.115267241 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.116663928 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.122503986 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.11543961 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.123182145 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.139057138 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.122420665 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114410638 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.117700303 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12412186 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.114365102 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.121646615 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.132143061 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118962893 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.112593578 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.120795599 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.113864968 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.123008379 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115156125 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.122943078 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.137989335 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121986742 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114691959 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122728107 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.112930492 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.124076113 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.112164892 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.138661907 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.124154336 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.12367711 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121732659 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.11666274 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113217819 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.120626513 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.137835056 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122176011 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116536397 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.121506653 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.112154834 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.112183958 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.1231709 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.121142151 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.131608495 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.121991002 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116388334 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115688943 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.115823457 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.111299558 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.120718564 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.13160242 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.114807127 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115936461 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.11569914 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113200568 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116562029 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.111273927 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.131886464 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116751159 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.123688284 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.12001603 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.115280861 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.121074056 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.125136094 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.138068815 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.122520818 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113570517 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124093853 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.117427503 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.120199782 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.114532232 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.121097453 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.129051466 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.120924735 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114615832 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.114130924 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.113721235 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115323184 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122265338 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.138416903 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114815997 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.123250868 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.122654563 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.123068792 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113972314 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.122850957 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.130659912 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.113480143 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.114115559 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.111744726 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.123198697 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.113637146 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.122142209 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113325025 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.132742718 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.124103631 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113409603 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.114431101 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.123501529 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114402817 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.113159013 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.127884139 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115823667 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114254753 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.113817826 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.114019876 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.120824233 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117305769 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.138109043 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116895871 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.115287985 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.123148272 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.123748767 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.114403235 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.125224513 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.124829911 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.141180733 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.11511834 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.123608176 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.115390722 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115675674 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.113307914 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117316664 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.13424263 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11611707 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.115545071 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.116406493 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.116397274 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.115593749 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.115494855 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.141946402 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.115819965 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.125387034 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11516688 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.114171153 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.113260981 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114634829 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122434494 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.130853302 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.124617034 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.121784202 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.112823705 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.112822378 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.122829446 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11668076 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.147922023 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.115177915 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.123368132 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124399618 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.122796272 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.120678754 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.126184901 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.14117745 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.127269746 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117364365 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.113356943 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114281222 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115820106 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.121142221 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.12350076 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.140013755 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.113634702 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115933737 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.122367237 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.118675497 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113488315 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.112964505 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.137509874 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123990558 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.124119904 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.124015072 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.120920893 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116153388 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.11602048 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.142178695 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.124158526 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116611058 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123897599 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118762099 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.125431034 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.115998201 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.126535994 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.140393551 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.115147953 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.113210276 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.114214245 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.123322945 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.113826695 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.124996551 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.139220986 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.114301686 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.115237909 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.122685853 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.114006397 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116592131 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12339516 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.13351614 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124934811 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.12245377 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.115519439 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.123213225 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122952646 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.1123198 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.114722828 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132896997 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123819447 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116270442 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.123066697 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114427959 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123606221 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.121898183 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.13987058 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.124812939 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.123143872 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.113308334 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.124655517 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116960544 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.124450811 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.130258045 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115089775 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.11466088 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.117038905 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.124811333 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113530638 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125484044 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.124864342 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.131732114 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.115095222 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.124692393 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11514893 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123207148 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.114354626 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116609173 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.129765943 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116431496 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115755782 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.124184926 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.115516505 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.116122309 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126132311 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.143897768 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.125116539 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117382036 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.126672882 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.115981369 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.115664988 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.124128634 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.115455673 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.142877876 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118708042 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.115431997 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115837287 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.122310247 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.122162602 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122860037 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.129923086 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.117436163 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116374157 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116448328 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.117138988 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.11388194 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.12335151 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115476975 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117901445 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116573413 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.113655584 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115139711 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123635904 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114810829 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.114906651 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.131699988 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125619257 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11762676 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.115182803 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.112994257 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117200658 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115431439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.140008306 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.115959788 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.116210378 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.115702982 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.124863085 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.124008856 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.113836474 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.133087873 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.116571597 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124102094 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116976328 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.114657667 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.114815299 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124577015 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124296673 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.134656509 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.122770709 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.116357255 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124028132 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12329892 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.123137656 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.123044907 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.130052502 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.116677407 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.114184213 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.124795758 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117218607 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115050315 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.115454695 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123604126 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.140361843 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.122873097 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.122068945 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.113869019 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124519675 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.115535153 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117143807 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.130836191 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.114845331 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.124216704 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125860419 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11612196 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117008035 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.122099744 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.139738161 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.116193966 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.118607192 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11803142 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12423179 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.125051517 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114723807 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114370271 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.140734795 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126160596 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.122354385 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116463972 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119163618 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.123359542 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115627483 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.132998896 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118010607 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.125029935 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.122754995 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12420518 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114111089 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.115014975 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.142617856 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.127799213 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120292811 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116129922 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.114113604 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.123556564 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.115826391 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.113340531 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.134895715 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125618768 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.125064228 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117547909 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.116878829 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126826883 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11763968 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.134985811 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.115720372 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115459235 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.124378736 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115823318 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.1233117 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114670448 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.143720162 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.125178627 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.125036989 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.129522407 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.113925032 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117051198 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117080531 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.143706473 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.123173415 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.114515331 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.11396987 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.12382664 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.125686933 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.125658088 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.122826164 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.141050129 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.124250926 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116157997 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118220829 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.11594142 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124511783 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.124582602 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.140657551 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.1179833 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.115819267 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11564634 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.122815409 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.125265161 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.123917225 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.132982204 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125744272 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123700577 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116238804 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115491362 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115273807 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.123038132 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118920639 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.141961 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.117778594 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.115139572 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124604881 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124324888 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116185724 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.128491968 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1415995 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116937985 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118977979 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124299326 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.125897016 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.122903828 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116848728 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.123177815 seconds)
  done (took 74.593154341 seconds)
  (8/16) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14526561 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123742482 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123653574 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124227669 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123143034 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123478272 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123601891 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.141951711 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124687225 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124166488 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.124082608 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124176196 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126231345 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122984424 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.141206085 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124475396 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123685491 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123539034 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123481695 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122738304 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122614265 seconds)
  done (took 3.413953339 seconds)
  (9/16) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.124853936 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.124751758 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.11634161 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.123767066 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.124740793 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.123565364 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124259167 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.14051319 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.127035009 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116060359 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.115050664 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.114540963 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.118673122 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.123530094 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.133011397 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.124949967 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127104781 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.125526926 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.125525879 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.123882583 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.115363134 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.122813593 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.141464288 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.116327014 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.125345618 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.125707676 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.123731796 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.124384742 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.114549762 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.142309088 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.12513784 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.117252759 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.115685801 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.116856131 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.115080835 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.124972247 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.142278917 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.123769929 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.124176754 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.115485147 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.123552094 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.124914558 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.114736239 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12325904 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.141228853 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.117615236 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.125745879 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.123735777 seconds)
  done (took 6.756851204 seconds)
  (10/16) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.195859403 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142649355 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.123629338 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142054167 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124148749 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122434494 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.142957565 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145118105 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.124166977 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123342221 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124204761 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123508723 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123780406 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.141708454 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124865808 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123691288 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.125391155 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.123720272 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122927992 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123224748 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123519827 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.142783101 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123252265 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124538812 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123113281 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.123615091 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124153358 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.12358485 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.144565032 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.124884666 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.123835022 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124426577 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123003002 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.124046919 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123329859 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125068209 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.141653279 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124836126 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125052843 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.123598608 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124453117 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123455085 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.123044348 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.141107679 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124089593 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.125229962 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123802684 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.123078082 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124183529 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.126131402 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.122955929 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.141331381 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12452631 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.125611434 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123465211 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12362431 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.123562082 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124193796 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.142646213 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.124259027 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.124595663 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12412179 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12350984 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122962425 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.124704056 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123525275 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.14268679 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.124195402 seconds)
  done (took 9.654862396 seconds)
  (11/16) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157646235 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.125279199 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127500432 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124744913 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124641549 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124938513 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.141611933 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126728266 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125606685 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125091117 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125196856 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.197654464 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.142628682 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124669903 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125492914 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125063739 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.124333897 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124946894 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125118215 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126201523 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.146540772 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129252609 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.129493073 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131391639 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130898629 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12849993 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128287263 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.148339813 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126975225 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125871314 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124762444 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12495311 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124506964 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124995434 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.144678663 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.126540393 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128252971 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128703867 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.128835867 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129506762 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.127717637 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128220286 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.147797216 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.127576279 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129922178 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131252654 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128118597 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128781041 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128262889 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.147083159 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126656329 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125773256 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125770253 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124455351 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125180723 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.124203085 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125900926 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141733037 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125917269 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125655993 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125184844 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.124612285 seconds)
  done (took 8.996654882 seconds)
  (12/16) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.137212421 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.137139716 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.172486319 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.126286659 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125634412 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.147418816 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.124654749 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126700539 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.128030387 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.136235061 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.127805219 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127995187 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.161134038 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.129938242 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.127743339 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.1288696 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.128270082 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129448934 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.127702482 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.198906369 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.124777809 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.128653651 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126542907 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.127442463 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.124172634 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126130076 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.14303446 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.125044742 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128440844 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.128693251 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.127947136 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128230762 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.128617263 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.146968619 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.128611955 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.127444069 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.12625614 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125480831 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12584205 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.127674965 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126787701 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.144240689 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.125046628 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.126592215 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.125326831 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124607536 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.127233638 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.125299174 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.14362853 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.125495079 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125187288 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128009295 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.12494899 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.124681707 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124976856 seconds)
  done (took 8.134916319 seconds)
  (13/16) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140975469 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125353859 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.141091336 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.125102361 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123944811 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.125596349 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12462751 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.143437444 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125675339 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12509866 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124646088 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125411758 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1268016 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.124544609 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.143424384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124793453 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.125759288 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.125742875 seconds)
  done (took 3.092973904 seconds)
  (14/16) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.133528083 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.177711006 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.127378699 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.179653502 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.140238714 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.118041059 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126176241 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.118298702 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132384921 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120718843 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.120257122 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.141244358 seconds)
  done (took 2.40983417 seconds)
  (15/16) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147080575 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150477166 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127212895 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126219891 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127251028 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127215758 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148706061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12712266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128558387 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129589873 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12914666 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128401664 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1293096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129421276 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147562549 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126138526 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12567087 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12511144 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125896387 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125013453 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124472533 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142469304 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126411327 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125402539 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124980069 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126837987 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12436379 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125518475 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124723612 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144088644 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125598513 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125797771 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125309231 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12613238 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12743513 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130003822 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147007521 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126252927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125369015 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126329193 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127451891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126397708 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128791448 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129121937 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148864391 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130910711 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131909721 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129229352 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12955614 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128519486 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129007677 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148492765 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127154298 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126746494 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127610501 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126415866 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125810622 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125538311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124271599 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143713946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126120298 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125023161 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125734634 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125136095 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125849243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125333675 seconds)
  done (took 9.515833264 seconds)
  (16/16) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147804271 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128325956 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126140412 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125188406 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124318533 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125813345 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125092094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143787978 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125515822 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126987587 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150641572 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126096692 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126228202 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125513168 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146295838 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126843016 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126011834 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126232812 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125002418 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125505206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126256768 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146166213 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129136812 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126190348 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125431174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125594533 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125353371 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125736241 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125175555 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144025089 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127145498 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125634273 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126045917 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12588179 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12536657 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126553663 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143927241 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126560437 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126982837 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126486964 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125694755 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125843517 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126287568 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125895549 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146135483 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126640406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126950292 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126050666 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125721504 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125920273 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127859346 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144035355 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126571403 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127173225 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125683092 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125748812 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125193294 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125403237 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125231008 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143309216 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126583066 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12673532 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124951015 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125828361 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125144475 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127637949 seconds)
  done (took 9.407686271 seconds)
done (took 162.370151963 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.174373291 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191560463 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.209439762 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179547762 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.162746533 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.150851306 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14812596 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118635338 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.116320239 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117515712 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.178894117 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118498379 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184009573 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.117817985 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.213730112 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118164468 seconds)
  done (took 3.271543609 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.205146758 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.287312235 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128806463 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.13583557 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.12466753 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.117381128 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117344461 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.119885427 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.119392906 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.118114321 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.117527515 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.136313005 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118699731 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.118065363 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.119666125 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.116659807 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118760703 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.117002518 seconds)
  done (took 3.226855804 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.133929182 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156461307 seconds)
  done (took 1.047323127 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.1458462 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180504169 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305340854 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154011345 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.154093687 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.122816526 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151124315 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129801632 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188649548 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136765995 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.119622614 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120216126 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136745602 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117646595 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.132526629 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12036377 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.157059079 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13098202 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.133491347 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117952848 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13930745 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.118487484 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117194233 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.150350683 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181716194 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118218734 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.122193961 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.118304639 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117068798 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.132668267 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.136856579 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118860087 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117892855 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.118329433 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121584037 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.118681713 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.11976949 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.136385639 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.133618667 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.118630868 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117832512 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117453344 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122831193 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119898976 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.137697747 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121338614 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.118730602 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.120216824 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117287331 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121939948 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117308353 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.117121598 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.137896796 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122988335 seconds)
  done (took 8.081791127 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.899284609 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165268293 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12018365 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.060157161 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12161337 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120862088 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.93637075 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.150396919 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.190169294 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.021713237 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13276821 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11861669 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.130830533 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213039592 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.074171653 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.240702885 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.818886396 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120542633 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146000898 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.127500571 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117385318 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143044727 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125768437 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.419532958 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118326081 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119967211 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120379554 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12294643 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.150363465 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124935091 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122620202 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.137394847 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.229838375 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.123867148 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118574785 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.13654369 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122339999 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.130232553 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175415952 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.128751848 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161191797 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123338938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.143440307 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121863192 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128895302 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119301134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.119503884 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.131114857 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.129617391 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.136864541 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120197477 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121998056 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119972659 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122241174 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120496119 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.237892053 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.237809221 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.139986936 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12083003 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119737084 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.170330599 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123457808 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.129795206 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131405816 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.144515863 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120281706 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.704322945 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.129174667 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120309084 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122657148 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122953554 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.143406644 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123857999 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153157885 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407829585 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12313605 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123303879 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123552653 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.181999262 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123632132 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123915409 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.130356381 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123251776 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123340544 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124843878 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143153958 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.134644147 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209887305 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124340183 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124074856 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123398304 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129004882 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.142957914 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.180344861 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.12509398 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.126486056 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.175242047 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123556913 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.125557168 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.135728293 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.140370085 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.133937005 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122681382 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125726183 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123482392 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.124887948 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127677898 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.148061845 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120180506 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11971669 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126837987 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123467726 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117726772 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.13069574 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.436379584 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.130033016 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.120691884 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124494742 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119064023 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.126165765 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118916029 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.191045803 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120849166 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.128177333 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119349954 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.119223331 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120818297 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.122678729 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.141997736 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122163999 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120641948 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124092945 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.213713071 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.124867694 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119623172 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.162063486 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181236664 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120094671 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.136175976 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119440677 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.129238501 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121149833 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120122607 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137474675 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.706315168 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124192609 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119117941 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119685681 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16945877 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119235344 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.143537946 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.121050658 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119934944 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.696538366 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122282729 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120516373 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123807085 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138315563 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121095078 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120036912 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120059052 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.12204911 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.130308889 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121712614 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.138421652 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12041175 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.125937803 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119587274 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.120671281 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.119765509 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.120611916 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12066269 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.139588701 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126159199 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.130927753 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.121519503 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.123191992 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.507172874 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12141977 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.140507951 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.133440573 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120664366 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.210763324 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119154048 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.131501289 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.125911472 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.138712263 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.239766454 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.127411803 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170830593 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.124959746 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132580267 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120295605 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137206205 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.121138589 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120978512 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120307198 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.120765916 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121148227 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118752462 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.071734332 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121082088 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.192228076 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.122806748 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.134424985 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121592487 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11941763 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.210918232 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.139324491 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124693511 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1211645 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120007929 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.120595783 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.935693917 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.120765148 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141732549 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121275269 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.122707154 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.128300743 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121140684 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124409605 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124846742 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.147527349 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.173687939 seconds)
  done (took 43.230485875 seconds)
done (took 59.619669304 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195174051 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1603544 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.212295711 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165238191 seconds)
  done (took 1.550296514 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.218036107 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14658142 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.18409876 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.118362049 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.214853579 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.11915384 seconds)
  done (took 1.793651762 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.158871739 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.139610841 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141162085 seconds)
  done (took 1.223938044 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.186687776 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190981968 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.50646671 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.353167816 seconds)
  done (took 2.076089215 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213160207 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133290763 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131178832 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.182549052 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.209869356 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15046215 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137655354 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.143039907 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.156676139 seconds)
  done (took 2.281214322 seconds)
done (took 9.709776502 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185926157 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125567295 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.126597383 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.129826705 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.201835442 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.137399385 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142272562 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.12829334 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.136512471 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.127805637 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118584074 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.16084699 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.129286064 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.18199954 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.131001994 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.120869002 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118751204 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.157264203 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.14240086 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.143112962 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.179942366 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122527592 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.136848269 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.139551475 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181989623 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123049168 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.126082933 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.131193429 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.141343323 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.147831019 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.132518667 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119150417 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.141303723 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.140436853 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120774855 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.127539822 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1428894 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10941119 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.127923669 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.127910818 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.13999392 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.127982825 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.126058628 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119158519 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.14850394 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.12894447 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12236123 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131528737 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.119577357 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.131243645 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123473314 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.161981352 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.12898407 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.119002005 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.119299109 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.119196023 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.135517023 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123398513 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.159764241 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122099116 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1202141 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122631866 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.12830612 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121127974 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.128400755 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119476785 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.14653295 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.128224407 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.127726368 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123302272 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121193554 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.127199625 seconds)
done (took 10.633915458 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.128716717 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.152184297 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.172960682 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.176540187 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146297025 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.122174894 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129493841 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.137685525 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.128768959 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122757649 seconds)
    (11/66) benchmarking ("rand!", "RandomDevice", "large IntSet")...
    done (took 0.132772261 seconds)
    (12/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.204660453 seconds)
    (13/66) benchmarking ("rand!", "ImplicitRNG", "large IntSet")...
    done (took 0.130720324 seconds)
    (14/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.12151678 seconds)
    (15/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.128590933 seconds)
    (16/66) benchmarking ("rand!", "MersenneTwister", "large IntSet")...
    done (took 0.121869687 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.129206235 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.122403135 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.204867532 seconds)
    (20/66) benchmarking ("rand", "ImplicitRNG", "small IntSet")...
    done (took 0.129069206 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.132107861 seconds)
    (22/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.132545207 seconds)
    (23/66) benchmarking ("rand!", "ImplicitRNG", "small IntSet")...
    done (took 0.122407954 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123383497 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.14359354 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.127679295 seconds)
    (27/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128741371 seconds)
    (28/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121983739 seconds)
    (29/66) benchmarking ("rand", "MersenneTwister", "small IntSet")...
    done (took 0.130235486 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12556904 seconds)
    (31/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122614125 seconds)
    (32/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.149130626 seconds)
    (33/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135648325 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large IntSet")...
    done (took 0.128970032 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.130282209 seconds)
    (36/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120397014 seconds)
    (37/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.128010064 seconds)
    (38/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11904789 seconds)
    (39/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.139242079 seconds)
    (40/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120536347 seconds)
    (41/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130213975 seconds)
    (42/66) benchmarking ("rand!", "RandomDevice", "small IntSet")...
    done (took 0.131989341 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121177351 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120179878 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.128085561 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.128188578 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.148645229 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.129636666 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123841097 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.133053512 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123053707 seconds)
    (52/66) benchmarking ("rand", "MersenneTwister", "large IntSet")...
    done (took 0.127455384 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135352478 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.148817877 seconds)
    (55/66) benchmarking ("rand", "RandomDevice", "small IntSet")...
    done (took 0.129049581 seconds)
    (56/66) benchmarking ("rand!", "MersenneTwister", "small IntSet")...
    done (took 0.123270774 seconds)
    (57/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.130246381 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.128058463 seconds)
    (59/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.128884057 seconds)
    (60/66) benchmarking ("rand", "ImplicitRNG", "large IntSet")...
    done (took 0.128140597 seconds)
    (61/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129659644 seconds)
    (62/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.140097424 seconds)
    (63/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.123183193 seconds)
    (64/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123168177 seconds)
    (65/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.12838986 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129092254 seconds)
  done (took 9.726320645 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.131200833 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143898536 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129823003 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129186051 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.121777916 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.120251395 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119806786 seconds)
  done (took 1.707035859 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.12192598 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187316488 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.181695311 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.201693316 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.176691044 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.187092157 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148962938 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.148812569 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.14869356 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.122611541 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186300228 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.194139003 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.154203408 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123793465 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183912633 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.12078638 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.20510192 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.173624803 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131767803 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.180739324 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.149592557 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151264417 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123020253 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.120126589 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.184373655 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119389135 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.22685287 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133665811 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131782051 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.178879731 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128723632 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.18133549 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182268569 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122836151 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129968133 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.178643667 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.201919672 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129066901 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.180601807 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122847046 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.205561685 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.130481467 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.129324267 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.133866045 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.132325207 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.17302305 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.153358817 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.133392451 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.129920362 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189639758 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122260939 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.203548859 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.134801849 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.132430947 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.123366595 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.130437048 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134734172 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.128773009 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211683343 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.131941429 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.179177813 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.180157756 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.20955954 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.179730328 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134878255 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204113526 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.178392587 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.129281524 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.175767184 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.128844387 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.201905354 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.132071823 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.12230878 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.176392543 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13053755 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.206142555 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185032887 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129628915 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124361275 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119531332 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.151005585 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.129828661 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.187911814 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129932235 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130712851 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123931472 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146581419 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.134459487 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.173888523 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124517859 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12929193 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122354735 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.150638709 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.133854731 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124102025 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.180858683 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.121251662 seconds)
  done (took 15.959372767 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.121633554 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.12215869 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.124488526 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120400017 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.120832894 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121016926 seconds)
  done (took 1.565414918 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145844524 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.132546743 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.144288391 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.128652324 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.137490319 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.207607616 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.188813047 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120408189 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136526858 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.138894198 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.209639578 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.189064196 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.191391726 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12989033 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.212998804 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.138991139 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.191922241 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128468013 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.139035488 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130182477 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.148203762 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.133877709 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130066959 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.177197743 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.130826133 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.137407766 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142058358 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.140109786 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.13987938 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120482151 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129335651 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.131008629 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11913603 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.141178777 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.195919188 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.120502404 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129340679 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.130580502 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12913346 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.15335337 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.196627239 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13020287 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.138870244 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.138065672 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.119956386 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119619262 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.152542233 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.120937865 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.192088184 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.130872019 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.135637849 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128439029 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.154185389 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.13681216 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121821567 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120531598 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.134891944 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.188716875 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150368912 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120555833 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.129329994 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.131662134 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120662481 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132467404 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132360198 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.158361758 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12131857 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130209924 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130044331 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.12800699 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.130492851 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12815694 seconds)
  done (took 11.311715617 seconds)
done (took 41.086833669 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.584179594 seconds)
  done (took 2.404239743 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.857446956 seconds)
  done (took 1.678453664 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.954056029 seconds)
  done (took 7.807110178 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394778554 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.336151406 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.020337991 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155126431 seconds)
  done (took 2.737060627 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.022018861 seconds)
  done (took 1.862618773 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.313644004 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263429448 seconds)
  done (took 1.405116112 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.628306924 seconds)
  done (took 1.462822682 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.499213483 seconds)
  done (took 2.327429137 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.232236097 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.199093894 seconds)
  done (took 1.27548587 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.580561886 seconds)
  done (took 1.424283423 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.970742998 seconds)
  done (took 7.81848432 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257917575 seconds)
  done (took 1.0977544 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267919824 seconds)
  done (took 1.112916664 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.904984985 seconds)
  done (took 2.750979576 seconds)
done (took 38.024303162 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.132571747 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135499144 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.135543913 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132122667 seconds)
  done (took 1.377195033 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.13210409 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.12432391 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.125886749 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.122909066 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124468691 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.12003768 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.120397294 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.141825228 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.121958037 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.120290296 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.123123897 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.120581465 seconds)
  done (took 2.370570517 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169558573 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153236944 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.162561663 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.215717725 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.182969287 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27641462 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215938982 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237746713 seconds)
  done (took 2.47429076 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125501365 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138163869 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.160138031 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121420539 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.122247179 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.350310259 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140610549 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121264862 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.190564317 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.123264698 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140230402 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.430966396 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120509529 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143209203 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12610598 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.121359218 seconds)
  done (took 3.553462839 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.206451882 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.401003368 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.629654023 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.199088166 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.174596924 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.130294921 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.551959296 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.129610337 seconds)
  done (took 9.291037499 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.207418974 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.141915742 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.156249827 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.157347523 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.157994183 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.178380436 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.175616676 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.129625701 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13965051 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.137694535 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.1325795 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.12986868 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.195377708 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14236538 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.13413696 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.133229722 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.134485188 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.139578503 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.195207365 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.134278319 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.138505113 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.139336713 seconds)
  done (took 4.257723137 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.134134935 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.126426482 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.130306934 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124414634 seconds)
  done (took 1.38639746 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.187648653 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124743237 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.122866951 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120360836 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.130326489 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126071968 seconds)
  done (took 1.67963482 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183242506 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137558834 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213336556 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.343928302 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14777822 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16068894 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288764165 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15581758 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.159005206 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14252413 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19019311 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161213098 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155047929 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173255551 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141792821 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.177461394 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161132501 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179263299 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146873216 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184997897 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177157235 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170540192 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174993552 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149175325 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141650555 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167903963 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.138520967 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142661578 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161429117 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156315898 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151871687 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174405698 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137795875 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169553266 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152617662 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151940481 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274715242 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137609678 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196245906 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171736434 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183858296 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14297719 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189033745 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150061261 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141496624 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173920301 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142445698 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.181670169 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142989902 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145666987 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155670005 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171013646 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.180331871 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141253996 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279527097 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137844764 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164249239 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169095525 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177149552 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17293051 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181878925 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.134043722 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179834251 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189408723 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167310801 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144524873 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.150783001 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129460108 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180129052 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177174555 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163690229 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155392875 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166063646 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16217607 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158365111 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158042584 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148584328 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166042413 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181173947 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.133393989 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147723883 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140912402 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136623519 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198212427 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157625212 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180508709 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138825056 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16775108 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177132581 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1742378 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15059869 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152542163 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157596577 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150496163 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.140929164 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148822417 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157659574 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150627674 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134876369 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148192029 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163874051 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136241697 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148190981 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.135944243 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157597555 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.139700866 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171364319 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162668171 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.143154098 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164523785 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145614955 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.179006493 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15364796 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172188097 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137845323 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138767297 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178914512 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184926869 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142796022 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161490159 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172562866 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145064677 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159622254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14929203 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20265957 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144832664 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175559056 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139605323 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138764014 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133618039 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182722468 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149760944 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.146555578 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136550884 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153026373 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187462805 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.137136573 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143286797 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164457436 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138042415 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135732833 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164206635 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141996688 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.148343026 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152475255 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.141540415 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147485445 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181237502 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160703187 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14465834 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140172853 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151580239 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137575595 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.184034436 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150987915 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.132761435 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.157404164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171131399 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157389637 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175779615 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151320779 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205735939 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159578672 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138813602 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194926813 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137211443 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.134133049 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147323902 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152772849 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149315985 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187634056 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182146627 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.150024804 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.175397095 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145991889 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150820087 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168786268 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152366024 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141821596 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181891287 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155959567 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.134074662 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.130967562 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134995239 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141453463 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157026952 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143635514 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155542125 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149889521 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200515582 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160718552 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142027697 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172762961 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.134744719 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172405862 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.162851645 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16001993 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.168058941 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17069538 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187124424 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140426586 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144997978 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.133977163 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135055931 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136947513 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173057761 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142486276 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139114897 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139907107 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172734535 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153359236 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166159747 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190168806 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15132455 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20228096 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.134195207 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171458745 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155006094 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161985054 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180959954 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159775136 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150693604 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169789259 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142988086 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178223781 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179345851 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160777778 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166823518 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.161693047 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13669769 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141550752 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17786319 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138814021 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153818513 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142192104 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137872072 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143218282 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.161994762 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133591429 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156378475 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142797489 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149416487 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150259611 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170532929 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137611494 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139133754 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163431746 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142928441 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.123162659 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174101819 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157788501 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146954791 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143481095 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155573624 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136037551 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.325231651 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163824534 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158237021 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139574313 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139078929 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186592582 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151215737 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14580248 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195638775 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142077913 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168598046 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163558509 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139779228 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162592185 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147799032 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148354201 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13448009 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.132135798 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.155099681 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.167426667 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158032387 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141737996 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164645658 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158435511 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152934602 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.17667128 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141782624 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184227617 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157007815 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159322844 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.182709547 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.152806932 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172915565 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135820135 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13556724 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134820427 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197467849 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137989266 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157995091 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196938521 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206705476 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166044718 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157041758 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143665127 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134639957 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179730886 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145327908 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183003509 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138825894 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163754902 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166045697 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134535474 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136919506 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154087681 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293912654 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149640118 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153733377 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.123272938 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287904279 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137973481 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138079221 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15169408 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158043212 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156332938 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176880663 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161403207 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144098352 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153525528 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137105284 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202274326 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181979357 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151134862 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174082193 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140453056 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150620341 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144907324 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155643675 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1469154 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.169451646 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156947332 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170548783 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16318388 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13950098 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158124577 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181267115 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159510717 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148507922 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143025799 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171973405 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135499912 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17214263 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138472288 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131255518 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152499839 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194959918 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137162693 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155969833 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157046646 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138067068 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134349208 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166583125 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159779117 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14339938 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.138114631 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155415643 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159653403 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161022013 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16924338 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137650186 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16126492 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140564523 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156243611 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140957799 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146030651 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13922399 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173681234 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160248241 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132159893 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291398159 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147671362 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151185497 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143917952 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144012936 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.147242746 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.136607596 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193336388 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150489947 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173324345 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146376994 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160513219 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183414316 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145163781 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148584607 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14062745 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229614883 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149022791 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180205947 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138313119 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145114613 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14128738 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134946001 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146778441 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18361476 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141124859 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.140492377 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155358234 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145002797 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140207983 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166001975 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173157285 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149587737 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157686603 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197177448 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141447247 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160018463 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14940622 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136284091 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.173974568 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156190183 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143723374 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14220286 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141485171 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140013126 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191954019 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.137168491 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151992582 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15909607 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159024482 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18174022 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13381115 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159186444 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139866529 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159836038 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131644813 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.144507762 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185229071 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138442744 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13580491 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161754997 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142887514 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.182029991 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134072287 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174353457 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172338885 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.136189316 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138256548 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289367454 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153004513 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203721158 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136184915 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141218237 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144005882 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15104735 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154133776 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185875453 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138011405 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138215621 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.132859842 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160967606 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.158574425 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165296649 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171506377 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145829509 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174787241 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.165686362 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.265676941 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146389774 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161658057 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.126456863 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136018553 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165960839 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138507348 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143016581 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184148976 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194850896 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.166506718 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142824098 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132866058 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.138474801 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141085819 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176634194 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144815063 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162992165 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142882904 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.122246621 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14063213 seconds)
  done (took 78.501978431 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.190645054 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.179107064 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.271358879 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.225521485 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.174280682 seconds)
  done (took 1.989767554 seconds)
done (took 107.734730935 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.13669343 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.137220103 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.137232675 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137293158 seconds)
  done (took 1.478805161 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.171610789 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.109118135 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.111359901 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.133091785 seconds)
  done (took 1.467884638 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.356841258 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.114703204 seconds)
  done (took 1.428169462 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.158620939 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144977165 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.14320578 seconds)
  done (took 1.397423164 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.144564613 seconds)
  done (took 1.086002277 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.132753195 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132476134 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.192434177 seconds)
  done (took 1.402562505 seconds)
done (took 9.210843083 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.229405988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.980457711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.464285577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.19890588 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.808448407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.41956299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.432990955 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170287646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15428624 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131145448 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142041037 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.710553346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.414636316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.931591441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.43400107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.903572095 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713013715 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128752825 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.127867797 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.152764398 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.422780578 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128648273 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131816064 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128352845 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.713064978 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.459027576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131063035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.902925645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.129698127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130653486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.417649898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.130967981 seconds)
  done (took 21.481290603 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148726175 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175868873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138128669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129316445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128031365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.15403977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.133243131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.129688909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162314356 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136320687 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145171743 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.151859046 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135254071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13212113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146895984 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.129204838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13061626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129150641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.153183027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.133576483 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144776581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128810794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13145715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.132360337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.131662972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.170375087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13285642 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128736553 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.130380826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130834026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133411937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.155318983 seconds)
  done (took 5.511067713 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.18145422 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174889489 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135193588 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162270007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189485898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132916902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.190179491 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148729738 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165638312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.132148439 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.167162179 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13183143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.162838236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.133008046 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147168854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.130536781 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.154852164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130373213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130417842 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.132622801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144823166 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.129344032 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.154581319 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.131414756 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.132136845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.149713382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131177505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130352261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.153017852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133182998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.135061937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132512521 seconds)
  done (took 5.719659183 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.138631456 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.143287844 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.170134345 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.169480002 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.13769237 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.13710291 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.1607768 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.138777774 seconds)
  done (took 2.167958858 seconds)
done (took 35.82989024 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 0.140411221 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 0.139502377 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 0.135082332 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 0.130094128 seconds)
    (5/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.0)")...
    done (took 0.136206077 seconds)
    (6/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 0.136962179 seconds)
    (7/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 0.138713798 seconds)
    (8/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 0.15818464 seconds)
    (9/77) benchmarking ("isnull", "Nullable{BigFloat}(1.0)")...
    done (took 0.134543506 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 0.138729094 seconds)
    (11/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 0.13431729 seconds)
    (12/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 0.134482954 seconds)
    (13/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 0.139348796 seconds)
    (14/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(1.0)")...
    done (took 0.134646801 seconds)
    (15/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 0.158276551 seconds)
    (16/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 0.138343431 seconds)
    (17/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.0)")...
    done (took 0.135786961 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 0.135847792 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 0.135511995 seconds)
    (20/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 0.134851087 seconds)
    (21/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 0.13459463 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 0.135086592 seconds)
    (23/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 0.159438362 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 0.135431678 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 0.137220312 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 0.135371405 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 0.134422331 seconds)
    (28/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 0.139347469 seconds)
    (29/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 0.133931486 seconds)
    (30/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 0.158911968 seconds)
    (31/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 0.136891081 seconds)
    (32/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(0.0)")...
    done (took 0.135459684 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 0.135205113 seconds)
    (34/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}()")...
    done (took 0.134958363 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 0.135265525 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 0.134087722 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 0.160996171 seconds)
    (38/77) benchmarking ("get2", "Nullable{BigFloat}(1.0)")...
    done (took 0.127496311 seconds)
    (39/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 0.13484976 seconds)
    (40/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 0.134347252 seconds)
    (41/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 0.13414583 seconds)
    (42/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 0.135607398 seconds)
    (43/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 0.133717074 seconds)
    (44/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 0.134382382 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 0.158851205 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 0.136677366 seconds)
    (47/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 0.135451443 seconds)
    (48/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 0.133935677 seconds)
    (49/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 0.134265398 seconds)
    (50/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 0.125531816 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 0.134051753 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 0.157661529 seconds)
    (53/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 0.136684141 seconds)
    (54/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 0.137111849 seconds)
    (55/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 0.135256237 seconds)
    (56/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 0.135396128 seconds)
    (57/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 0.125908469 seconds)
    (58/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 0.138851805 seconds)
    (59/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 0.133931626 seconds)
    (60/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 0.161288038 seconds)
    (61/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 0.137109824 seconds)
    (62/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 0.136875995 seconds)
    (63/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 0.135096719 seconds)
    (64/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 0.135185627 seconds)
    (65/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 0.134407804 seconds)
    (66/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 0.12590386 seconds)
    (67/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 0.159428095 seconds)
    (68/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 0.137748383 seconds)
    (69/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 0.136155652 seconds)
    (70/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 0.134886986 seconds)
    (71/77) benchmarking ("get1", "Nullable{BigFloat}(1.0)")...
    done (took 0.124916653 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 0.133886579 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 0.135872655 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 0.159009047 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 0.136654388 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 0.136607246 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 0.136178211 seconds)
  done (took 11.770292158 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 0.146882644 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 0.14444686 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 0.147604105 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 0.142631056 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 0.141749799 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 0.140437761 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 0.160340781 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 0.14539747 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 0.139415913 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 0.143244263 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 0.141942561 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 0.137474325 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 0.141398916 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 0.171815354 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 0.148716188 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 0.200923176 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 0.150736627 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 0.138865564 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 0.147915178 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 0.167279513 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 0.142354764 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 0.144921152 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 0.149136982 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 0.148876264 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 0.143524396 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 0.144311718 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 0.165258236 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 0.148034467 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 0.138023208 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 0.143258581 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 0.140685348 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 0.147827039 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 0.142491304 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 0.167926522 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 0.143965793 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 0.14328484 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 0.138632224 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 0.141253018 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 0.144515445 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 0.142208237 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 0.162289143 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 0.142715635 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 0.145160289 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 0.1450058 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 0.151770277 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 0.143581037 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 0.139664548 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 0.162909473 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 0.145089958 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 0.138365361 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 0.143684264 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 0.138417392 seconds)
  done (took 8.784666123 seconds)
done (took 21.508376171 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.33766773 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.161266038 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.21604968 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204064287 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.23427616 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.213072975 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.183824982 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.149335191 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.972265397 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.186672901 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.195074108 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.342078207 seconds)
done (took 6.392322376 seconds)
RUNNING BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.035710197 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.133181741 seconds)
    (2/2) benchmarking "String"...
    done (took 1.267570967 seconds)
  done (took 3.354121289 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.14438959 seconds)
    (2/2) benchmarking "String"...
    done (took 1.19928002 seconds)
  done (took 3.296623963 seconds)
  (4/5) benchmarking "replace"...
  done (took 1.957167249 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 1.956420227 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.399579304 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 1.958834989 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 1.956800512 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.956694633 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.957448779 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.966039606 seconds)
  done (took 14.119389065 seconds)
done (took 25.722109355 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 1.958004925 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.149987928 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.286241777 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 1.958001223 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 1.957653484 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 1.960800881 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 1.962026875 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 1.967735562 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 1.95710949 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 1.957732125 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.363639887 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.220548786 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 1.969026998 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.349539281 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 1.957001306 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 1.958183649 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 1.957416652 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.203861608 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 1.95715803 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.003809353 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 1.956472817 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 1.96192358 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 1.980642371 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 1.976120497 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.057491668 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 1.979612142 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 1.965793765 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 1.956212309 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.140364916 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 1.976200185 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.004999728 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 1.956598601 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 1.962566888 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 1.961003211 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.956341585 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 1.96011923 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.14358453 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.059451345 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 1.960381903 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 1.962258609 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.143817241 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.966638914 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 1.961446215 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 1.962294787 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 1.956691351 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.032412013 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 1.961728723 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.115180709 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 1.961253802 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 1.957708449 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.004427518 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.353067244 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 1.959383103 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 1.968486985 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 1.969365169 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.191041613 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 1.970715689 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 1.98193185 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 1.976213875 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 1.960802068 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 1.958026926 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 1.956209586 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.008881856 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 1.967131924 seconds)
  done (took 128.294486264 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 1.955963953 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 1.957447591 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 1.957680652 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 1.965543314 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 1.957183522 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.957097617 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.956986011 seconds)
    (8/36) benchmarking "gemv"...
    done (took 1.957227522 seconds)
    (9/36) benchmarking "syr!"...
    done (took 1.95806862 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 1.96414167 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.956882786 seconds)
    (12/36) benchmarking "her!"...
    done (took 1.957870062 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.957687077 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.957891363 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.958404348 seconds)
    (16/36) benchmarking "herk!"...
    done (took 1.976569996 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.957727097 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.957757407 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.957408062 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.95749215 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 1.968183454 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 1.958556601 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 1.956527782 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.95716222 seconds)
    (25/36) benchmarking "symm"...
    done (took 1.979141831 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.011419609 seconds)
    (27/36) benchmarking "syrk"...
    done (took 1.966053295 seconds)
    (28/36) benchmarking "trsm"...
    done (took 1.978138281 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.956836201 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.956087852 seconds)
    (31/36) benchmarking "gemm"...
    done (took 1.977515507 seconds)
    (32/36) benchmarking "symm!"...
    done (took 1.966818546 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.4897759 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.900772158 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 1.97213689 seconds)
    (36/36) benchmarking "trmm"...
    done (took 1.984339001 seconds)
  done (took 71.234067336 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.959451268 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.957671154 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.957693014 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.957939344 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.98106533 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.956486017 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.366574339 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.366583697 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.924507928 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.349195453 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.06216014 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 6.848978841 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.044114548 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.95685855 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.040534973 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.970330165 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.958182671 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.973092459 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.985557731 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.957198468 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.957363293 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.367018041 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.970594165 seconds)
    (24/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.957085883 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.104765766 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.957227941 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.980268162 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.361885335 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.197183246 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.957355681 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.980511977 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.310335693 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.981258092 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.956906321 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.159758096 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.303135267 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.95655055 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.060425003 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.959220722 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.981269336 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.95656382 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.21979925 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.957642379 seconds)
    (44/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.420885925 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.957960157 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.95858789 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.960714138 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.464314072 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.95550328 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.368091641 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.958027693 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.753091646 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.957188062 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.957462398 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.677998788 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.357374775 seconds)
    (57/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.957044747 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.956816226 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.962581904 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.955814353 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.956880201 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.980814041 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.650472103 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.039628503 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.957655229 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.960398386 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.979725494 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.957449268 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.957002074 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.473280925 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.01822634 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.367536193 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.95710516 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.145975057 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.043083482 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.067202122 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.956697217 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.957264188 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.956688486 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.957222214 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.05868805 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.956150569 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.281918113 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.105223157 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.958892887 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 6.837006787 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.044283006 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.957841217 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.150181667 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.955932734 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.956951859 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.57329497 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.043856834 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.956441947 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.956678709 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.956909814 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.281200354 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.368161063 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.06145572 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.956582118 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.001398712 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.957340105 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.276535305 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.35909336 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.438681623 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.958515814 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.059609116 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.104609741 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.9592085 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.957582944 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 6.848501754 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.957644894 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.019473356 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.957660747 seconds)
  done (took 334.615919323 seconds)
done (took 535.10489331 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.95577615 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.958334506 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.960055675 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.957357077 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.959314868 seconds)
  done (took 10.751674009 seconds)
done (took 11.703231326 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.999264851 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.058361193 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.983412067 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.985787578 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.985617236 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.983514105 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.987782943 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.983118454 seconds)
  done (took 8.932150869 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.979909875 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.979877818 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.979812307 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.980162561 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.980578885 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.980339189 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.980428797 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.979840942 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.979187647 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.979108586 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.978897456 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.981155634 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.980332624 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.980036987 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.979616472 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.980331507 seconds)
  done (took 16.66143062 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.982602536 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.98042265 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.979124929 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.979952199 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.980539983 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.979908897 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.980844631 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.980010237 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.980148034 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.980172549 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.986824092 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.979541881 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.979744142 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.979417843 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.979430765 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.986513718 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.979601596 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.979922866 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.985538663 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.979704193 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.979025127 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.978547551 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.978720129 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.978965203 seconds)
  done (took 24.53417121 seconds)
done (took 51.084921974 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.962504519 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.966218539 seconds)
  done (took 4.88308639 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.360130014 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.387184362 seconds)
  done (took 3.702047376 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.980631825 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.979955482 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.980680086 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.979985304 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.981515736 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.980978168 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.98031272 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.980091742 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.979558434 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.979286752 seconds)
  done (took 10.772354222 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.979530428 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.984879293 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.98017618 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.980213894 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.979394936 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.978362611 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.979632815 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.98083206 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.980076168 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.980494447 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.979306028 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.979898561 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.979949126 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.979475811 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.980080079 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.985774588 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.986251395 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.979483076 seconds)
  done (took 18.639997587 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.001637778 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.01222844 seconds)
  done (took 2.967697848 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.171321367 seconds)
    (2/7) benchmarking "second"...
    done (took 1.066039543 seconds)
    (3/7) benchmarking "month"...
    done (took 1.157465345 seconds)
    (4/7) benchmarking "year"...
    done (took 1.144934911 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.067010757 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.012332435 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.066041289 seconds)
  done (took 8.648414509 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.98015851 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.285358494 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.42053141 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.624600377 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.980333742 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.984968968 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.7650505 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.985919508 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.991177929 seconds)
  done (took 11.985878233 seconds)
done (took 62.566727516 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 1.957595795 seconds)
  (2/7) benchmarking "parseint"...
  done (took 1.95854864 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 1.973102096 seconds)
  (4/7) benchmarking "pisum"...
  done (took 1.965748996 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.369722505 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.001989778 seconds)
  (7/7) benchmarking "mandel"...
  done (took 1.957402195 seconds)
done (took 14.154709479 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 1.957990189 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.957112354 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 1.958950646 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 1.940972801 seconds)
  done (took 8.775821772 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.892669452 seconds)
    (2/2) benchmarking "read"...
    done (took 1.35271266 seconds)
  done (took 4.198996465 seconds)
done (took 13.930320609 seconds)
(8/18) benchmarking "scalar"...
  (1/16) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.978930631 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.980087901 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.980059336 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.981331006 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.979444174 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.980842187 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.978760149 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.979576383 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.982189705 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.986804607 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.980731558 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.979525818 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.980530555 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.980503456 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.979030224 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.980129736 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.979199869 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.979438866 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.981020631 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.980082663 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.979561367 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.986014422 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.981080905 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.980403304 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.979501932 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.978941038 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.980033285 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.979755666 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.980611082 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.979645386 seconds)
  done (took 30.424640173 seconds)
  (2/16) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.980831222 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.979988586 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.986204391 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.980520637 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.980153482 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.988268131 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.98031719 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.980507717 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.984269229 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.985213413 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.98091978 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.980098587 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.98014126 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.979152866 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.985928728 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.980105012 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.979781926 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.979923215 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.979629323 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.979550472 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.980493609 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.979120389 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.979774174 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.980525038 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.978376859 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.979816987 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.979442707 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.979697907 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.979552567 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.985669406 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.979903869 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.981123857 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.979244009 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.979003615 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.980457222 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.985859794 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.9822446 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.980864955 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.979420288 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.985385502 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.980015825 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.980194548 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.980041387 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.980000878 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.980614295 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.980161234 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.979453323 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.978696453 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.980148803 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.978317774 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.978980358 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.979667596 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.980326409 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.979952688 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.97922592 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.979637076 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.979293247 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.978748764 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.979957996 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.979468129 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.979081768 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.979395914 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.979717742 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.980153342 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.981248663 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.981601013 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.97976265 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.981283863 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.980074701 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.979840942 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.980249933 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.980925368 seconds)
  done (took 71.700605156 seconds)
  (3/16) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.979595939 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.981292803 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.98532907 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.98396493 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.98282114 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.985999756 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.980663532 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.981785045 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.97959971 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.98202872 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.987706677 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.97973632 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.982783565 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.979780529 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.980383609 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.988196194 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.979060535 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.982686695 seconds)
  done (took 18.670225383 seconds)
  (4/16) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.982778746 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.979404783 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.980014847 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.980364542 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.979842269 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.98036133 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.98037879 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.980287089 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.983234809 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.979926358 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.979517926 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.980864605 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.982658898 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.980452123 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.979933971 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.980138396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.980201812 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.98028632 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.980317329 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.980740987 seconds)
  done (took 20.60352144 seconds)
  (5/16) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.987021953 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.983581222 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.981429203 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.982834619 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.981679444 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.982519914 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.982289299 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.984807635 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.983006987 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.983275876 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.982467464 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.984533369 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.982943641 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.982190124 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.982156669 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.981519437 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.982016428 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.982605609 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.98315952 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.981266751 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.983310657 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.982607425 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.982317584 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.982793133 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.98398735 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.981689292 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.982185654 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.982490441 seconds)
  done (took 28.525848155 seconds)
  (6/16) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.07867041 seconds)
    (2/2) benchmarking "in"...
    done (took 1.080469032 seconds)
  done (took 3.113334245 seconds)
  (7/16) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.983798429 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.980404422 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.980519032 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.97998684 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.981831209 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.98130712 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.995586799 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.98532027 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.983952568 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.981873602 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.981526841 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.982605889 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.984861343 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.982427514 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.981345952 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.992161084 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.982815343 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.983236905 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.982378695 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.979242054 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.982132853 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.983491057 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.985937947 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.983081228 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.979495228 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.996820127 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.994203662 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.983566276 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.981054713 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.993169662 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.983144714 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.98125446 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.98252599 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.98266714 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.980448911 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.982309133 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.997024413 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.985573934 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.99732047 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.986283521 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.979777527 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.98110479 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.982809965 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.983226009 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.984461362 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.985286886 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.981064632 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.980427609 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.982069717 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.980589711 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.981296924 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.979908898 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.981458676 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.992363554 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.987517896 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.997058634 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.989915408 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.982380581 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.981927311 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.994342367 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.003262985 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.986211515 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.99409443 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.985042232 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.985586016 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.985288283 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.997153199 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.98479667 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.98676843 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.979748193 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.993047719 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.007131982 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.988235794 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.989897039 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.982698009 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.981490035 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.980237291 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.981698091 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.995074863 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.989114537 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.986403997 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.983308282 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.984860156 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.982792574 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.980026091 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.983995381 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.983699673 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.983392162 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.981165343 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.994708614 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.98779363 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.980747203 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.981014346 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.981195444 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.983119571 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.984370149 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.981329539 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.983786695 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.981966072 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.980329133 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.983401031 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.980780866 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.983444124 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.984870073 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.982423114 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.999305009 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.984391312 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.980639158 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.995063479 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.986177223 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.982634523 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.981204035 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.986174918 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.982871426 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.980591178 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.982628866 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.984074721 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.983833209 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.985589229 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.981309844 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.984435521 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.994990354 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.982852638 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.980424327 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.983464587 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.984172918 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.981292943 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.989112303 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.98327413 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.980751114 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.979979018 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.98367474 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.982221552 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.981952664 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.984852125 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.986383464 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.982416758 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.980324663 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.983665311 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.982661901 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.984659781 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.982993717 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.984461013 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.985868315 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.9855886 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.984864836 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.006627729 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.98549229 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.988487014 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.983684727 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.982686206 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.980746644 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.984408702 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.985030638 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.981091101 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.984137648 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.981317806 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.985306791 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.980760333 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.980481177 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.982285596 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.987662887 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.982300543 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.985059343 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.991648658 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.983784321 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.98229286 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.980990111 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.981380803 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.981526701 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.982285597 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.980900225 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.98356872 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.982997977 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.980589082 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.983291521 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.984113902 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.984833476 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.984081355 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.982601209 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.981868854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.982864791 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.985481324 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.996904285 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.987018391 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.983782435 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.979924682 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.980908466 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.982283152 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.987604848 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.981991634 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.983929381 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.002349322 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.989163077 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.982893914 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.980390104 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.981736086 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.983534359 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.993607358 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.99078556 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.981219539 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.983056714 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.982077819 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.984766428 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.982332949 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.98483648 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.981422847 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.981300834 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.982765616 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.98325639 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.979466943 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.985084975 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.000123061 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.981315641 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.97980211 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.982560841 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.981208434 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.981605203 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.980675476 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.980563031 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.983927146 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.983972892 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.994965142 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.983525279 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.983004892 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.989757566 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.983998524 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.981692713 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.981748587 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.984355064 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.983825807 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.997648095 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.987140543 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.987953217 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.995930348 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.985624848 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.980845329 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.988048969 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.983559851 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.981835888 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.981176377 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.984403184 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.988062448 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.984095394 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.983439654 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.980807894 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.981998549 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.992866481 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.985167876 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.981381152 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.983528981 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.983404384 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.982045552 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.983391533 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.98511382 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.983448872 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.985684632 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.985456461 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.981521044 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.983781317 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.984398016 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.983774054 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.981691107 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.982237266 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.983467521 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.992078531 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.985866639 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.985819845 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.983459908 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.981421799 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.982636759 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.984447254 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.989538893 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.007655442 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.988246271 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.002229404 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.987767928 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.982628447 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.996408621 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.987347414 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.982667978 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.982792644 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.984467928 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.983655254 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.982566498 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.982409285 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.983078645 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.982303685 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.984335717 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.984309946 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.983338035 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.981355799 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.981724771 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.984562073 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.983854441 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.982480873 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.981088866 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.982097304 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.986093692 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.988179712 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.983810511 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.982552251 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.996664031 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.987875693 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.985013248 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.986938982 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.98347192 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.982332251 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.98372768 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.985237019 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.98172051 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.985012759 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.982016498 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.985027496 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.982825888 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.99409925 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.987314378 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.982028161 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.984798835 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.981810606 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.9819982 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.984762657 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.984741217 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.996714177 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.989267839 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.982434568 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.984498169 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.984351851 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.983654486 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.981222193 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.983343553 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.981201939 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.982756676 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.998359428 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.988049598 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.982868003 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.987073356 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.984616619 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.984302333 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.981126371 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.980650193 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.994498742 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.986140975 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.982881901 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.984942289 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.984213566 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.981901539 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.983197165 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.981006663 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.981305933 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.982259197 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.996867828 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.988493509 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.984307013 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.981849717 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.997120793 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.989053077 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.999857105 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.98972942 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.983200587 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.985942067 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.981448339 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.984694422 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.983336289 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.985508911 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.984748759 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.985995845 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.983892504 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.983301857 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.984897242 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.984405279 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.986372289 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.981494155 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.98669363 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.985399959 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.988281541 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.983216023 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.982003159 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.98081879 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.984100422 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.98429968 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.982248371 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.983713781 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.983194231 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.98381994 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.981655278 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.98506479 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.983701908 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.984716213 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.981222402 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.981512174 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.982907393 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.987630341 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.983801083 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.984313159 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.00215621 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.983576613 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.982637946 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.984340816 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.983673832 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.995584355 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.988444829 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.982607216 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.986261241 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.988524029 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.982430377 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.982981844 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.984410238 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.984111038 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.982824771 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.981589698 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.98360867 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.982028511 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.988525706 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.986045293 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.985261953 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.984625699 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.983110492 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.984465343 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.982924784 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.983304232 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.986413216 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.985465121 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.983840543 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.982504619 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.98183938 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.982231888 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.983345159 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.983110423 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.982403768 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.984122562 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.982643324 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.98074392 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.981171069 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.98251293 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.983271127 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.999460336 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.985015832 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.98330933 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.982522219 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.983181031 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.984548943 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.984103076 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.982634733 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.983808905 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.989401166 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.989514659 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.985602638 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.982502593 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.983693666 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.98359554 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.993619231 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.985001375 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.990586093 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.999861365 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.989265884 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.985715782 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.980557164 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.983817565 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.982547291 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.981955667 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.980363145 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.981515038 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.995908348 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.990493414 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.983993425 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.984679547 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.983653439 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.980845608 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.982267857 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.980314605 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.982721057 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.98146552 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.982190053 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.987711496 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.979634771 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.980626307 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.980540961 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.982666022 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.980634408 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.979751546 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.980230168 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.98411006 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.983403266 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.983424428 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.983493502 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.979375729 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.978508859 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.977471786 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.979259024 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.981663171 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.979465196 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.984195476 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.980826472 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.980222415 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.980359095 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.979853094 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.979818523 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.980378161 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.979303374 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.977457049 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.979325443 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.980657526 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.989884328 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.981422847 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.981726866 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.978225373 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.982889933 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.980868866 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.981576289 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.977285171 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.979505285 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.996818729 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.983417095 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.979785698 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.982056657 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.991966227 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.980448841 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.977423874 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.976102687 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.981270593 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.979020935 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.985879838 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.978833132 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.991231497 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.983611952 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.979213977 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.977960465 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.977589189 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.97994326 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.98667994 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.986960912 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.980196434 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.978356186 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.99379076 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.98142145 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.982445394 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.993274773 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.983594492 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.980718847 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.980441297 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.976887075 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.97983745 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.981187761 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.984255051 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.976259062 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.977238725 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.979433977 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.97759324 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.982512999 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.982375901 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.981773171 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.978167755 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.977291595 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.980485438 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.979038257 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.979581482 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.978604472 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.979950593 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.980260479 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.979174796 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.979305749 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.000571302 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.988555738 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.979404294 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.980341005 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.978357025 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.993009237 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.982220295 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.980463857 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.978507742 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.987321014 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.97972284 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.980056193 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.982192009 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.977482751 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.979814543 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.980286739 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.985072963 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.978116142 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.99501871 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.985333679 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.9898353 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.981968307 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.980806149 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.97806879 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.980843863 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.984490277 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.979587208 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.982352295 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.980065342 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.981430181 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.978382098 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.978436714 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.978211545 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.979320624 seconds)
  done (took 588.78580455 seconds)
  (8/16) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.978330136 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.976967322 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.977947964 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.977619431 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.977094853 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.977928129 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.978764618 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.976540523 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.977870929 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.978570739 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.977982536 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.978046929 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.978221602 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.978600701 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.977638916 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.977565164 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.978160841 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.977746541 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.977072643 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.978690098 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.977716161 seconds)
  done (took 21.525202891 seconds)
  (9/16) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.979869228 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.9848494 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.978088694 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.98011898 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.977691158 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.977428135 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.978663208 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.984466042 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.978602098 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.977871906 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.977622713 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.981172955 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.979483564 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.978502923 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.980077424 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.979253787 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.979702167 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.978844097 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.978398022 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.978922808 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.991214525 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.982016429 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.977370307 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.977448598 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.980738892 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.977516484 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.975897493 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.979261678 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.978368549 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.980648307 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.976993932 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.97802898 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.984486993 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.980170384 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.978629824 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.978606427 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.979458561 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.977614262 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.978367641 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.982690955 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.979879006 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.979435932 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.997154317 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.982339235 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.978193526 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.978932167 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.981348257 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.977748218 seconds)
  done (took 48.084039878 seconds)
  (10/16) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.983246892 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.979533501 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.977854516 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.978225793 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.977854168 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.977712738 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.977076205 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.98904756 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.977922402 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.97686745 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.977885945 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.977515437 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.977902567 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.977454605 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.984127242 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.977389444 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.979126536 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.977679075 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.97696411 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.977731107 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.977836917 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.980960917 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.978643793 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.977126211 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.977425482 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.977546726 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.978576814 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.977696745 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.978409265 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.977701564 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.978764897 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.977636541 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.978129622 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.977396706 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.978259875 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.976708142 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.97729446 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.977189837 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.977704706 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.976231335 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.979992219 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.976969767 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.978047418 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.976500573 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.977785303 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.977594427 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.9776723 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.977325329 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.984645464 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.978288441 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.977557551 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.977944472 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.977681659 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.977765329 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.978382795 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.977099741 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.977401246 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.977861361 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.980332206 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.978880904 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.97780884 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.978608942 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.977915278 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.977630395 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.977380573 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.977700307 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.977644922 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.983602523 seconds)
  done (took 67.614011114 seconds)
  (11/16) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.978859812 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.979555291 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.97865811 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.979963304 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.979464987 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.979203571 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.979422872 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.98188352 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.978955634 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.97917766 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.979178637 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.977087519 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.980028815 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.978098053 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.979240447 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.980178695 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.979891996 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.984090994 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.980330809 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.979851069 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.979569958 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.979361482 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.98162846 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.979086726 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.979592587 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.979474485 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.97902764 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.979952339 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.979196237 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.979021355 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.979673742 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.983495946 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.980622885 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.980110739 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.979810561 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.978394878 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.977539602 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.978397881 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.979217748 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.977682986 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.982976536 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.978517729 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.981596473 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.980059406 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.979637005 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.979066192 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.979110821 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.98025091 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.976433176 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.982908999 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.979200567 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.978783615 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.978361145 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.979520999 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.978682205 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.984088968 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.979526517 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.983183197 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.977987355 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.978661812 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.976852783 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.975738116 seconds)
  done (took 61.806420916 seconds)
  (12/16) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.976379119 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.975509176 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.978770276 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.978168174 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.976497221 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.976289304 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.976087532 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.975685596 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.975431094 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.977064472 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.976327716 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.976035011 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.976147316 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.977360459 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.977110846 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.976054776 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.975468878 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.97532277 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.977209252 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.97762397 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.97669983 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.976567691 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.977160363 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.97598291 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.97548571 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.975285824 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.978114187 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.97535371 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.973882503 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.977642618 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.976455037 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.975809703 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.974397931 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.975305379 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.97715778 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.974343874 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.976644097 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.975554503 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.975213329 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.974717036 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.975148307 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.976862281 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.974723881 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.975974319 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.974857347 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.974513379 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.974598795 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.976590948 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.975077627 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.974522808 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.973744496 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.978646028 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.974273474 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.97507609 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.974890871 seconds)
  done (took 54.730841682 seconds)
  (13/16) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.974256293 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.974727442 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.973478751 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.974918528 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.974000744 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.975148795 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.974668357 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.977245291 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.973903106 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.973951017 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.980808872 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.976683348 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.973074928 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.977391678 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.973736325 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.975100325 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.973974065 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.973951366 seconds)
  done (took 18.529683559 seconds)
  (14/16) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.973952414 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.975338414 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.974067163 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.989376722 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.97580223 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.974821588 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.974041531 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.975287221 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.993197529 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.996975174 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.993783497 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.978387475 seconds)
  done (took 12.743392508 seconds)
  (15/16) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.974415672 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.97313157 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.97609291 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.974083366 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.974258598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.973394452 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.974893107 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.974658299 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.973483151 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.974264395 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.973895214 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.974195042 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.97463162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.974478878 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.980912657 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.974519735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.973944732 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.974536567 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.974046281 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.973858687 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.974304554 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.974001233 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.975683151 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.973779417 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.976158211 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.974135119 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.973686249 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.975139576 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.974254617 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.97519943 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.973608026 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.974122128 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.974266421 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.974725627 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.973220267 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.97449948 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.973622205 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.973900731 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.973887951 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.973840528 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.974366084 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.974228566 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.974884097 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.974256573 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.974410992 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.973501938 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.973664109 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.973783468 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.975114852 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.976063157 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.973661455 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.974624985 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.973508572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.97354468 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.974198395 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.974814884 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.97345689 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.974357982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.973669626 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.974295614 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.975532433 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.973264267 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.973509132 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.974664097 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.974168572 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.974947862 seconds)
  done (took 65.379950902 seconds)
  (16/16) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.973611588 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.97438941 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.973967989 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.97596943 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.972988674 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.973951576 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.97358456 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.973773969 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.974449684 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.974686725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.974174788 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.975161646 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.974333049 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.974700205 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.973572408 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.973615639 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.97361508 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.974283671 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.974372021 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.976783081 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.975002338 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.974175208 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.974250217 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.973815944 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.974278224 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.974494871 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.981115824 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.974375722 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.974760408 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.973895214 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.973569195 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.973886065 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.973836198 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.973419874 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.974462395 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.973357785 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.973546217 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.973587144 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.973009068 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.97431978 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.974101944 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.974299595 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.974316077 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.97482145 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.974158306 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.973794573 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.975031392 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.973199106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.973737303 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.974195951 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.9750191 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.973951366 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.976165684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.97941505 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.974041461 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.97458769 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.973273557 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.973386909 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.973925455 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.974525113 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.974096916 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.973916097 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.973680243 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.974975169 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.977085285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.973623741 seconds)
  done (took 65.383994154 seconds)
done (took 1178.602889197 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.197269988 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.154116176 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.953073013 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 1.971302775 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.953597591 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 1.958654938 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 1.97157355 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.441609858 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.491467595 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.324275385 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.980016524 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.232866065 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 1.992749288 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.632816855 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.022508519 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.133028439 seconds)
  done (took 27.387126045 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.005828674 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.988347401 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.07935639 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.9761279 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.004939176 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.16600882 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.034350527 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.980240015 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.103651938 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.009662891 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.954984709 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.006850102 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.975940656 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.817903031 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.99661605 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.165133988 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.223927777 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.95328561 seconds)
  done (took 22.428542485 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.330113627 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 1.968817334 seconds)
  done (took 4.246348645 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.996511707 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.977020123 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.983572003 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.976001278 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 1.953875629 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 1.95364187 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.976331627 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 1.958971179 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 1.950833273 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.075252027 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.98151406 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.999678451 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.974092376 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.979131494 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.975208021 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.032306831 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.165466502 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.975517697 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.972982598 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.988510481 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.975092713 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.126268222 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.01385658 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.974454573 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.074072687 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.954528576 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.983175864 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.990953877 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.162932451 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.975277094 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.976069233 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.984957095 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.980108015 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.924851617 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.486263372 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 1.951894651 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.00438729 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.992618893 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.974407709 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.177679159 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.976128389 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.988405648 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 1.95022691 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.466026162 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.123890755 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.112358282 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.951709781 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.975654446 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.980906022 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.042951621 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.976310116 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.980521895 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.046433977 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.783591335 seconds)
  done (took 65.937746136 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.967320076 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.951420848 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.211241457 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.958036283 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950193318 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.958836106 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.954212124 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.191349542 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.011142828 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.951442358 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.328547296 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.464891381 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.951881869 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 1.992725401 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.822873845 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.006293887 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.949630536 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.950763362 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 1.950437273 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 1.956892354 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.482420076 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951191768 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.951078346 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.152745751 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.009222332 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.476503192 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.955819242 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.951070733 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.953332752 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 1.950255685 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.447434901 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 1.95568361 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.016002594 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 1.951724447 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.272408384 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.306443439 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.286561859 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 1.958025249 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 1.966602946 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 1.954070557 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.953808582 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.505309859 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.311253896 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.95041248 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.950048536 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.472653541 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.952188613 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 1.963456665 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.951380479 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.273025083 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.950175438 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.951080092 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.950877482 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 1.949990358 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 1.949963051 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.02432998 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.048294829 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.510226894 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951540626 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.950986156 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 1.962717606 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 1.954465508 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.952696638 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.95426702 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 1.950885724 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.306305153 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.115153261 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 1.952895686 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.309138054 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.437419102 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.950780962 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.5129396 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.949681381 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.96602445 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.08301726 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.950106504 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.950426866 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.474169236 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 1.959463839 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.950087088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.285880907 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.950897876 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.314429369 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.951841293 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.951738207 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.494869425 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.960442595 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 1.976802986 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.950354302 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950590295 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.950732213 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.952663324 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.260859848 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 1.989837674 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 1.949907457 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 1.951523165 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 1.97170562 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952366708 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.950892079 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.957214811 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.512469568 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.953146975 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.951584975 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.952566803 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950123616 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 1.95049559 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.953392118 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 1.951787584 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.290518438 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.950879089 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 1.956792341 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.953098366 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.950091488 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.958892957 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.141657818 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 1.958669815 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.238539482 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 1.954770087 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950886073 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 1.952549203 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.951233463 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 1.968630368 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951306936 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 1.954723503 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.926923319 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.351728108 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.95129213 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 1.950138143 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.949907457 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.951501165 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.951689247 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.951167394 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 1.981047171 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 1.952938498 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.657601082 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.959822475 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 1.964254114 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.951004524 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 1.963623796 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.950025489 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 1.96097758 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.953163318 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.353603207 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.261383308 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.122298094 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.95024074 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.949771755 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.641787828 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 1.998047307 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.208880194 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.952380677 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.950030448 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.338196289 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.102539855 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 1.950937895 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 1.950903393 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 1.951858054 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.285528348 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.951820759 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.359106979 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.460974821 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.951152937 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.957542785 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.654009354 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.702181821 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.95140674 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 1.953119247 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.326356585 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 1.950656923 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 1.950099172 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 1.950251425 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.952160607 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.950582683 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 1.952155508 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 1.956702804 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.951249806 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 1.950228378 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.102764814 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.222223999 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 1.951625972 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.959006798 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.494466719 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.038310668 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950109438 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.957577148 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.954032492 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.950395787 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.068984052 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 1.955282232 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 1.99076803 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 1.951695045 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 1.952877877 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.512887428 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.95010839 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.950913381 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.227564413 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.584032997 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.950430638 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.951231648 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.950915266 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.818333951 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.511334786 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.009977247 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.241465622 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 1.960898869 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.006331252 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950377699 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.956729763 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.503737103 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.95064554 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.951064308 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.563827077 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 1.950912892 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.766353948 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 1.95079933 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.950480365 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.505533071 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 1.951216423 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 1.953985979 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.9495454 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.951796873 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.334646186 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 1.949792219 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 1.954844607 seconds)
  done (took 414.21220025 seconds)
done (took 535.166008414 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.950533584 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.951157476 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 1.949999019 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.951440892 seconds)
  done (took 8.764018455 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.984782003 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.973969386 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.974630922 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.973774389 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.976141449 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.973389563 seconds)
  done (took 6.810373093 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.950910238 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.951813146 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.951838918 seconds)
  done (took 6.811230884 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.17423766 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.872490838 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.287246304 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 1.956178576 seconds)
  done (took 7.248023998 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.974467564 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.973665925 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.974344712 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.974494662 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.985158867 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.991615135 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.975548915 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.975472021 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.984520797 seconds)
  done (took 9.768152849 seconds)
done (took 40.361462167 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.008172408 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.152691345 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.979899889 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.975187557 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.981167927 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.54968715 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.000144642 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.975011837 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.992773872 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.991765642 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.550096908 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.980249514 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.003831423 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.975968453 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.023210843 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.975791614 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.980137558 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.975462872 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.995791155 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.995783403 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.981587603 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.983665241 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.00499414 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.975382414 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.996150977 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.996653345 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.99585932 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.788626124 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.978623609 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.99320151 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.789697559 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.99557758 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.995586101 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.981496949 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.981412232 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.975695233 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.980019247 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.148775832 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.998238882 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.973211747 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.976864377 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.992679167 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.991718221 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.991638392 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.978816719 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.006561518 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.986625813 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.991121985 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.778627785 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.514895923 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.999001549 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.981454066 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.97064536 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.514588552 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.776796407 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.984159647 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.965335047 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.992335339 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.957771934 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.967375739 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.008022599 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.993266881 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.975820459 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.979843247 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.953648644 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.982053584 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.959587878 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.975083354 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.951260772 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.960076767 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.960775529 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.959382405 seconds)
done (took 77.634163676 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.130223963 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 1.93084351 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.140247653 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.948140751 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.156128443 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.131055004 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.948362638 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.948248797 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.953366207 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.902513581 seconds)
    (11/66) benchmarking ("rand!", "RandomDevice", "large IntSet")...
    done (took 1.924158093 seconds)
    (12/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 1.928645955 seconds)
    (13/66) benchmarking ("rand!", "ImplicitRNG", "large IntSet")...
    done (took 1.275153006 seconds)
    (14/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.127228889 seconds)
    (15/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.946813767 seconds)
    (16/66) benchmarking ("rand!", "MersenneTwister", "large IntSet")...
    done (took 1.273400968 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.954264505 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.796505756 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.949292225 seconds)
    (20/66) benchmarking ("rand", "ImplicitRNG", "small IntSet")...
    done (took 0.951110473 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 1.929211529 seconds)
    (22/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.946173603 seconds)
    (23/66) benchmarking ("rand!", "ImplicitRNG", "small IntSet")...
    done (took 1.924605287 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.910970313 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 1.926289998 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 1.926596951 seconds)
    (27/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.946569253 seconds)
    (28/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.803006234 seconds)
    (29/66) benchmarking ("rand", "MersenneTwister", "small IntSet")...
    done (took 0.951131425 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 1.925484659 seconds)
    (31/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.79974751 seconds)
    (32/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.955008384 seconds)
    (33/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.947083983 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large IntSet")...
    done (took 0.954001832 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.94509658 seconds)
    (36/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.152661313 seconds)
    (37/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.945543424 seconds)
    (38/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.128776921 seconds)
    (39/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.122696189 seconds)
    (40/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.133722032 seconds)
    (41/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.962247993 seconds)
    (42/66) benchmarking ("rand!", "RandomDevice", "small IntSet")...
    done (took 1.926253681 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 1.927325954 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 1.918800568 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.942563366 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.940510521 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.938147791 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.948705139 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 1.916417094 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.937565873 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.786575234 seconds)
    (52/66) benchmarking ("rand", "MersenneTwister", "large IntSet")...
    done (took 0.936416984 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.93822322 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.939463461 seconds)
    (55/66) benchmarking ("rand", "RandomDevice", "small IntSet")...
    done (took 1.007328236 seconds)
    (56/66) benchmarking ("rand!", "MersenneTwister", "small IntSet")...
    done (took 1.913188192 seconds)
    (57/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.946237227 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.936583975 seconds)
    (59/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.938154915 seconds)
    (60/66) benchmarking ("rand", "ImplicitRNG", "large IntSet")...
    done (took 0.936356013 seconds)
    (61/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.938514597 seconds)
    (62/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.113511502 seconds)
    (63/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.897085447 seconds)
    (64/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.882511457 seconds)
    (65/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.933290958 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.933941041 seconds)
  done (took 85.974919997 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.06361207 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.071579773 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.089040931 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.936338622 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.033334127 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.087155916 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.934173054 seconds)
  done (took 8.132622032 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.947624974 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.932409142 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.028353606 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.028299758 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.939854922 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.18133081 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.930922361 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.951472251 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.940004102 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.028291726 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.930970831 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.931267098 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.931432761 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 1.914696136 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.030631479 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.951984187 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.071219461 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.940391303 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.931348044 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.175493266 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.92847156 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.938315131 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.03066626 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.949987425 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.930013656 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.942318922 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.762773674 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.930613663 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.927752894 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.927884615 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.926642906 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.063591327 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.933750584 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 1.912270897 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.927255763 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.108263767 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.934023104 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.926910119 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.926925274 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 1.911199182 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.933829854 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.927576544 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.928122983 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.92765351 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.927118316 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.960410538 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.927234741 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.92783803 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.926812202 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.928101821 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.024001585 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.934036724 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.927677605 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.928257566 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.033533804 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.935865518 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.92909231 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.927748912 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.933483929 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.927501186 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.169679678 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.02385003 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.926944481 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.023964361 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.927544557 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.928635059 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.934738698 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.927634792 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.049300194 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.927721116 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.023627726 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.927117477 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.176302447 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.959420119 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.928869796 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.938003918 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.937608756 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.927606296 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 1.905938318 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.942292452 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.927491129 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.934197988 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.941765919 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.928984195 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.927844456 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.156664056 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.107291507 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.934720609 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.953752149 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.945952275 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.925870182 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.026085509 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.927411789 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.927060906 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.027965079 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.068872516 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.024511287 seconds)
  done (took 99.65279335 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.946710891 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.951371609 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.944666357 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.969622603 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.935671498 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.938027664 seconds)
  done (took 6.595993596 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.937726578 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.932732717 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.932182228 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.933235155 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.938905708 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.934143092 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.93298673 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.93539779 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.934584628 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.932630888 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.935035454 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.937378978 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.934392495 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.933383708 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.934577365 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.931766533 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.934013257 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.932094856 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.933057898 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.933847174 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.591358371 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.934931111 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.934440406 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.933044977 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.934690787 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.932839574 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.968275645 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.932865206 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.933337332 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.949546168 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.93590882 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.933800311 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.932323447 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.939330204 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.933509841 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.933827968 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.932562863 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.936992197 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.93858842 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.940601525 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.93633527 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.934171029 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.932774412 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.937284693 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.935625264 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.934268667 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.937212477 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.968552495 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.933069841 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.938323721 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.936084679 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.932807028 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.934450673 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.935873828 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.937282039 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.937127759 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.937192991 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.93407353 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.934682895 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.932890069 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.932858361 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.934166419 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.935519175 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.935259016 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.932369961 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.936981302 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.933444539 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.934586445 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.939261061 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.93291633 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.937199486 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.932207301 seconds)
  done (took 69.080812862 seconds)
done (took 270.370326918 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.17244204 seconds)
  done (took 3.078304022 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.152268945 seconds)
  done (took 3.059969357 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.793237744 seconds)
  done (took 8.705497396 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 1.933527232 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 1.912340109 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.944922046 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 1.913716192 seconds)
  done (took 8.616004801 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.224375181 seconds)
  done (took 3.129488813 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 1.916578568 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 1.915744732 seconds)
  done (took 4.741018114 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.335668174 seconds)
  done (took 3.241247299 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.389881493 seconds)
  done (took 3.295669233 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 1.930274653 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 1.936349239 seconds)
  done (took 4.780794192 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 1.911126548 seconds)
  done (took 2.816601259 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.75896942 seconds)
  done (took 7.663666797 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 1.926108341 seconds)
  done (took 2.83267558 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 1.962850722 seconds)
  done (took 2.867874539 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.445500926 seconds)
  done (took 3.352288165 seconds)
done (took 63.115028246 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 1.913271792 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 1.912889132 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 1.913861532 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 1.914176936 seconds)
  done (took 8.576710628 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.997862088 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.025361815 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.93746209 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.179905489 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.302626752 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.938367581 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.93900202 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.088993161 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.264430414 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.282270602 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.9794066 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.991065345 seconds)
  done (took 13.863762215 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 1.938358432 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 1.925496602 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 1.914655209 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 1.932002736 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 1.944877487 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 1.941090763 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 1.972326789 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 1.955262049 seconds)
  done (took 16.445954755 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 1.913656549 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.943048065 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 1.914814936 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.943130897 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 1.914854256 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.157778443 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 1.917369381 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.942676998 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.966062235 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 1.915593596 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 1.919390308 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.297904504 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.942312636 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 1.920215064 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 1.917141069 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.94296663 seconds)
  done (took 24.416559886 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.084171667 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.965507555 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.291750368 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 1.937900622 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 1.940023728 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 1.912983558 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.158982508 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.91650293 seconds)
  done (took 20.131323893 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.949706872 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.959632227 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.943907881 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.936007295 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.942069868 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.936976832 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.957637769 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.937953423 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.94857705 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.936362019 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.935990604 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.942778338 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.957810068 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.936644248 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.936439403 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.949715184 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.945189399 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.951775432 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.958472931 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.942528655 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.936383181 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.950351158 seconds)
  done (took 21.7390488 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.209885908 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.071766529 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.153072888 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.035618496 seconds)
  done (took 5.383350145 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 1.914535571 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 1.912589443 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.352277549 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.255670362 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 1.913239736 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 1.912712294 seconds)
  done (took 11.183555116 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.070473207 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913675265 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919236587 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968286121 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912428808 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913268021 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976692288 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.351537929 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.934413797 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26353875 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913606611 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.079818181 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.257767626 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92171735 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.922156861 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.806011645 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.232127563 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428768491 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921631375 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928822094 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.979887596 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926091858 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.923383414 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.101417226 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.923643502 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924687839 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.268398866 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.924050188 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.204386536 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.154380875 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.156554405 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925705077 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273033742 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.304292466 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.124736952 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.09986668 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929236742 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925845738 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 1.925009808 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 1.925362367 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925456163 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.927140804 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.149079293 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928718799 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924108436 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926355998 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372462727 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.953401058 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 1.924100404 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924525459 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.15787245 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.084819585 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.945608307 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.923901356 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927025916 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923106703 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.945015564 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.104694529 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659850111 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923314341 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931225961 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 1.922982176 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925516575 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923745541 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609775866 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.945946199 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.944222935 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.945155805 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923166068 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923189254 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.971931138 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923749312 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.968303791 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9241062 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678994375 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924305319 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92619704 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500617502 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923849045 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 1.922894245 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.233645424 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924131902 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923301839 seconds)
    (84/481) benchmarking "5d"...
    done (took 1.923969731 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923519255 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62805787 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.945752948 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.922200163 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.985604105 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.364833475 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.099991486 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.963819142 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.97706943 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.226744197 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 1.922900112 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924653408 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 1.930083218 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92611295 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.968071778 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.371202092 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923618011 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.945428744 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.259683022 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.218541059 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92844111 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.812421118 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375987547 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922879858 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.972618236 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.923915465 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.100012299 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.529019438 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.161998324 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929317618 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.981476416 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.92317822 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678876552 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923402969 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.944582058 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931478088 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.22749101 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.729676029 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92417262 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.072133265 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928995719 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925047382 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931001911 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925289522 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924679179 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.110149622 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924186797 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.15430342 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 1.926322056 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923654957 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 1.923781649 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922598327 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 1.925850766 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.228901595 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923975668 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.272614695 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923277185 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923768029 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92290095 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.228429188 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.92427829 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.946320757 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348855326 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92803596 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.923110544 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.155715262 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.983754988 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.124068501 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.980887514 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 1.929148672 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.256307035 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.951179895 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.945911068 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923891369 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.927601058 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931862215 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.949689902 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924941363 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531919387 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925361249 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945006205 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925351262 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.963077707 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.070488782 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.949588003 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.100045125 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.929291917 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930993041 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.947537672 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 1.928991668 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.227126787 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.153633922 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 1.926640182 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.173440491 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.368507686 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530920727 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.961089465 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 1.924294633 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 1.923112918 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 1.925182246 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924434106 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923834588 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92559836 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.100910597 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.162219861 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.926114138 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531077031 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92598088 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927856958 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.948241044 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.153005839 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.949698073 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924961687 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 1.928821745 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931981923 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926882322 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.154420754 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.234817639 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.963015828 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924624493 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.525713571 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.949543724 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926063782 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924165078 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.97944124 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923986493 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453546921 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350980596 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931535777 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.154797548 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.926361865 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.96505254 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.924688677 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924417205 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928189821 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 1.939740173 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.94873559 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.099233988 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925332405 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92663222 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64631054 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681443429 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482347231 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925812005 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 1.926261433 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924008702 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.373264855 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925201801 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923907293 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.201853462 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.368107984 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924079382 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364035119 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.918172345 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560278022 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.155447561 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.232338833 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933610971 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 1.92472262 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.160665054 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.222674685 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.979859241 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.927575566 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923349261 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 1.923768308 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451210171 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923978392 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.176152777 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366064986 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924847077 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926599954 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 1.96840534 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924205585 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272118961 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923058232 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923418753 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.925570913 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923795407 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.454423778 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925652906 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923432302 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60610864 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925080277 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.37030505 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924161934 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.099492122 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.154122532 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.161511041 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.925955249 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 1.923951363 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.254611708 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.154488291 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92752556 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92439269 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479759263 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.868626729 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.95449987 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925935205 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671726831 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924462182 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.202699101 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 1.928611802 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.92689217 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928120818 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924771229 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924774163 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 1.925063376 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.928881669 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925045287 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426461004 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 1.926037591 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929953104 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929845059 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92437516 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.256041917 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.961810507 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.527077711 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.238940091 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929539154 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.982175038 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.946986974 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925137897 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 1.925780087 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.923745331 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924596906 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933076057 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.228586052 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931688869 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 1.92576996 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.986303705 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.219201548 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.924070722 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.924096074 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.174437056 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 1.924486207 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 1.926295236 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679657029 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.978091976 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931985345 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92705476 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932034164 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.982296981 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.069069118 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.100159454 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.155789225 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.157654825 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275555292 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92519349 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928311833 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.961872037 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.083699749 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925042842 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.931613232 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.925494925 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525843335 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679837569 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.53068152 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.159200273 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927383783 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934482451 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92505702 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.253736526 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924316773 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273367584 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924144474 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 1.938258839 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.970099969 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927495528 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927687662 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.22054271 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273654701 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924987178 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924821096 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923820411 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 1.923582601 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.163102166 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.226082171 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430434555 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495545419 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925158919 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.929122342 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.371967972 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274542105 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92392189 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9261309 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924321661 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 1.933872876 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926480036 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.949723355 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924621281 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.236061164 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.148907274 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.31104982 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.152237935 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.926379395 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.87132407 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924669261 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.258283892 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924403725 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.102234998 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533390664 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.632377763 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.257552444 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.069779823 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.100871766 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.925846855 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.253889618 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 1.92419015 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.924930537 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927219725 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924743154 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 1.924496963 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.153579865 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536070753 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.258294019 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.946493405 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.92336295 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.97910705 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.100508521 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.228568381 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623546541 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.229446985 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.162074172 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932009022 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.92550177 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535275261 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.159789244 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927804576 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.945795691 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.172866885 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925297973 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.983079622 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.879211525 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 1.926045064 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503370645 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.222741453 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.968925797 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926846704 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63109841 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535785172 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.929312379 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429750948 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926083827 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925336315 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27378733 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.949126841 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.92504829 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.291781936 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.945704967 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925715764 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.102328376 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.529948536 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556046547 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 1.935371461 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93375268 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 1.927980157 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923887598 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989031566 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924239178 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933425961 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.294149487 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925840989 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925237211 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.961782361 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.926322754 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924532023 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 1.9247625 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926481014 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.950384123 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 1.937426331 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 1.926364728 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926471585 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.104936529 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451732934 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925502328 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.615592737 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.337007591 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.257690311 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924646423 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 1.924547319 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.945952695 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925603039 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925266824 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924505414 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927064887 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500082797 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 1.924612341 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.156079974 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.948459996 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.223359828 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.219627929 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.925362226 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.103027906 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924686163 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.967522127 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 1.925464125 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923568633 seconds)
  done (took 766.981912244 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.961661256 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.962298488 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.962874678 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.961958849 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.962229904 seconds)
  done (took 5.736450215 seconds)
done (took 895.387898233 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.945303519 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.946510447 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.946177443 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.946133583 seconds)
  done (took 4.708150247 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 1.924992068 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.925016932 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 1.926130829 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.923021636 seconds)
  done (took 8.623319627 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.283950564 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.421434947 seconds)
  done (took 3.627907292 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.923705522 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.770366189 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.75775034 seconds)
  done (took 6.373398811 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.297784027 seconds)
  done (took 2.21588674 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.339183495 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.377913211 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.147854137 seconds)
  done (took 4.786867241 seconds)
done (took 31.262849347 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.924367826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.691608688 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.085589864 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.925238258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.089501466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.084518709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.177758499 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.92468302 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 1.928350596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 1.925013998 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.926083547 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.088107224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.153527694 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.692402016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.152838081 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.692116295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.089202265 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.927669363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 1.925109401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 1.925049058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.165191746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.924653966 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.930855243 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.926723642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.088965084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.075283666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.925345534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.692856124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 1.92805363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.924884513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.073448307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 1.92596796 seconds)
  done (took 67.893846279 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.924829827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925452182 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 1.926217713 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.925590538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 1.930850355 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 1.926317166 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.927859262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.925426341 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 1.926224138 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 1.925051293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.928423928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 1.931823662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.926707649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.924202652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.934842343 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.926198646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 1.925218912 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.925767306 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 1.92772342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 1.924993465 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.924934868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.924574486 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.925379827 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.924995211 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 1.925509452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 1.925401547 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.924429147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924925369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 1.925415236 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.924755306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 1.925598569 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 1.924389477 seconds)
  done (took 62.631665453 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.925380874 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925218493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 1.925460913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.930085453 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 1.93359386 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 1.926829033 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.928437408 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.925769681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 1.924950582 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 1.925226176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.925332823 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 1.927479466 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.925869204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.925251458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.9257393 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.924915591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 1.92517575 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.925017141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 1.924701039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 1.9258449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.928193662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.925350563 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.925480189 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.926146335 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 1.926007071 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 1.926784684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.925486334 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.927813725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 1.924679877 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.924669261 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 1.926758075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 1.924436481 seconds)
  done (took 62.627000195 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.241980841 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.947087196 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.968761809 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.92611295 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.96833494 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.945808611 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.92528142 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.251469618 seconds)
  done (took 11.108303647 seconds)
done (took 205.184993991 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 0.946436205 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 0.945871957 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 0.946070726 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 0.94661926 seconds)
    (5/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.0)")...
    done (took 0.947493183 seconds)
    (6/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 0.946003049 seconds)
    (7/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 0.945786123 seconds)
    (8/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 0.94676879 seconds)
    (9/77) benchmarking ("isnull", "Nullable{BigFloat}(1.0)")...
    done (took 0.946150765 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 0.946599564 seconds)
    (11/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 0.951415469 seconds)
    (12/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 0.946440885 seconds)
    (13/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 0.946512193 seconds)
    (14/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(1.0)")...
    done (took 0.946332281 seconds)
    (15/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 0.945970504 seconds)
    (16/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 0.946427685 seconds)
    (17/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.0)")...
    done (took 0.946448916 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 0.946631411 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 0.946403031 seconds)
    (20/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 0.946852599 seconds)
    (21/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 0.946451501 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 0.945525894 seconds)
    (23/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 0.948167711 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 0.952090556 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 0.946896319 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 0.947141533 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 0.946387247 seconds)
    (28/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 0.946471545 seconds)
    (29/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 0.946617723 seconds)
    (30/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 0.946367062 seconds)
    (31/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 0.945303799 seconds)
    (32/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(0.0)")...
    done (took 0.946588878 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 0.945967361 seconds)
    (34/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}()")...
    done (took 0.948851177 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 0.947640199 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 0.946102644 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 0.946194695 seconds)
    (38/77) benchmarking ("get2", "Nullable{BigFloat}(1.0)")...
    done (took 0.947523425 seconds)
    (39/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 0.952184492 seconds)
    (40/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 0.946575748 seconds)
    (41/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 0.947037818 seconds)
    (42/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 0.946322504 seconds)
    (43/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 0.94665006 seconds)
    (44/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 0.946662422 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 0.946632738 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 0.946202656 seconds)
    (47/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 0.947111012 seconds)
    (48/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 0.94620531 seconds)
    (49/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 0.946812929 seconds)
    (50/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 0.94682564 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 0.946055779 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 0.952652149 seconds)
    (53/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 0.948007285 seconds)
    (54/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 0.945508573 seconds)
    (55/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 0.950608034 seconds)
    (56/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 0.946360567 seconds)
    (57/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 0.946985228 seconds)
    (58/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 0.947475933 seconds)
    (59/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 0.946136097 seconds)
    (60/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 0.947582231 seconds)
    (61/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 0.945718726 seconds)
    (62/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 0.948093748 seconds)
    (63/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 0.948021393 seconds)
    (64/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 0.945980979 seconds)
    (65/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 0.946089094 seconds)
    (66/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 0.946132047 seconds)
    (67/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 0.94709886 seconds)
    (68/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 0.947739235 seconds)
    (69/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 0.94616131 seconds)
    (70/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 0.947707666 seconds)
    (71/77) benchmarking ("get1", "Nullable{BigFloat}(1.0)")...
    done (took 0.946786669 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 0.954503363 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 0.946613392 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 0.946476434 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 0.947841971 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 0.946630714 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 0.947034256 seconds)
  done (took 73.987311936 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 0.975715976 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 0.958112201 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 0.983396143 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 0.970385061 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 0.968760692 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 0.96646005 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 1.938997759 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 1.226251397 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 0.96126365 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 0.960351034 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 0.971606934 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 1.935520013 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 0.957407084 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 0.987643262 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 0.966036184 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 0.957722487 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 0.982208282 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 0.957829413 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 0.986351197 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 0.963731421 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 0.961853599 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 0.994209459 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 1.036098515 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 1.526910231 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 0.980495844 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 1.227964953 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 0.960830634 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 0.964511339 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 1.926520963 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 0.9836306 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 0.965280082 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 0.96931202 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 0.988783699 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 0.967956959 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 0.959446938 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 0.963668983 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 0.958132734 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 0.961225935 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 0.957343738 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 0.982058193 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 0.96946127 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 0.969395689 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 0.989742829 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 1.028060202 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 1.514427777 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 0.967737029 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 0.962507383 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 0.96163765 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 0.967543638 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 1.941692236 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 0.968928381 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 0.959013992 seconds)
  done (took 57.04675015 seconds)
done (took 131.95477421 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 1.934194565 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.196047486 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 1.926721338 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.925310754 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 1.957631414 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 1.933690241 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.925083979 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 1.930040336 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.265600395 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 1.92766231 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.927805973 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 1.924679319 seconds)
done (took 24.725064201 seconds)
SAVING RESULT...
DONE!
