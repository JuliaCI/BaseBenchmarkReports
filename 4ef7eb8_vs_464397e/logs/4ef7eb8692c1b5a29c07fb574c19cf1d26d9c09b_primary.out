cset: moving following pidspec: 12055
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.228420492 seconds)
loading group "string"... done (took 0.549317343 seconds)
loading group "linalg"... done (took 7.797982166 seconds)
loading group "parallel"... done (took 0.168261315 seconds)
loading group "find"... done (took 1.266324509 seconds)
loading group "tuple"... done (took 2.00506876 seconds)
loading group "dates"... done (took 1.313103882 seconds)
loading group "micro"... done (took 0.243775454 seconds)
loading group "io"... done (took 0.694170902 seconds)
loading group "scalar"... done (took 40.850767184 seconds)
loading group "sparse"... done (took 12.592077476 seconds)
loading group "broadcast"... done (took 1.122763239 seconds)
loading group "union"... done (took 13.327330276 seconds)
loading group "simd"... done (took 4.742513394 seconds)
loading group "random"... done (took 9.622396831 seconds)
loading group "problem"... done (took 2.122717818 seconds)
loading group "array"... done (took 22.448016887 seconds)
loading group "misc"... done (took 2.081523743 seconds)
loading group "sort"... done (took 3.440035027 seconds)
loading group "collection"... done (took 19.379154082 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575913231 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141535355 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147950003 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145598747 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187991484 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154308046 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156362304 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096909972 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.960319008 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177269568 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15238986 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520596351 seconds)
done (took 5.144772421 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.226265934 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094054259 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103136865 seconds)
  done (took 0.874308328 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.075668596 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143944244 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094218507 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076929446 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093585293 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077860113 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093007791 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078998012 seconds)
  done (took 1.337528205 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085562467 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096511417 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080897969 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096519938 seconds)
  done (took 1.038260023 seconds)
done (took 4.239110132 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.729981561 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271100591 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204245538 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.482120324 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.174724813 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.203942194 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6781492 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354109495 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250668229 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099550531 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142308362 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.382352758 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137153864 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686240362 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088524073 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121879095 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176071625 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448369809 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081900862 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108829409 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11577812 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141194419 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127656875 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092547046 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183982928 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081244625 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192962833 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10724166 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079240763 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28533551 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200356624 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687402923 seconds)
  done (took 10.832199214 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109950792 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131859546 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09695259 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.174706324 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.116331667 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09850489 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099040793 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080288767 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120992629 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174562024 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128454148 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118432059 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093762126 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.097589984 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.09858332 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244103125 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119283078 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10220174 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099421325 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103765248 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137571093 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111402382 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107433815 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106073113 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165223485 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205829432 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110117952 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124780213 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095109942 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110672033 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141726958 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141323854 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093978513 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.078727432 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169730875 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12363458 seconds)
  done (took 5.123515156 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.074447344 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187215077 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119543705 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167803677 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080240473 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140989856 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094018902 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112516156 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25274692 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.349460855 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18445338 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140980497 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.131785173 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097012322 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081223299 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.137026252 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097921907 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.621180142 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.184743574 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134767595 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114052298 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102315454 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082704773 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36729531 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10129191 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079178873 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097980237 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064596951 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158332507 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098450784 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.133137319 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119405484 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081801402 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133346872 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203455082 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108510934 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133071582 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095201649 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079135147 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176335116 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103644894 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079106884 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120000796 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133917511 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.141745024 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077289272 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098438224 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204348833 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095784849 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095605285 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09692885 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.235825493 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179554377 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.101502996 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094734341 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.319116038 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102524489 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096387562 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076419507 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278730147 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.177654374 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097777821 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07910283 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096383759 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081787 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39512056 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079336484 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.683138372 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083427696 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105394729 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081834643 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095664564 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102162575 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08731138 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11480076 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076201894 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09398539 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079670873 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.106850316 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094708329 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078413658 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098428151 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.092771168 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100748301 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095723518 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148397539 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078850918 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114515358 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126263397 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083042073 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094744537 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129291683 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082341646 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097368759 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131951594 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080301067 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108428388 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097800864 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141425238 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079247807 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.159471624 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078445942 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123978918 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097948273 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113634977 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111623255 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099174174 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083230611 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095320216 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076964393 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164697843 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079287785 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096079123 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080191022 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10968406 seconds)
  done (took 22.862480644 seconds)
done (took 40.5699153 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.312155991 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100864669 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100882981 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100782394 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098415779 seconds)
  done (took 1.47240793 seconds)
done (took 2.208634059 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.282945333 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.169758277 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093751337 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164744577 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092278791 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169918458 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157407553 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.109672361 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214589379 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076643222 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160964939 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092875839 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076463927 seconds)
  done (took 2.616755243 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094964172 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113445708 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082213855 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109871065 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075774786 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110963802 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092029433 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115417338 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107975849 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086496331 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092093319 seconds)
  done (took 1.809122607 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093462762 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112202339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081862228 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109286267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077298229 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10932082 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091985923 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114656426 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10840369 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085086701 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092224469 seconds)
  done (took 1.804832708 seconds)
done (took 6.950787902 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090692438 seconds)
  done (took 0.817292419 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.90299426 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.90463955 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113850697 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149548754 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.319352378 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192027959 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.478211826 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12481386 seconds)
  done (took 11.101639252 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.143135892 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082488055 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099055064 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085687395 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102452353 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086080572 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100819511 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09859818 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082151865 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099233575 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082825939 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101249109 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098036079 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085739657 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101242134 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083469231 seconds)
  done (took 2.325119969 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118625003 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118165386 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105620691 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107227381 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086392226 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104132547 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105644688 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088465817 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100054495 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103054625 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089773133 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104388911 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102710922 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078803191 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104973798 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10719872 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084996854 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105180892 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106068234 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090476025 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105601463 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09526931 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086122164 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105904111 seconds)
  done (took 3.24184499 seconds)
done (took 18.217556688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157327103 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107530951 seconds)
  done (took 0.999925639 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094820645 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112409576 seconds)
  done (took 0.945529734 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096407835 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094426701 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120707794 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10820945 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079717949 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094893185 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118626725 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080229607 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095609607 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079439892 seconds)
  done (took 1.709791818 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081965512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108591572 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100650737 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094454269 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104160636 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094878025 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087627009 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098030223 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107272327 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076351059 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100766877 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112752687 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086161949 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115421696 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104015521 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081723471 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10148691 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097341426 seconds)
  done (took 2.496720759 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078928569 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09592064 seconds)
  done (took 0.914912703 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080522912 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093190764 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080778834 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095601723 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093664197 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075918746 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092652637 seconds)
  done (took 1.351141951 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484978846 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135910181 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260671502 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10121236 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118530463 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298898323 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09654671 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084125895 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101835277 seconds)
  done (took 2.461402315 seconds)
done (took 11.619184703 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092148554 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116930652 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111372915 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.461355268 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107473699 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097629006 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159277957 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246943506 seconds)
done (took 2.14279379 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.147121749 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327162204 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114462861 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06720121 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095811077 seconds)
  done (took 1.352880959 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079364622 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099050056 seconds)
  done (took 0.92597333 seconds)
done (took 3.176538687 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079980337 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.12818324 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079638071 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095415359 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080250637 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.0961593 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077818641 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096955941 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080513221 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096141597 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09649644 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079957839 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096734543 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080452992 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094106193 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07765403 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095881948 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077564862 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093986845 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077864969 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093913191 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080319731 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093544333 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077969797 seconds)
  done (took 2.910269945 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099334307 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097521582 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102363706 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085605456 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100369119 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087669252 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101640399 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096749111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086300389 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098184582 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099872087 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084297687 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099131659 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083466723 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09927794 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100255289 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08603742 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09714128 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083526058 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100035697 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102408425 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081051276 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099950183 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10168712 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083202229 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100647728 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083495689 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096560244 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102023223 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08360526 seconds)
  done (took 3.575779708 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084363713 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093900393 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078285052 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100959707 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078241348 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096307363 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077042323 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095179223 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079087699 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094847693 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078642134 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094089047 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077345116 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09566666 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078544252 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098999654 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108341255 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078158582 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094683125 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078866093 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097989912 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077936348 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094792623 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077464854 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094101663 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07784288 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0948993 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077860551 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095593331 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077707547 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098150874 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081666359 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094457502 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085051317 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09846465 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077565 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098219854 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077797889 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094873682 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094183018 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076959206 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094320062 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078440961 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100652218 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07783456 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096978995 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078116186 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096356272 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077828908 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098479352 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076761573 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094685673 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079412712 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095292613 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081443917 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09412335 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095413061 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07707344 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095855958 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077073733 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093581119 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077783338 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097198678 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078648648 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110509157 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084323513 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093990644 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079934736 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095951739 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080496719 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096735047 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108906895 seconds)
  done (took 7.125456625 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082916518 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105301791 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079841399 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096452551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075515709 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095648365 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097917619 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078667607 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096472117 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084192792 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09498767 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079450614 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096108644 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107027439 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07852058 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096203034 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085145205 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092667573 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077868563 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098523018 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079005963 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097483665 seconds)
  done (took 2.73257866 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205238756 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103450335 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1403876 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106127738 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082924297 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105622014 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101655939 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087021117 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102188074 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083393496 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099262979 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101314929 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082203186 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099322884 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099567694 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083817103 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10103891 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084195159 seconds)
  done (took 2.629170559 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092029299 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098071057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10223129 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099224322 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097966349 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083462384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103462979 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107594314 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083800804 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097935117 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089596642 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100522703 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100130482 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080634219 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10032747 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081318412 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099901901 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080674958 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106172895 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103779462 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103206601 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089990175 seconds)
  done (took 2.864704219 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095809984 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100222906 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116720054 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083462521 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.204195545 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078976325 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10407528 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080248816 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106181822 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098920764 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081168527 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096022334 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087522972 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096903457 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103192861 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08076692 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10031305 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080811369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100104672 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076435783 seconds)
  done (took 2.735171324 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102262607 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099437162 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099346478 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091034625 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100464554 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082300533 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10839112 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099328516 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082820436 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123726299 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099369356 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080947862 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108191985 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104278279 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099386928 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09173224 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107468652 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107892815 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082165827 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098531046 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122965846 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082127067 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10718428 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098339158 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082551817 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099473296 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098677223 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088136887 seconds)
  done (took 3.514016303 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080922308 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097681327 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078316549 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095052862 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07855607 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094987887 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07833299 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095232167 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080627466 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094701775 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08089159 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096630428 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083238459 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097384016 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08128074 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09726388 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080367101 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095978039 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078428757 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095376392 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080275258 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09693511 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081486386 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094825935 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078059082 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09817498 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078088823 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09501264 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080308151 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095246707 seconds)
  done (took 3.406787652 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090104137 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105882305 seconds)
  done (took 0.962138543 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078223483 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114092188 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078242584 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102342575 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084656225 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099182493 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106067298 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085959275 seconds)
  done (took 1.515541135 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095563347 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109025796 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082717274 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111396812 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108021335 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097357178 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168864549 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100138668 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08645072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096245673 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111985643 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079769912 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104170938 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081105681 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.1045865 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087282763 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096044223 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10374931 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084008272 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096730675 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082285413 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108435278 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083563372 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094705876 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099911721 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090512961 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109698295 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082135338 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10169316 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105731009 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087177132 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091994681 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081292345 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098853727 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078752406 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107631899 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115009611 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084246839 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107527582 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081613983 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109515608 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09345738 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085948456 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104020713 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109237673 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081965402 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099065157 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076748909 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096157997 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083423643 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094094219 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081835613 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09274504 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088819082 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102467331 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110319606 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080297337 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100195693 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084774051 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101490033 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087706041 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100678514 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100774119 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081694695 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108982131 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085542989 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109595982 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076994218 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092783282 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097233659 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091408203 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122242816 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087489694 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100351395 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099728757 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079548705 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102167719 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083054405 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105036646 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104497443 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08188367 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106097091 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089123304 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098579801 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08362558 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106654462 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09729089 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083741662 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096524997 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114879101 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079852427 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096099064 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080138418 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109211882 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08454235 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098856994 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078777728 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105617513 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091861124 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082302524 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099754359 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082606722 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109432448 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104524923 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08752094 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107651939 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088619757 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099323577 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101994748 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078531698 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099966078 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083186273 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105346843 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075466426 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102085216 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082380443 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100461771 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107013494 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080262784 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099382574 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089064216 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104168084 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079732647 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095678162 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101833643 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082056514 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102953644 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08986337 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097879447 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076625038 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093925509 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101590469 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081599765 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103263405 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086685509 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102859753 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075478182 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09743631 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102928166 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090539724 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098927155 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082838982 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10505857 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100536268 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081276737 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105968893 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083734993 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098444182 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087681074 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100097873 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076635709 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104016659 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101799304 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079611243 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102453212 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085381864 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101740918 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082667423 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098598003 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103533046 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082830588 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097814018 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08133521 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097665343 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.0921382 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102440229 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094956865 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07961171 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106995782 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079585877 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099150656 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080489406 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102449291 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099861325 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080344009 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098430172 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084049333 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111978925 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103966799 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083804512 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105067441 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092847023 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098855077 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083712413 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0997981 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100947319 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083105499 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108470202 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087480964 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105433267 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101947018 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07830477 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105267282 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089385521 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098655079 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079457479 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099202676 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085313608 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105821117 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103984824 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084094473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098041665 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082947291 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10337512 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102894767 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081924662 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099047761 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086862203 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099242278 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087245179 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100621381 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10948682 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085477478 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094703342 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085811459 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09739346 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105221736 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077438449 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097129363 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081993539 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100817999 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080841973 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102499439 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075653493 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106714257 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089130802 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100472499 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098650563 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082120489 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106621927 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08383135 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104013535 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084513299 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106304363 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110607779 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08129042 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102684855 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09250301 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100316627 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075677063 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106001042 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097976006 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081518202 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098705271 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080162464 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103500177 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108716945 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088999994 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093575278 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08506697 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099284495 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081506541 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095399105 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086852469 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102688649 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100300529 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089617038 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101489665 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084123861 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104374964 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.0820602 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101772583 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101277842 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08493768 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10091634 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084592916 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099972845 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084219907 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099230737 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082550071 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101760173 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100065698 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081561837 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105640018 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081108929 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099840029 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084683436 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101197408 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081946184 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101194419 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099426026 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085461998 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099981154 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08202191 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.1033616 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078414275 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107468251 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082356633 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107666008 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099662533 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079709222 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10498511 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085533365 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106554532 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100614563 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084290827 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101246761 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082889834 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102819905 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088614083 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098816899 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110819093 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090549274 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100688511 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085053262 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101244887 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083573725 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099759314 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08240335 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101151809 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100467503 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082330451 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104652119 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085287297 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10081743 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083650024 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.1012494 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082733067 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101471646 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094502672 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081870267 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099368332 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082330257 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111037757 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08246415 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10370054 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099053895 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083811603 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09950941 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079756217 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108878949 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109266709 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083794022 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107821899 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082163216 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101960474 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110804058 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076527294 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099137256 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080601616 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097490764 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089551464 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10149302 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091358381 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10109438 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081416621 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098282465 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100763601 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081703048 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094942642 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08025758 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103843194 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085761327 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099160386 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082795011 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103988047 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109801849 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092642177 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099307425 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083235969 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102211919 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079067269 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099573435 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081841531 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104593457 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10151691 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080254417 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097597433 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0821761 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101248993 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083594671 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099867255 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083490505 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10789522 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099547101 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086094862 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104299425 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076753441 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103213219 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082256746 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100403457 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080892258 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104080525 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103948045 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084166114 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10960799 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082547959 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101252191 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100938831 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080810164 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100701314 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.0825354 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101605108 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081747076 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101957771 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09075781 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099144148 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104097276 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082381371 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100779591 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089650156 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10196021 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085002314 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109062596 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103151234 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084287167 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108323695 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085608177 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105250039 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102210695 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084199787 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106749441 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082271416 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108136514 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083706442 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102540011 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084220206 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099566604 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10113783 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083217346 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100023709 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089300569 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101990735 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081406024 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10092376 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080113452 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102719826 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104599925 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090481932 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10336415 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085584442 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09662099 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079743529 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102863755 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079259929 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102424687 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103353605 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088436652 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103931444 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082789754 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100220204 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0911461 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108035556 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105201277 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080295539 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104680807 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083094737 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103207757 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08316384 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101619687 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101779394 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086636894 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10296607 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081916418 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107987103 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086246055 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102883966 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102180488 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084180555 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100526387 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078585076 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102333949 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08547668 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10687109 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085150665 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101166282 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111512605 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082985467 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100536662 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086653717 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101213613 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086911538 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096637186 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10230446 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084650805 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102568073 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077897403 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101245029 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080793348 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103355238 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081785797 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0964684 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11176081 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092766582 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104805651 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081419435 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099355911 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077835313 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097473069 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082064014 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103659914 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102845406 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092570195 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100535093 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082220862 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096898633 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083201754 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105465533 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104249852 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080006303 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096417304 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082064824 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104282925 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.087880967 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100032776 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082399645 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105113382 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103320458 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081799818 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104639183 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079587165 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104785119 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095419327 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104021855 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101833706 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090028091 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109391968 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084113758 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097828862 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083380407 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105816991 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101225827 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084086515 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101567729 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097892202 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104752789 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10054817 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081979246 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103842423 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082950111 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110357865 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084469151 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103314739 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106267228 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0854853 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110705938 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085379358 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110520737 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10526435 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086619511 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100057722 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083824137 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100336078 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082046469 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103661989 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084231071 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107484734 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110575719 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082923675 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114041107 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110725646 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088830524 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099200345 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083222616 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101599236 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079199581 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104687224 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082020038 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100593359 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081480863 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101507402 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101440996 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089242995 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102642392 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084601591 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101635582 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077179414 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107710943 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084878733 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104310901 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079754769 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103755071 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102307192 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087881369 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105809329 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083450932 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103386458 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084962983 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102959601 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078483258 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109380666 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100881178 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086731557 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101402352 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083517947 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103814652 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087148815 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107677059 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103519506 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086006498 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114192822 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086374394 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100763911 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080861219 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108914205 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099909481 seconds)
  done (took 57.205212399 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144083992 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080604455 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09751207 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078865101 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110977063 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097922876 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07946071 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098444963 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080227536 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101831638 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078861178 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098278598 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107010621 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123695348 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092605378 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102798006 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077330324 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099913216 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097105247 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07994025 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108958859 seconds)
  done (took 2.85341305 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103831332 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116627244 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113504416 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117675596 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089821173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115279418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112724851 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113810058 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09903156 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109249066 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116979578 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113346379 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090758972 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110328457 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109862356 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092751552 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117567758 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109298524 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114768194 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093892702 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112369698 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11263024 seconds)
  done (took 3.203580893 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084631291 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101314033 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084253034 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097063096 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082884025 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096716042 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086928236 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099615186 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085828064 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101514724 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081481458 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10199901 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103495597 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07841245 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101771694 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081701785 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150125756 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106444895 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082977643 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104372898 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078078157 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104808399 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097579498 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079453519 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100877625 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088070003 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103037693 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081042145 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102362423 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082204106 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102744295 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081200071 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104035428 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102856687 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082016215 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100987389 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083248212 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101897605 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079929128 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100604026 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083431757 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097262634 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083779625 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103811203 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081393387 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100249768 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08450358 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102255323 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096974976 seconds)
  done (took 5.424445275 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102792438 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159385398 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08498317 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141811635 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119560941 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111341479 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087292412 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142234636 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101211438 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082393606 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120714324 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118252123 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102703257 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088543731 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10689149 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102792191 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08512905 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101408129 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086793272 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103716789 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106894127 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090062848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118117499 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116548859 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106861206 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082565457 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102901461 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107745529 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09694284 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108098731 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107523681 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08996925 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120112292 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107063654 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082942373 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106117826 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119053945 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103723823 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086247674 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100963282 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08573147 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107541771 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109322479 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101208109 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104269059 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10708244 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083959694 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100955088 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116536175 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087154502 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112511149 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117579068 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087408029 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104226257 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107951004 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119521266 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084764056 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101080019 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086969836 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116373766 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099927402 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088975926 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117642019 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104892241 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110425807 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098105612 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107801857 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106956714 seconds)
  done (took 8.045370819 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092641939 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110495424 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118604342 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11905864 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090691481 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110107711 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109189992 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090815067 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110021182 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116441408 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109692458 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131832956 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086481879 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113888327 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109674726 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091072446 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109761205 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109706118 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09045938 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10951927 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109620406 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119584584 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091598986 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11945368 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140487649 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105459134 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090957611 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109577802 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119664155 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110707772 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12236639 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089956124 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110524352 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119233947 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123007745 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089616423 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102738966 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109952937 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091031091 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110517652 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103717523 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09965844 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110751594 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104191663 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090604474 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111037018 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11917271 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121741214 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113795245 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095643616 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110871521 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119938662 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109330086 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090471828 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11967162 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145634078 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119693545 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119593088 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110261427 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098720738 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120023098 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127549567 seconds)
  done (took 7.60717404 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106514835 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113876942 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116611438 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099392363 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082251932 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108178887 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082375309 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101238217 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112682217 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093280113 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1160821 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10755783 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090727077 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116213256 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10901118 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110647692 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088121986 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108059627 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112438419 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107469658 seconds)
  done (took 2.915865773 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092775725 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121996538 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083799397 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111160829 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107115382 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090082683 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106573766 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106579262 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085769259 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106591134 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094589097 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115401908 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104489459 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090231343 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115469672 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109817528 seconds)
  done (took 2.475961266 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095038157 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115701015 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.118785699 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084280441 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10319047 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079839684 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10445404 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099201751 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080950191 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120644904 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083108946 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110495005 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103182658 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082243155 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100680282 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087405418 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09983004 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081708419 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104528125 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117752313 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095059825 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103753446 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104852889 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087360443 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103494184 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089833005 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104967146 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101234675 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083306285 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104772607 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084805382 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112271232 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100531457 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083992257 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101540039 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082644842 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104465089 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083827113 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107554006 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104170957 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083083537 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103843185 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084697582 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105162411 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079906303 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104750046 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099792106 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092074317 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101815631 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084860093 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104772806 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085169166 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10652595 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115138806 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087341417 seconds)
  done (took 6.192658938 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098117844 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108343655 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079949185 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102913473 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087433319 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107007903 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107618763 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086913153 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104964358 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082920422 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106558695 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088238883 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106541886 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107620293 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086909815 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10774689 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081015158 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105920645 seconds)
  done (took 2.599529738 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090683125 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103974626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092178059 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104920486 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083492882 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10823247 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079876868 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104595327 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102324878 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085053819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104503129 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087010002 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102574961 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086260152 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10437713 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083561358 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107121896 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102626959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085183623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099857321 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086832557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102563163 seconds)
  done (took 2.950115559 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117999981 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123980521 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091256417 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228589702 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104123654 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13113094 seconds)
  done (took 1.639700457 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109492202 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119108085 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104973292 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106747503 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114804842 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084913126 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106573316 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106267203 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116480913 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100831221 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107100719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116774652 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116738485 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095387921 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114052924 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113138736 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106815045 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087696742 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105337456 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126852322 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087333842 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11680632 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106896108 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086142306 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107791395 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116427002 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116689138 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12033137 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086561075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115812596 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113160659 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086269226 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117525155 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120382177 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108046621 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096730962 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106712186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12679879 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112993093 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096219979 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109680118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114024787 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09636058 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114185361 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116622556 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107049095 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091765627 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10703153 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107019041 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13386911 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093611512 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116493952 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11461784 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116848217 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096057284 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154528381 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101477292 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116477398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114319279 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121804642 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115732786 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094149789 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115878767 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121936997 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114561308 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116927801 seconds)
  done (took 8.078027776 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101370817 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124961522 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106706399 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121668885 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096823539 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106943693 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107407016 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087300269 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106832043 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106031242 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151180182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088200027 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11722744 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117264571 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087092069 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108548914 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107693891 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116919177 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086900822 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133139921 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10755 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116537221 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117058759 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096567548 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121553033 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113830987 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106936101 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087500047 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107112064 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107392409 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092801569 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107990862 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117121095 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086190497 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117639151 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108325171 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087093996 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114057468 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10709908 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113453404 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096549417 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127458519 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109437141 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107366558 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101072778 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108495081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107598949 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085444537 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108480356 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106223669 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100748915 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122382703 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120660885 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116557711 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107183625 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0880664 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108223528 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106961024 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088055375 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114551504 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116162193 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086370021 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154858535 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088568134 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107184289 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116764414 seconds)
  done (took 7.968373674 seconds)
done (took 153.87790965 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.232271692 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.240954024 seconds)
  done (took 1.323759144 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097635523 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135271557 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095231347 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167329679 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104805181 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11915004 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136747367 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096781012 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105158104 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085050218 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105505055 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.0863949 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170945625 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084459903 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105723158 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107033009 seconds)
  done (took 2.664601721 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198704864 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252917773 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101561685 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104869745 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087191849 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110084747 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104310333 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090683236 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108879631 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084747418 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108196975 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.084864941 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105082187 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085299946 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109247014 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087946683 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10566374 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087081699 seconds)
  done (took 2.870246931 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112223799 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154605416 seconds)
  done (took 1.124924303 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118600573 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178099339 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313500457 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154150019 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106075523 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126345389 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155425114 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129251739 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19491817 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12024695 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121499105 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097216866 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139296416 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114190815 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094522735 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117880698 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140753069 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092456959 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114746997 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114861751 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115808009 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105814321 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11511895 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092736806 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17945765 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118793262 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084124578 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106859468 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11440953 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094554633 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112198174 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123199084 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097474468 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174594765 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101624026 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174881385 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097328566 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110884751 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113783908 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091526851 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116956177 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117137505 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103666712 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116945784 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084084166 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117792587 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104373086 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084338383 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113345122 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096860237 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114075027 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111827766 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153034849 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118023093 seconds)
  done (took 7.478066962 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.953125593 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155229446 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092792337 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.026698445 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141455743 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125984638 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.931389917 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139175087 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234989423 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.1200791 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133161827 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122703946 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224372935 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23296085 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.914912747 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306997971 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.978738604 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12497445 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149489332 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155154643 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095724979 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138709177 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131236262 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431984904 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.1156174 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090183698 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122718825 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12072097 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159844342 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124013649 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114483358 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180169302 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.242444699 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200938478 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113887147 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090117533 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109939835 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168844598 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263683923 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188910812 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.199634716 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087388102 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110096702 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10097447 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134948363 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108359915 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162160325 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172461353 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190057037 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093335959 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122409957 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118570078 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10014017 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.184274582 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119894149 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290792812 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310431177 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111411711 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121251136 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105213478 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257232027 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121274791 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220027603 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119007612 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209616985 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111530731 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75411421 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189756014 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089627955 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118758748 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11878876 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095666479 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122142149 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16646896 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390888366 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125764414 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092678199 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112242926 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.201090411 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123656086 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111738681 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162282175 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115240926 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099895351 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126289853 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123606181 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167091154 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245220841 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102519663 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121073811 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11493993 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10414561 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115885011 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213103982 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216921545 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160990553 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227895341 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100670662 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185401201 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166072493 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121681408 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170313426 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120966288 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125493617 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101522495 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212835594 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144578506 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122564992 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11571161 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097310241 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146677394 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126339757 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119121828 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17112799 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.453081055 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187979509 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087317118 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127767146 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120254597 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161635075 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118551117 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235212012 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12316786 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166161344 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120115722 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108739457 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099143296 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183291324 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101215526 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121354152 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123361226 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11970594 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231168192 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213246401 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101573251 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23817615 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182958693 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119480934 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170515803 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122809367 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166260231 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12005228 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099413329 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115432697 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76725912 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123614234 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099242546 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117346387 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186294457 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089819048 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122451309 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12384162 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086520394 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812424435 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126012171 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119805952 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10171443 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119740758 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121157995 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096050627 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115763104 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159941024 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225578787 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121799585 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120314574 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102048014 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181009702 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093913758 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124121806 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123492712 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123664938 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101323139 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116118516 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122227433 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168842208 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161466817 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216265419 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.593660974 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090825548 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123935752 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224582095 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089013128 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.281190379 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119809238 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22170001 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163200344 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11931367 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30779625 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165447707 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186562927 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125793791 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173087288 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087574392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119246164 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162427978 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11159729 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118696616 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161467841 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126848302 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122963153 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.893611685 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111889813 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224471169 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109619233 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171276346 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116178801 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099481316 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288941253 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112426854 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128811099 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164121029 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115152195 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101771872 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.718991352 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10181283 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123129151 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119262971 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.216080657 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16374792 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120816078 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097339077 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122046037 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161289336 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229658823 seconds)
  done (took 44.937721969 seconds)
done (took 61.255152322 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275125322 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214433169 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261549057 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168011708 seconds)
  done (took 1.882582847 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169174279 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147247565 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120136046 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10656373 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149197132 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084612974 seconds)
  done (took 1.663719875 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351754574 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269983754 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238016977 seconds)
  done (took 1.751871359 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.314036917 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245628264 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472105191 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.321901822 seconds)
  done (took 2.339197755 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208859171 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13202698 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11051943 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103577248 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194056139 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.243082011 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140202024 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199353542 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098665945 seconds)
  done (took 2.367127513 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194127333 seconds)
done (took 11.094469761 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.165888314 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.261773462 seconds)
    (3/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.245201939 seconds)
    (4/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.247593845 seconds)
    (5/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197705112 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.159584858 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.179010376 seconds)
    (8/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.227724862 seconds)
    (9/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.229521041 seconds)
    (10/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115667053 seconds)
    (11/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10306973 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121550046 seconds)
    (13/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.129539129 seconds)
    (14/286) benchmarking ("sort", Int8, false)...
    done (took 0.209342573 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093404681 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.136623451 seconds)
    (17/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.197253496 seconds)
    (18/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09343625 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.186972198 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.148450004 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.084854952 seconds)
    (22/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143014038 seconds)
    (23/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.134654325 seconds)
    (24/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.23324847 seconds)
    (25/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095336384 seconds)
    (26/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.098435067 seconds)
    (27/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.145978921 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.220802097 seconds)
    (29/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.170986506 seconds)
    (30/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172088256 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092923163 seconds)
    (32/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116194091 seconds)
    (33/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.130639662 seconds)
    (34/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.158682594 seconds)
    (35/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.19904901 seconds)
    (36/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116133256 seconds)
    (37/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.116925683 seconds)
    (38/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13415968 seconds)
    (39/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.14850744 seconds)
    (40/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.142191079 seconds)
    (41/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.203318596 seconds)
    (42/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098079104 seconds)
    (43/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.123078992 seconds)
    (44/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066555948 seconds)
    (45/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.115073029 seconds)
    (46/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065794273 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114772178 seconds)
    (48/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.233208174 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093885063 seconds)
    (50/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12205772 seconds)
    (51/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.069485241 seconds)
    (52/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120664547 seconds)
    (53/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089935704 seconds)
    (54/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.210884798 seconds)
    (55/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119210452 seconds)
    (56/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.065991047 seconds)
    (57/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.210968494 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087048392 seconds)
    (59/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114201593 seconds)
    (60/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114492233 seconds)
    (61/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.22234455 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112157862 seconds)
    (63/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.092535806 seconds)
    (64/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093620187 seconds)
    (65/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173159172 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.084423905 seconds)
    (67/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114591701 seconds)
    (68/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.168428895 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110845029 seconds)
    (70/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107265414 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084877908 seconds)
    (72/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185228521 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108696726 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 0.087205792 seconds)
    (75/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.193538369 seconds)
    (76/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.183261979 seconds)
    (77/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066006048 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.189064488 seconds)
    (79/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.076791767 seconds)
    (80/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.185317504 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.149906925 seconds)
    (82/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173578899 seconds)
    (83/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.127339363 seconds)
    (84/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12399593 seconds)
    (85/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.12477448 seconds)
    (86/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114724021 seconds)
    (87/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.226645668 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165532285 seconds)
    (89/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088367326 seconds)
    (90/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121712974 seconds)
    (91/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.23486582 seconds)
    (92/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135504541 seconds)
    (93/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083492849 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.084304512 seconds)
    (95/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10881053 seconds)
    (96/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135983091 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066636151 seconds)
    (98/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119694622 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.109663683 seconds)
    (100/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118545126 seconds)
    (101/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.180073355 seconds)
    (102/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094972287 seconds)
    (103/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090215848 seconds)
    (104/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093930277 seconds)
    (105/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114837832 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094457057 seconds)
    (107/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090782547 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 0.179185632 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094169573 seconds)
    (110/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119407345 seconds)
    (111/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.141265907 seconds)
    (112/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093999417 seconds)
    (113/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.1730151 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096037727 seconds)
    (115/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120246588 seconds)
    (116/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115907748 seconds)
    (117/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081200777 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091642092 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110651629 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093231627 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185258261 seconds)
    (122/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162248062 seconds)
    (123/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066149677 seconds)
    (124/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180787942 seconds)
    (125/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.202476979 seconds)
    (126/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220325721 seconds)
    (127/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120547095 seconds)
    (128/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065631318 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116518218 seconds)
    (130/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07087976 seconds)
    (131/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065562159 seconds)
    (132/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156223691 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108721361 seconds)
    (134/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.124953666 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116554997 seconds)
    (136/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096033872 seconds)
    (137/286) benchmarking ("sort", Float32, true)...
    done (took 0.228579422 seconds)
    (138/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.194080748 seconds)
    (139/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115393698 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160678924 seconds)
    (141/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141271281 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117138061 seconds)
    (143/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.118795886 seconds)
    (144/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.089252482 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086411328 seconds)
    (146/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118490409 seconds)
    (147/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112306634 seconds)
    (148/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.093300285 seconds)
    (149/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.303887673 seconds)
    (150/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067143406 seconds)
    (151/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099242411 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085614771 seconds)
    (153/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109450809 seconds)
    (154/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136713095 seconds)
    (155/286) benchmarking ("sort", Float64, false)...
    done (took 0.147475942 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136939718 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066293456 seconds)
    (158/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115874907 seconds)
    (159/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083543864 seconds)
    (160/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.089615791 seconds)
    (161/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.128362095 seconds)
    (162/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.088242859 seconds)
    (163/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.139824104 seconds)
    (164/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.183718007 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.136034932 seconds)
    (166/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098121804 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108347867 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092427087 seconds)
    (169/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139383684 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08539729 seconds)
    (171/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089576696 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094760468 seconds)
    (173/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.088985719 seconds)
    (174/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.134773444 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10820768 seconds)
    (176/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.192077302 seconds)
    (177/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.074709829 seconds)
    (178/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066037989 seconds)
    (179/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163522881 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125777007 seconds)
    (181/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126181257 seconds)
    (182/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066133818 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.218004262 seconds)
    (184/286) benchmarking ("sort", Float64, true)...
    done (took 0.227219055 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084663212 seconds)
    (186/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108526454 seconds)
    (187/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067028204 seconds)
    (188/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.098384169 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108422591 seconds)
    (190/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.110604933 seconds)
    (191/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.095760792 seconds)
    (192/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.089619187 seconds)
    (193/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066713538 seconds)
    (194/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066634744 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118617821 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093899349 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109417597 seconds)
    (198/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107836635 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.158926869 seconds)
    (200/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.089896542 seconds)
    (201/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089937783 seconds)
    (202/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091727315 seconds)
    (203/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066676145 seconds)
    (204/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091968682 seconds)
    (205/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112521203 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09121102 seconds)
    (207/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116279344 seconds)
    (208/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108977442 seconds)
    (209/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067889011 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085115184 seconds)
    (211/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114018694 seconds)
    (212/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093901781 seconds)
    (213/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126625626 seconds)
    (214/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108457341 seconds)
    (215/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089836305 seconds)
    (216/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109526655 seconds)
    (217/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092219518 seconds)
    (218/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090377825 seconds)
    (219/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067584265 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085316546 seconds)
    (221/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.154491433 seconds)
    (222/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.064608071 seconds)
    (223/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.090869611 seconds)
    (224/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089363234 seconds)
    (225/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113975142 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133312867 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067426593 seconds)
    (228/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067345698 seconds)
    (229/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11090963 seconds)
    (230/286) benchmarking ("sort", Float32, false)...
    done (took 0.172403772 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.085800332 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109078659 seconds)
    (233/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066097742 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085358823 seconds)
    (235/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.089734176 seconds)
    (236/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.11822669 seconds)
    (237/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110429878 seconds)
    (238/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.087902722 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112072443 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088198502 seconds)
    (241/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10875014 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092096943 seconds)
    (243/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18636979 seconds)
    (244/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116639096 seconds)
    (245/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066656471 seconds)
    (246/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065931911 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118887323 seconds)
    (248/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067602561 seconds)
    (249/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.11179692 seconds)
    (250/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067640815 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123689944 seconds)
    (252/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086793836 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110682055 seconds)
    (254/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066656326 seconds)
    (255/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.088838523 seconds)
    (256/286) benchmarking ("sort", Int8, true)...
    done (took 0.218689138 seconds)
    (257/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077488385 seconds)
    (258/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129055116 seconds)
    (259/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086348376 seconds)
    (260/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134097216 seconds)
    (261/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.0682135 seconds)
    (262/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.10939236 seconds)
    (263/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067322344 seconds)
    (264/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066942207 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117189117 seconds)
    (266/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067902012 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108080326 seconds)
    (268/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.066974587 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08396936 seconds)
    (270/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119695784 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117359459 seconds)
    (272/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069116341 seconds)
    (273/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117739657 seconds)
    (274/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067665314 seconds)
    (275/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134862111 seconds)
    (276/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229115305 seconds)
    (277/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09240474 seconds)
    (278/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115733218 seconds)
    (279/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087589668 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116325686 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087479356 seconds)
    (282/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109496014 seconds)
    (283/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086121565 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115362338 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.133150351 seconds)
    (286/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077321565 seconds)
  done (took 35.826673286 seconds)
done (took 36.72614826 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099886173 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14656644 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095246045 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134716013 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122110948 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090691798 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117672033 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097079183 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122239452 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124706287 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097823737 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092135144 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096136906 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118999617 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098418514 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137415747 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123220379 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093304176 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117397634 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085610793 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117823744 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085271423 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111331622 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069299532 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120410298 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092580996 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114582242 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.117683532 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085434797 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109312621 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08915552 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11665955 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086249733 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122656804 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091887441 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.116459406 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095866317 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118632429 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087045322 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109249464 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11583776 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085632749 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115762266 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094009543 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114831523 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091311906 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117003035 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098246487 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13778662 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113880295 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094720694 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118818399 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095245481 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116644438 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089749992 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117797066 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091047072 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138300808 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118478807 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091346924 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117179423 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094104899 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11463256 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09437807 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118000578 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119186351 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097913402 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115988587 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096710078 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114135156 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086335243 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117671671 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089486801 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109345532 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095074121 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119769989 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085533431 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115824434 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092760644 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115442913 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108075256 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088817015 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111490052 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092149088 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111801278 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069417868 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090049324 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116717434 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08575745 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118266282 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115465225 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093315357 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110999121 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097751832 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108913988 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09200407 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.10890759 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.085720487 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111796879 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090741748 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.108537007 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08886198 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118665465 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088010378 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115965755 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097626758 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110310141 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115655042 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086021773 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.10912302 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100169161 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119544235 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086962089 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114740541 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085916011 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116080912 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08561564 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109177667 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085467325 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110192276 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092110152 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109495966 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088607502 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117846842 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122960783 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085982796 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113299268 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089328467 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109636323 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092176682 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110530934 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086102854 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111475507 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077098414 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112196541 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086510176 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117851436 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089526917 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11751939 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087843294 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118078272 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091283647 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116001046 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092099144 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109123505 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074154079 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114010603 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088857618 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11160171 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086719483 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111645307 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085962291 seconds)
done (took 16.766175414 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086749958 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181818173 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149252326 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140986495 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106458701 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110053204 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120727394 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117021022 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112596271 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14019763 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109500821 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130572068 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145531161 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086157857 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110298226 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090918608 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111503514 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100890956 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144734025 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131132848 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161477137 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086178767 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146295739 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.1357902 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121933461 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.112601018 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110790815 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090710357 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113910692 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102504629 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131211112 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113785701 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.086825619 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131025115 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103029813 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118515041 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086253798 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117597365 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110427844 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.086939915 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138367184 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131587466 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092316794 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116272568 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091361164 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11310778 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088378443 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11933779 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096659492 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115240629 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124605877 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.153565425 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089892397 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.119769173 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085762611 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121521252 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119826284 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089447617 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111384805 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089989972 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109889115 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090597914 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124961329 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.138631154 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090052619 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120533615 seconds)
  done (took 8.524531411 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103297782 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137884395 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104441723 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128531954 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110765781 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088179116 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111580718 seconds)
  done (took 1.739912052 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088015445 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132724383 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109902013 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13464388 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130766955 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.10889121 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122550284 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088115854 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1300216 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088798969 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1332328 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14947434 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089214718 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119149546 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135985862 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087850601 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13595085 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087780938 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115138134 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110026154 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115215651 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13284303 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.08978524 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112328875 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102729319 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112621923 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159880243 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093379732 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113225391 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091182585 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110675414 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.163160452 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101126703 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123902417 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088103141 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144272742 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127075711 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087071507 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127894755 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092713721 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126051867 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088296973 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.113165223 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085660236 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116871334 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122298962 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.088865309 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112508358 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091124351 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132065933 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088541324 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125081226 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087049066 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115954563 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089893262 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118263115 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121302728 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089728972 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13241376 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089994135 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128864927 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103596862 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127411775 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128376965 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090259037 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126754863 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101651107 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.1155886 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089012833 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116595517 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129157335 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086023624 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113993911 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09880799 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114683198 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111445032 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136654217 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113409705 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098539676 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113872371 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088173857 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112829353 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111404239 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116638799 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087891717 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118985934 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090804989 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111122727 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087244834 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.115862378 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.085920259 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113984888 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092815203 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113083004 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115436515 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104744821 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113651236 seconds)
  done (took 11.70735516 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08948121 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.112783896 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090821802 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112631654 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089682251 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112690853 seconds)
  done (took 1.576672447 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113225282 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116094188 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102360261 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119749532 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15318912 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102330528 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128830008 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121605525 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107031634 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125073933 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127783257 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104760919 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134601184 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118650979 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102257234 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118746501 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10273497 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123430265 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125440713 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09612065 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135065291 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119860504 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095932629 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130409953 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116717279 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.0951154 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124302269 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10126757 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125628399 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121545308 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094698456 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116568744 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094729759 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122595644 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128462809 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094947908 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120181 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117846181 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098911101 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117072059 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103996761 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120398549 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12538053 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093339261 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122182641 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12002475 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09333324 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123548157 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102058022 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118234484 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117831604 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094383744 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117365513 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09272891 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119988432 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121197801 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094296898 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128333271 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094745491 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120201043 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116901286 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092063376 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122965127 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116483364 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103653635 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117855855 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094786683 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119863895 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120341868 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094147935 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118158312 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091997254 seconds)
  done (took 9.118933435 seconds)
done (took 33.623475092 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690315952 seconds)
  done (took 1.657065358 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.831498309 seconds)
  done (took 1.799246885 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.98989815 seconds)
  done (took 17.987741856 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.470059573 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.513747491 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.016007377 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180122536 seconds)
  done (took 3.148299515 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947827414 seconds)
  done (took 1.932610076 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280277602 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230295395 seconds)
  done (took 1.483056417 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.777981934 seconds)
  done (took 1.760709525 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.342535568 seconds)
  done (took 2.318688522 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323945022 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184316331 seconds)
  done (took 1.488823968 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548984317 seconds)
  done (took 1.530196462 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.855502563 seconds)
  done (took 7.840890167 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265330495 seconds)
  done (took 1.258468101 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299429509 seconds)
  done (took 1.284779237 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.553466074 seconds)
  done (took 4.543154919 seconds)
done (took 51.012607158 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098164694 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125823584 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101314284 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123132136 seconds)
  done (took 1.431498384 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.09994251 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120153038 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100191707 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120016458 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125266181 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0955906 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122169132 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100843775 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120366798 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095283366 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120681679 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119316445 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097861574 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122279499 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09345374 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122748776 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099756027 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120326037 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123480473 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09561576 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117865203 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096926031 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124173525 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093266777 seconds)
  done (took 3.639127839 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09953766 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118709245 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096366023 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117731513 seconds)
  done (took 1.427505465 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099232319 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140813253 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138459681 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099235123 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141612244 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135633264 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091949672 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116554135 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093761933 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124526783 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089934591 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149091064 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135217213 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098172916 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127464314 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087368793 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116458682 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135997173 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098904952 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125315688 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092068406 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124906558 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089440385 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139374672 seconds)
  done (took 3.781275624 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169111293 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126538477 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138093447 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094673641 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160490432 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140275372 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087734062 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140442353 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08745778 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130664993 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117474048 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132310556 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127511657 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087722037 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11344035 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087196591 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129165157 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126995196 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091123921 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127329905 seconds)
  done (took 3.412653696 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09640678 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116838276 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.0883262 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115440612 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098988299 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120262057 seconds)
  done (took 1.632999861 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090324179 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113607411 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089414759 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11379937 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093915713 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114373585 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088063126 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113787953 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089137521 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113713805 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088916141 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11465709 seconds)
  done (took 2.220742514 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.497763203 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119793376 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118915828 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08910097 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120521652 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089407872 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129116584 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091999729 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140042014 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089638219 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115311292 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090487874 seconds)
  done (took 2.688769615 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230669908 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124775293 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283078457 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366358244 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153773267 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176707333 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279739827 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160586442 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222497036 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165705779 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201569757 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220941404 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149877423 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187528876 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137819062 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14459061 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202794508 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244426338 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151194158 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205142454 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225095186 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167733419 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179822814 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150211933 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137837848 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170818396 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093661372 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129472092 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231575284 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174170115 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213298786 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15981066 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145697752 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208090214 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250596052 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219723362 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28072995 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134568517 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149898121 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167107379 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261139434 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137355226 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19906775 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152750071 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131089405 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183291236 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190088599 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174045026 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151679342 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111616745 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217956349 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235998699 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191102815 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137605138 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303557378 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148648245 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.198446643 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191825774 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247392472 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197378975 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184021274 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120853964 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186429576 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215218247 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183573244 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173426072 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179752686 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146618611 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22374113 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187057418 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1625322 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218287191 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183531139 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139063433 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168190723 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170213667 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168314295 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254777194 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20790968 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094701072 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16667768 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148967624 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132751947 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193470221 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098690288 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237339795 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141749515 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135077179 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237937688 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158516041 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159275621 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199693107 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228664223 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147822648 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083713766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154143978 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154886078 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18966666 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1383012 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157410148 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160382427 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12870349 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18106823 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123613238 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181841338 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116899181 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172865414 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18176877 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125631958 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159517078 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150149134 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124647411 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199464903 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196919156 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140340136 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104782903 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233666732 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176634716 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149404086 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176992511 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225854528 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116535344 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147619964 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224494704 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212909525 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140329889 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226509447 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15459687 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10807838 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131101129 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180326528 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153356728 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160489961 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133255384 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180918031 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231868595 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098262964 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138125223 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191348337 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132937535 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131315726 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161660524 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146322716 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111128335 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149401899 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152150252 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17816805 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20363776 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152696519 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16399856 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150544915 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249532843 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114913988 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148888664 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147363007 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119733435 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190280055 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197598212 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131882472 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229202041 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169399867 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203268077 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167560023 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133718864 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176267414 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129026742 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09292208 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218861351 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166457784 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159204292 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195049227 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225334677 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179990854 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180508301 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172097268 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19895165 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1652654 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154890838 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111575347 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159050433 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169415619 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123228969 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143629254 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133339035 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121135056 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14167855 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134009278 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19498025 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196002009 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186846221 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158424198 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148581731 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181273987 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127314023 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17334008 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177637669 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147258836 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196250158 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220546384 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184595998 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142675592 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198427793 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121094786 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09733368 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141388102 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168462101 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133194073 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134384444 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162410159 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18112639 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17819661 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175193296 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235616653 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168974888 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217320286 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095372517 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167369179 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184397301 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175461719 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189841057 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140379849 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149179133 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178183091 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157229992 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253959105 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167083727 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174819517 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231297741 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123272455 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131411153 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150766639 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193125361 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153459802 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176804269 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146751644 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141190321 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160481523 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132838345 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159571585 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182727357 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16147399 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216091311 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149548083 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184226914 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126802709 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161112529 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15992405 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163154575 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081294344 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174032343 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232621634 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146946198 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167006756 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189493649 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130924642 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306891484 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241344993 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193514748 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137003635 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155276556 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159742725 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164879884 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171304915 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178674637 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157502088 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187678838 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159020059 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135906975 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111782613 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149046052 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149619766 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131337407 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14841135 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176879076 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139056303 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184841951 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163240446 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158477915 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170905656 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150032193 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143621356 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121808261 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241496769 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183719279 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237959863 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151074346 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180314906 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205221421 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126320674 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131136002 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105018975 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17868048 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137258546 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220632763 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186485173 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202493332 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20825718 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192879596 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140274875 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092012815 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156215054 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17202434 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234351926 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150570612 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160325786 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228358014 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118606936 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132355437 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178370229 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293046181 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143543217 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222691497 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080926139 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277849133 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125095616 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104246774 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164370541 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236833039 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136276405 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.163780675 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194109053 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170937055 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164936118 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148634729 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189726451 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213739065 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229600032 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179489442 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133592243 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156896726 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176150219 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192408227 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157571827 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140707568 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229705938 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194111119 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196510616 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143140282 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169133983 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167870419 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158048553 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214662019 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106373749 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235719295 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106936609 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220544804 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153135568 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14536701 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176255303 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187870718 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141147587 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187058747 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211005766 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106324431 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133775498 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169419462 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209375453 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15579362 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099872264 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181026087 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125878096 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193466024 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259128844 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135974587 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155446681 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146844554 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107842045 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154126762 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158495398 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141320348 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164287065 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202887376 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135560899 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190883197 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231411554 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17174925 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172953333 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145426308 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691953165 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131690215 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194398114 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159887347 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233540544 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120752121 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201011864 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130149784 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196041483 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194828286 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160733065 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230743698 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190016774 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.205756611 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104650484 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158714325 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164234025 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144871501 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150933895 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168543346 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159184715 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154187876 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177390775 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199219828 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107228774 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14043129 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198759846 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160157103 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210222946 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178531222 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110340655 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173085212 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216372912 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133470269 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179666797 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236388587 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113071979 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152379204 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134897254 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157471356 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261371243 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096566426 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232675032 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186006699 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160238605 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168125378 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147036198 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222600142 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156769507 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186691744 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14831849 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160809894 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155130508 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108542192 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130721852 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156644542 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168217736 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149546125 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158649605 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140700335 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217939294 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095253415 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145483804 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289886249 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219455686 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214755929 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135914941 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135393211 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162857069 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150730016 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176235785 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179347106 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135781144 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108377793 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136816259 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157947324 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111523982 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157047173 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19494185 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164256762 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234846523 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135683091 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250527743 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139525783 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156075039 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087741237 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132398949 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150169898 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14555377 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15827632 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192096185 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264619987 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147354 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132754125 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120298293 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126768661 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135298447 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16392207 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164091889 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17794491 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144310526 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080771341 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156528299 seconds)
  done (took 82.864684591 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173167311 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152547528 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163740123 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.217274672 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193417601 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.283627933 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229592547 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268256397 seconds)
  done (took 2.76872406 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094323121 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145280937 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156843451 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132726941 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091411983 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119361575 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342734732 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133821588 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117248001 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120671883 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173126353 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093864452 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.551237532 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090280582 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118798779 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107297188 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092096758 seconds)
  done (took 3.768149102 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.477677167 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.730761936 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.513371295 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097667065 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.413072245 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134351394 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.761664103 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.21363335 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095687674 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.492645844 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775952654 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180893649 seconds)
  done (took 18.97809491 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115378339 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136283836 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122946783 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15239147 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140785279 seconds)
  done (took 1.759820178 seconds)
done (took 131.359299225 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103998275 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401990656 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070801623 seconds)
  done (took 1.598684552 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107409836 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136690868 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107340477 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135873229 seconds)
  done (took 1.591658668 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098121055 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126098459 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108657709 seconds)
  done (took 1.432240833 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32231961 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189592772 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.168793903 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105881824 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128830078 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103565888 seconds)
  done (took 1.435817115 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097183421 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127497116 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096903623 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13036018 seconds)
  done (took 1.551099415 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093987175 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070750864 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100086602 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074249575 seconds)
  done (took 1.433737441 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113940332 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131660431 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103104375 seconds)
  done (took 1.454932465 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129054539 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138651004 seconds)
  done (took 1.37465915 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105147072 seconds)
  done (took 1.200915816 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118128174 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168665721 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187816117 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16403745 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.235289619 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166459948 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142263865 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.1431618 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.101607783 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144228359 seconds)
  done (took 2.672493118 seconds)
done (took 17.625522169 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102725241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421992393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412650146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115764677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721889705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380111116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032714684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146246314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165571206 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093163403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139148745 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671979684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.059281189 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378247343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.017963082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373839938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675995707 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121058836 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119460033 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093984383 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017828991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091210048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122207936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091640309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703421541 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425238223 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094071778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376195105 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091572291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125685659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382128139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122132298 seconds)
  done (took 16.977254977 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094594755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173655273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098260618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137225655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122751059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093836464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124185227 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09269411 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179397239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122367727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110400724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121273003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125222756 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09445301 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141223463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092065453 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124648795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09158208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12127334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121057455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1120478 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120050414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093788141 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121256392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094236004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135188393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094199904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120376467 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120064167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098142801 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127304884 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093799362 seconds)
  done (took 4.814899287 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139896373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183644754 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128128929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126115601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16865476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123828285 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198598051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117452098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182416017 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122818644 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139551856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092226784 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15625973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094439291 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141869562 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12042294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095745437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12176461 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092639688 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122881376 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138642812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092262111 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122151044 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093021169 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122786823 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107356366 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12371582 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119964381 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094003419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125652497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0988779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12347591 seconds)
  done (took 5.141028941 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096774465 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126439622 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108044986 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13885612 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094852861 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125689561 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09651601 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124914913 seconds)
  done (took 2.01839665 seconds)
done (took 30.050483945 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110424203 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127197564 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106499585 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134765217 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102476642 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132173309 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090539406 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134513948 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133691929 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102703451 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137748318 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.0919215 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123683399 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09244593 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135955485 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097616218 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132895889 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101560871 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133994701 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13232144 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094136366 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134202121 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102755042 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134137475 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103537516 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134230945 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136957672 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099173203 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122441412 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094805606 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125843133 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103510724 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124015826 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104804579 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127517054 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09653732 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123790812 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094021747 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13283831 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132922186 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.09887122 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13344427 seconds)
  done (took 6.00939897 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107453609 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140358829 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.1044877 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080058038 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116727491 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080080411 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137664652 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078667858 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109699734 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107391898 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073428727 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106818456 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077842196 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101375432 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077177935 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074347697 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.1088345 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075440223 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075475136 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106417456 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079298197 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072009884 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108436351 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078107408 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074672529 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110241694 seconds)
  done (took 3.574864615 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099821336 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134233054 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112303822 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18341267 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160515017 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099032562 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132249687 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110218324 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.13821156 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120999798 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095519554 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15070925 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109032569 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130006996 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092032138 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137600356 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135974707 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094419185 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128193857 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112277595 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139059966 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102362415 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141507626 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132766467 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092119898 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123391781 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096616429 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135266797 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097630845 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131292106 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09672935 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126371466 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123123716 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105243353 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126116421 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094272814 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141800431 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102584678 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131866314 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092248157 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130335271 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121916658 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113943678 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162968321 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091039794 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130019975 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095740601 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133361194 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121079828 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110967254 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131551488 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091896043 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126581589 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091126275 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122044473 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106335894 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124249528 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093811333 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131900746 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12704144 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105218719 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12594525 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108431136 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122238462 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099416716 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121743071 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092692211 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121327018 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114291988 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123601179 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162190444 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092718284 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123853557 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101340098 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130220411 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128040306 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093369993 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138358689 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102133576 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12578208 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10177648 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12677814 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095144666 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141606117 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094161266 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124394712 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093267909 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128843428 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124968889 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094121222 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135810047 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091876447 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124980164 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109865096 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122250255 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094196709 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128178999 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126838382 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092654915 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136706005 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098165489 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122924704 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101906312 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122998899 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094678476 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133247561 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126529277 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.0914322 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126019935 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099018843 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12406677 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092825467 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125508166 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094088243 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132752573 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099184717 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127511752 seconds)
  done (took 14.821527377 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228719628 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215031594 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205027023 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292549954 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136313409 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114384269 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211894617 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156153446 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124835395 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160344664 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17486331 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181531106 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.16929872 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182793699 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17064096 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092571375 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143852408 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134080991 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245460156 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25810638 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144519706 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100327807 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160689989 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160682227 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137700212 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102093162 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139915788 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135153383 seconds)
  done (took 5.809268321 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108278105 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155423367 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098249947 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146155536 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148619039 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09276154 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127832528 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093890077 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136036053 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135232647 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092746701 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129979879 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099730819 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132028656 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123752155 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102875738 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133225838 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094330163 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127467136 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096326638 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133793564 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100933758 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12728355 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092150666 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133008843 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121881075 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085615089 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142449733 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093235907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145560801 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121976145 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102032821 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137173626 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093595306 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123847823 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094845758 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126476069 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095694111 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12547978 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091452685 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123164738 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077024211 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123397752 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106461475 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129259929 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080171378 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13070641 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098320237 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124549023 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121284162 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095976762 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126132328 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096229625 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131444165 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095080239 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12410495 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09658201 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115782797 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099380119 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12577594 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084628156 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091414492 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128062344 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11742732 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10104116 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129079055 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091715986 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12599393 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097017347 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129960925 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095176947 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130795199 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091545929 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12543173 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094512995 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129419052 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095811497 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122559507 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093044601 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123832753 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075201283 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123352963 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073343635 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126662599 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091372272 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122957321 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095240535 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130673091 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137575299 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094661195 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131596168 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093268096 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122870528 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095783683 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113643863 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096182359 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140027438 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140545319 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09294909 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122138328 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107764267 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126167487 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092282177 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105836838 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103271871 seconds)
  done (took 12.974276169 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126021597 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154702463 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09469595 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14297367 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156574732 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157672602 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101740735 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131918949 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094954076 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142601992 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093625469 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132625522 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092993026 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137935595 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157146054 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10304193 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125477196 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106812761 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128453484 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169584377 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111290845 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14337305 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109725228 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124612946 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0996089 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141234206 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160824137 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107396954 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137282448 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143006848 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107923187 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161716363 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113187878 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128048701 seconds)
  done (took 5.489221121 seconds)
done (took 49.786304342 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.242854463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.431520424 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.20384722 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.150555346 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.255737077 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.207295277 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.217059889 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.204830321 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.795614222 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.207926523 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.455821312 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.91254998 seconds)
done (took 60.423555549 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.342625656 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.338821523 seconds)
    (2/2) benchmarking "String"...
    done (took 1.469790201 seconds)
  done (took 3.955531716 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.564749849 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.185798374 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46540235 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.204508641 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.205567687 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.500692077 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.881587003 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.586698527 seconds)
  done (took 28.168078886 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.214584966 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.295418365 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.230979958 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.214095239 seconds)
  done (took 6.094586448 seconds)
done (took 48.26171313 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.189506889 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.227348164 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.224152921 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186187853 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.344260337 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.242879028 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.425795932 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.380862872 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.232296927 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188952098 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.229057846 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.207335661 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.210880477 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.454376964 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.210103564 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207904691 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.253447508 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.96649245 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.622399226 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.218087677 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.238045304 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.232825001 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.236214856 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.207318757 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.231217726 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.208933398 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.225949164 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.208547866 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.885477756 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.20841938 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.236772957 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.646872146 seconds)
  done (took 191.128270039 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.208823487 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.272525741 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.371033663 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.257863595 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.714055348 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.410092268 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.321648752 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.811324366 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.231547202 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.226907981 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.450807603 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.213703228 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.5195653 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.187210997 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.238174952 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.210972703 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.563909365 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.531548443 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.262581155 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.388607635 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.234213033 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.499292557 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.405550754 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.42566985 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.263527232 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.299329587 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.253063864 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.235269971 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.414441009 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.476634398 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.247922927 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.244842596 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.859930947 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.06819571 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.214935344 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.215887397 seconds)
  done (took 150.892297759 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.252530154 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.210407478 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.210606874 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211324629 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244536846 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.210248891 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.7948292 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795351448 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.754481578 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.596241624 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.623313357 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.507306558 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211095694 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307091949 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.22424354 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211848642 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211776186 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.228495557 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.256629722 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213244794 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212547608 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796193264 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.225046093 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.205076407 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.396855092 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.229884138 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245213615 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603774888 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212571234 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245934397 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.547816533 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.265081236 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212016981 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.610685968 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.313488463 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327526975 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214238258 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245522074 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.213015652 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495468958 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21268854 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212293342 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214916338 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.893107174 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.211138603 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.21259875 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.798346315 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.201811519 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214355788 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.213036011 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21298886 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.85624711 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.9000545 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.231046349 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213505212 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.216697271 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.212773257 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212836356 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247197533 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.694777371 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.312310271 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.232311286 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217233654 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24658141 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.214014831 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.50348863 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21830938 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.481270131 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.294645167 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.330886054 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800498931 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214888047 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313164804 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337109431 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214968745 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.214075783 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.213717526 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.213671692 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215220755 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214758571 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.328120886 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214594351 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.663489736 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.395228587 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.233838995 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.628765135 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.313199824 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214903145 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618009936 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216520627 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214871385 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999394696 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313703431 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215720231 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.215485189 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215769671 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.665442197 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803329374 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.501823997 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21573896 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.706574952 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219918272 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.682701377 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.795595336 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.895780902 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217366774 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330981546 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.39752393 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.235948256 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.216501825 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.624196289 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.215817843 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275522851 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216465321 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616105987 seconds)
  done (took 368.211308694 seconds)
done (took 712.620133001 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.844719128 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.836671407 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.939975691 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.823829043 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.793090168 seconds)
  done (took 10.387340807 seconds)
done (took 11.532321146 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410846885 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410152232 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280796085 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.413145329 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248031923 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431786328 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394466698 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.2409899 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.322823557 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.303548361 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322415214 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27617337 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246953478 seconds)
  done (took 18.451364883 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535881291 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.537979339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28361876 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546578703 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258770965 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53837005 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429243216 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.455160152 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433426566 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252812306 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231908562 seconds)
  done (took 16.654216263 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531972682 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541299492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284572345 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546310176 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258764504 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543116455 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420914611 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.436470839 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435372633 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252984933 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23204547 seconds)
  done (took 16.634776042 seconds)
done (took 52.885638479 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.228446502 seconds)
  done (took 2.378860141 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.26470919 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.431981101 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.245852703 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.234230853 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.228868415 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.229754698 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.234122785 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229274968 seconds)
  done (took 11.250611842 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227906113 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225314263 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.225815937 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.227680509 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22826438 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.229134165 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229193911 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225840096 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.225629171 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225737762 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.225760812 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228588015 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.226231742 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.229359062 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.229413817 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226562403 seconds)
  done (took 20.788853254 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.228503014 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22607891 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225403967 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.226611136 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226749303 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.226736805 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.228320251 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.226907826 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.226212359 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.226124089 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226981383 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227076049 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.227413241 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.227693881 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.226455223 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.227691487 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.227380939 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.227681165 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.230781747 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.227587508 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.22716445 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.227390231 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227882239 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227391541 seconds)
  done (took 30.608462194 seconds)
done (took 66.174489489 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.525366687 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.93439666 seconds)
  done (took 9.612443728 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.231202071 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.230742393 seconds)
  done (took 3.616692464 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.229807228 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.229833914 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.230742481 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.229439314 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.230780402 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.229351274 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.230034434 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.230046232 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.230095817 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.23053263 seconds)
  done (took 13.454776887 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.230407233 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.230208702 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.228388799 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.23179272 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.230563866 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227562648 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.230654518 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.231380098 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23140088 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229457516 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.231722504 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.229584578 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.230982094 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229191262 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.231302759 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.228743777 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.229594809 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.227679258 seconds)
  done (took 23.295394076 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.23181694 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.232259175 seconds)
  done (took 3.619709702 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.229425115 seconds)
    (2/7) benchmarking "second"...
    done (took 1.231216416 seconds)
    (3/7) benchmarking "month"...
    done (took 1.230002003 seconds)
    (4/7) benchmarking "year"...
    done (took 1.22908503 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.230826173 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.228727764 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.229651037 seconds)
  done (took 9.765197397 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.232570238 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408783165 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.489084713 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.853784826 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233943647 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.235322458 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.118422183 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.236022862 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.238674675 seconds)
  done (took 14.202550102 seconds)
done (took 78.716164591 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.273510898 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.243340489 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.44024649 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.247860027 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.242168049 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.573677154 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.253734874 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.348903022 seconds)
done (took 37.776122344 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.241480182 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.212759029 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.013772498 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.22069195 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.276468386 seconds)
  done (took 18.880668641 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.320603979 seconds)
    (2/2) benchmarking "read"...
    done (took 1.567797405 seconds)
  done (took 5.04615378 seconds)
done (took 31.322467332 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23598207 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.232058569 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234475324 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.231959142 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.234574201 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.23184443 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.232122597 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.234206083 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.233814381 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.235723499 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.235018212 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.235131088 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.235285235 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234641025 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232632736 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232321015 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235827898 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.232544933 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232453369 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2329735 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.232294908 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235352106 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.233181029 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.23283291 seconds)
  done (took 30.768303213 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.235405745 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.234156043 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235400966 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.234790122 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.233433053 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.237013079 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.235224091 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.234287694 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.236497788 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.236366919 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23365826 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233351388 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.236734291 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.234083347 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235766007 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.234008207 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.237166503 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233778181 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237897515 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233467673 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.237088581 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233194438 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.234414999 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237226888 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.23429238 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234568229 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.236638847 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.23526508 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236869047 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.234652129 seconds)
  done (took 38.21680578 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.241864544 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244281906 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.237525688 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.237291903 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.237449892 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.237421487 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.236860197 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.238493063 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.237301102 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.237397362 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.238183949 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.238203544 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.237745541 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.2375353 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.238415364 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.238193863 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.238163634 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.238626971 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239083625 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.238542766 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.238385736 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.239176794 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.238603571 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.238237008 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.238552885 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.239043991 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23927188 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.238944707 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.238859795 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.239216133 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239636765 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.2390517 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.239062085 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.239473405 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.239345842 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.238929225 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.244932431 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.24763262 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.239471844 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.239320056 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.239677943 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.239753014 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.239125789 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.239456367 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.239551445 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240196877 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.240541856 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.240300381 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240283462 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.240389717 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.240737781 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.240538628 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.239993564 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.240913366 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.24113823 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.24036268 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.241453309 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.24047701 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.241381263 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.241392249 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241458828 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.241299152 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.240815786 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.240961409 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.241126981 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.241877541 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.242355253 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.24140707 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.241404551 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.241890019 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.241269232 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.241802158 seconds)
  done (took 90.432149107 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.241619316 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2395346 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239853415 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23873379 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238536196 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240766273 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.239968035 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24145343 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240005197 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242111733 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242390491 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.241117412 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23958442 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.242226363 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241294353 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.239813067 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242211651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240090735 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.242847348 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242906505 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242401152 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2402106 seconds)
  done (took 28.464741705 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242274771 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245306311 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240151104 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242700945 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240092179 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24390443 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.244599156 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246818656 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244751575 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241247931 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241729836 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244789884 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24126264 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241751075 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240429741 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243121343 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244272902 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243381942 seconds)
  done (took 23.538583086 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.240663565 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.241873199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.244324583 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.24182388 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.241279112 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24421113 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242053118 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244204472 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245036129 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.242760163 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.244703713 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244770254 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.244534532 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241652901 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244559411 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.242396545 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.245622374 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241855196 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245262271 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243438545 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242777607 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246104524 seconds)
  done (took 28.523668641 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245300257 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245573039 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243192125 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.242695878 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.242695855 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.245137829 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.245698255 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.243494901 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246620295 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.245818131 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244501235 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.245432546 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.245830687 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.244338061 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.242976504 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242772321 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245779603 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245137775 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246258787 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.243367179 seconds)
  done (took 26.062398621 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247058837 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24763566 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246390291 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247392444 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247674342 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247550936 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247490212 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.246948355 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248837213 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248419104 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247464684 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247247523 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248801583 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247418121 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24852796 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249509332 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249187979 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249173622 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249349654 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249364076 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.249750596 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24911521 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249813201 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248744628 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249590291 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249399113 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249377713 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24852935 seconds)
  done (took 36.125861862 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250449815 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249309691 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.246212909 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.24710891 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.246998074 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.247160191 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246859197 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.246935111 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250001289 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247044575 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.249775463 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.250381398 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250905337 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.249462821 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250651026 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250319232 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250056273 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.247543767 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24766647 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248291336 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.250218995 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249757417 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.249605209 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247830292 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247063942 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.250615933 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247996419 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247493427 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25069328 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247232474 seconds)
  done (took 38.634938381 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.269243283 seconds)
    (2/2) benchmarking "in"...
    done (took 1.26894432 seconds)
  done (took 3.710604614 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.247290971 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250990255 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.250494555 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24856759 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247845871 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250721568 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.251585784 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248632435 seconds)
  done (took 11.169412197 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.25105231 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.251368425 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.250455163 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.25031616 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.252299112 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.250945046 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259137904 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272698905 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252129446 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253989987 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.259221624 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.259440144 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.253679711 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251704847 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.251945949 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254683949 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.252343694 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.252992941 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.259135405 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.252679335 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252723624 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253976405 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254669528 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.249739612 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.2543148 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264194872 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.277539669 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253283976 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252708702 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.255881832 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.25279116 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251072144 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.253873389 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.252823582 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.253815718 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253754935 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261028835 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27257584 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260321694 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274229785 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256274429 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.250456931 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254017214 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.254468234 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255851827 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254854368 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.255498399 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.251542022 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.254201716 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.259444631 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260693877 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25461636 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.252059909 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257731571 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255936979 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260295076 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276943963 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.259133822 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.265254194 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.265397216 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.289111145 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.28239051 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25741804 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256539605 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26549918 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.281458723 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262932799 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.27447712 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.253204474 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.255992134 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.262460239 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290689763 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283653921 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.256341905 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256608139 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.256724299 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256913848 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256418932 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262785939 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.280099917 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.256854946 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257058869 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268281093 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28059551 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256402053 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.256249454 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.257665213 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.257929552 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.258266169 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268668707 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.277940949 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.257664484 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.256920022 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.25721112 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.260022508 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.257682295 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.25766105 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25829735 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256041795 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.258419392 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257498887 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262399329 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.267338889 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259187007 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258647706 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.26591943 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.28065561 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258659908 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264464912 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.26032929 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258722727 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.261236358 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.264846073 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.257925981 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264021666 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.26695197 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261111971 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261357843 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.259540638 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259342863 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26927298 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.287104466 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.259267644 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.259914712 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265932587 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.27128364 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260341569 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262043268 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.260455944 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.257633935 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.257430461 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.260964237 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.261341304 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.261426225 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260924094 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260845485 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.257735928 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.2596299 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.2610906 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.261040641 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.261202341 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.261669335 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.262388694 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262304698 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261021916 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262597127 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266638053 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.284294685 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.262673185 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.261849459 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260364766 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262337756 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.261696966 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261162882 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.261381482 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261099301 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.261818722 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.261223644 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262997409 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.262346599 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261668204 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.263246436 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266943718 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.262424738 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.264530001 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.261058283 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.260923585 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263778636 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.263350283 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262629213 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.263729859 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262429617 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.266829672 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.270730397 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.263393759 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263194221 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.264452959 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263143247 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263724901 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263689829 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.266772934 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.272576493 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.264741751 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.270586873 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.285580946 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264124641 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.264628815 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264586934 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.264753753 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265039074 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.26854269 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.273233638 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277565157 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291425651 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.266734101 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269166238 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.265928356 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.269063259 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267619682 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.266321995 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.26527032 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264134927 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264513351 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265218729 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.267730693 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.264716651 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.263970602 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.264135501 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.265126173 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265424272 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266079764 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265413803 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266189067 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263029074 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265834498 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26471147 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.265749804 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264174958 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.265030942 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.265382557 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.266902457 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.266721763 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.271760428 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.264693764 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268136787 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267321122 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.266102098 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.266006936 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.267576498 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268377326 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.266316783 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273386429 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.288336529 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.267499052 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27319014 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.287159351 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266225065 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.270609349 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.266437773 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.264811695 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.270459032 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.276246849 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268145414 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267840708 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269006044 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268030459 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267783989 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275879183 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.286118283 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.26659223 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.268944322 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.268955353 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.265999026 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.269199984 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268418858 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.26792376 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269570016 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26874271 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.269009474 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269060233 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.268094733 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.268629895 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.268223856 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272537938 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.276164643 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.274795528 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.26864127 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.270526503 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.269936971 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.274181402 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.269553454 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.269690098 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.269376319 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283105756 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.296308937 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276043918 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.292063912 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.269064217 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274691691 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.291864374 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.27486948 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269521902 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269947506 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.270334516 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270040114 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.26898594 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270545723 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270694439 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270368765 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.273060502 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.274646616 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271176679 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270379615 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.270847172 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.270568932 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.270576118 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.270594668 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271224008 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.270668653 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271615314 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.269671887 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.27179381 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277320479 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293325309 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.271491504 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.271611476 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.270719421 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.270798886 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.273074896 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.272340496 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275669004 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.279592996 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.275967182 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.282456914 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.274575948 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282274329 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.272030584 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276327234 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.282029835 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.270376584 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271953299 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.272859275 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.272666513 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279380231 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.293437862 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.275147923 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.277104276 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272943922 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.272745116 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.273232453 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272836281 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272877359 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.273103218 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281293775 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.294639935 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.277239422 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274423705 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.270197779 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.272946431 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.274236112 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.272336071 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276558154 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.273827107 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.274304507 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.274505676 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274432013 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.274700575 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.275125733 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275262287 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271939758 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.275481304 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280904131 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.298358333 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280151913 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.275000739 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.28346733 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296904735 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281181914 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.297006024 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.275198439 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.274831272 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275417758 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.27530459 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.274609699 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.277208046 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.276172974 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.277091863 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.278784232 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27595759 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.278265465 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.276219489 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275860494 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.276382444 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285589657 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300995364 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.278306877 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28102159 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.273389327 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.277994162 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.280848727 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275844804 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.275244764 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.279863854 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287874388 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284185898 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.276650828 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.276386573 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277643839 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27758387 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.277024009 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.27730777 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.27653889 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.277675804 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.277565582 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.277285192 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279080486 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.277109451 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.277520416 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27881736 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279020271 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.288012841 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.299549401 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.279995217 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278375015 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.27913427 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.279407491 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.278185038 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.277418012 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279218457 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278417462 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.279099602 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286149059 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.285298278 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.28101246 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278551629 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.278727927 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.277931539 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.2797277 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279951464 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279067878 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279130314 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.279288608 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.279691638 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.281045021 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.279363977 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.281191544 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.281561047 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279705073 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282729926 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.286101009 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279557782 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.27617302 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.279476346 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280108332 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278573757 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27909193 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.286597581 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305535233 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.291340537 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.289620312 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.284693838 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.28086407 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284321777 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.288854384 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280751244 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.280640662 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.280983651 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.28159398 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.282213204 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.284508934 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281127432 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.287395417 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.302512056 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.281086505 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288989031 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.303055181 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280625852 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.283278073 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286077851 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.280650164 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.279010342 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.282229947 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.280840479 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288035295 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.303774444 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282649162 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283666517 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.28094061 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.283699028 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286965132 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282353343 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.282839006 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.279985015 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.282659424 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282057862 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283124165 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.279704045 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.28246537 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.282610873 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287017865 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.291918218 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.279856045 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284829702 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.284255245 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.284628487 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282112277 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283392777 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.281236641 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.280650372 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.283392811 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284251932 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.28299912 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.286703987 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282929041 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.286377 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.285825336 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283969211 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287341876 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.296090254 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.293230264 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.281431121 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283636301 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.285811781 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287367073 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284696054 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284416777 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284525948 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.285235511 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.284909889 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28443226 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.284895885 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287972294 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300111401 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.306634643 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284397742 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.284724057 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288015337 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.285590961 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282004807 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.28502327 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.287314844 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.288687905 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.294874542 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.2864759 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29131581 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.3069778 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.2871696 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290979208 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290899132 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.293672962 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.28793973 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28615545 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.286345192 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292606848 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.304247587 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28641146 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29693443 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318467366 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.308056725 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.287302688 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.286260115 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285446261 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.286555231 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.288238811 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.288023484 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.287333708 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286983542 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.287010448 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.288501725 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29173432 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288104925 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.287600951 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.287009488 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.287028865 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288521449 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.284768294 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.287532581 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.288736381 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.287852729 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.287427413 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.288311441 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.287927093 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301019007 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.316109032 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.289207822 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.289476101 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.285845591 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.290391064 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.292006268 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299630932 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.297487243 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289251051 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.288896441 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.290523408 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288924566 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.288555368 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.288673075 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.28995173 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28733652 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286592611 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.302379492 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316719393 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.294339281 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.288992212 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289668094 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.28906744 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290007744 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290238292 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289662251 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.290783006 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.292447412 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294656744 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.290394176 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290484223 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.294047022 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.299754307 seconds)
  done (took 760.650794814 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288967088 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287793421 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28800942 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288081345 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287506597 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28861563 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289503736 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288837936 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288544973 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289914068 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288042252 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28862697 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289178533 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288735708 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287881334 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289419922 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289371605 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287651085 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288908485 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288647173 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289888282 seconds)
  done (took 28.273846657 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.292782428 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.289723099 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288244745 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291631644 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289890744 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.292803233 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.290052402 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291782963 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292274166 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289595895 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.292510138 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294337511 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.289685819 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.28970267 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289402814 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29280569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29309735 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289977584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.29373627 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290120481 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293405865 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290523033 seconds)
  done (took 29.620597712 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.292305913 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.293743863 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.291836859 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.291147767 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.293444994 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.290242451 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293542999 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.294108136 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.293952803 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.294262453 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.293720477 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.295348895 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.301580358 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.299559826 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.295200606 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.29440373 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.438698021 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.295110465 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295347476 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.294294203 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.293215185 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.300344202 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.315556308 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.292653061 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.293601579 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.295213785 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.295529451 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.294520383 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.294763371 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.296908554 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.298761613 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.294873601 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.2944354 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.297530203 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.294272199 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.296953559 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.300250167 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.295527374 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.292314068 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.295812788 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.30687613 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.317143753 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.295382756 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.3013751 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.31832782 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.295270991 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.300624588 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.304404709 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.293748087 seconds)
  done (took 64.911719349 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296535223 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.29659344 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.293473045 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.296368364 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.29684576 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.297298477 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297463469 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.295986114 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.293974026 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.295177482 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.296611582 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.294987036 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29530496 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.29720511 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.296518701 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29509166 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295756476 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.293601277 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.293781761 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294027162 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.295922497 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.297375064 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.298631384 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.29532652 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298688096 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295525603 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295380677 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.297856653 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.296266268 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.295999258 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.298502841 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29824042 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.299364991 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.296882716 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295623874 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.299207524 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.300325181 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.296876972 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298761611 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296140888 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.299164605 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299408073 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298727421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.299424795 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297318611 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.297070729 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297827997 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.296827848 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.296174019 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.299766822 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.299423515 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.297527556 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300147091 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.298420207 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299239431 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.299895538 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.296945873 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.298204461 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.300137187 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.298090996 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298224389 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301278085 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.298183349 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.301459397 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.301503119 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.297968036 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.297395718 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300852232 seconds)
  done (took 89.443913107 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299777676 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.300866056 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300128492 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300033316 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30067146 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.301023432 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300761088 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.300563841 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301112045 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301481088 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300453692 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.300587232 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.301104038 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.300648323 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30103423 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300506777 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301492738 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301144648 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301920594 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301038203 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301407677 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30180055 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.301382658 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302264851 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302915286 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.301781175 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301914682 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303321845 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303489972 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301895026 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.302242377 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302975667 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302161534 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303018449 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.30366147 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.301806907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302211224 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303178258 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.302847804 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301634694 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302177624 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303722351 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30225512 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.302855189 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301266045 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302486956 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30359274 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.30473838 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304130059 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303185412 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.303786732 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303633285 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302813957 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303159515 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303626469 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304411602 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30380865 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304019636 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304357965 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303331955 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303769195 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.303920745 seconds)
  done (took 81.960431171 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306562541 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305049927 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.304245917 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.302612977 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304561294 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302500869 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305566204 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.305393833 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304428901 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.304527348 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304264 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303355657 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303171456 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304660952 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.301957603 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303249347 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302250464 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30221426 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305738048 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.302119058 seconds)
  done (took 27.302128792 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.304333169 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305426292 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.30328749 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.304383116 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.304631166 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303172154 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.306045035 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305464737 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303046359 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305611738 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307146306 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306315691 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302782482 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303021224 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30605849 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303715709 seconds)
  done (took 22.099289452 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304464547 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.305976079 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305980479 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307386155 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304239928 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.30398405 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.307185261 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.304189122 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304436643 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.308021741 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.307703067 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308077817 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.308434373 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.307701921 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.304695335 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.306406266 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.3058723 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305505704 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.307015413 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.307017103 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.306131619 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.304236233 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.307335452 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.307948788 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.305751345 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305878436 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.305240703 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305830488 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.305343766 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.30827152 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.305379346 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.306104409 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307095832 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.305845841 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.308617535 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.306087495 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.308035222 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.308672137 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.309061828 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.308826107 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.308703852 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306434676 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.309856643 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.308338505 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306420984 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.308544603 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.306592194 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.306635755 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.306980668 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.305631281 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.309279634 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.309147178 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309966859 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.311890241 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.309425893 seconds)
  done (took 73.110515464 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31036723 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309519041 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.306293599 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.310866628 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310080268 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307475001 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309671302 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309186929 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308633883 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310899241 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309181775 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311716614 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307623541 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311067825 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30930644 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311110303 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307864044 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308333284 seconds)
  done (took 24.797646732 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.30858264 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308825789 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312246207 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.308255079 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.307718365 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31119053 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.308457461 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.309923935 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310551566 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.309541094 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30909368 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.311839387 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311370198 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.312445684 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309850978 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308484702 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.311900939 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310504802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.308515569 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309693992 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.31304894 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312651249 seconds)
  done (took 30.05471369 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.311183677 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.311529457 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.31180799 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.329434894 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.332061183 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.336604722 seconds)
  done (took 9.163451599 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320928572 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312364631 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310731778 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313248121 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313679707 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314338237 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314510867 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31189677 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314868147 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314702127 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313560455 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316569201 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315851685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311215097 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313677938 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316054359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311967669 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311356829 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311629762 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314306267 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310705342 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314013448 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312640855 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312231397 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31354392 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312371824 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315265656 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312012086 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3121955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316128461 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313469124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312059009 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314839675 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312805152 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315461001 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314844577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31276212 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3152957 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315545048 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312599929 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315101988 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315371742 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315264489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312438143 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315286105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312495227 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313006381 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313472299 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312175439 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315906098 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315312993 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312561427 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315697535 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315230237 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316332827 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316398547 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313290569 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313048737 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317303914 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314105142 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314019343 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31597163 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314152142 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313926168 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316889418 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31366707 seconds)
  done (took 87.98473801 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315057062 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31406294 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314884653 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315425373 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314643456 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314435962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31521768 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315477677 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314007134 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316090529 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318187418 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316154717 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315394233 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315158781 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315398498 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316275122 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315117057 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315485509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31571255 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318927677 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31670553 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316926106 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31507232 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316136806 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317438695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319276356 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315545091 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315221391 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31547358 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316204115 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315929943 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315448247 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31598108 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315404764 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316428329 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316531472 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315336328 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3170732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316999733 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319088695 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316240853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319460743 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317663073 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316837887 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317450451 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316907956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317008313 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318016704 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317157102 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319104001 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318216945 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31740944 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317997141 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317562028 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318338174 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318272485 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318711172 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31795228 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317537061 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320835396 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318026855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318152774 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321746053 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319062176 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319027833 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318314721 seconds)
  done (took 88.149573617 seconds)
done (took 1774.325456904 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.332782837 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.43570371 seconds)
  done (took 14.006296729 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.483431185 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.443130859 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.320421666 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.34271099 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.320378784 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.342790682 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.325238133 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.321756462 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.320062934 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.320585424 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.320213604 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.558688749 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.319645389 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.320887091 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.320689868 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.414895438 seconds)
  done (took 43.041672532 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350770171 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.327114076 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.450810006 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.346162782 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.349299316 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.531146228 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.387165744 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.327806338 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.518741999 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.37026503 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.058533933 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.350476939 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.324995493 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.55486788 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.346059007 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.530067059 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.594158342 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.062662421 seconds)
  done (took 31.022809497 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.831470294 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.334310974 seconds)
  done (took 9.40692589 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.346448046 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.326364378 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.326788082 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.324226487 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.317168985 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.335670406 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.324741257 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.317739118 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.495405256 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.466364692 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.328114694 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.333955887 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.346944006 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.326389328 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324156461 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.36350008 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.473304128 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325392536 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.324039792 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.331456647 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.326589131 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.416546317 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.371596171 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.324332489 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.466127136 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.48194926 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.329014846 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.333872767 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.456324272 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.326918923 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.325663934 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.327674019 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.32734631 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.952612353 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.827289566 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.337864482 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.37179185 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.335794674 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.324871774 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.484047507 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328714963 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335661469 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.319879658 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.844333117 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.485271834 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.454458942 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.710155628 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.348965503 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.328306381 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.392691665 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.328793365 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.32918223 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.358891328 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.12404662 seconds)
  done (took 112.445654145 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.330053909 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.710980468 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491696884 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.343561709 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.02951001 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.015117596 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.341617447 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.645083769 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.391968156 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321912364 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.61785485 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.863682451 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.342861878 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.344637447 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.519271703 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383175459 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330821002 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.993179688 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.340869053 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.322448334 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846715079 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32416962 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.340868179 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.491952084 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.363186407 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815435235 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.8934238 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.730630504 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.341506768 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.324141259 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.820643881 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.344962977 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.362835492 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.325643907 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.602195077 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.720552072 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.710236666 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.344371645 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.359920894 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.323433863 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.339225007 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809971405 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.720031445 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.355879865 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323146544 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814886969 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.343227263 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.326279877 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.331558753 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530419351 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.93498977 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.324287289 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.870444794 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.324171317 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.642305663 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.412855097 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.387528268 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.843695888 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.344012532 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.473140916 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.364338874 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.325980626 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.332065422 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326673397 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.328278039 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.707685519 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.468078748 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.329333805 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.707555755 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.836652237 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.351268724 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881332864 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.240410895 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.328404898 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.386433294 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328803034 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.924947962 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855013302 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.349308511 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325608374 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696140083 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.345104961 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.626332857 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.343776166 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.345021899 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859046647 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.331877693 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.342996108 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.325627386 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.335465047 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.979135293 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329946175 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.631917752 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.374854842 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327838855 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.326945195 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.342927829 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327312333 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.346592207 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.329704309 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.88308539 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.34617981 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.715684021 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.347594154 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328136355 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.326977939 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.328745658 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.328335256 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550160758 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.912150293 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.348172796 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32816714 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.327688465 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.328792403 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.487066763 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.33382128 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.671118912 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.348652253 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327531331 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.351051147 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.040555106 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34692631 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327958496 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.330667664 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.24749328 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.556460956 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.350358644 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.347790812 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330568998 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.34986027 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.704419978 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.351248764 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.352717714 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.330077626 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075344962 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.384339714 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.347428838 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.54878901 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.331545912 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328885416 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.352475423 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330016656 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623168711 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.614115635 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.380570133 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.331927968 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.351388886 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.071180984 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.377298284 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470736915 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352001609 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.313441474 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531300548 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.717293271 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.332329222 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.936177139 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.32928677 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.546543762 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.331533012 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638905463 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852155076 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.350787916 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.331916035 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.07170509 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.113546496 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.949087976 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.332716586 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.625596147 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.345902154 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.813808914 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.331638913 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332652404 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.796586811 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.335348478 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.335951156 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.332372067 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.331724882 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.479604879 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.507085198 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.914166034 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330526254 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8205147 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.391313411 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332794982 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.356977992 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.343268386 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.679559548 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.353737479 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.333481422 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.339617157 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.334023502 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339301189 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841720715 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.300603481 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.333796288 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486927507 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001431579 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.351365359 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.334083992 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.081514293 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.976290202 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881972042 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.35417459 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.679138094 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.355689097 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.377337921 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.067425126 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.359790134 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.882645535 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.352867934 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.334614086 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.961210829 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.352880408 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.404725976 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.334327951 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.334411708 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919844355 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.354044959 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.336111388 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.718293705 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.356679914 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604915304 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.33533152 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.381700639 seconds)
  done (took 1112.361724691 seconds)
done (took 1323.520067373 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.334861431 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.333970288 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.324466514 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.340975672 seconds)
  done (took 26.59179679 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.344983296 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.342431221 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.342827678 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34130331 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.344318043 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.341953513 seconds)
  done (took 9.317914802 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.71427115 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.341952866 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.342553273 seconds)
  done (took 19.658167599 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.567576064 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.766143418 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.735533028 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.842761139 seconds)
  done (took 11.171702497 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.344370078 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.342715508 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.343483185 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.344804188 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.345375283 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.347250093 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.344426113 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.344775398 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.347689309 seconds)
  done (took 13.36265495 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.345412836 seconds)
done (took 82.701671583 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.079009711 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.335673904 seconds)
    (3/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.716695157 seconds)
    (4/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.327292606 seconds)
    (5/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.630781116 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.603634787 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.727659322 seconds)
    (8/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.298381025 seconds)
    (9/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.354132229 seconds)
    (10/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.461434103 seconds)
    (11/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.21450913 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.378775662 seconds)
    (13/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.805331994 seconds)
    (14/286) benchmarking ("sort", Int8, false)...
    done (took 4.357178823 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.36673259 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.709587699 seconds)
    (17/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.336199795 seconds)
    (18/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.479821414 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.113971264 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.129660485 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.180729468 seconds)
    (22/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.341401301 seconds)
    (23/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.083505296 seconds)
    (24/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.499239245 seconds)
    (25/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.36554805 seconds)
    (26/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.336160521 seconds)
    (27/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.635351818 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.338574346 seconds)
    (29/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.319741803 seconds)
    (30/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.657407838 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.441737904 seconds)
    (32/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.365123477 seconds)
    (33/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.348385225 seconds)
    (34/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.367329465 seconds)
    (35/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.721193477 seconds)
    (36/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.36789422 seconds)
    (37/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.555827588 seconds)
    (38/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.989770789 seconds)
    (39/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.812832695 seconds)
    (40/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.751201192 seconds)
    (41/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.149377451 seconds)
    (42/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.479538011 seconds)
    (43/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.463228659 seconds)
    (44/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.484896693 seconds)
    (45/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421866559 seconds)
    (46/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.319657488 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.453164797 seconds)
    (48/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.41775506 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.64222142 seconds)
    (50/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.358769065 seconds)
    (51/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.322519897 seconds)
    (52/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.363168784 seconds)
    (53/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.580030204 seconds)
    (54/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.266300287 seconds)
    (55/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.462773587 seconds)
    (56/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.065425714 seconds)
    (57/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.843481033 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.400814279 seconds)
    (59/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.922517068 seconds)
    (60/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.367287756 seconds)
    (61/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.330522301 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.3061017 seconds)
    (63/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.321997003 seconds)
    (64/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.368443346 seconds)
    (65/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.861808776 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.776500866 seconds)
    (67/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.20954466 seconds)
    (68/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.130032081 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.379223731 seconds)
    (70/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.444044709 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.926022664 seconds)
    (72/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.325118368 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.772362952 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 5.675010198 seconds)
    (75/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.912093042 seconds)
    (76/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.323244781 seconds)
    (77/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.597184044 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.562439915 seconds)
    (79/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.55391507 seconds)
    (80/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.290418784 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.359385483 seconds)
    (82/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.343001822 seconds)
    (83/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.808196087 seconds)
    (84/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.864199713 seconds)
    (85/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.724763822 seconds)
    (86/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.369436476 seconds)
    (87/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.345148486 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.334336294 seconds)
    (89/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.498108643 seconds)
    (90/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.450743706 seconds)
    (91/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.32259032 seconds)
    (92/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.373087933 seconds)
    (93/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.118117982 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.772478465 seconds)
    (95/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.216421608 seconds)
    (96/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.427632996 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.668008036 seconds)
    (98/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.372459984 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.565752209 seconds)
    (100/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.393356262 seconds)
    (101/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.664423416 seconds)
    (102/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.491376596 seconds)
    (103/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.657268278 seconds)
    (104/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.390652412 seconds)
    (105/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.252469189 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.344620186 seconds)
    (107/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.331014955 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 1.873722257 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.388047784 seconds)
    (110/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.414191715 seconds)
    (111/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.027326011 seconds)
    (112/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.625179235 seconds)
    (113/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.675608993 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.040735867 seconds)
    (115/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.453253231 seconds)
    (116/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.365594085 seconds)
    (117/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.996154472 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.200235908 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.385741685 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.613784366 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.869607477 seconds)
    (122/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.345124846 seconds)
    (123/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.324654033 seconds)
    (124/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.454551179 seconds)
    (125/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.361063591 seconds)
    (126/286) benchmarking ("sort", BigInt, false)...
    done (took 6.351487491 seconds)
    (127/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.348907933 seconds)
    (128/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.164704945 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.470521627 seconds)
    (130/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.325926044 seconds)
    (131/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.904705279 seconds)
    (132/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.326204719 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.205630813 seconds)
    (134/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.327885752 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.373896882 seconds)
    (136/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.405875764 seconds)
    (137/286) benchmarking ("sort", Float32, true)...
    done (took 6.34661966 seconds)
    (138/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.017578149 seconds)
    (139/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.455642673 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.340276836 seconds)
    (141/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.294783803 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.370676589 seconds)
    (143/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.034077095 seconds)
    (144/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.538019367 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.005424485 seconds)
    (146/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.432634133 seconds)
    (147/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.106426224 seconds)
    (148/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.327035622 seconds)
    (149/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.97616222 seconds)
    (150/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.34880552 seconds)
    (151/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.200508527 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.049520797 seconds)
    (153/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.410202303 seconds)
    (154/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.238078418 seconds)
    (155/286) benchmarking ("sort", Float64, false)...
    done (took 5.756183466 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.230943943 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.361863306 seconds)
    (158/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.374366226 seconds)
    (159/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.117769471 seconds)
    (160/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.343059887 seconds)
    (161/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.220110606 seconds)
    (162/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.327541275 seconds)
    (163/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.36847377 seconds)
    (164/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.326669473 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.477155597 seconds)
    (166/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.375213988 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.327030925 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.374448615 seconds)
    (169/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.250778492 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.209542376 seconds)
    (171/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.328349713 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.39177106 seconds)
    (173/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.328278159 seconds)
    (174/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.329226205 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.774313001 seconds)
    (176/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.352661449 seconds)
    (177/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.76023422 seconds)
    (178/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.329602093 seconds)
    (179/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.387536399 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.054198041 seconds)
    (181/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.933146439 seconds)
    (182/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.065466251 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 5.467332871 seconds)
    (184/286) benchmarking ("sort", Float64, true)...
    done (took 6.369567098 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.425755009 seconds)
    (186/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.178143843 seconds)
    (187/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.977584143 seconds)
    (188/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.958244228 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.387845469 seconds)
    (190/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.459798859 seconds)
    (191/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.353273536 seconds)
    (192/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.337938742 seconds)
    (193/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.657434392 seconds)
    (194/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.994601969 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.015781481 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.551883583 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.349289108 seconds)
    (198/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.66304971 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.48562736 seconds)
    (200/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.329591461 seconds)
    (201/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.428504699 seconds)
    (202/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.33414235 seconds)
    (203/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.348027097 seconds)
    (204/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.377485993 seconds)
    (205/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.433863381 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.372779053 seconds)
    (207/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.366563264 seconds)
    (208/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.349988973 seconds)
    (209/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.334906052 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.42127744 seconds)
    (211/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.419803983 seconds)
    (212/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.380723713 seconds)
    (213/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.89149212 seconds)
    (214/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.352111635 seconds)
    (215/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.438508441 seconds)
    (216/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.379079311 seconds)
    (217/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.379805908 seconds)
    (218/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.331198372 seconds)
    (219/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.331627564 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.397564603 seconds)
    (221/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.449484908 seconds)
    (222/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.239302351 seconds)
    (223/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.38585442 seconds)
    (224/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.446714959 seconds)
    (225/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.416904818 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.134032358 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.332538816 seconds)
    (228/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.135355436 seconds)
    (229/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.486011626 seconds)
    (230/286) benchmarking ("sort", Float32, false)...
    done (took 5.406274263 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.37245093 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.376515372 seconds)
    (233/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.170605383 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.607186723 seconds)
    (235/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.353772239 seconds)
    (236/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.066057332 seconds)
    (237/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.486183277 seconds)
    (238/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.417397325 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.372036545 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.438552992 seconds)
    (241/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.284687359 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.38049988 seconds)
    (243/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.447471281 seconds)
    (244/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.363272781 seconds)
    (245/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.767890542 seconds)
    (246/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.333480073 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.736750365 seconds)
    (248/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.359968381 seconds)
    (249/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.440987446 seconds)
    (250/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.985936585 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.875320259 seconds)
    (252/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.370845305 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.382528721 seconds)
    (254/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.343974452 seconds)
    (255/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.356378315 seconds)
    (256/286) benchmarking ("sort", Int8, true)...
    done (took 6.373088523 seconds)
    (257/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.362467561 seconds)
    (258/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.073692462 seconds)
    (259/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.453715169 seconds)
    (260/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.354481776 seconds)
    (261/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.365210065 seconds)
    (262/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.560294279 seconds)
    (263/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.567132568 seconds)
    (264/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.335626446 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.467806685 seconds)
    (266/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.549439338 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.455968422 seconds)
    (268/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.066036201 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.477165907 seconds)
    (270/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.368371673 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.20314678 seconds)
    (272/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.338882168 seconds)
    (273/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.369180678 seconds)
    (274/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.234495332 seconds)
    (275/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.008145468 seconds)
    (276/286) benchmarking ("sort", BigInt, true)...
    done (took 6.356157522 seconds)
    (277/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.461000888 seconds)
    (278/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.864796413 seconds)
    (279/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.372252025 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.399931137 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.355220431 seconds)
    (282/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.357224058 seconds)
    (283/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.912741752 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.379656909 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.364726251 seconds)
    (286/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.863856107 seconds)
  done (took 957.313044303 seconds)
done (took 958.569225576 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.389641302 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385608511 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.365638209 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.38840295 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.478661437 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.390739044 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.377616208 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.370462213 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.413931864 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.416757378 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.365087255 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.389243702 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.37002401 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.367215471 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.366125476 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381551123 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.53401706 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.368089818 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.383464237 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.377155122 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.384254038 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.365715356 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.418929427 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.390103135 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.372154064 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.372330761 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.371148622 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.386585144 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.47911066 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.371495937 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.372255802 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.379286423 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.533202571 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.367179702 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.364201805 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.387595506 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.379486249 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.378899408 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.37268197 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.400645706 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.997795999 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.388860349 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.370267935 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.370158709 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.370894069 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.375239225 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.370783523 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.376895598 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38333846 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384614909 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.982215331 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.403403389 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.371860948 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.371801146 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.380832642 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.370089286 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.374741581 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387394347 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.389400296 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387876047 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.522175058 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.377586301 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.373182222 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.387339038 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.378955339 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.021515721 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.387397714 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.377668666 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.996161051 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.397479738 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.021086079 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.400656455 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.373999975 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.386178522 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.403760169 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.533690749 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.367139989 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.37192169 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.379922892 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.370622744 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.381838447 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386348636 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.376947334 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.372577738 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386827834 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.396077724 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.382051657 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.37172759 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380835465 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.391607698 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.380319282 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.384268276 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.376199037 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.367915902 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382832863 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.377252423 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.375581548 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.377274156 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.37824996 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.384040843 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.995938779 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41153536 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.370235969 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.370482022 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.372950075 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.387630055 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.996742325 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.396131701 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.3956497 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.420977503 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.375587528 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.523349712 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.376303012 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392796628 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.382594449 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.377949384 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.36908727 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.52543031 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.990348521 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.410509843 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.376876732 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.372299899 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393617437 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.377387292 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.371557488 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.540611287 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.377015088 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390094068 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.496770639 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.386409999 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.407337863 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.375009773 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.378976851 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.402306813 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392993781 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.40869978 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.380012354 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392868859 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.392736986 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.373363241 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.387499558 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.386985472 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.377906286 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.382636028 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.370566888 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.403110903 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390364467 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390717401 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.398334381 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.496641285 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.375302484 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.530507898 seconds)
done (took 233.975506596 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.436029583 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.365795827 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.46067378 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.373559641 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.476379031 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.477483437 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.371706528 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.372605805 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.371678022 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.751008539 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.371981398 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.371584211 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.366343259 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.371987627 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.455930315 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374605396 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.37095973 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.715107301 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.375729008 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.444809742 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.366648425 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.372432674 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.375004663 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.759336896 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.37565195 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.37491006 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.446831071 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.375513376 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.722125084 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.37407117 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.376317658 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.722423282 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.46463534 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.392245205 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.384475252 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.381773608 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.478621869 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.39658562 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.458386975 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.457207463 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.462058379 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.414003523 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.373698628 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.37118 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.376990362 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.376276287 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373734672 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.402583092 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.375159544 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.374201792 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.718117307 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.385879383 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.37515774 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.373771511 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.374004373 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.405274166 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375027318 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.377233942 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.466290584 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.376722956 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.440152452 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.761031593 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.755009963 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.377939554 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.376722401 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.375496146 seconds)
  done (took 151.234985573 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.443019214 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.451435147 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.496604728 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.397802916 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.427637848 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.499479521 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.39818157 seconds)
  done (took 11.405486195 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.385317122 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.377717261 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427253051 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.427301224 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.378622469 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.525541872 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378146591 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.389722369 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.376179761 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.430286591 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.380908143 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379585538 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.385764584 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.377255414 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427378264 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.390958016 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.493590786 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.380249234 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379634255 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.535954093 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376381961 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.386555694 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.432387854 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.390946483 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.381603368 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.384282706 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.943884236 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377600845 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377277375 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.378832196 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378178053 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.4170495 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.380352353 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.371321575 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377042915 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.495736325 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.379855359 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3778177 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.380582553 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.379790133 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.379841233 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.381076563 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.380331103 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.376945027 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.380295456 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.402638276 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.380978471 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.381696576 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.381207192 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.381588367 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.429896044 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.381680555 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.378358493 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.37918861 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.440218442 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389538294 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.382068303 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.379440897 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.38299556 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379677292 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.539307247 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.430140488 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.38283002 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430722565 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38212556 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.382268404 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.38197879 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.38280727 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.435989783 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.384906235 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.429957999 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.380992822 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.537804544 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.406177077 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.384010718 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.38463429 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.384847098 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382916771 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.380071817 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.389403046 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.380981116 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.383783653 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.388930611 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380155331 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380297691 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.48487695 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.490880083 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.3808431 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.395739779 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.390197475 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.381237597 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.440745005 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3844047 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.380888363 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436303178 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.49799832 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.437437659 seconds)
  done (took 157.848858371 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.389787325 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.391634756 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.384615269 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.400252868 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.384237578 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.383167259 seconds)
  done (took 9.631386876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.388049524 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.38690527 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.384228782 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.385338481 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.385404565 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.385843798 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.385154251 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38763397 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.389657744 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.385264726 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.3867746 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.387118721 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.38688523 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.385531845 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.386415084 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386439073 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.385479167 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.384503955 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.385376792 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385876714 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.492355517 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.385718058 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386441192 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.387140931 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.391397305 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.386794569 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.394213547 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.387615922 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.385087997 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.391069338 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.408628536 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.388076033 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.388591581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.3937391 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.392696298 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.388109535 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39248985 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.388109035 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.384129987 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.386682533 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.388092559 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38828999 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.387569539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.389241196 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.390393139 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.39384103 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.39345846 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.396639473 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.388728812 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.389029549 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.389596443 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.390128147 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.389006406 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.389166004 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.390274104 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413541478 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.393797698 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.388737223 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.388995117 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.3906081 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.391330385 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.390076644 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39128761 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.394038796 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387979469 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.389881071 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.391915262 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394801063 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389574464 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390965309 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.39094071 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.382686847 seconds)
  done (took 102.438076948 seconds)
done (took 433.841834865 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.529003365 seconds)
  done (took 7.832372208 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.659336035 seconds)
  done (took 7.964105904 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.334677692 seconds)
  done (took 24.64314528 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.471501082 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.438497844 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.420443513 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.388213075 seconds)
  done (took 27.022124485 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.432477253 seconds)
  done (took 7.735099825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.383191141 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.383399047 seconds)
  done (took 14.071936428 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.621224175 seconds)
  done (took 7.926027213 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.382570102 seconds)
  done (took 7.693535036 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.387427674 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.408895185 seconds)
  done (took 14.114075488 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.365012982 seconds)
  done (took 7.66997831 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.691862043 seconds)
  done (took 8.996755785 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.388728551 seconds)
  done (took 7.694104167 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.459922627 seconds)
  done (took 7.764922847 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.37442535 seconds)
  done (took 10.679416511 seconds)
done (took 163.107000215 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.385187099 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.392497175 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.39250474 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.390972451 seconds)
  done (took 26.865939073 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.425071216 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.424541968 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.426555588 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.436486989 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.427732662 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.424759886 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.417941936 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.417432278 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.436151505 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.428622944 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.426638929 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.427765 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.424883624 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.417496738 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.427973502 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.427504849 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.437337578 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427180236 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.418841501 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.428756953 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392967094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.437195094 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.428239768 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.393613448 seconds)
  done (took 35.488271948 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.914208253 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.463785606 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.547193025 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.445056032 seconds)
  done (took 7.676281031 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.445153756 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.446640546 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.457443083 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.497279296 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.529607789 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.456522245 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.419113658 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.415305651 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.402273229 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.446192693 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.522684006 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.463913171 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.534713478 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.394200101 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.600524566 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.394088923 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.393995749 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.446592603 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.496679039 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.511029183 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.396252603 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.447244653 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.449468934 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.463913029 seconds)
  done (took 36.338792698 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.394112598 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.413176995 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.393226542 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.394163711 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.401573884 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.394535035 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.393795065 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.394856986 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.394678263 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.39940199 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.392283652 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.407188452 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.3927835 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.394515371 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.400738817 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.395658651 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.40052796 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.395429082 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.395834656 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.40136321 seconds)
  done (took 29.258610209 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.387600867 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.241816363 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.740109182 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.644287221 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.388167652 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.388643938 seconds)
  done (took 28.098588215 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.479153515 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.646043874 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.396238518 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.814568902 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.910040671 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.41779164 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.395789277 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.669954319 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.049604286 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.054729029 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.463029055 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.474387983 seconds)
  done (took 21.08149669 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390654097 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.390069795 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.414733447 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.405440585 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.460356541 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.420400758 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.404171486 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.391126156 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.467813978 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.483964882 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.419023509 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.462197699 seconds)
  done (took 38.420617554 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479042117 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441404462 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.50196536 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432888775 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14773996 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605189211 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.41325074 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.854925199 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.399953082 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66627893 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391786022 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508847647 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650462059 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408101273 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396498286 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.538281114 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648506942 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935378486 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395452527 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.057520159 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425771528 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40979567 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159042255 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.433026685 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605346624 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.540620568 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.655535206 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169495587 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743624082 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408535839 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404424258 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393698808 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667016255 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123571347 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51276204 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403818697 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402985707 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.944161752 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.39354375 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.053805712 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414783782 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400514785 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406002341 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393940547 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329661092 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403134395 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3392864 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.402109249 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.106554775 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39353343 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405733309 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489389037 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.398815951 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.387003478 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48495728 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.423677863 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.393325155 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494874356 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991173797 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.320509394 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398900737 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.335993536 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411627253 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.884507432 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102992348 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.519546123 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.401671962 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399657747 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331110848 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.972034043 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413289233 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534539224 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41850832 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058229768 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189362782 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.432184118 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32791271 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99797884 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415065816 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.338702573 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6247822 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.176298607 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33731183 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.340856706 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331572155 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174850008 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406944564 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.882705775 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419177471 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.874543128 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.409070846 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41562964 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422137896 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622634822 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.277347856 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397757113 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.416565906 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514077128 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421464135 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.852913658 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333831579 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.403661398 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656611852 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.610599466 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408563631 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.506297617 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648077369 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405347748 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.421546563 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399862141 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.415954078 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.064747909 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432672783 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.35629708 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416876762 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177695057 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233737007 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401095852 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.507928305 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.407169918 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67651453 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.227474235 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.561762637 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467356111 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403242155 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398601433 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.984969466 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996380473 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.560847037 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.396592377 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412468106 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.417968951 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.400719839 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360363405 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.397811589 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408819027 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.179147201 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625634752 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414968448 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684073189 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336409048 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539489365 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418252161 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.625742644 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.738807173 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.422051715 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662443676 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401479673 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423032132 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419871308 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421116515 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501542256 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42411646 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.404450544 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667281379 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.405167737 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.40539449 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.985033591 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.181708421 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406875733 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.407760519 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416228389 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073850325 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398327243 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408569138 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29643313 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.417194367 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469586867 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407982156 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.412871463 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.518096614 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425081942 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408724105 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.41234633 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628121547 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414225231 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.908073712 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481465788 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.626195023 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07751621 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437621823 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.337592063 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.113904926 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.096986434 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403316004 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.595907151 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403778199 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41606025 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414058103 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404551884 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.097588093 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427451015 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.889690511 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.410085549 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415513442 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.409313132 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403771563 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.557846509 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390140729 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414938615 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.423430403 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548669164 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.418353216 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.339796317 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.922429948 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411037696 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40376642 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.183694359 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439960788 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.924082322 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914109819 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668111906 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408211499 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43821083 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.00564232 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.442610586 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.424199376 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409953778 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411485512 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.414968547 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435029984 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.41795659 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.912360804 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.778803424 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975211552 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231576809 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054491472 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535210097 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.43095373 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.29685513 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866700518 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342810097 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06707169 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624948585 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882917348 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365883936 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635450828 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.755904015 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306592164 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42032219 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636202051 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507638967 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.426205441 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4192822 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62019565 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444261868 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.409686966 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.344785846 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.689609741 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667964305 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424219903 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486996084 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862263522 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413524466 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.187409066 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.446553842 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.851044285 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630187187 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.047553483 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.804283256 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407744309 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44013658 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915653893 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415697818 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938928204 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103043122 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436104657 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.64136601 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353673598 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.421596456 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.420389746 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406379215 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.004516283 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.420528343 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.668191301 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421918285 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346138325 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410569761 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055419197 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.28697104 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.416337392 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411179477 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229599668 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421569883 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757037395 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.413009135 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.497457882 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434502938 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.345177133 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345213634 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.103670904 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413799769 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384136583 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965237115 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.415569027 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417319512 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41896885 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267664985 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.668568333 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.424537625 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084650227 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660091846 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411153167 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435739312 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.512728223 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422881639 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.393647421 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.295586532 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647702861 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461734153 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.660133558 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.530965709 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.318917319 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.429372756 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649114291 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.294953063 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412070952 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722143407 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.145468935 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.41411031 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227106895 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459477668 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417212121 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.434918835 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423752767 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434864193 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507889046 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427430289 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.424535193 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.425035465 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615038624 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426051595 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415994646 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.427453422 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507918562 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.419270625 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.499034455 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.188503111 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09086884 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256945478 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112527762 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449607547 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414315417 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424893481 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351340234 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566350247 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945977771 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689426498 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535978475 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.430969995 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440129364 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418595489 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43019619 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634062952 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692426119 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.392404859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426176859 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21151611 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.318224135 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42825743 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.626791185 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979424626 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044879919 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542319893 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432456224 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.878111898 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691757786 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.510040448 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416383577 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012717399 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.427609082 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.865264272 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.446079511 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418216622 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564160647 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427379385 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155285649 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.450868279 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.573569643 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.191305557 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.050864348 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.68384207 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.976837163 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.4302318 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09624841 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245949477 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683828852 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488801749 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429140153 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.538103307 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56467897 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.418165421 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.320321237 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41821513 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27061615 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.12932417 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.429479326 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097810719 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707368757 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.417890898 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.416906594 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443484919 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.429543548 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.644046489 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.235779312 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644946976 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432061694 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421748398 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.994822975 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100953562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454296623 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35408231 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.424706825 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705034863 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.678991799 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443687105 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.873176601 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.131957335 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028240653 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.396989726 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442397346 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435790089 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23484294 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100971785 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.536188547 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993406126 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.083222376 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421816022 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702153564 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.427053867 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42562001 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703431778 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.423586321 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43449797 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43579707 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.098001551 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329548297 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.428815278 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.070931719 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.358397964 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.650974364 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481326038 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359690564 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42246852 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.629185098 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429253597 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542498363 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434706614 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.424320952 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427931506 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.159059185 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713504894 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.428771036 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.422264128 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.417536855 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424316346 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520382192 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68533431 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430980569 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.099893952 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.774188767 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681271391 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.421291256 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.430165705 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.427517395 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424343232 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14989706 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443968308 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444779194 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049640043 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.442772955 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.440004134 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427225773 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.641812826 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636175963 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.423380694 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438406996 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429933017 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446357468 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.324893616 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1979019 seconds)
  done (took 1695.574187509 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425681174 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.441272256 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.442668962 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.465356151 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.497873206 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.539516781 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.443399843 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.567386758 seconds)
  done (took 53.163663465 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.431629692 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.588752521 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.461426176 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.43933411 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.435372823 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.42545596 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.952766109 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.448400887 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.439836195 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.436720459 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.441533352 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.431956042 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.178149046 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.435252334 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.42998573 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.429487013 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.435744078 seconds)
  done (took 67.194493086 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.425332498 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.484303495 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.48656043 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.427550664 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.321576052 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.456621693 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.177092871 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.499259334 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.42718494 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.66594507 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.089603311 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.456239149 seconds)
  done (took 82.261198099 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.444256396 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.443852646 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.444775051 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.445106142 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.445183555 seconds)
  done (took 8.567094718 seconds)
done (took 2131.292977788 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.433775976 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.261104031 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.150690852 seconds)
  done (took 5.755103304 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.576451511 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.624070569 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.745199398 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.750999405 seconds)
  done (took 8.039647883 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.71234259 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.818262424 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.625900487 seconds)
  done (took 6.500502272 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.757783985 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.435324742 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.428750846 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.427730227 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.43420076 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.436449256 seconds)
  done (took 20.644072321 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.432446016 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.435157373 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.433715513 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.43585536 seconds)
  done (took 7.083094755 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.409145587 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.130754262 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.408677151 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.432651672 seconds)
  done (took 18.725948342 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.179032584 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.192416752 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.176096104 seconds)
  done (took 7.894322424 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.464812723 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.459335094 seconds)
  done (took 4.270049121 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.728487396 seconds)
  done (took 3.074102799 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.448037922 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.485369392 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.625583273 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.506160768 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.246522104 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.430860983 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.403621171 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.883518438 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.4768611 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.07590344 seconds)
  done (took 33.928655943 seconds)
done (took 133.312042361 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.820051566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.452562171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.639506001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.791576115 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.661050107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.660095032 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.703169463 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.752171301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.298170616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.287074475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.791806382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.660221531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.87453552 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.454526683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.87094374 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.445588375 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.660755029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.867289932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.443810859 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.433197598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.69878447 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.432018298 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.618774414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.456105204 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.663349163 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.589612007 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.012148393 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.446609797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.437979122 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.033454243 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.590373801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.442291854 seconds)
  done (took 201.337988345 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.430985304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.467369453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.432151354 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451130418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.431468408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.432785153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.470997619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.431499268 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.451850356 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.457613561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.431123274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.432623476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.454848178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.432629688 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.432317535 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.431966956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.431723872 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.446045305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.436420077 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.43255984 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.435477976 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.468964169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.43756874 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.43232908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.433010683 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.432689269 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.469617853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.432642731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.454425364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.455235143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435372144 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.433565571 seconds)
  done (took 207.48991417 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.434014093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.441900582 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.43402822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.433791082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.455690391 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.436238546 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.45579018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.459137693 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.433562058 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.454583289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.45279338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.433933241 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.439926581 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.446472074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435887148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.453455141 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.444158445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.433905246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.435377465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.452144868 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.437135759 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.434636109 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.456404988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.434334431 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.447604796 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.43675723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.433976995 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.44382763 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.435103665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.455312765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.43558707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.436134471 seconds)
  done (took 207.505219811 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.63291759 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.443657014 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.443174486 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.379203546 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.445287037 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.443387192 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.437715256 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.641261963 seconds)
  done (took 15.219484736 seconds)
done (took 632.895691536 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.92145259 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.636046067 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.656173195 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.464521524 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.371118587 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.484589532 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.462489123 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.654423293 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.426769624 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.667366983 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.799009374 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.483838578 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.951363616 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.462405995 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.744053383 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.571308489 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.440743858 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.567022915 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.812124585 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.111632279 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.748334689 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.040033288 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.680207877 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.425145982 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.974206202 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.040740604 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.304382317 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.423012306 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.485445906 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.818464905 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.314347935 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.575204712 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.539481332 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.539418687 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.594720723 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.575603056 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.543070192 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.537166327 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.683005991 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.795957943 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.128186664 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.231408249 seconds)
  done (took 99.040072236 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.42754209 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.425870047 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.427395142 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.428912996 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.430080587 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.427743591 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.428761297 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.427136502 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.427533195 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.428028694 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.428089516 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.429226144 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.42774145 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.429476031 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.428743221 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.427162571 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.427771739 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.430010374 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.428419799 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.430243137 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.42936051 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.428966208 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.428963751 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.428925921 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.428884132 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.42868994 seconds)
  done (took 38.495224955 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.447468472 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.713942424 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.902267906 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.454534552 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.448155734 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.452129835 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.540989056 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.449592917 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.451175923 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.451602668 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.616024073 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.451726704 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.488223217 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.935919806 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.452413367 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.451759327 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.450854651 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.450027037 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.721658385 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.460478021 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.56556871 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.450859023 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.541717144 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.46192077 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.476488806 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.450554532 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.45495152 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.04956675 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.474354851 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.620001178 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.426444235 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.546860403 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.988098168 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.937826105 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.4360458 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.460488717 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.453201541 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.623948768 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.45467749 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.451221397 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.543435805 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.453231442 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.914943766 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.157214233 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.474564921 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.452493023 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.071995551 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.644894513 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.744021443 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.461122847 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.943696197 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.455761976 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.453209831 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.453457825 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.74256966 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.459015175 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.451875968 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.092455691 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.481041836 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.543529544 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.453647262 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.452851382 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.732699897 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.453715701 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.720195716 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.454397566 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.46227997 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.476591926 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.926388744 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.463272679 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.189189155 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.483753149 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.455029068 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.620484584 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.721340435 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.109189365 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.479755125 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.740025262 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.003274927 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.563836492 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.458402021 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.04058969 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.569253761 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.459417983 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.45587399 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.456581368 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.455234536 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.501522128 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.543505112 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.114655006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.190422504 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.126157623 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.570022774 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.467879319 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.456491682 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.098018852 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.478634624 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.455369377 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.911681482 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.183411792 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.47822945 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.465018744 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.186856043 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.47996571 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.548516833 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.462773449 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.926523915 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.457568543 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.50270427 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.455701332 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.464023898 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.483980953 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.547532875 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.459838011 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.45694042 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.151450274 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.65172589 seconds)
  done (took 192.604634463 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.455106573 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.448622164 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.454661773 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.448304657 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.449284052 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.458429938 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.45052497 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.449876685 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.4565859 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.450255653 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.450669198 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.451902398 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.452650401 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.459883161 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.463592216 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.458527547 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.062515815 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.450997954 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.453264708 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.472065175 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.286003823 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.451228448 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.450548485 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.471386299 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.451168988 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.452150094 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.459028832 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.454454242 seconds)
  done (took 155.538599999 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.458239407 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.120352075 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.481665742 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.613873472 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.484942606 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.456887923 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.61225803 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.527399542 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.480543658 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.457743094 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.457983846 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.813452727 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.460372402 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.064543377 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.688619187 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.63523204 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.063656404 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.481205931 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.457984345 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.457177422 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.615727737 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.467099889 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.813991487 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.123354172 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.48330849 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.121775656 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.443396575 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460376533 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.459482607 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.126071257 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.479253119 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.81546325 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.551100736 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.530386395 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.14897707 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.087301867 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.08748267 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.635896912 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.460133314 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.457426436 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.457452286 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.443593653 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.126271626 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.482192355 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.461574798 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.116862059 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.484125407 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.461584565 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.466211845 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.459782499 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.53058272 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.552394132 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.841031213 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.134587524 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.57299955 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.473189582 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.615135203 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.880522914 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.465254425 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.067966486 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.445534732 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.134757299 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.485598207 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.445115663 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.462615688 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.467339284 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.639103281 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.616886578 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.069791929 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.483855058 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.069150534 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.660311961 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.462049768 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.461300891 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.463851595 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.133949719 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.091288815 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.661870033 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.62179675 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.694861133 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.447109438 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.461856847 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.446560354 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.553119892 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.463063009 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.134930939 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.092678055 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.48366436 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.464530386 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.46481899 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.464444095 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.673418749 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.156667449 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.576597173 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.060257921 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.845083734 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.823591858 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.46691721 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.535123007 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.485254562 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.826045231 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.467828378 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.531903157 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.951702517 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.824453317 seconds)
  done (took 176.379316995 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.741272403 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.84448739 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.566835805 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.627323862 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.115947835 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.071787766 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.811004675 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.622268667 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.588765908 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.751145908 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.758071662 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.55510277 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.702378107 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.553910654 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.253288069 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.567873759 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.588693227 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.630495544 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.637721479 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.569496186 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.198551699 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.78786473 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.679587295 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.528357504 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.568557565 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.363616841 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.077913326 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.010297784 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.662737961 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.955699426 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.026605549 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.693433083 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.535226551 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.235246204 seconds)
  done (took 71.255750636 seconds)
done (took 734.663353346 seconds)
SAVING RESULT...
DONE!
