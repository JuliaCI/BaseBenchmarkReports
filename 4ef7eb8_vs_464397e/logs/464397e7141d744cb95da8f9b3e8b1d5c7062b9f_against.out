cset: moving following pidspec: 3448
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.227105588 seconds)
loading group "string"... done (took 0.551577275 seconds)
loading group "linalg"... done (took 7.621384332 seconds)
loading group "parallel"... done (took 0.168311776 seconds)
loading group "find"... done (took 1.170674305 seconds)
loading group "tuple"... done (took 2.114959203 seconds)
loading group "dates"... done (took 1.328317228 seconds)
loading group "micro"... done (took 0.246674346 seconds)
loading group "io"... done (took 0.705322157 seconds)
loading group "scalar"... done (took 40.756087104 seconds)
loading group "sparse"... done (took 12.588243064 seconds)
loading group "broadcast"... done (took 1.126799525 seconds)
loading group "union"... done (took 13.387799284 seconds)
loading group "simd"... done (took 4.7503542 seconds)
loading group "random"... done (took 9.645141913 seconds)
loading group "problem"... done (took 2.127701613 seconds)
loading group "array"... done (took 22.492368137 seconds)
loading group "misc"... done (took 2.139106334 seconds)
loading group "sort"... done (took 3.446761757 seconds)
loading group "collection"... done (took 19.454178712 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575294431 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140769047 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148342137 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145689204 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188718217 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.153119508 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157263758 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098101627 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.956331864 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173453876 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151492414 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519589374 seconds)
done (took 5.136469846 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.254924257 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093818903 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103903447 seconds)
  done (took 0.867132732 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078257468 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144500952 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094527813 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078817299 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094916332 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07795393 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095664254 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082160731 seconds)
  done (took 1.347174363 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08609702 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096489787 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08250193 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096447914 seconds)
  done (took 1.039076137 seconds)
done (took 4.271887647 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.734787405 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278392526 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203420955 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462517775 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194615836 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214479973 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682976477 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36171651 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.2504128 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099322643 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143243848 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.382408985 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136817661 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.710212588 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088668356 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121959576 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181275716 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438517668 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082505331 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109384718 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116016283 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140804105 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127771639 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09186664 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182880649 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081449632 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192486867 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112567148 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079417783 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286828241 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200588263 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.718181503 seconds)
  done (took 10.920513617 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110503659 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132111868 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0983621 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138812683 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133465391 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09890263 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08264779 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096617356 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120956694 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175816771 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114241072 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135167679 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095744826 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082884735 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119321827 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247904969 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121642391 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105089145 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101933505 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105376427 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123594097 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113809769 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110595337 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093533909 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168021748 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221403533 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113918192 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128184499 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095891959 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113447603 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144054409 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144685636 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094545496 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080629897 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172363799 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123408722 seconds)
  done (took 5.151927222 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.072472024 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187844267 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120547963 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168449642 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080165463 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142277512 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09438591 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112070305 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255015997 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.172593706 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175667766 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139840513 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.152839394 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098438944 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098661494 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080378048 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097279207 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.614378377 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161128558 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13423281 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096038083 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103350631 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103415786 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.422082128 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086633616 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095306752 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080884677 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08136448 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1590849 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080442624 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.157468212 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101848096 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100395153 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132192036 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197721334 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128150471 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119862967 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098693665 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079249656 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.193822356 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087751328 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09599633 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101411317 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133573985 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133347316 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09702211 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080780011 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221507536 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080124866 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116341434 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.92731256 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181806971 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090949865 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097494721 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326529521 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098779643 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097664043 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081891795 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279023656 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18478814 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095679431 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081849824 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099224678 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080555856 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097415018 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081901072 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400245594 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083397585 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.682146765 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083669287 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108669598 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08297871 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096442758 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103722069 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087981891 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115356428 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07965692 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09789843 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077968711 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095558872 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080700902 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107861042 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103714787 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079585556 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16342532 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078939583 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116892653 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129095004 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085211583 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096985093 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131275547 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082609487 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098900229 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133886407 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081442642 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095724535 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109676252 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082631743 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143146086 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096978122 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138244008 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094283097 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125885068 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100767023 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116582923 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115785643 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100478586 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085178781 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096597641 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077188581 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16347521 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081520675 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098592864 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081934065 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113129122 seconds)
  done (took 22.464992167 seconds)
done (took 40.284214523 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.31604865 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101495062 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102122066 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101692363 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09938575 seconds)
  done (took 1.471746656 seconds)
done (took 2.201203096 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287088205 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171314562 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094855949 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164922188 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092685351 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170959113 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158307621 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110799481 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199146571 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093440801 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162059945 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093434514 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075970716 seconds)
  done (took 2.62649141 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093971138 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114810333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082014699 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111392088 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07669679 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112802651 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094135142 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118753987 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111251891 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088308422 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094773745 seconds)
  done (took 1.820727368 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092731358 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112087491 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081432251 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109056322 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076541168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110669468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093302219 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116884435 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111839078 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086596051 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095076524 seconds)
  done (took 1.80803155 seconds)
done (took 6.972585863 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090613917 seconds)
  done (took 0.808078083 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.919796435 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.851371442 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111935998 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148754881 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298364994 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.188477663 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469006858 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123494543 seconds)
  done (took 11.033335466 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.143862825 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083412345 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100302479 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081906177 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103527204 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082459337 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099735591 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098323303 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085368673 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100976956 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08619641 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097442817 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098707513 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084968073 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099158027 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085058667 seconds)
  done (took 2.318907449 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118464387 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116731516 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104870161 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107143068 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086082157 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103694787 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105729234 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087966786 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100562168 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10189532 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089577518 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104685725 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103088257 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078495953 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105832974 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106123251 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085887885 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104805521 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106831523 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089651433 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105439786 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094441419 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086185379 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105243737 seconds)
  done (took 3.232570125 seconds)
done (took 18.116733609 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15878945 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107857973 seconds)
  done (took 0.996481021 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093960478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111922086 seconds)
  done (took 0.936468262 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096281383 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094910942 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120021521 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108121095 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079233035 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095622183 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118516023 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079750558 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09549111 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078807992 seconds)
  done (took 1.700238002 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080738631 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109367882 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100718937 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094277739 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103660446 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09513508 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086079923 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098342982 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107886689 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075517194 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101104413 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112662813 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084347288 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11452876 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104159636 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082844442 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100315809 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097748322 seconds)
  done (took 2.488477789 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078241437 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096341889 seconds)
  done (took 0.911674513 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079703783 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093711472 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080445664 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09656823 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093274935 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075563407 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093863565 seconds)
  done (took 1.349242318 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488847141 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136676269 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260970149 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101558789 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.11958391 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300746589 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097064591 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083846841 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102620702 seconds)
  done (took 2.468473184 seconds)
done (took 11.586285327 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092438225 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117010576 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111435538 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.461857363 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105913979 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09732317 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146969928 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.244704263 seconds)
done (took 2.118842489 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.141896909 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324064951 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113379468 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066983171 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097435152 seconds)
  done (took 1.346848282 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079578282 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099797717 seconds)
  done (took 0.922060032 seconds)
done (took 3.157262525 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079911812 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096839545 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077573072 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096489931 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.110421836 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094892406 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077203212 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094589392 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079409127 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097680713 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096000347 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.078797054 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096433731 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076240586 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09376585 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079074119 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093986842 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076736331 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095618116 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078629127 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093548993 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079678056 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093911989 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077297347 seconds)
  done (took 2.890161063 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097578123 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097203119 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102235931 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084980332 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100436238 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087065792 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100294821 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097185547 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084177456 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098912716 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099871713 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082345552 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099164981 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082835733 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098356828 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100927163 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085590535 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096360901 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08131909 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100566506 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101791669 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080357857 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100987409 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102221194 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082574872 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099926562 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082030198 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096762751 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102461017 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082722979 seconds)
  done (took 3.554191187 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083948398 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093553554 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078048498 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104684709 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07873907 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098730883 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078256787 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097592966 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079308382 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096203204 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080052549 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09688784 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078492413 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098182405 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079923221 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101248404 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11022467 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079595797 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09808117 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078965837 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100073084 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078570824 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098106211 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078075352 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09676472 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078311444 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097107517 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078678308 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097467089 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079281323 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100344394 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08271253 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09709751 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08710465 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101272722 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078182966 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100059188 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078250828 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097873817 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095649894 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078696777 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0966563 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078895781 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103514654 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079216159 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099377754 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078864356 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098494968 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078416928 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099255625 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077911855 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094911914 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079078849 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095910578 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082273359 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093595936 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095601216 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076224878 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095865084 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077060319 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095473619 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077420181 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099072447 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079785415 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112483515 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085628829 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096815624 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080478798 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097812241 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08196116 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098392462 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111804804 seconds)
  done (took 7.219090925 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081902696 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104896986 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079789252 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096874673 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076687872 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09750688 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100736494 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080697971 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098595417 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083842399 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095820103 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080547121 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095931039 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106779905 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077814566 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096435028 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084312722 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093321612 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078052873 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098025157 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078224245 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098480098 seconds)
  done (took 2.739117751 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207398756 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103477154 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140593486 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106550733 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082138871 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105452364 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101507629 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085183557 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101575931 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082460779 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09983468 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103222133 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082879418 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099691643 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100127949 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083294534 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101731235 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084111282 seconds)
  done (took 2.628739541 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092305716 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097622226 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101986564 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098276668 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099030348 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082593966 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103343849 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109117959 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084247876 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101346959 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091990282 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102511367 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103668256 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082408332 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102528292 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082268388 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103322169 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082711855 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108533816 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105856389 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105304382 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091795794 seconds)
  done (took 2.891340305 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095217701 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099607553 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11732606 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083106897 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094414476 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078445614 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104275021 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080884651 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10531622 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099974246 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080073967 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095785399 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086245722 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096645306 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103507178 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080297575 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099167543 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080233687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100253392 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076176702 seconds)
  done (took 2.618918757 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.210603498 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09859507 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100206466 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090089337 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099906303 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081256269 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10756458 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099366074 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081590139 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123800393 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099145039 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082088025 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108647059 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106313163 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099166325 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091231113 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108160148 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109053213 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08180761 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098951429 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124881412 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08242762 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108164218 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099909201 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081768054 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098950879 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099621041 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087350234 seconds)
  done (took 3.6244075 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080419282 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097983241 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077380816 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096093367 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077711622 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096060632 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077629257 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095955458 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079928487 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095849601 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080825905 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098452033 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082803707 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098043872 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080516631 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098527189 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080271136 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096196659 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077849339 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09601733 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080367669 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097838122 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080873144 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09540656 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078341933 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09859818 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078387514 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095892161 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080818553 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095015001 seconds)
  done (took 3.411702512 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089617619 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106358912 seconds)
  done (took 0.959664738 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078837548 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113870133 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077693751 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102085146 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086216083 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098774652 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10743637 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085111015 seconds)
  done (took 1.514143891 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095443816 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109635175 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082120484 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111885836 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109397277 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097353611 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168371675 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100176556 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086619844 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096621621 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112909275 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079580194 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105398608 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081502362 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10473711 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087594418 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096252476 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105181955 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084270024 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097193971 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082362723 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107565378 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082935248 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094972961 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100592132 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089454093 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.1115796 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082586714 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102635565 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107027474 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086781541 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093981997 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08197516 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100012991 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079499741 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.1078093 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115152351 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084237699 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108829686 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082281871 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109837424 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094758073 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08623942 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10456519 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109680622 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081750699 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100279379 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076861991 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096911911 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083249121 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094495393 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080963402 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094893197 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08832431 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10279681 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110201266 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080062872 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10155472 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084121543 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102916181 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089037753 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101522999 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101435064 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080399639 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10634746 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085894743 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108648233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076419658 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096006613 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097268731 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090773125 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122329251 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087544543 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099955545 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100689152 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078769723 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102911831 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082976693 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105137324 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106076893 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081542502 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105949524 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088368105 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098177914 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084192431 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106656454 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097923137 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082837232 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096131037 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116199727 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081092295 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096766148 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079005293 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109933852 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084530727 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098527501 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079149625 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106323307 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094289564 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082491316 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100480508 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081829992 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109875851 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104779191 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087508571 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108447479 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088032026 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099950867 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102886194 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078686393 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101125772 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084566338 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106149522 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075792549 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102073325 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081936859 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09983534 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10905002 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079903783 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099892251 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08917815 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104851111 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079996794 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095682616 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103022381 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08121977 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103152463 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088890004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098357856 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076773327 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095169808 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102266232 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081204238 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102939113 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087004597 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102402866 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075985131 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097287214 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104262903 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091406149 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099658369 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081646867 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105319497 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100346662 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080377479 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106726972 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084192506 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099573294 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08831499 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101143006 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076896844 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103212747 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103056621 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080896841 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103307992 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085861793 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102491484 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082284535 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098067887 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104979692 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083024655 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099341916 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0818629 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098227162 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092917904 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101550734 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095947548 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078960854 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107157423 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079248545 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.09935645 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080701531 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10144454 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100349089 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080689861 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099499676 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083503318 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112249016 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104455742 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082543339 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106423829 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093282477 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099617758 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083835193 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099722242 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101140554 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082944265 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110291577 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087477082 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105631117 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102155591 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07829401 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105558035 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089728429 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098611499 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081120854 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098709212 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085538104 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105619371 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103540616 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083428668 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097994258 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082490299 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103901782 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102856861 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082033725 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099228188 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.085911318 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099153901 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089654565 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102211869 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111645035 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086166288 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094971546 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085321733 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098359449 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106917107 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077380967 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098292825 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080958196 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101417941 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080709697 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102703701 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076152482 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107655502 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090176267 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100488162 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099019854 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082429589 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10762169 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083886994 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104102616 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086245105 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106362167 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111208943 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081042028 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103327235 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093021231 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100475226 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076249134 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105485616 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098897275 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081161427 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099338636 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080417795 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103034461 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10920081 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088652526 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094775717 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083997315 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099091096 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080534417 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09546413 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08666421 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104192274 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101493845 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089134408 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101821194 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083323837 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103761833 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082934811 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100933405 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101817262 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085824894 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101955584 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084276251 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100319044 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085691602 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099890394 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083071422 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101811145 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101036791 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081817631 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106377111 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081541713 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100816327 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084776357 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101784312 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083374196 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100919227 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100223837 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085665466 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103929861 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08458949 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10600595 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079719424 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111719078 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084283717 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111532705 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10368406 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081474173 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109451605 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08735002 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108912239 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105499817 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086661058 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104977618 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083834143 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106816817 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091705519 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101680888 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115330939 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09333315 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104022906 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085296517 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101791471 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084060543 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099741013 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083163359 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101506846 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100744783 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08202753 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105711094 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084812128 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101712864 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084444558 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101593007 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082484256 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102546334 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0955782 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081583888 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10082641 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082767969 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111564561 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083939429 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104303991 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099605896 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083166981 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100085593 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07961247 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109053305 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109984878 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083969934 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108756336 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081719623 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10269891 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112354528 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076124522 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099272557 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080818278 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098778612 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090698221 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102071947 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09178125 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100878423 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081902297 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097728931 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10226443 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080634092 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095049081 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080837493 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10566761 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084630248 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099452836 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082451679 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103322614 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102035488 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100342037 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100081174 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083420757 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101665075 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080022213 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09940777 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081582857 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103881647 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10202383 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080482675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097503531 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082512976 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101572889 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083334939 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100109926 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084119958 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108403299 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101382617 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085700231 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104777422 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076566153 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104291678 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082033673 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100918725 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082365249 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104437461 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104902716 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084351504 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110727378 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082266008 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102567717 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101859311 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080984705 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100831109 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082666416 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102695186 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082376306 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102844567 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091401289 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099600858 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103942041 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082046654 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101994177 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089124677 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10265283 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084907816 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109637653 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104278077 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083672903 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109120566 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086479973 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105535406 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102649005 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083823871 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107004786 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082264515 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108059298 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083161456 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102237039 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083538384 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099111509 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101474418 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082492928 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099967261 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088419245 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103092484 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08161343 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100422935 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080862236 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102513809 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105117091 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089886283 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103978296 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086013582 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097372214 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079497346 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102301363 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080574519 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103042389 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104591406 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088894472 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104173966 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084165849 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100453792 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092926346 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10916384 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105674705 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080350548 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105625704 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084283623 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104042018 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083987129 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101370751 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102724352 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087021152 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103747695 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082267251 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109160042 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086730969 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102849651 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103780366 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08340051 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101231424 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077540299 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102846168 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084869804 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107223973 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084951577 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101261791 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112169754 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083222269 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101754195 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087296908 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101262164 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087373521 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096442973 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102738003 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083849131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102348804 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07848715 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100720937 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081039697 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104221909 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081482698 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097467642 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113313639 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091882733 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104779164 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081469638 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101017417 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078446871 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098213845 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081788085 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102938428 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103421226 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093538932 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101514555 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082101536 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097572794 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083046002 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10535176 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105381568 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080442721 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097180723 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081747888 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104877911 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.087971705 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100857326 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082768777 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105591272 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104318559 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081237275 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105544393 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079889531 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105946652 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095287823 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10311232 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102937446 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089401187 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110016167 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08413412 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096966931 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083179375 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104927922 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101915397 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083575886 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102839817 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098920738 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105194957 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102229943 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08207953 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104537353 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081875467 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11032821 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084613021 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103294961 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106293154 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085112684 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11124819 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085216714 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110388363 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104306565 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085907694 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100469077 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083406067 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100386582 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081486776 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103686512 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083339236 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107323686 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110199059 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082310915 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113022639 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111268659 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087883871 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098633823 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081967428 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101522897 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079316406 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103023425 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082158492 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100575499 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081479079 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102217398 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102893954 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090388333 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103365434 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083997328 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102350758 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077908511 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10657047 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085600324 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10366792 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079298608 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102970654 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103274015 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087229677 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106507355 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084072328 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104085235 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08491335 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103794854 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078357393 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11001785 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101258188 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086122564 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10192315 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083925749 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103704431 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086830694 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10901086 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104476989 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085850758 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11546283 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085399803 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099787287 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080268502 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10913926 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101094287 seconds)
  done (took 57.433516513 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145678817 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080190107 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097875787 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079229429 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112548395 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099260255 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078770343 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099415593 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080334851 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101242588 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079277761 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098992399 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108979047 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122991707 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092258565 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103584706 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078384591 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10003296 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098171982 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080070643 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109023504 seconds)
  done (took 2.856484007 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103232055 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117040789 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114827691 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118860903 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089498262 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114846886 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114071799 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115405604 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098835587 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110370135 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11844605 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114801769 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090918357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109866399 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11142353 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093509307 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118222356 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108619257 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115462225 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095530828 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11317773 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114240094 seconds)
  done (took 3.212080938 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083469887 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102868938 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084276917 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0970609 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083300133 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097888161 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087894008 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100091625 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086225154 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.1020222 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081915939 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101281391 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103279848 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07831543 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101902107 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081017651 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150925945 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106169935 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082729388 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104799095 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078151352 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105401018 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097711016 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079370666 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101906026 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087566188 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103377926 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081560256 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102415916 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082106869 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103403477 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080654934 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104170484 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102964283 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081918022 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10186688 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083333323 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102179428 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079187289 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100769716 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08384481 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098525985 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08390028 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104227532 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081999704 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101007421 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084800141 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102895922 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097911737 seconds)
  done (took 5.430001038 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104350958 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16023882 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085461763 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143633326 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120233973 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112912661 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087577295 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14144496 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102290113 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082893342 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122285709 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119684075 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102687229 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088759966 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109931302 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103632498 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085826131 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101911893 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107934489 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083549209 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107554915 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090452678 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119419795 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117128977 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108423578 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082872314 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103270825 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108480277 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097262806 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109441135 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108625716 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091118107 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120173006 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108626454 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082337395 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106332279 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121063255 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103708272 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086364745 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100670371 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086514504 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10859982 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10963476 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101087699 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104753396 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108189879 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08422656 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100966266 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117121697 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086432151 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112151906 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119846936 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107515038 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083727263 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109161968 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119182121 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083973621 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102276946 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087314144 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117166865 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100645473 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088155262 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117729698 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105288704 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112497618 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098952681 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10906217 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107791192 seconds)
  done (took 8.088593286 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092579189 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111378895 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119822622 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120853459 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090575735 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111267707 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110988089 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089893045 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110988785 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116625912 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111115356 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134418521 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085962527 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113802526 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110042312 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091693132 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111137987 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110240907 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09130583 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11071777 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110702264 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119466897 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09093462 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120219544 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140926148 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105400072 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089748854 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111023039 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120050798 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111370442 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122609976 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090244787 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111231058 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120458493 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122881816 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090121571 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103015118 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110158248 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091265686 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110902013 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105395916 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101188088 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1111496 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105945257 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09101758 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11113406 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120028457 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123077427 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114970539 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09588602 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110479393 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120948634 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110184324 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091390886 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12049582 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147330871 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121168734 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119730447 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110368685 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099428013 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121293608 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128222238 seconds)
  done (took 7.646618426 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106889066 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114524051 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117280302 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099532021 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082733336 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10963209 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082862546 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10193755 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113515626 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093496422 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116173136 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108980335 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091171706 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116466937 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108352049 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111820941 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088364417 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108697661 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113429374 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108127574 seconds)
  done (took 2.924231997 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092618707 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12366059 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084003374 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111495362 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107748197 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090105475 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106745682 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106810087 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08539311 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107847925 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096277286 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11594773 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104484999 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090935435 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11571919 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111019526 seconds)
  done (took 2.480565556 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095349439 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118479443 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120733672 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084968232 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103357891 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100807998 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083886843 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100254486 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081217118 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12045181 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083730532 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110792611 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10470834 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082441234 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100920314 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087452978 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100762574 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082410584 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104940591 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118367656 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095612064 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104548459 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104799512 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086778074 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10553155 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089860156 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105278707 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102501328 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083529087 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104801258 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08449082 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112805425 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100903458 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08307301 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102927845 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082066619 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104459694 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084744181 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108612446 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103921153 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083782836 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103574668 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084313203 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106442188 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080112816 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10582295 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100294885 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092124215 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102009427 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084066844 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105053632 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10694423 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085940748 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115674719 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087903665 seconds)
  done (took 6.21474645 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098784884 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108956862 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079662423 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102607263 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087414599 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107939924 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108305853 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087186765 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106729969 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082453572 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107126844 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090453644 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1070285 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108287477 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087515347 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108384978 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080715136 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106419266 seconds)
  done (took 2.605847091 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090666253 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104441287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091760851 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105216697 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084783202 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107822259 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079950273 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104373407 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103566883 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084690677 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105078118 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086882442 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103006955 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087505839 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107697079 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084460674 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108307376 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103096976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084818929 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101187992 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087279357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103110698 seconds)
  done (took 2.958133868 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119231753 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125175276 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09243148 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229170718 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103412397 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131339342 seconds)
  done (took 1.639805398 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109753204 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120493472 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105590461 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106911339 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114632761 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085844224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107295558 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10723499 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118023026 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101446313 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107562289 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117742969 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117603483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096490832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113726288 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114296924 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107110088 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0873199 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105393597 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127758619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087154149 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118098591 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108351526 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08685611 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107730528 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116708391 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117213141 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121676494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087908244 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118569021 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113980785 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087993876 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118253591 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122141109 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108742608 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096997088 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107288208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128042935 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114330392 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096776977 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109598449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11381063 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09691573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113044785 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118022163 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107691352 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092718844 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107775245 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107806416 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13564528 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093604633 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117841319 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115583706 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117790686 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097260549 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154907477 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102267851 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117148505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114937008 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12284921 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116759461 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095592715 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11691491 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121831525 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114115828 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117222196 seconds)
  done (took 8.119405382 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10138385 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126191759 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107905649 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121432015 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096586947 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106965268 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107776181 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087296687 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107573603 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1065555 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152452868 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08818805 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117454818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117885743 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087017224 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107961695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108276831 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116336545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087164562 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136161588 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107965366 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117856341 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116504433 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097068577 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123046163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114890301 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108506947 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088189068 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108183761 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107090219 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093157361 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107784184 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117891766 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086751732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118179622 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10819162 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086869367 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114317567 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108471119 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115384159 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096684267 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127990133 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108129088 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107769281 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100832041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108214386 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10866953 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086637802 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108595167 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106327694 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101370834 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121286877 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123265011 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117421572 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107906197 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088031301 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108382175 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108423404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087786429 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114269719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118005407 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087583115 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156004947 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08688504 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107957477 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117179258 seconds)
  done (took 7.992995414 seconds)
done (took 154.393877908 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.233860018 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.230557093 seconds)
  done (took 1.30855163 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.0978459 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135837569 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095517447 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167889534 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106114496 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118974599 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138265197 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097420945 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106532326 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085471937 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106472675 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086465563 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171307522 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084912565 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106115779 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106986293 seconds)
  done (took 2.659101275 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199091957 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254414461 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101672976 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105698238 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08901811 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109920267 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104178701 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090353197 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110158375 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08540425 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108350336 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086373807 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105061799 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085251685 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110388483 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088293253 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106171571 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086760673 seconds)
  done (took 2.873751472 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112435134 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145744621 seconds)
  done (took 1.113755923 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117052753 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179368459 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315254638 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15407908 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106430123 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126885311 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156556994 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130941947 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196252646 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122400081 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121474216 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096830249 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140314484 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115035526 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093356882 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11781399 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141484207 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092258388 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115129569 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115450615 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115934471 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106472543 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114902427 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092967874 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18133915 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119763216 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085387648 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105865625 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115418059 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093947433 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113289435 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123854067 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097694222 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17728562 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101673441 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175700072 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097235659 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110995137 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114521831 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090888002 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118181793 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118108894 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103356784 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117550685 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083984143 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118837312 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105206391 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085052729 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113953949 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096607603 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115062653 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113402013 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155252882 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118220965 seconds)
  done (took 7.503307426 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793759881 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155774369 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089997905 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884797226 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137844131 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102906177 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78148397 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134804709 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232873967 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759260218 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134360248 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121346238 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22834373 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237101345 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958021507 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311117828 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671400566 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101214607 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1510504 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152314219 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118165727 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136654711 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129162477 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427019339 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095648376 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111826439 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095217232 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12098553 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158363467 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125499799 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114879709 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178773287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.2476484 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20438681 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115941089 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089466277 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111411262 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169443067 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267460558 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214187239 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179733256 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087144732 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109950663 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099560549 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13204226 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10908129 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166011773 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172889607 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192743025 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092152347 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120844403 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118718558 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099170333 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187249246 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099330874 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313712195 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310753389 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111168456 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097905147 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127256709 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26339308 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122065886 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222705885 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117417569 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211888192 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111408713 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774987917 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190370269 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089690206 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123306175 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118628463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093965932 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122070376 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168602924 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393315568 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12379519 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093402001 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110756141 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204742243 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125206299 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110439524 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162956721 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093028598 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12101207 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124222814 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121945182 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169096306 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230895475 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123531799 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117505458 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093128088 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125736018 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115831385 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212514957 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219260301 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163824664 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207585564 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123466647 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164711162 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189598726 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098059072 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193532211 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09769172 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125517772 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122475457 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215012289 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145633955 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102242204 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115478939 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116720067 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147060689 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104959602 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118905924 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169265474 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478708997 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167755266 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107301246 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104992573 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119486416 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161625197 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117845399 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257626418 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099910868 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191031491 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097173314 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109428149 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119766817 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164321609 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122685695 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098852666 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122827876 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118782589 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236111898 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218261466 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099750298 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244854393 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183289458 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118828242 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173258503 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120302236 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168597494 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119470452 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099719201 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116975813 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787870497 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123485167 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098946769 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116071034 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186709854 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089711886 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124428219 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12428386 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08629661 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7748646 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127519899 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120695189 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103563837 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119502156 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119565601 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096404605 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115729616 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162598983 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231831051 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121243823 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09697831 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12489362 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158711295 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116799595 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125270086 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124215707 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103124649 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12248341 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114243725 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102754525 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192067454 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162652743 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22059435 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568123995 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112239767 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124204788 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228736422 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090959594 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287742292 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119527988 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204578945 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186683872 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098307855 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310074947 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187268474 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187669927 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105786236 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194521822 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087302725 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11728761 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164539686 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111052855 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095236258 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182905462 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103223716 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124502495 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957105716 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088608671 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245783947 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087117554 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191614524 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094967928 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121252954 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294438411 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090753343 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128981651 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163282635 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11551506 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124456403 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.696612196 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124756803 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121051633 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096319345 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222612344 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161290869 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120131612 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119454299 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119916912 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162806867 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208112076 seconds)
  done (took 43.912058031 seconds)
done (took 60.220002079 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276951695 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217832901 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263617536 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168677669 seconds)
  done (took 1.880551569 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170935549 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148774384 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121120133 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106927521 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150298584 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084470234 seconds)
  done (took 1.663049415 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355982327 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273170978 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239698995 seconds)
  done (took 1.749590822 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.316833129 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247880184 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473581913 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324718543 seconds)
  done (took 2.337735687 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209990169 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132195479 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110308683 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104362332 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196710569 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247300881 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141187839 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201201097 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100054521 seconds)
  done (took 2.368745683 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195634607 seconds)
done (took 11.077749246 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.216539335 seconds)
    (2/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.160222755 seconds)
    (3/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.262535832 seconds)
    (4/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.12711095 seconds)
    (5/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122058478 seconds)
    (6/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.269991706 seconds)
    (7/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.234949802 seconds)
    (8/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.200803225 seconds)
    (9/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.180063724 seconds)
    (10/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.12653805 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.193455357 seconds)
    (12/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.158712611 seconds)
    (13/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.133547514 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102355904 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121887865 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.137437167 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094138436 seconds)
    (18/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.177633644 seconds)
    (19/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091182438 seconds)
    (20/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124215067 seconds)
    (21/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11816497 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.115447955 seconds)
    (23/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117143337 seconds)
    (24/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089037922 seconds)
    (25/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117247379 seconds)
    (26/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.142597906 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102550777 seconds)
    (28/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.20282022 seconds)
    (29/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.197029258 seconds)
    (30/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.176602921 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.221007812 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086621615 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116438502 seconds)
    (34/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093102149 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116546627 seconds)
    (36/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196471426 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085755049 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137862527 seconds)
    (39/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.256896758 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123372632 seconds)
    (41/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.185375805 seconds)
    (42/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.172623501 seconds)
    (43/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115234344 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093691066 seconds)
    (45/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.212907424 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134117307 seconds)
    (47/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.18052328 seconds)
    (48/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09760256 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108079382 seconds)
    (50/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.211160549 seconds)
    (51/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.127816074 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110770389 seconds)
    (53/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.215615378 seconds)
    (54/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083790881 seconds)
    (55/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.249124934 seconds)
    (56/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114929994 seconds)
    (57/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.170327732 seconds)
    (58/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.1133098 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095585102 seconds)
    (60/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.207958439 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109114079 seconds)
    (62/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093643325 seconds)
    (63/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113088421 seconds)
    (64/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095800404 seconds)
    (65/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.148499258 seconds)
    (66/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096638798 seconds)
    (67/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.193096428 seconds)
    (68/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.089776681 seconds)
    (69/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066480738 seconds)
    (70/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067291042 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119387317 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085195024 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.109441215 seconds)
    (74/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094167675 seconds)
    (75/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193563026 seconds)
    (76/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.089952095 seconds)
    (77/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100995109 seconds)
    (78/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120298121 seconds)
    (79/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171708033 seconds)
    (80/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094873159 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.134619253 seconds)
    (82/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.14806441 seconds)
    (83/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090403717 seconds)
    (84/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095572931 seconds)
    (85/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163372882 seconds)
    (86/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166628588 seconds)
    (87/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084376295 seconds)
    (88/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.111733713 seconds)
    (89/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094497798 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115736347 seconds)
    (91/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093899727 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13352256 seconds)
    (93/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.143664925 seconds)
    (94/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086227056 seconds)
    (95/286) benchmarking ("sort", Float32, false)...
    done (took 0.172582503 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.185556404 seconds)
    (97/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.148030054 seconds)
    (98/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11347631 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135542816 seconds)
    (100/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107185611 seconds)
    (101/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090676493 seconds)
    (102/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066683303 seconds)
    (103/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220428138 seconds)
    (104/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173850509 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.203122151 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.070433457 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 0.180945078 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117280073 seconds)
    (109/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.110787228 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140860694 seconds)
    (111/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115004402 seconds)
    (112/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.074983121 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116361211 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.150426203 seconds)
    (115/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.150889977 seconds)
    (116/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.227369756 seconds)
    (117/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065766601 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109275782 seconds)
    (119/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093478809 seconds)
    (120/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.16014419 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.09283594 seconds)
    (122/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065891114 seconds)
    (123/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067028494 seconds)
    (124/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090113708 seconds)
    (125/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.128812564 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108556243 seconds)
    (127/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097234576 seconds)
    (128/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116841896 seconds)
    (129/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111611557 seconds)
    (130/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14395595 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120465966 seconds)
    (132/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068453635 seconds)
    (133/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115262142 seconds)
    (134/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066775698 seconds)
    (135/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.17073733 seconds)
    (136/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095593948 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066518224 seconds)
    (138/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171437173 seconds)
    (139/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.141908741 seconds)
    (140/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086216194 seconds)
    (141/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160037704 seconds)
    (142/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119776349 seconds)
    (143/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089720621 seconds)
    (144/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118443388 seconds)
    (145/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096236096 seconds)
    (146/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102007896 seconds)
    (147/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087454135 seconds)
    (148/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179795741 seconds)
    (149/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068425268 seconds)
    (150/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.18275863 seconds)
    (151/286) benchmarking ("sort", Int8, true)...
    done (took 0.219342075 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139919324 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085858203 seconds)
    (154/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115357445 seconds)
    (155/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094333259 seconds)
    (156/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105478726 seconds)
    (157/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113778388 seconds)
    (158/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090376779 seconds)
    (159/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098283893 seconds)
    (160/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.194392104 seconds)
    (161/286) benchmarking ("sort", Int8, false)...
    done (took 0.187795306 seconds)
    (162/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.089677062 seconds)
    (163/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066683377 seconds)
    (164/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066944761 seconds)
    (165/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.142808286 seconds)
    (166/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066331498 seconds)
    (167/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174542349 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092927605 seconds)
    (169/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119747651 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085496449 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.11864077 seconds)
    (172/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066225478 seconds)
    (173/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110687541 seconds)
    (174/286) benchmarking ("sort", Float64, true)...
    done (took 0.228090195 seconds)
    (175/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067851567 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165750062 seconds)
    (177/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066710991 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 0.220633604 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110503171 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084581516 seconds)
    (181/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.091113398 seconds)
    (182/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.320908063 seconds)
    (183/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111118523 seconds)
    (184/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086273893 seconds)
    (185/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18256585 seconds)
    (186/286) benchmarking ("sort", Float64, false)...
    done (took 0.17136995 seconds)
    (187/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093777836 seconds)
    (188/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110916978 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119927809 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09411363 seconds)
    (191/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.11055144 seconds)
    (192/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066982012 seconds)
    (193/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086692234 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120974272 seconds)
    (195/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066830234 seconds)
    (196/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.117515408 seconds)
    (197/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077184407 seconds)
    (198/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.089858922 seconds)
    (199/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.1199291 seconds)
    (200/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065748966 seconds)
    (201/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090040469 seconds)
    (202/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085550945 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115503551 seconds)
    (204/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.066805594 seconds)
    (205/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.204008531 seconds)
    (206/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066053142 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108032938 seconds)
    (208/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.07630588 seconds)
    (209/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.099539426 seconds)
    (210/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076993583 seconds)
    (211/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068076118 seconds)
    (212/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110468006 seconds)
    (213/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135467733 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087656174 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110180616 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092805357 seconds)
    (217/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064997777 seconds)
    (218/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.192494672 seconds)
    (219/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.089657004 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068079189 seconds)
    (221/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124560938 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086295667 seconds)
    (223/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090986372 seconds)
    (224/286) benchmarking ("sort", Float32, true)...
    done (took 0.203689938 seconds)
    (225/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150676626 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134026475 seconds)
    (227/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090269971 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11003351 seconds)
    (229/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067237586 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.1089074 seconds)
    (231/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085154313 seconds)
    (232/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110246665 seconds)
    (233/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085918567 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.180793273 seconds)
    (235/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093995721 seconds)
    (236/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118805018 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091591835 seconds)
    (238/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137107131 seconds)
    (239/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06628065 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109413197 seconds)
    (241/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115643149 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094764015 seconds)
    (243/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136051698 seconds)
    (244/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.08762077 seconds)
    (245/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136233728 seconds)
    (246/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067630825 seconds)
    (247/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115796273 seconds)
    (248/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.077077234 seconds)
    (249/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137996333 seconds)
    (250/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092979759 seconds)
    (251/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112235844 seconds)
    (252/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089143519 seconds)
    (253/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.110786032 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09396238 seconds)
    (255/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136115053 seconds)
    (256/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108135322 seconds)
    (257/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099825406 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108188801 seconds)
    (259/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230203118 seconds)
    (260/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.110831297 seconds)
    (261/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.11302368 seconds)
    (262/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094874064 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109323982 seconds)
    (264/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077227318 seconds)
    (265/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114577446 seconds)
    (266/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089570416 seconds)
    (267/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117661431 seconds)
    (268/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184004374 seconds)
    (269/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066973005 seconds)
    (270/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127408426 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086005338 seconds)
    (272/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090160273 seconds)
    (273/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085234029 seconds)
    (274/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067739728 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110392731 seconds)
    (276/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122809921 seconds)
    (277/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066248547 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085014573 seconds)
    (279/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090313503 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091665799 seconds)
    (281/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067509631 seconds)
    (282/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090743019 seconds)
    (283/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109886488 seconds)
    (284/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111172078 seconds)
    (285/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.109945751 seconds)
    (286/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066901935 seconds)
  done (took 35.978761611 seconds)
done (took 36.867195335 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099846555 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146879074 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095351384 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135306098 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123339678 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090375989 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117572978 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097925115 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123290536 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125256969 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098751594 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092923876 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096675171 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119967253 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0992192 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137598879 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122059832 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092944582 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118320678 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084938035 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117636922 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087226343 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110639226 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069335826 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120607303 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093458459 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115870678 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120958865 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086008475 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110129742 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089545479 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117099849 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086269932 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123012771 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093202777 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11763794 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096300619 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11947004 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088078882 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109691418 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118099543 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08547339 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116475044 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094327714 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115304858 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091982019 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117580717 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098837425 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138415187 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114796461 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094413381 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119047043 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095687465 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116835201 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090447628 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118091525 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091996703 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138778819 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118432381 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092020206 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117518361 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093824942 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115064075 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094719079 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118166336 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120261586 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097431157 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115206004 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096488519 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114968764 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086560355 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117890565 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090904378 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109597138 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095515926 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120745788 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085215917 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116070088 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093011879 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115493503 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110842835 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089397554 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111887904 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092305548 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113235577 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069700687 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090288883 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.11580794 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085444613 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118407698 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115294413 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093305767 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111613503 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098378053 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10986745 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091697859 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109583215 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086587943 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111596168 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091454988 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109853754 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089684359 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119494495 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087822257 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116679279 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098786806 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109903967 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116393475 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08604995 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110066207 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101598094 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120026693 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086647466 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114506109 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086000693 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117152277 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085769338 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111085601 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086234299 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109717913 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092487556 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110080153 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08927079 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116400707 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124653775 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086442168 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113863342 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088864899 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110814669 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091975366 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11070825 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.085989593 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112071385 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076914775 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113914147 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086302315 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118521742 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089193198 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118358888 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088647297 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119581905 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091344378 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116453212 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092604897 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109882256 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07384428 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115748378 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089098056 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112673982 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086265139 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112168927 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087117751 seconds)
done (took 16.825044154 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086970763 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183158908 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150410869 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.1420026 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106641214 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110765389 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121381467 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117605651 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112888984 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141733265 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110247515 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130985166 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147216737 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086416867 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111374649 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091480974 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112816661 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102148104 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145270463 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132273018 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164588268 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086177847 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146779607 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134660372 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120272546 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104189207 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111414715 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092429286 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114486156 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111582747 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13136453 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089760713 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112398908 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132878428 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104195207 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119595571 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086374995 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11833353 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087212809 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11224133 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140254261 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108447618 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116357637 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116903173 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090916202 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113553642 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088948197 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119977253 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097022096 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115727032 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125835496 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154660383 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091020823 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121036347 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085680528 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121923822 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120759657 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089103957 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112532151 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089673602 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111509693 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091418973 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126104575 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141707222 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090996214 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121192414 seconds)
  done (took 8.562432729 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103969475 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139166623 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10439564 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130097657 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110975295 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087997955 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114815114 seconds)
  done (took 1.737687334 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087670601 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134032285 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1110402 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135576365 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131886785 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108419035 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122759591 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088359394 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131021583 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089067245 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133777868 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150372831 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089446609 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120489462 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137101017 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087703873 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137180535 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087946688 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116409533 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110950003 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116152112 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134572593 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09051114 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112940308 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102770169 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113904427 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161662278 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093326677 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114278379 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091545038 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11130223 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16574023 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102121752 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125604749 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088004371 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128560118 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.1454287 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087185558 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130648511 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092820156 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127848238 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088691292 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114050791 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086460086 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117239088 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123916231 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08883529 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114016502 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090795308 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132898067 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088785756 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126562964 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08813856 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117580169 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090354384 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118995676 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123606682 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089205665 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132971152 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090429935 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130328131 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104437593 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127776857 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130243688 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091548572 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127155778 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102614511 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116532244 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090038184 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117283264 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130159986 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085815815 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115292177 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099416021 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11562491 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111752548 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136926697 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089734422 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124324032 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113810265 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089741568 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11411213 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111718151 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117450941 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088771104 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120309805 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091607739 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112292726 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087523656 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117062087 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086872522 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114853522 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091779645 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113971473 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115545049 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106967066 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11514618 seconds)
  done (took 11.780017013 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089275725 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114742957 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090828224 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11401547 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089114976 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114585059 seconds)
  done (took 1.569749746 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113808086 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117600035 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103034037 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119284886 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154752554 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.1026258 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129467066 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123999528 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108744301 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126276553 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128718455 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105014413 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135108786 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121044037 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10367511 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120419761 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104337818 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125091839 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126389379 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096303297 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136028577 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120047309 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095618271 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131339922 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117722091 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094538096 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124704614 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101826748 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128080944 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123458489 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096190275 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118205635 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095827294 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12327062 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129761045 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09569615 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120012012 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119007167 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099588716 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118072885 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10404456 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121160819 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126351001 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093219532 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123245471 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120644155 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.0931762 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125780502 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102750013 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11880725 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118347453 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094878942 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118016028 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093522191 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120834411 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122690796 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095116317 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129113914 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095042753 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121855638 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118301268 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093271991 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122528883 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117591939 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104008682 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118838697 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095388469 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121422711 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121082347 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095499274 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119327276 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092448041 seconds)
  done (took 9.173544545 seconds)
done (took 33.766902486 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690167305 seconds)
  done (took 1.649695299 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.835249115 seconds)
  done (took 1.796031596 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.062702455 seconds)
  done (took 18.048942391 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.494201399 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.578399708 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992126359 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179892997 seconds)
  done (took 3.205118309 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955032223 seconds)
  done (took 1.933352623 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282889047 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230823863 seconds)
  done (took 1.47995284 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772499097 seconds)
  done (took 1.746787581 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.353157202 seconds)
  done (took 2.316985831 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325563732 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182597882 seconds)
  done (took 1.483148716 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546285008 seconds)
  done (took 1.518953398 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.804812045 seconds)
  done (took 7.783163457 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266093635 seconds)
  done (took 1.250929508 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298170546 seconds)
  done (took 1.274653304 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.524414911 seconds)
  done (took 4.501671268 seconds)
done (took 50.961955081 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097853436 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126448841 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101314637 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123476172 seconds)
  done (took 1.419407609 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10012012 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119951584 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099438834 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119970291 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125393675 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095965757 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121968973 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100366105 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119854372 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09565419 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120725578 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119223061 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097806397 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122001497 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09336972 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123759105 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098857211 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12065497 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123034881 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095470475 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118463384 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097218934 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124571077 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093862371 seconds)
  done (took 3.627983145 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099338119 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11858581 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096378317 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117809913 seconds)
  done (took 1.41711192 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100231731 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141554678 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139658813 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09949795 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141999045 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135374278 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091675839 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116523271 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094615647 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124680997 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09033675 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149296421 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136397299 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098570439 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12714329 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087861169 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116981422 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.1364527 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100325374 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125834682 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093028118 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124400914 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089333407 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138724494 seconds)
  done (took 3.780826502 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169405653 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127223858 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137620286 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094880693 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159690238 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140283962 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087771479 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140402798 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087192573 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130843396 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117397575 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133002615 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129183246 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087511257 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11341812 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08711282 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128754666 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128414894 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090473075 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12725985 seconds)
  done (took 3.405774908 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097251978 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116842215 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088043084 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115559526 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098807173 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120691053 seconds)
  done (took 1.623867415 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090037797 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114184565 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089554555 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113500384 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094424488 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114114536 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088738909 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115868787 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088999866 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114304574 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088447849 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115321378 seconds)
  done (took 2.214204518 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.498890827 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120298781 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119564892 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088331554 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122025375 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0889976 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129189683 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092081836 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142105644 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088242857 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115966676 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090521521 seconds)
  done (took 2.681755316 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232461178 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125049535 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285212445 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368680814 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154565718 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176272146 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278448436 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159487168 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223366544 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164572386 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201962093 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221531458 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151584032 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189784528 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136637335 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144911211 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203497704 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24581697 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154114232 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206557596 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224878279 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167402038 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179583278 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149996545 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137574198 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171531987 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09383838 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129937697 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232533737 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176128523 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214660548 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160871368 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145221285 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208556539 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251488935 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220003315 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282728266 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134487157 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.150379308 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165668674 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261247928 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137763675 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202075529 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153545755 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13053692 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216192001 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165842988 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175929212 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150774731 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138450232 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194248919 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238267682 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191080743 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138067162 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303964572 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146498545 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.201185329 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194157178 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249477742 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198733512 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212223326 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093829674 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186941359 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217595384 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185242138 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173854936 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208213559 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146889399 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199195357 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187673833 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163056576 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221201216 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184372948 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139750847 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169835486 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172120385 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170384424 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257589937 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210667855 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095539387 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167653483 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149633652 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133042318 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193544426 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097451562 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239130362 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143716723 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163010786 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213034903 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159630439 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159943819 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201504083 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228644119 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147837712 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083548547 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154063045 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155287409 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191227758 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139482809 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15841644 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161691465 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130638038 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182100658 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124237691 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182643813 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117595546 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173192534 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1809642 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126030372 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159425588 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150937915 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12446045 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199408459 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197455132 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141334155 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132486072 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208355013 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177072457 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15031553 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176359562 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227291308 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11658901 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148994336 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22808626 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215185457 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140009711 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228558031 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155605595 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107453592 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131899471 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180441702 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154021152 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161936729 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134193785 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182625758 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231193153 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098567089 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138047221 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192509577 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133047023 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133158652 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163611828 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147669195 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111082999 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150911076 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151826464 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207731737 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178102061 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152929043 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165135647 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151667196 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252855341 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141290214 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123395457 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148314215 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119645873 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191451534 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196461455 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130531908 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230498414 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170917116 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202022861 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168003262 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13448812 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176348657 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128524057 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092111755 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221137428 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168329137 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160933265 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197378761 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225238141 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178270888 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181275797 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197910978 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172709529 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163242833 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156511767 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110905161 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158434265 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169480394 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123234224 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142275478 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132744337 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147134989 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115098002 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133351689 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222148737 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169392213 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188588995 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158265434 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149259359 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180674211 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128782967 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173603346 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176831899 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148345703 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196975914 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220364866 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184882056 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143203269 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200322809 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120496708 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124040173 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113630462 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196183809 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106446418 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134943304 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162695619 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18056354 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180259568 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202524641 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210073721 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169308869 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216179964 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094637024 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167626887 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183463645 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176279029 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.192102619 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13970821 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148954896 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178113483 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15712772 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254689603 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167694665 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174593465 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234306868 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12173496 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132828133 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152433783 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192228609 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152765819 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203057685 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119825048 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141622668 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161107262 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132623766 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160260299 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182187945 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162516926 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214626855 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149547714 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184147778 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127222077 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162396554 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159404348 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16406833 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081216247 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174721939 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231430739 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147800561 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167602213 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188682083 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131581082 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307039571 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240102434 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195272407 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136955194 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155991371 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160660464 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162569433 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172056815 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177924233 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157585343 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186831158 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158312226 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136555805 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139591772 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120058818 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150719797 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131521341 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14862883 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176643314 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138759853 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185970951 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162332075 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159159198 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171729774 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149336024 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143595691 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149500952 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215477175 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182220346 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238286604 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150847143 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179469388 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233191408 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098254685 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131359998 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133506048 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177028195 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108679359 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220368 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18745493 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228164137 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183480363 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193443151 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140640155 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119176612 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128241353 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198029885 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206979994 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151853107 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159267345 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230253376 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118442909 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132059574 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17729194 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292014876 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142535313 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221559579 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080450958 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28019145 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125616027 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104421678 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16386306 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235546298 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136616289 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187908532 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170963701 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170147639 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164067775 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149173543 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189710676 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243043592 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200959492 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178654322 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133484793 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156192237 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176067287 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219220365 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157302879 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111807318 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22979475 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194656736 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194893084 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141426815 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168591297 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168693758 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157861567 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214332324 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10712788 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235247811 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13363931 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194044099 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152237068 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143591238 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176369286 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188142582 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139709601 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213799705 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183472404 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134612043 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104690001 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167776985 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20821305 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155843127 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099745708 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20792331 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097224759 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220766761 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228739658 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135235601 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154603342 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146866381 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10664944 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153442102 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184302555 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112818664 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164699487 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201778846 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135500845 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190897768 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230939209 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169456861 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173315797 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144299359 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691172583 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131298149 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194342901 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158708454 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232908365 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150285804 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172172001 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158132551 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167222645 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195058742 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160224153 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231739785 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219269594 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17852617 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102861709 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157224279 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189850565 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116021756 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15047562 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16812629 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158638429 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154247559 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.204432099 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171601649 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106218961 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140166724 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197978135 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159956957 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211750153 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179741725 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1093659 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201170439 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18758135 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133148845 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179203928 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236079936 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113254196 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151139136 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133523023 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156425531 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263273203 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095878717 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232391729 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183473685 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15937352 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167599258 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146685902 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220469267 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157644572 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186047618 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146712745 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159740542 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155948755 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137039792 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101570951 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155285153 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166591178 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150782829 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157619863 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163581029 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19492821 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094985166 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144590764 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31403875 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192695017 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241486992 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106613919 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135819431 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161907432 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15181664 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175601548 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177640779 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134999407 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135317385 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1079019 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157659556 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111752262 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155701791 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19330859 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191709158 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204903616 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13498431 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276903906 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111529019 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155075639 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114229316 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104609466 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149929288 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146104814 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156818871 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191284479 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263434143 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146800347 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131973615 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14840336 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097178321 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135291798 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163631314 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163376085 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178203143 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143417973 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079518471 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154857758 seconds)
  done (took 82.929313769 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17451263 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132637422 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146843899 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201514954 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175922696 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268261825 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209557685 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252229915 seconds)
  done (took 2.640500052 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092570551 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145551217 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156483318 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132349594 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090916373 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118652554 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341679791 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131099206 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116897302 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120008676 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17287254 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092788099 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.54733033 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.08991915 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118891231 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10738766 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091087903 seconds)
  done (took 3.739337397 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.47296043 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.734571139 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.510008328 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.096602538 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.242719708 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112373223 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.910592628 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.203394744 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114584397 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486162098 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.779241126 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158871332 seconds)
  done (took 18.908297058 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114929238 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136487547 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123011568 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152482808 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139819157 seconds)
  done (took 1.758755782 seconds)
done (took 131.12011306 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103718947 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402136095 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070783597 seconds)
  done (took 1.593899736 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107397747 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136399639 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107449806 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136660353 seconds)
  done (took 1.583573888 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097664853 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126663506 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108181866 seconds)
  done (took 1.422260717 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322247325 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190711906 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.168751222 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106233885 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128637078 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102664393 seconds)
  done (took 1.427983963 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096259453 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127332858 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097323904 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129727449 seconds)
  done (took 1.541295037 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094165996 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070267147 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100428988 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074541664 seconds)
  done (took 1.425917038 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113447724 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131216567 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103636576 seconds)
  done (took 1.441041051 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128045002 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138324014 seconds)
  done (took 1.359027132 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104740463 seconds)
  done (took 1.192635536 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117108465 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168441276 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188879797 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163462998 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.234233687 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165265205 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140709506 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113921712 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131838861 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143148727 seconds)
  done (took 2.659453456 seconds)
done (took 17.521247928 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102780763 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.517837689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412349999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115866106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72288078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379559336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033218819 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145975296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164811489 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092739589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138875132 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67138717 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024340849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.467953119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982800752 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371833626 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677814759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121264259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119519129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093851488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017585282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091334809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121438095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091521581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.710042546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425820422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094450848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371765234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092495924 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126419151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382895082 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122268114 seconds)
  done (took 17.089553614 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094562953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172797849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098079368 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137767069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123566978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093492223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124475231 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092154068 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178617715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122512419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109826249 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120150348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125461105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094418879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141708334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09245806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125113052 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091964703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12084351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12037042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112196491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119735574 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094489435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121300519 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093547801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135857131 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093539683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120946537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120253126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09799173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126783981 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094747525 seconds)
  done (took 4.80583082 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140303869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182874786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128469071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12633141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168454747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124112646 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198378091 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117364049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182216617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122727998 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139197831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093089798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156032728 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094290163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142172224 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12010678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095674138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122516685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092255252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122149219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139383627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092485046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121872376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092709599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122962595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107404071 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124403992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120576355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093197591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12531845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099141633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123271936 seconds)
  done (took 5.13475529 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096649123 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125207862 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108602162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137877216 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094660746 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125880546 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096408355 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124908228 seconds)
  done (took 2.008953372 seconds)
done (took 30.131789652 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110655437 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127265303 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105809632 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134695244 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101929833 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131398219 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091201151 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134710085 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133207884 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101748196 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137452293 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091725632 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122497202 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09173541 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135323401 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096331553 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131883021 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101039303 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13443893 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131691198 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094119477 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133462069 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102452248 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133001917 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103593487 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13427185 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136797108 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099848019 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122604551 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093898088 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12590561 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103710864 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123926668 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104849416 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127328423 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096996969 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124510348 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094241902 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132984296 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133273234 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099809768 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132950047 seconds)
  done (took 5.993045752 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10702748 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140437811 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105295691 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080645239 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117820598 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080023483 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138362811 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078877372 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110485626 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107102493 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073720584 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106565797 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078003936 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101642303 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076868624 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075498249 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108629936 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07581722 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076208081 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106225264 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079602609 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072027908 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108733234 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078827071 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073810794 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110482232 seconds)
  done (took 3.572576828 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100376514 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135052401 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112857291 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183411923 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159814029 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099576514 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131565156 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109684002 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137628257 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120047719 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096227354 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150477558 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109623325 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129982578 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091638032 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136920578 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134784609 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093651725 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12764122 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112099891 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138193125 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102395495 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141683008 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132471952 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091907316 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122311401 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096807059 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134381937 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097403336 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13082211 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096231099 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125067524 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122912794 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104017343 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125282873 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093856787 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142318124 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103518923 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130951456 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092135255 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130545753 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121587564 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113690421 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161909766 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091346898 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129764512 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094767018 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133440099 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12137368 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109803255 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130668096 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091523111 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125511345 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090847128 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121870224 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106026237 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123713233 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094243363 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130915575 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126797445 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105204506 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124954308 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108520647 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121649099 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099726916 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121917624 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092688255 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120830922 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114620059 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123307753 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161085864 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102127964 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123380924 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101180339 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12968786 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127852924 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092678531 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137731561 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1015835 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125497972 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100917078 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125445991 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094416948 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.14071601 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123906876 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.093984192 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122294821 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099553169 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124533027 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.092988012 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136306321 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091200922 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125950109 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138969467 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092263874 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122569895 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101206451 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127136866 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091952482 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138044611 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097926997 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122648367 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132099997 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093467016 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124386297 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103095035 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126272153 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091700316 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127037011 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098217067 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123196799 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092652735 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125308351 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093772693 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132244154 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.1282204 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097449346 seconds)
  done (took 14.791609435 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228607168 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214989436 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205694113 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29461654 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135381589 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11410584 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209036736 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154912736 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123632032 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159837805 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173482572 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181218336 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169851594 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179950695 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169515412 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092583526 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141833054 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163777406 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214298978 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256728272 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143610101 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.10049492 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160312808 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159158854 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136755 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132894305 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109666817 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134289073 seconds)
  done (took 5.784610253 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10783284 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155694309 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097976143 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144966829 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148897356 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09360908 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12808076 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093880252 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135295662 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136577217 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092255558 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12898582 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099366607 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13265018 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12300623 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102582832 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131965104 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094596074 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125896225 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096416098 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133490166 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101178509 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126785847 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090870342 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132278254 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121676567 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08563599 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142022814 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092736553 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145090737 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120331661 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101202909 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136253946 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092945972 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123005258 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094597986 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125088146 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094287163 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124854127 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091842177 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122869092 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076733269 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12241522 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106144322 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12915886 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079903624 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130066259 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098203591 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.123370483 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119642163 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096867827 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125281367 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095992596 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130314531 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095923408 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123685837 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096237401 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115254405 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099865045 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125140151 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0847588 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09147125 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127916819 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117181824 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100951508 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127848838 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091575175 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125267464 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097130481 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129259085 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095017809 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129394569 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091009923 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126670353 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095283239 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129186833 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095966851 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122300077 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091679866 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123029592 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074794334 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123714271 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073534139 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125877946 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091622537 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122254447 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095442375 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129886525 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13722374 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09537547 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13129747 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094256144 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122573086 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096448176 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112625539 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096447368 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139256591 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140305422 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09360749 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121209316 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108326046 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126266798 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092013602 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105909264 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102354278 seconds)
  done (took 12.932186995 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127586096 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15452683 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094834331 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142031942 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156964328 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157960233 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10066701 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130759092 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094518396 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142502467 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09345233 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132388415 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094333968 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137544222 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157405055 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10403826 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125432228 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10784504 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128490192 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169456494 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111287382 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142008647 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109883401 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124733964 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098572623 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140468341 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161093374 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106821098 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137504135 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141525934 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107386708 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160865094 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113029696 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128791407 seconds)
  done (took 5.475025188 seconds)
done (took 49.648725488 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.207238768 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.426703987 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.200406757 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.126964163 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.225116701 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.224057452 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.217955755 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.215201902 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.77672924 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.202823837 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.447437594 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.850035086 seconds)
done (took 60.254191805 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.239807883 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.335063836 seconds)
    (2/2) benchmarking "String"...
    done (took 1.465028157 seconds)
  done (took 3.933131621 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.563480038 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.15041811 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46136364 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.200387832 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.201100186 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.492622314 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.914780006 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.568525702 seconds)
  done (took 28.121265927 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.210310377 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.286566832 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.227386556 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.209837063 seconds)
  done (took 6.069040873 seconds)
done (took 48.057061019 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.228436836 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.244360331 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.213391364 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.197778422 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.314763011 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.236981958 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.551865217 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.244735929 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.228408785 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188053793 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.232229832 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.207880521 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.216954702 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.574233056 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.211445736 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201156896 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.280281237 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.70861979 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.613700627 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.216363749 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.209941568 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.206555493 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.209086714 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.202351601 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.251950684 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.203154749 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.219795501 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.218177378 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.888295598 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.211216848 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.222399771 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.73972813 seconds)
  done (took 191.02776043 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.202621556 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.175132275 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.258917823 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.236577406 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.582443014 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406005521 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.339451312 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.716380192 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.226624071 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.222705768 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.485407426 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.208381993 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.54690734 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.184172759 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.245864266 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.312604876 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.534925152 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.541451832 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.275392293 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.383524401 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.226650431 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.440251035 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.340763153 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.435612474 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.249295109 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.268111719 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.233486879 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.224912187 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.407965463 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.468998981 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.219543992 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.254604098 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.848016398 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.063448901 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.221953633 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.209745506 seconds)
  done (took 150.333663507 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.270323318 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.205758458 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.205773899 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.2046613 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.239447227 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.205544437 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78064289 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800862812 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.711689034 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.588856775 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.657490957 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490316911 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204877747 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205169983 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301385599 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218933331 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205880849 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221642531 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.250835487 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206026448 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207737941 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798583201 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.2237238 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.409741528 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.406296265 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.223411254 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239302452 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.597927769 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207251072 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240754726 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.542142614 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257955084 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208194496 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594384722 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.167658853 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32506025 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208879548 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240729975 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.206488039 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.488918178 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208063552 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207749777 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.210191313 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.873551707 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.207965487 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.783841575 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208137793 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.172721724 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208168505 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206918634 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.689478025 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.865087875 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224846209 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207950746 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210249417 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206742637 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208850462 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.241404766 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.648501301 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.308164681 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.228714371 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.208677776 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.21170189 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241729176 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209444951 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.209026859 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.311540327 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.230126345 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.381235159 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.286999408 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.421443779 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800870053 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213683158 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307422326 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330387829 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209451167 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.209117465 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209584713 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209416443 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.3215518 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209646007 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.645253122 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.38771772 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.226997342 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.663938375 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.312002281 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209613635 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631758076 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214750283 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209395515 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.975175591 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30879446 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209633314 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.210228949 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2090877 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209179607 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.647592299 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.809055975 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.502767375 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214855615 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.673485362 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.21532025 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.660268369 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.781574922 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.879591727 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.210746544 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323415442 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.389976956 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.229882025 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.209815018 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.659550266 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.216906781 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269055214 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.211285595 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.610671121 seconds)
  done (took 368.244967413 seconds)
done (took 712.00568639 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.79838955 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.792221559 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.903121487 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.786940066 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.748348014 seconds)
  done (took 10.172003458 seconds)
done (took 11.310071842 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.401258486 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.400661515 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273068741 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.402784585 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241039339 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419909385 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382162695 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231326769 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.314167868 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.295510731 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314150554 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265583056 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23938199 seconds)
  done (took 18.323507803 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52771736 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536411439 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275622467 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529025104 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252777125 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528161412 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412525161 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429991427 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426692871 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246727517 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225889144 seconds)
  done (took 16.536311558 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539725766 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532624947 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280707791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.578075215 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255777719 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535114697 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422209101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.43213026 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435325769 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24736181 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227017572 seconds)
  done (took 16.630436237 seconds)
done (took 52.629852976 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222899252 seconds)
  done (took 2.367835809 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258163708 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423683862 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239089082 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.230013988 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.223871595 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.224818558 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.229277097 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22400368 seconds)
  done (took 11.198363406 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223168952 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222225045 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219427768 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219979836 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222727125 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220029865 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220221385 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220059872 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222703927 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.222771989 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223421621 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219971438 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.221074471 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.223477147 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.220944946 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224335056 seconds)
  done (took 20.693106779 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.223590143 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221392737 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221102479 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.220392349 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.221568633 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.222338272 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222620888 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.221503027 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220541778 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220441438 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.222276337 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.221279878 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.222265802 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.222316046 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220834374 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.222952808 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221546157 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221882426 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.22685653 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.222366055 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.222590082 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220721228 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.22255331 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.221799106 seconds)
  done (took 30.476557961 seconds)
done (took 65.876919733 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.496712099 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.026426414 seconds)
  done (took 9.671314628 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.224849714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222471862 seconds)
  done (took 3.598174922 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222379914 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222095494 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.222359595 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.222830904 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221761909 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224149655 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220502788 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.220006589 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219794085 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220316542 seconds)
  done (took 13.361711065 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.21954025 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220096959 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.218302487 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.219644475 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.220006078 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.218067473 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.220608442 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.219287848 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220793111 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218581613 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222207289 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.218868522 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.220366026 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.218875218 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.221009137 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217486842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.217497382 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.217781615 seconds)
  done (took 23.092502194 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.221169377 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.219870614 seconds)
  done (took 3.584188727 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.218505797 seconds)
    (2/7) benchmarking "second"...
    done (took 1.217984439 seconds)
    (3/7) benchmarking "month"...
    done (took 1.217487105 seconds)
    (4/7) benchmarking "year"...
    done (took 1.218094802 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.218072588 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.219093546 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.217890456 seconds)
  done (took 9.669675985 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.220711408 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.390515383 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.473076465 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.838598103 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.223738547 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.223458718 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.088868085 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.222630113 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22581083 seconds)
  done (took 14.049493932 seconds)
done (took 78.169948598 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.240139874 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.231699737 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.404161321 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.237527247 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.236359044 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.514800891 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.269001647 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.341796933 seconds)
done (took 37.614714134 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.228119568 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.206434641 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.996402463 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210833488 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.243405425 seconds)
  done (took 18.800829912 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.267341407 seconds)
    (2/2) benchmarking "read"...
    done (took 1.557098021 seconds)
  done (took 4.96812906 seconds)
done (took 31.137236144 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221435946 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.220919406 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.219282757 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221188147 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217451637 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.218883529 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219079426 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.218988457 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22209446 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221713753 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.221906552 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.220401881 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221272582 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218660393 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219528461 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22202303 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.219255318 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218558112 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222602035 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22241029 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21976273 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222603447 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219743297 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.219709854 seconds)
  done (took 30.434087793 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22236687 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.22051555 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222253414 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222801877 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22043835 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.224331714 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222612728 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220039799 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.222564008 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223049951 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219899513 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.219814749 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.222619935 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220579222 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224185839 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221807674 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224414759 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221685832 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223447488 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221621562 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.224256804 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220504066 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.220859564 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223610073 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221511337 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22097961 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224811658 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222000976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223291593 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222918161 seconds)
  done (took 37.811499845 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.229819498 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231788049 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224825474 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224597694 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223160137 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224012009 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224258077 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225067652 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223744911 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.223782609 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224412816 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.223412608 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225258372 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.226231287 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224647639 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224315256 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225367877 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.225433076 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225603963 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225433896 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.224897415 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225435229 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.225878361 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225565261 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225837342 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.225278611 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225886768 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226415477 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22588359 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225666427 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225037536 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225575614 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225861459 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226021086 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.226307988 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226599646 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231336373 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234063183 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.226651869 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225988474 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227114834 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226541903 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225748775 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226788365 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.227920984 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226387292 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226912555 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226967162 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.226475144 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226698276 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227658703 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227732155 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.229009651 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227058247 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227279141 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227991137 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227378525 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.228163569 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227441305 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228151478 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228174469 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228067306 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.228054421 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227229925 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228602867 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227595146 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228480317 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228708761 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228052464 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22881041 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227332632 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.22781727 seconds)
  done (took 89.466317757 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228269707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226896029 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225396033 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22610288 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225862661 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228417174 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225952917 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228584844 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227088244 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228712404 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229144332 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227462621 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228206925 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230027658 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228992684 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226361822 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228019674 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226141873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229116853 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229739884 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229557513 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.225957106 seconds)
  done (took 28.161389079 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228490739 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230775624 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226070536 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229545588 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224968672 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232253327 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229254144 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231048671 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229151008 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227149953 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226380323 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229379608 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226755657 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228973759 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225590311 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228260865 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229559377 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.227795699 seconds)
  done (took 23.261848749 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.226681516 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.226184961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.228437468 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226446379 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.225946068 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229450253 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225649747 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228548971 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228649064 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22763225 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229421687 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23030306 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.230347225 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226426944 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228876636 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226790339 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.230491764 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226382415 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228322707 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228705594 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227133212 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230253515 seconds)
  done (took 28.168099919 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229979605 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230904484 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.227022482 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22754131 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.228362715 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228787856 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228765851 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226503408 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.229776928 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229710378 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22654792 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229465658 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22902606 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22740958 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.22728761 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227387203 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2293404 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228099772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230419219 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228460068 seconds)
  done (took 25.722295705 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23107119 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23161253 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232564166 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232200114 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23142978 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232403523 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232518225 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232920107 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234639538 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23344644 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23252257 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.233212964 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232552336 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233593924 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233870208 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234564618 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234513293 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232417299 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.23380558 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233610868 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235256007 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233872415 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234771454 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234224957 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233788287 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234923928 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234225737 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235526227 seconds)
  done (took 35.689743953 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233921768 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233080288 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230583082 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232058338 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230885772 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.231161312 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.230858619 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.230933594 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23354141 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232136661 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234408836 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.234121653 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233642884 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.23388216 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233764744 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.235049842 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234212655 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232709817 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232583933 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232954197 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235575178 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233317084 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234348978 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232225326 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232362058 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233853162 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232457551 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23236992 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234553571 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232860888 seconds)
  done (took 38.146474616 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.252920085 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252734926 seconds)
  done (took 3.66130204 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232537635 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233894305 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.236863487 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232057832 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231288434 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233801687 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235124259 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232053627 seconds)
  done (took 11.023587792 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.233684425 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235541573 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234215703 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234327615 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.23443772 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23477999 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241780209 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.253756651 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233667033 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236139548 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.240912617 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.241291403 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236256379 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234059726 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234501955 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236062976 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234808352 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236278015 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.235072474 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.235299967 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234233865 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23723405 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236367433 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.231285801 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.23641862 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.245443229 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.257588828 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.233489859 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234312329 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.236743752 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.232983053 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.229764828 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236836726 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.234641707 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.232878577 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23254879 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24116192 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250025217 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.238625597 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253853863 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234620836 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23216269 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.234326243 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235269352 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234409898 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.233135304 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23461801 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.23101071 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.232859983 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237340249 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.238949739 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231825534 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.23142713 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236014116 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.234311297 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240633774 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.252536183 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.237903448 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.243751035 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.244965754 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.267471246 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.258886367 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235945568 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.235213697 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244206057 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.257612762 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241074817 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.250728313 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.231755383 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23512134 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.240443908 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265817097 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.259397135 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.235980452 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235376979 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.236330747 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235855953 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235441748 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242077178 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.256217821 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.235517258 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236106884 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244629557 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257536191 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.234559887 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.236924922 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.236706076 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.235525652 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.23785751 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246678371 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.254839583 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.236875824 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.235778454 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.235689722 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.237714673 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.237339394 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.23651438 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236676264 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.234185944 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.236546506 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238513364 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240070771 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.245015323 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236531113 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.237514473 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.244721821 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.25746462 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236651053 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.243074305 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.237328411 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238390713 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.238739433 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.244455132 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.234144804 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240239612 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.245904106 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.237941715 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.238606105 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.238056736 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.238095364 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247911308 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.262479404 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.238115084 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.237406159 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.241065701 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.248925967 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238506163 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.240076016 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.237441506 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.234761649 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.235524257 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.238108154 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.237361224 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.238257192 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238640606 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238288751 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.235718486 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.237757322 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.238428234 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.237732649 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237837115 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.236431218 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237448061 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239832026 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.23768359 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.238425113 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.244635781 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.256418732 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.238131481 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238421632 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.236054921 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237554391 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.236497057 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.238196035 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.238589679 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238718504 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.241708699 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.241069267 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242028647 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.244973785 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241152275 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243719074 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248253728 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.245058024 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248245282 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.240788326 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241934799 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242142209 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.237886957 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.241911173 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.244615457 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.23775371 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.243972563 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251934374 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.244280489 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241601425 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.241810446 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244132132 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244742953 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247360715 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.24339183 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25241807 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.242966204 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.254410148 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.265023531 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24788769 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.248604399 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.24904367 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246064124 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247024451 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.2505598 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255828391 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259431883 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268291442 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.250319868 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.252330774 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248778625 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25089308 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250597445 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.249323093 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.248204978 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249053322 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248406439 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245574524 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248343495 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.242660136 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.2466243 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.243339236 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242823297 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241357585 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24809183 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248374409 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245586836 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.244398551 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246420837 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246800498 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24678339 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245003347 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248601438 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.247096813 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.24770898 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.24740331 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.252693485 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.245398687 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247846957 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246083229 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248898766 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.247328617 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24670481 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246519841 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.24697145 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254525565 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.265154913 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24798995 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255862951 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266028744 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.246114192 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251271284 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249402577 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.245072592 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249847368 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.255640744 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.247567335 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249667605 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.24723187 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247984159 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248941878 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.253063707 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.262614618 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.248650408 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249440136 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.249977557 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.245518652 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24911767 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249382459 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.249943258 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249083813 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249738709 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251297627 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24977913 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.250155673 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250011887 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.249324773 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250038512 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.256035647 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.253571473 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.24837169 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.251024065 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.249420618 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251614669 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.249618478 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.250787117 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247861397 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258827329 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.268990113 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255388848 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.262625796 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.248903151 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252697856 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.266380704 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.252568843 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249822831 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251103927 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.249015977 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247907309 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242690244 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244735245 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248070258 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251343043 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244400514 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.251162997 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.24992684 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247385526 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248128382 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247260216 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.249362143 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.249817009 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.250919897 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.250021641 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249755417 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248205236 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.246951857 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255041006 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267016556 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249722619 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.248614785 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.2501652 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.249726885 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250960685 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.251363016 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252086794 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257793305 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.249600467 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.260288036 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.249943634 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260998412 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.25003252 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252929612 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257426042 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.249563679 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.249862716 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.250861706 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.25069477 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255815067 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.26860039 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250952312 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.254844516 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252614946 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25059179 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250603296 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.253544266 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252197445 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.251110332 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260477152 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269357122 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255365544 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251867957 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.249200132 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.25164086 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25263365 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250377874 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254075115 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.251841584 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.253708679 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.250938029 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.251796524 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.252780103 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251345266 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.25328224 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.250624206 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252354618 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261345243 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.272761503 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258501999 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252644953 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.260356176 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271825309 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259651459 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.270960291 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253413869 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.253153069 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.253425765 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.253599077 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.250715355 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.254197162 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25374384 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.254749181 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.256145977 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.253065319 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252835919 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.254990334 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.253894234 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.252166608 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265296693 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275423515 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.255550078 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257452602 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.252151667 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255153762 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.258808579 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.25459446 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.2535107 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257181434 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263824476 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261621988 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253610875 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.254887554 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254080394 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255166416 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253899686 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.256336169 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.255180348 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.255325989 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.256374489 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254569807 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258237064 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.253783 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.255752755 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257541572 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254542295 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.265812531 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.276463886 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.255851722 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256250272 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.256981819 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.256002341 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.256852958 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.256639997 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257713555 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256993374 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.257329921 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262550179 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.263548258 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.259473682 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25645842 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256154641 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.257256063 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.257274965 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258004271 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.257360301 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256960725 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256723955 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.258463669 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.255656043 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.25587708 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.258707827 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.257067671 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258157408 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259639856 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.265534173 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257997773 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.255920078 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257929718 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258121218 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.255900934 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.257358895 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.264675921 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280748756 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.2674938 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.265629773 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.261632019 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.259245096 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259539722 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.265854723 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.257232296 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.258969562 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.258022112 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.259261043 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.259764053 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.262051608 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259287597 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.264861164 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.277033601 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.258429842 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268532357 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.27555984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258684013 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259444906 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.26401575 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.258514478 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.256711884 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.260401888 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.258293859 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267202273 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.277416653 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260578043 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26012072 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.259147968 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.261190827 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26604798 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258655246 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.261308439 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.259555757 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.261493837 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261674372 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260618327 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.256954476 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.259793192 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.261402051 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.264032037 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.266924847 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.259227707 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263068023 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.261570495 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.259019024 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262263782 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261446187 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.259249619 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257492154 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.261071094 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263011621 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.261077057 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.261600141 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.261714435 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.262374393 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.263153478 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262619258 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261614297 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.271046313 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.27052579 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.260249738 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.261862766 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261533846 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26517302 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263365034 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.262235174 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261927951 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.263576532 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.262346674 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263444449 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.263633164 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.265113921 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279990572 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.281942675 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263114281 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.262025591 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266592599 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.264164611 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.261588394 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.263758311 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.265557725 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.266442341 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.270813062 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.264370735 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269830666 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281863199 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.265120031 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.26708611 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.267353224 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.269853143 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264843174 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264115849 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.263014375 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.267513176 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.279095732 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264706627 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273170339 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29278986 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.282409708 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.263765558 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.263877706 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263885668 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.264900115 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.268177821 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265025433 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.265260094 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266229781 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.266306608 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.264724897 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268374425 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.265645491 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.265665339 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.266674082 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.262233971 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265897063 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.264058923 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.266458459 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.264156919 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.268202532 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.265953692 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.266601258 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26576027 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275684199 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.289533073 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.268097259 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.268121918 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.26428781 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.270755156 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.269802683 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277484243 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.273444826 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.267961729 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.267498963 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.268197128 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267610127 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.265800348 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.266067384 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26642823 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268335663 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.265705716 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.278489727 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292082073 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270231706 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.267307628 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269250028 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.266296514 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268301602 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269682097 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268117845 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.265936407 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.270266933 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270847942 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.268607053 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.268736984 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.268758348 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275822771 seconds)
  done (took 747.769111627 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265473791 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264130867 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264521814 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266338546 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264189805 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267147852 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26642681 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267158998 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265817041 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267033555 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266413775 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268411136 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270957164 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267449463 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267790616 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266112531 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2677152 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268651482 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268265926 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266200922 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267590296 seconds)
  done (took 27.783560611 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269710258 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267183375 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266596928 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269596184 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267353057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.271730674 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.2663187 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269138438 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270020506 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267498736 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269946172 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270652398 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.269097395 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26886866 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268047741 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268469235 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270689645 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266666811 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.271358834 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265498946 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268680754 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26888619 seconds)
  done (took 29.095872057 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.271971611 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.270222614 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.270502736 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.268532854 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.271523307 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.268928002 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.272898411 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.269737073 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.272397371 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.27193253 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.271666507 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.271938165 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.278413444 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.277188492 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.271917745 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.271674109 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.416247199 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272827342 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.27267846 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.272500099 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.267580365 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.278963778 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.28890254 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.268729823 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.272362971 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.273545092 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.271505711 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.273196802 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.271085554 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.272016387 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.275734308 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.272302961 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.271479651 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274027926 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.272203953 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.272815441 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273720015 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.272097404 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.27013192 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.272978027 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.281869936 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.291634283 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.27457059 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.27954849 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.290592625 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.275133406 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.274112828 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.282219414 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.27292992 seconds)
  done (took 63.757968729 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.274405011 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.274080755 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.273662493 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276109047 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.275296153 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27367746 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.27314628 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274220044 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.272771674 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.272579288 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.274263979 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.273490129 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272191461 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.275386785 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.274636789 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271172009 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271230331 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271652006 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.273391733 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.272917811 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.271183584 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.275751253 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.276557365 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.27397716 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27491903 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271965952 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272737936 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.274615801 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.275132117 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.275018567 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.275970516 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.277920631 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.274572804 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.274540122 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273731426 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.276189961 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274069301 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.274373671 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275271217 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275009327 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.275511781 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276435762 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.275987257 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.277297452 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273459167 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.275251487 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.274825473 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.276509742 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.276450938 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.277094314 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.276653142 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.274401058 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277346125 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274801874 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277455854 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.278739803 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.275754462 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.274291374 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.275994548 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.273091702 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.275856054 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276119231 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.273673003 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.278917602 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.279472858 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.27666947 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.275084223 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278692421 seconds)
  done (took 87.882886378 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27899165 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277540468 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277284029 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278702234 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27875542 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.277533983 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277341534 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.279157852 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27904836 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278390671 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278934343 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278503292 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.277360812 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279381252 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280151007 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276569634 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278616145 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280163367 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276920927 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279242924 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.277302908 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278832522 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278417361 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279038103 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279631029 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279809849 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279053103 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278876487 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278770702 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279040394 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281031977 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.278649092 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279794767 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280787363 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.279810853 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279916433 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28016353 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280779852 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.280667413 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279472484 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278887136 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281196312 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281054331 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.280948449 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279156938 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280557007 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281895067 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28300821 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281789216 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281735902 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.282400846 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283478983 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281994174 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281672641 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279294514 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.283551375 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282924829 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280445203 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282036513 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28150329 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281006502 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281926064 seconds)
  done (took 80.54159186 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281934516 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281040068 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.279269648 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.279630596 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281855061 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.278919697 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281676127 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.282084026 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.280671816 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280844102 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28211868 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279195645 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279819011 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281003946 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280093399 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280677207 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280415721 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280749091 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283922655 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.279666404 seconds)
  done (took 26.808578226 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.279837387 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282069187 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.279963575 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280745876 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.282921097 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281064157 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.284534027 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282698927 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282442025 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284549425 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284725101 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282803981 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279810023 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281027117 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283902572 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281197038 seconds)
  done (took 21.709207263 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.281977098 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283354091 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.284802419 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280515108 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282557127 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.279641328 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283561587 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.281615229 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281851954 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.286747439 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284654596 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.284861357 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.285044055 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284736268 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280904375 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.283196776 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282593009 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.28387961 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.284824748 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.286158005 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283909771 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.28228478 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.286777419 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.286200592 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.283348469 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.285052948 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282112721 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.284033062 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284689322 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286722733 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.284840996 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.283758164 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284310166 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284201113 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.285767189 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284544227 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286808674 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.286521498 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.28748213 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285648257 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.287493969 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.285004458 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286981256 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287584494 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.283717806 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287995665 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.28382735 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.284488338 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.283006116 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.284705892 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286279322 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.287477982 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285916739 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.287219817 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.288189169 seconds)
  done (took 71.851907335 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286494016 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285908091 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285132993 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.28762381 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288368686 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.285292722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288544534 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286908826 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287513475 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289864846 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286024003 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288076806 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285565317 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289767668 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28710349 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288176726 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285160208 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286128414 seconds)
  done (took 24.366868131 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286852043 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287716964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.290385457 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.285150028 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.285671072 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287595057 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286299538 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.289078048 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28960423 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.285534947 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288444476 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.289978644 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290781754 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.289660359 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28668979 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288071301 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.291571512 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289618367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286606658 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286728857 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291125747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292081447 seconds)
  done (took 29.544832745 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.288919302 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.289190047 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.28793998 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.305766188 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.30799577 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.310490046 seconds)
  done (took 8.990442354 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296413107 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290742009 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288525527 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290915948 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291074656 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288986553 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290074035 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287727669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2905642 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290590387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288329725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29085653 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29274068 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288344682 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291459612 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290455031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29059847 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288911119 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288263216 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290378419 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290144143 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29240221 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288560324 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289149191 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288099328 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288612145 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290328862 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28969248 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289798372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291224002 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291615851 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2902712 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292793368 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289390427 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291088254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293706895 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291917635 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294674859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295273877 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289962257 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293363571 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294691351 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293374179 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290988441 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293243474 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289871358 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289101305 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29121828 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290860649 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293437927 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29338959 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291329376 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293502619 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295789624 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293765107 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292636572 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291196304 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291167323 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293356523 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291922766 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292750776 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293749946 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293660408 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292766648 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294418277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29162742 seconds)
  done (took 86.457100509 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292103097 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292421443 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290813564 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292312138 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292118778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290751048 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289302602 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293090186 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293687321 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291697141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294591617 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292335786 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29229978 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291116538 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292736848 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292820761 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292466554 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292069315 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293147683 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296287073 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293041089 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293806848 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292611035 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293863891 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29562723 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295566954 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294798448 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29594848 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293313257 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293276333 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293327678 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293442251 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29537121 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29321737 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292487488 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294236204 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293403503 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294266711 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295667557 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296671926 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29564322 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296055949 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29469306 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29375676 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295239912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296463934 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295197595 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293675689 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295917464 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295404898 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296171402 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29340495 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29639462 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293995648 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295799485 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295264155 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296373735 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295255338 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295399689 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295296303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296727074 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294845866 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299883707 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296625492 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293939017 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297028709 seconds)
  done (took 86.621397352 seconds)
done (took 1745.868131411 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.338469844 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.404902453 seconds)
  done (took 13.95139195 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.457842193 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.413151549 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.298241091 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.300819374 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.289967935 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.298755462 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.289458701 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.291411754 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.295968992 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.296437438 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.296115356 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484674286 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.29714715 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.292700191 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.297656213 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.390566655 seconds)
  done (took 42.508517077 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.321717239 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304591472 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.408369355 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.319856128 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.324495601 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.477010848 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.349871322 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.30216895 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.458075753 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.342383696 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.76009401 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.31854015 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.301880141 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.340132568 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313976993 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.472933926 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.535300095 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.790106535 seconds)
  done (took 29.650167673 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.713457902 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.323408922 seconds)
  done (took 9.247188512 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.319865727 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.303109256 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304157274 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.302171538 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.292304902 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.301967927 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.301636843 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.302270347 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.660098664 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.419487665 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.305130872 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310562103 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.322989898 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.304556249 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.301385595 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.337780535 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.45174394 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.299283575 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.300796433 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308130322 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302034507 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.422754043 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.341627006 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.299622365 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.416993596 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.675530996 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.30435051 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.31020546 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.434672582 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.302115867 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.302543152 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302156969 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303483407 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.897044359 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.757631924 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311459312 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.331960012 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.312955412 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.301892151 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.49679036 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305981918 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.311746484 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298327668 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.754609347 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.422443751 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.412907668 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.463535863 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.319484877 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307392885 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.363846353 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304739122 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.306292687 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.333917266 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.039758699 seconds)
  done (took 109.037918209 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.329467423 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.701416285 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466616034 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.312529788 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.067170978 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.041136609 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.308767134 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.565420541 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.322608852 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297180545 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.584337123 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.786354197 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316111791 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.364331414 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.762175966 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.377824336 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294950394 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.158666054 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.310401351 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.296734272 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.773048556 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298210709 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29245837 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.421977925 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.328668402 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.729740829 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.561303294 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.795353187 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.304791355 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.287651853 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.736761084 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.313262506 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.305408457 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.291979052 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.538878274 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.624556586 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613985667 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.308920481 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.288202069 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.293578242 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.307900173 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715993698 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.623531078 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.305132057 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30679526 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.721145961 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.305340671 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.295087568 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.29419991 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495481906 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.986792394 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.295421867 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.559109199 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.290692945 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.567930113 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.344608287 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.335601088 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750040174 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306308095 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.342291017 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354694702 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.290077045 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289852231 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292021207 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.292464846 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.614851428 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.668263382 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.295339247 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.613121784 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.752923164 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.305812617 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.812391651 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.130263117 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.309578391 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.352272818 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.290392279 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.961491643 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761674126 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.318123028 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.290156234 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.602796309 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307630247 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.558084806 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.305164195 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293796076 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791070264 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.29881547 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.310648476 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.292645079 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.292052714 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.066440975 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292518399 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.559768155 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.318964057 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.285626993 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.276343966 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.290979294 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.269892275 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.274259238 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.259998385 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.761375862 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.275985822 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.214531619 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.274048483 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.269517045 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.257474344 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.257602746 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.261569023 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.481275755 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.699451455 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.275178001 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.264728356 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.260275807 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.262380635 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.389197919 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.266500323 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.540878421 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.272986758 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.25635137 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.257887769 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938951643 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.275750968 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.255327113 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.273614969 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.146015248 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.454348078 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.269495776 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.250430898 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.250961875 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.266491542 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.394647775 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267561604 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.323605872 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.247563166 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.930075181 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.276596096 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.279684265 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.581445801 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.245980948 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.06933591 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.257460947 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.240837841 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.519036455 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.495145829 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.539227106 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.240694798 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.258123428 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902908175 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.262323902 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.387558635 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.259149826 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.226959864 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.437582394 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.4550934 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.241448812 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.837306627 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.243609215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458986872 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.241336993 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.549574591 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.712778042 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.256469375 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.241875274 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930681617 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.935287352 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.98650531 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.244052235 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.505854105 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.188719644 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.726912991 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.241938107 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.242514975 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.824371222 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.24391376 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.246211976 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.24283708 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.243772722 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.3053442 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.413928305 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.43820464 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.243867555 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.672201154 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.29853922 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.243058859 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.260429186 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.245262356 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.589988099 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.291287712 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.242719158 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.288953936 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.243429081 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.249700024 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.695539567 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.160677789 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.242898254 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.394860992 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854506623 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.255084075 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.238885933 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.843784474 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.455646009 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.755858812 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.284939529 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.531642363 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.261490504 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.279971701 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.933774782 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.327966222 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.734329873 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.257401918 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.239012214 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825313452 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.256071636 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.287944516 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.23873681 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.245310513 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.755983619 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.256276395 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.246822341 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.387391579 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.25831186 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509294918 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.24306121 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.297212595 seconds)
  done (took 1094.533924546 seconds)
done (took 1300.131922062 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.243094428 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.238015918 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.22920433 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.24224704 seconds)
  done (took 26.120769895 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.247440137 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.2461513 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.248611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.244210965 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.244916691 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.247910109 seconds)
  done (took 8.648637471 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.297310856 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.236506545 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.241247044 seconds)
  done (took 18.944729338 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.435914666 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.497853332 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.577333387 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.375281045 seconds)
  done (took 10.056766225 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.247974852 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.24299571 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.241302497 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.247691871 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.245851512 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.251702124 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.248001013 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.249546074 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.251011102 seconds)
  done (took 12.395674654 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.244709899 seconds)
done (took 78.575196718 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.345726626 seconds)
    (2/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.238201806 seconds)
    (3/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.227553956 seconds)
    (4/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.593909388 seconds)
    (5/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.263571125 seconds)
    (6/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.067777509 seconds)
    (7/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.066057672 seconds)
    (8/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.423149251 seconds)
    (9/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.425647519 seconds)
    (10/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.691586923 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.126013231 seconds)
    (12/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.526244575 seconds)
    (13/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.244742746 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.49885791 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.29648382 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.641572931 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.277850986 seconds)
    (18/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.497196372 seconds)
    (19/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.962368784 seconds)
    (20/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.344283099 seconds)
    (21/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.243900135 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.831159522 seconds)
    (23/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.358218227 seconds)
    (24/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.303379941 seconds)
    (25/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.250962224 seconds)
    (26/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.818405141 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.554290459 seconds)
    (28/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.322323489 seconds)
    (29/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.244169185 seconds)
    (30/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.244262608 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.244389102 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.585228638 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.280909989 seconds)
    (34/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.038374226 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.371149372 seconds)
    (36/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.263644666 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.983811209 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.668899985 seconds)
    (39/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.75325247 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.365207313 seconds)
    (41/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.746777184 seconds)
    (42/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.589597598 seconds)
    (43/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.344990703 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.349115303 seconds)
    (45/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.233469564 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.501848292 seconds)
    (47/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.222348285 seconds)
    (48/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.341230708 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.117160287 seconds)
    (50/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.440421054 seconds)
    (51/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.577061403 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.297398945 seconds)
    (53/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.223457261 seconds)
    (54/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.77137781 seconds)
    (55/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.248048797 seconds)
    (56/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.444201781 seconds)
    (57/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.239374733 seconds)
    (58/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.974288081 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.586410226 seconds)
    (60/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.241019714 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.693303412 seconds)
    (62/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.276845217 seconds)
    (63/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.58740705 seconds)
    (64/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.356397554 seconds)
    (65/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.585882255 seconds)
    (66/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.249872989 seconds)
    (67/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.226801044 seconds)
    (68/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.834940422 seconds)
    (69/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.776345904 seconds)
    (70/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.793385832 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.32750147 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.652276115 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.411422592 seconds)
    (74/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.248442867 seconds)
    (75/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.630558156 seconds)
    (76/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.230456228 seconds)
    (77/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.388103416 seconds)
    (78/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.342986028 seconds)
    (79/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.233894522 seconds)
    (80/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.351459156 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.502592812 seconds)
    (82/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.224139572 seconds)
    (83/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.36627092 seconds)
    (84/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.245111452 seconds)
    (85/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.267176082 seconds)
    (86/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.231907748 seconds)
    (87/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.765842069 seconds)
    (88/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.00672411 seconds)
    (89/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.386536252 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.95668798 seconds)
    (91/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.273247415 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.47087263 seconds)
    (93/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.598025568 seconds)
    (94/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.537850637 seconds)
    (95/286) benchmarking ("sort", Float32, false)...
    done (took 5.258858488 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.232449921 seconds)
    (97/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.244932758 seconds)
    (98/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.330900813 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.268088531 seconds)
    (100/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.075134003 seconds)
    (101/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.259996072 seconds)
    (102/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.230498149 seconds)
    (103/286) benchmarking ("sort", BigInt, false)...
    done (took 6.270433158 seconds)
    (104/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.48306542 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.227165651 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.227809503 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 1.757670664 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.288626305 seconds)
    (109/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.508098662 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.264225395 seconds)
    (111/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.969978744 seconds)
    (112/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.581006138 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.507281879 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.272651048 seconds)
    (115/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.621441107 seconds)
    (116/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.246611838 seconds)
    (117/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.008122782 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.672792932 seconds)
    (119/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.367394198 seconds)
    (120/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.372574984 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.237058442 seconds)
    (122/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.62067601 seconds)
    (123/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.230852932 seconds)
    (124/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.531912206 seconds)
    (125/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.616511706 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.990495891 seconds)
    (127/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.258572663 seconds)
    (128/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.288335511 seconds)
    (129/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.644946909 seconds)
    (130/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.306421804 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.892665284 seconds)
    (132/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.23468453 seconds)
    (133/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.276252374 seconds)
    (134/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.234522897 seconds)
    (135/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.227390319 seconds)
    (136/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.271286346 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.233650793 seconds)
    (138/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.435197609 seconds)
    (139/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.827517289 seconds)
    (140/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.00452045 seconds)
    (141/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.231221938 seconds)
    (142/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.36908628 seconds)
    (143/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.32156358 seconds)
    (144/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.300558403 seconds)
    (145/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.284268108 seconds)
    (146/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.289049494 seconds)
    (147/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.283935021 seconds)
    (148/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.93743606 seconds)
    (149/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.248280514 seconds)
    (150/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.267915052 seconds)
    (151/286) benchmarking ("sort", Int8, true)...
    done (took 6.270193168 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.281022358 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.847457611 seconds)
    (154/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.333235868 seconds)
    (155/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.379055675 seconds)
    (156/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.236955126 seconds)
    (157/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.521540741 seconds)
    (158/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.031033676 seconds)
    (159/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.262529997 seconds)
    (160/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.369779729 seconds)
    (161/286) benchmarking ("sort", Int8, false)...
    done (took 4.278888858 seconds)
    (162/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.872259083 seconds)
    (163/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.23280869 seconds)
    (164/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.231298699 seconds)
    (165/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.605537797 seconds)
    (166/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.437350074 seconds)
    (167/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.233267298 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.277422782 seconds)
    (169/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.256946416 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.846301646 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.294798572 seconds)
    (172/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.25279811 seconds)
    (173/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.355637421 seconds)
    (174/286) benchmarking ("sort", Float64, true)...
    done (took 6.258599214 seconds)
    (175/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.79028805 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.233095098 seconds)
    (177/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.273731488 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 5.352457619 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.895925295 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.3100264 seconds)
    (181/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.250086163 seconds)
    (182/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.360745539 seconds)
    (183/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.258860061 seconds)
    (184/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.264153192 seconds)
    (185/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.370387538 seconds)
    (186/286) benchmarking ("sort", Float64, false)...
    done (took 5.538159632 seconds)
    (187/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.260579129 seconds)
    (188/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.304894929 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.883610138 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.466182077 seconds)
    (191/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.255567977 seconds)
    (192/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.252482596 seconds)
    (193/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.355054403 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.091511669 seconds)
    (195/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.238088303 seconds)
    (196/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.277642853 seconds)
    (197/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.516526051 seconds)
    (198/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.430593053 seconds)
    (199/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.831298638 seconds)
    (200/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.026348899 seconds)
    (201/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.238711299 seconds)
    (202/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.352279856 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.280544937 seconds)
    (204/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.42925034 seconds)
    (205/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.071153831 seconds)
    (206/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.259317423 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.300642574 seconds)
    (208/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.467857513 seconds)
    (209/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.471345763 seconds)
    (210/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.233667456 seconds)
    (211/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.241708518 seconds)
    (212/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.331202351 seconds)
    (213/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.261646981 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.262062501 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.266606083 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.280878798 seconds)
    (217/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.462877668 seconds)
    (218/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.650095396 seconds)
    (219/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.349100965 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.276605449 seconds)
    (221/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.432411186 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.155602242 seconds)
    (223/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.234041194 seconds)
    (224/286) benchmarking ("sort", Float32, true)...
    done (took 6.293371914 seconds)
    (225/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.644863762 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.291555914 seconds)
    (227/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.277719756 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.458528662 seconds)
    (229/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.474230105 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.809041446 seconds)
    (231/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.071649098 seconds)
    (232/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.342294661 seconds)
    (233/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.604788096 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.27308941 seconds)
    (235/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.282074966 seconds)
    (236/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.312648717 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.28467711 seconds)
    (238/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.094728477 seconds)
    (239/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.255922838 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.141390263 seconds)
    (241/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.279646617 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.639029939 seconds)
    (243/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.287168654 seconds)
    (244/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.260370114 seconds)
    (245/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.35538796 seconds)
    (246/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.251882083 seconds)
    (247/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.281478213 seconds)
    (248/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.981676882 seconds)
    (249/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.192161202 seconds)
    (250/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.280996036 seconds)
    (251/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.316779066 seconds)
    (252/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.339386257 seconds)
    (253/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.362596133 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.337724444 seconds)
    (255/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.093758194 seconds)
    (256/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.356524977 seconds)
    (257/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.958036988 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.404103991 seconds)
    (259/286) benchmarking ("sort", BigInt, true)...
    done (took 6.260010036 seconds)
    (260/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.675340865 seconds)
    (261/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.378376108 seconds)
    (262/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.065575417 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.083062111 seconds)
    (264/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.983902347 seconds)
    (265/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.270110463 seconds)
    (266/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.285512099 seconds)
    (267/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.299592381 seconds)
    (268/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.071966562 seconds)
    (269/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.08960836 seconds)
    (270/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.566631639 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.652156231 seconds)
    (272/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.719534892 seconds)
    (273/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.360278752 seconds)
    (274/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.785927252 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.253377163 seconds)
    (276/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.954413872 seconds)
    (277/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.25637773 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.982063182 seconds)
    (279/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.266840034 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.27883272 seconds)
    (281/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.983677535 seconds)
    (282/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.586083601 seconds)
    (283/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.319986263 seconds)
    (284/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.2607572 seconds)
    (285/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.262684138 seconds)
    (286/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.238286104 seconds)
  done (took 911.088399577 seconds)
done (took 912.256221871 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.292552174 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287619078 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.269715138 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.287814039 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.376987773 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.292739376 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.274540765 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.267351886 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.313208643 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.316176643 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.263188501 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.295346727 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.270502459 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.269313574 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.266054371 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282348871 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.259917285 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.265713034 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.284174334 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.272148164 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.286030152 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.26464723 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.31501959 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.292846462 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.268641315 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.270996729 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.270413998 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.286514941 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.376211805 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.271820215 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.274289519 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.280584084 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.261551814 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.264980313 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.261539445 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.286739074 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.277486102 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.274910789 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.271869243 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.299063872 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.647633929 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.287849698 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.269588769 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.26942708 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.268977079 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.272340337 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.267284675 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.275781769 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.283422924 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281368543 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.635086002 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.30091126 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.270445282 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.270673949 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.281968668 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.274026954 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.271887049 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286817416 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.287838122 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285848338 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.251306913 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.273818007 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.270105202 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.286217412 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.27311922 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.6734766 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.278404985 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.273405313 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.651511933 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.294018042 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.674770707 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.297342091 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.269945917 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.282197711 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.304840393 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.268441942 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.26494308 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.270450369 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.277317401 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.269712479 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.277912357 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283274708 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.274506862 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.269198686 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.286896436 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.295384628 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.279638397 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.270769909 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.278117283 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.286204129 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.274386046 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.280393447 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.273012725 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.265218825 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.277816647 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.273215967 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.270635653 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.27217876 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.273574866 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.279989937 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.650777505 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306250657 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.267823954 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.266951486 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.267815165 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.283208508 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.651677876 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.287134205 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.293121833 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.317252896 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.272783759 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.256238321 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.273897315 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.287373266 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.279760833 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.275874717 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.265467103 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.260207503 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.646190107 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.300732669 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.273062077 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.270703223 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.287908125 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.274569445 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.270181968 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.270746753 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.271408735 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286933617 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.39161653 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.281873912 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.302867812 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.26864424 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.274766127 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.295952661 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289391429 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.301606745 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.273648187 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290130209 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.288191211 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.268228505 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.28144826 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.281951206 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.273792166 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.276449435 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.267599785 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.297022841 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285456678 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.2859079 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.294091807 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.394963743 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.270740784 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.258461251 seconds)
done (took 215.000296704 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.32989439 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.267981281 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.352072127 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.269090685 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.366854546 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.369388287 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.265504394 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.267817942 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.265894976 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.702396053 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.268388991 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.267151752 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.261935102 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.267370046 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.351772161 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.269307985 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.269616007 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.6169459 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.270701178 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.340470495 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.262938662 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.267735917 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.270149443 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.678015761 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.268923452 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.270740455 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.340415253 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.270982054 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.656185203 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.264922187 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.263644233 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.614899794 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.35912272 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.291066837 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.280493046 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.278338645 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.370848581 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.290214378 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.3523089 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.351806594 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.353687408 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.310557504 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.264952633 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.266114948 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.274031492 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.273649225 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.26973512 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.297350406 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.263077064 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.270881462 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.661239387 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.280803532 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.278129571 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.272599439 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.26923296 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.30154271 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.271338865 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.273237326 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.363786133 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.273467734 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.336896483 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.694774345 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.662087591 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.274785001 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.266640329 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.270621422 seconds)
  done (took 144.426770226 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.34351193 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.351457791 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.387523044 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.298512797 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.323701682 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.387301947 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.295662358 seconds)
  done (took 10.578585357 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.284107381 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.278635323 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.331017815 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325538429 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.276242247 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.425260129 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.278165466 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.286063432 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.27325419 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.328260493 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.282474464 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.277889242 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.283638266 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.278674762 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.332545478 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.28708944 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.393670254 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.279083581 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.279596837 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.432321917 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.273443219 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.283361625 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.326384053 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.287121101 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.276399651 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.280098104 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.839229572 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.275371754 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27476565 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.278411658 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272612832 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.316196875 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.281761261 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.274504419 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.275833063 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391869465 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.275450068 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.2752189 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.275676119 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.276104163 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.277046233 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.277857721 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.27902276 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.275180417 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.27714813 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.303494424 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.27844717 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.28158115 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.275735676 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.280465274 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.32979526 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.276823844 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.276424025 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.275241147 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.333624173 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.287827924 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.278896071 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.277208182 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277867772 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276602858 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.433756116 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.324859427 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.280833394 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.326673814 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.278923486 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.280997219 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.277617499 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.27786405 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333510171 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.278910283 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.326983271 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.27609328 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.437371599 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.299403874 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.280789132 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.280715339 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.282271504 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.28018521 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.279040568 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.283768669 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.278728453 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.28029712 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.288243931 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.278592954 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.275095303 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385771592 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388375215 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.278204631 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.292124595 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.28469723 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.275696632 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.331215417 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.280752504 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.27814362 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3306763 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.394755404 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.332885311 seconds)
  done (took 147.800508042 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.292537826 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.289983141 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.280877113 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.29606372 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.281027501 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.280229068 seconds)
  done (took 8.925593423 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.287315471 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.282293944 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.28017021 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.282177943 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.282607238 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.281572836 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.281040301 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.281876843 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.284720222 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.28260147 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.284108736 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.283912404 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.28538973 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.282055304 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.281008414 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.28365042 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.286980853 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.289295537 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.284422822 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284830026 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.382392883 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.288869007 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288477157 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.292340093 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.292961819 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.285393984 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.292432719 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.283053237 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.286974054 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.293452038 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.308191295 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.290761087 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.283854139 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.292449317 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.287291926 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.286114573 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286116056 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.284241234 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.28296181 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.287633662 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.286097803 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.283871949 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.285908482 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.284847902 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.284192529 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.286460043 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.289719098 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.290958831 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.289729606 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.292252819 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.287376965 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.286947068 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.285401403 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.284467374 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.290378126 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311867668 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.297798137 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.294123413 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.290609267 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.289457714 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.287554006 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.289865927 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.29571524 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.290037945 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.294495732 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.290027963 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.293397879 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.289038383 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290098698 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.290500372 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.294795961 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.293351906 seconds)
  done (took 95.046882273 seconds)
done (took 407.959401558 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.590020391 seconds)
  done (took 7.802566092 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.510232373 seconds)
  done (took 7.716403964 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.284450748 seconds)
  done (took 21.497103571 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.304993325 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.403074774 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.286779566 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.304853358 seconds)
  done (took 26.511896005 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.468488483 seconds)
  done (took 7.682676221 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.289207459 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.301410367 seconds)
  done (took 13.805052659 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.707449876 seconds)
  done (took 7.91792037 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.405166839 seconds)
  done (took 7.618264938 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.301470333 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.307032395 seconds)
  done (took 14.076938881 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.277448311 seconds)
  done (took 7.493667794 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.992628158 seconds)
  done (took 8.208741232 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.307369533 seconds)
  done (took 7.520788104 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.316487301 seconds)
  done (took 7.528713871 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.152622207 seconds)
  done (took 9.368598338 seconds)
done (took 155.958382048 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.295913793 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.295434185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.284764005 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.286016418 seconds)
  done (took 26.377899559 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.332567092 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.334760334 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.33593429 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.344796057 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.337549319 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.334548104 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.326975954 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.325832328 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.346143547 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.338025212 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.336228113 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.336979038 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.337097173 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.327069851 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.336373165 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.337174065 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.346836213 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.333271442 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.327543584 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.340178544 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.304356083 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.34486566 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.338860063 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.303798475 seconds)
  done (took 33.220285369 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.825355016 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.372820218 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.455917778 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.352583808 seconds)
  done (took 7.224350488 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.355286088 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.35544079 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.366818857 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.406172904 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.439755631 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.37368804 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.330064816 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.32563831 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.310846235 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.356043896 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.431822451 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.37469496 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.449832805 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.30408508 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.487951737 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.305209725 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.305348826 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.356829371 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.406962776 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.421134797 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.303525552 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.35542138 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.357267144 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.371256042 seconds)
  done (took 34.069200485 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.303793987 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.320370477 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.303016723 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.302595981 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.311945269 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.303604447 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.304674859 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.305728655 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.304269146 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.309781909 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.30306221 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.31505042 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.30466764 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.299059688 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.304686946 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.306021806 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.309661442 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.301657961 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.301809376 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.307005193 seconds)
  done (took 27.341395662 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.29497945 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.150522869 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.645741559 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.549835804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.293708542 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.29837134 seconds)
  done (took 27.453170909 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.368504807 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.52292418 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.297457352 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.64530554 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.736405941 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.318720083 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.300479344 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.534488067 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.846211638 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.833904697 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.356553415 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.373567393 seconds)
  done (took 19.355260481 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.299257819 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.319546555 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.315955272 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.317915359 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.35978548 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.32954341 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.313023014 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.299492663 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.36151502 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.38110397 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.328928172 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.3598356 seconds)
  done (took 37.207781485 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386531086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345550345 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.188858115 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312967842 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041190151 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.506786279 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.312809906 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.751217816 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.308612766 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576088548 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303608318 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383790466 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.558085113 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299990051 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303112081 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.261881623 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545714213 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76474871 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296673441 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.281593875 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321199094 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310522907 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.360807748 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.328148994 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.514661313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440988215 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.560934172 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.078915405 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590954392 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307031577 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314616881 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304141672 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576906154 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963830851 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422497964 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314433681 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314562037 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.844611404 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.296219276 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.275138124 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.121496486 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.298146901 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314890225 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304316427 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.238518999 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317048106 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742382804 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.306185459 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.013433476 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307544596 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315598679 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401269136 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.309410738 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.297453593 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322931259 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.304407153 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.303329899 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396547161 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900952896 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674754028 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313765526 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.241362666 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320558663 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.204868518 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924100788 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.420467341 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.310143674 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312359576 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242150784 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.289263053 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317741181 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45474981 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.325014549 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958452926 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995195135 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321358004 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.233176198 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830465492 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308866729 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.242216326 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5358962 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.077960942 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244708644 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.253206106 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.245223826 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982802263 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309764527 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.662463844 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.322852607 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.755944106 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.320694529 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323405899 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329979393 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527697179 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.184119553 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305229417 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.192539973 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447303126 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323022727 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.736800145 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237386175 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.305809098 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564605787 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.516552667 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306448445 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.273213956 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526319946 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316528654 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.323288679 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.314241915 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.32073595 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.880588827 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333001305 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.682349322 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320048377 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.083828859 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01209826 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317067927 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.409055066 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.314112639 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547494843 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.033532044 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.46460716 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378054234 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309244666 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.310792447 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.723021659 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.898185404 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.471068634 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.308437744 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323898432 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.322018429 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.311880305 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25674479 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.307281637 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31448045 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.082661323 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.533422757 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318375315 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589290926 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246281482 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459451891 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.315290597 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.529938098 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.492152814 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.322536753 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571604319 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308016457 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331867049 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325378829 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331321088 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414648785 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332963063 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.314247735 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57016852 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.31439875 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.319232654 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.333625622 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.085962495 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318030605 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.318219517 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318112869 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887251079 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302858026 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313525356 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205063756 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.322344616 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381362713 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.316355446 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.324430661 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.100592201 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326351147 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.332954904 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.321153378 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53143931 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323115051 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.245727168 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387974233 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.506990741 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.896045897 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339205201 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.251344611 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.026594734 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.009307988 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314980277 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.503921208 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316377991 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324196828 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325018544 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316517168 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907592768 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328048939 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.239528372 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.315579052 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326809265 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.322196242 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316732757 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.059072475 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.720840149 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313607033 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.331306693 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461139034 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.331875467 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.250564882 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.836089435 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323307972 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317628919 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.095310397 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353903061 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.243812699 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79026026 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57000411 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317496495 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.32415087 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.342921781 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.345259767 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.316385223 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.211451964 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332123738 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.324632195 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336415468 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.327392699 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.255334659 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.67384724 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881009238 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04071834 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868498802 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245144146 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.32052182 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.203441768 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.752545764 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255885005 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.977050618 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505147089 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.759745341 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266943975 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509918384 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.502140967 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075475202 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32956928 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545736217 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232056816 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.216469688 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342690162 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531271101 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352637916 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321475606 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.24843738 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.595336394 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553259299 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.183452142 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392852187 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748909398 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227292543 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.110022751 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.372007843 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.61780848 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506159947 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950626123 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.706503283 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.324388799 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322180575 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789896002 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322359995 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.847287751 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928877884 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331547343 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.516405055 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256959563 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.331163834 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.330889473 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.321653673 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.585901387 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.322451696 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.571552252 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332528604 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2559915 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32623631 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849083366 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.199192619 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.328486664 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321707092 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0348241 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320869336 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628294204 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.332058045 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.073818825 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336231155 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256297287 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257107111 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.013732566 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325783314 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298247092 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79608923 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.314844571 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335885383 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350404342 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167373533 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.574291347 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.333954199 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901788308 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565865663 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320345162 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354129512 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.424104205 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.234520566 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.325520431 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.204514953 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.55895386 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370947268 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.547733887 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.229436023 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.22017374 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36762043 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534794954 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.206418425 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32530965 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567032673 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.054845812 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.343500696 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026027841 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367752663 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335677206 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.327906234 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326452123 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338348816 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415694764 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335313298 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.336366777 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.337028847 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490803425 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334530182 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327219385 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.338984413 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419171101 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720685562 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.083617923 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.091088621 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91082175 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073960219 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928491015 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358507204 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326020083 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33073551 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260763592 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469056885 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.851804502 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600394142 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455648521 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.318187385 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361902464 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.253573246 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357155031 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537687235 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602654348 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.303843606 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328604357 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132203313 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.486895314 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339415242 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.537149287 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813068095 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876652131 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43704548 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341228078 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.761213756 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603012008 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41760799 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329348359 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917860642 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.341437488 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.625463367 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.354588286 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329721775 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487870906 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338448806 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989891908 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.357978088 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.486155076 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.103862193 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.266269494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.586245704 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.773554021 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.333020622 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915992615 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043066356 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59467635 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396198733 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341409676 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.441123264 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477466978 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.333182757 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.213098241 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330988891 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173576468 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.033106464 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.34054345 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917309132 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601285503 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.322389262 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.330811553 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347775964 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.34360349 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.554004123 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004908114 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55633451 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339541113 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334035437 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.900483062 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922797071 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35440262 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2666184 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.329232805 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581793881 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.578112642 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353347551 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.784446032 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.046885697 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864980278 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.300636012 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350890086 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34238659 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027613522 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923024307 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.106176023 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817596647 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.985029819 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344520593 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61012633 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.339554917 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332286173 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611483027 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.336293013 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343147351 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344638173 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.921459812 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105352612 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.344329577 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.360621795 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.270763403 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.561190277 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420746712 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271790565 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325879485 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.508102128 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335074965 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463867028 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340896075 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.340577631 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335315966 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.066547063 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607854957 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.332404551 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.322837523 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.31546595 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333162986 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42758778 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570107148 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332752376 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.012146459 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.686232174 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.591410765 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341850689 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.316170752 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.338417455 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336912054 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052463952 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.340381911 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328428191 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880271392 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.330376087 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.347045572 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342672189 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.551233208 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542032837 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343607057 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34023362 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334067272 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352843447 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.235775943 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105226436 seconds)
  done (took 1630.870265215 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38298664 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.343949947 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.376206963 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.413794153 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.345503546 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.41775205 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.343622377 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.459083896 seconds)
  done (took 52.33098243 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.350629383 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.485227596 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.362731238 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.338770873 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.338802021 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.336193984 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.79112336 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.347119395 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.338713717 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.345676483 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.352180332 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.33017157 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.978833026 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.341943314 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.340061893 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.333756363 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.338799825 seconds)
  done (took 65.306113668 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.339807627 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.856655606 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.424124261 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.331457466 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.32289771 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.349636283 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.027852018 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.37515228 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.331066619 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.646476204 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.003524596 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.349606117 seconds)
  done (took 84.611670047 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.356205715 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.351162159 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.353261014 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.353053037 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.354004073 seconds)
  done (took 8.019434037 seconds)
done (took 2054.597705754 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.344730844 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.018114503 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.963442242 seconds)
  done (took 5.234410083 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.488326398 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.536608321 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.65666779 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.661873867 seconds)
  done (took 7.597076599 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.618910053 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.72555025 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.535705784 seconds)
  done (took 6.133512089 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.61681321 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.350027411 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.343035242 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.340883848 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.343029329 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.343207401 seconds)
  done (took 20.281431581 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.34787944 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.349453661 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.346417985 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.349723582 seconds)
  done (took 6.648274011 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.323940573 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.021898845 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.317706807 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.33895473 seconds)
  done (took 18.25486577 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.097856959 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.105259024 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.088422687 seconds)
  done (took 7.546151538 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.374993191 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.359771107 seconds)
  done (took 3.989525467 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.639064652 seconds)
  done (took 2.893148535 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.361213354 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.40067183 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.359160091 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.257864164 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.710772433 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.671556386 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.941911206 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.526632288 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.24584453 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.517190826 seconds)
  done (took 30.248507049 seconds)
done (took 125.730377897 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.103579128 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.708102851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.549157601 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.073072506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.566660476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.548661747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.56134711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.040915645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.572691855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.563560113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.108993362 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.566532952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.50962761 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.72139493 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.509981477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.343923548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.577843295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.144442488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.752029364 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.950846221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.554252727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.709149187 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.938053746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.719084181 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.566256087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.497222689 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.281399986 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.584640988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.927031473 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.295267947 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.490384883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.125464819 seconds)
  done (took 190.417915251 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.348199885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.337004778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.339282794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.337878334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.340137742 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.340421945 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.339192052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.33954846 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.353958357 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.351679646 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.355331124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.339079612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.339708653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.353539385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.341176794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.351658115 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.337947519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.337886983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.345522345 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.337999035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.342082119 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.339538678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.339494433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.352911205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.351228331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.338255695 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.339680383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.35466008 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.338981671 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.352102802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.340596598 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.340590209 seconds)
  done (took 204.254657104 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.359143365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.340000764 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.356126871 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.339966406 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.354060596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.342518472 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.341125237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.341848591 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.339839642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.367453181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.340489602 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.339120159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.34198911 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.340505509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.342853485 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.341116245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.366807312 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.351165049 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.345338619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.341317985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.342240386 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.34102335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.341241268 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.347986823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.342102192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.339863676 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.353759597 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.341001478 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.354601922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.345349467 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.341754236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.367890856 seconds)
  done (took 204.351128542 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.550442945 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.356583475 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.358508965 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.310117166 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.355961094 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.356455678 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.352523714 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.545488254 seconds)
  done (took 14.443699666 seconds)
done (took 614.73093704 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.576286854 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.294087333 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.548117869 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.370196759 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.114217651 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.393400071 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.374978625 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.541782886 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.269497302 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.54080608 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.610548911 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.381040396 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.762199073 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.366946111 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.62796199 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.471313163 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.219268671 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.328431039 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.68087993 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.883954852 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.624178373 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.805059229 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.552363252 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.27540087 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.762411928 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.810543739 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.058870523 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.220993954 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.391169867 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.692641205 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.947260615 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.296176634 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.427657307 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.424219463 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.481586301 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.461918698 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.28208212 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.430991201 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.563384634 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.580471056 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.88811174 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.091726673 seconds)
  done (took 91.686895189 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.342196479 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.341436539 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.341542659 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.341873875 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.343362817 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.341203562 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.340198626 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.342431727 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.340478266 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.339725464 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.339481787 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.343165161 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.335750571 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.34258637 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.338595944 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.335772672 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.338786258 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.344286017 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.340026199 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.338492036 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.34064053 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.339495313 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.338988951 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.342556854 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.338976916 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.340051873 seconds)
  done (took 36.11742494 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.361262898 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.599671462 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.766759247 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.366838214 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.36032056 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.366254489 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.436883253 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.363155932 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.361721666 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.364416837 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.515012804 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.364344494 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.391655758 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.792005577 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.359149252 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.359613625 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.360676569 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.361144399 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.612856755 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.370732685 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.453397718 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.362064497 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.436117931 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.37200537 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.380333827 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.357496447 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.36194858 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.944855487 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.377919614 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.509895217 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.123539679 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.43605359 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.880815987 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.784194287 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.125455213 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.364924698 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.361684631 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.519335083 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.365608514 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.363362414 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.434014016 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.364391379 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.773183524 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.035933163 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.3812979 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.361955251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.961118722 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.534334273 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.601453267 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.373656692 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.799596704 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.366404978 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.365760253 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.358423786 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.600727271 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.370504502 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.362854824 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.96166073 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.386374256 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.44038079 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.366282167 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.362617951 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.622173078 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.363155203 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.604122907 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.366114332 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.374272284 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.382196376 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.775847637 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.360567973 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.054317955 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.379323993 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.363143619 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.513424922 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.602463488 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.994507747 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.378297597 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.622362789 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.895208879 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.445626405 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.370565577 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.930229468 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.450578011 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.368539864 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.361649542 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.362396346 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.361884983 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.405566414 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.432591653 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.991167807 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062101726 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.99281294 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.460645941 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.375265529 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.361078171 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.966031887 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.38571263 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.361820598 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.768258376 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.058177495 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.382585049 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.370306023 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.055805241 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.385050227 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.441090837 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.374302767 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.785285331 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.366566399 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.408523645 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.365908395 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.369372634 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.386641574 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.441866005 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.370917546 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.366501981 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.022055947 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.532061693 seconds)
  done (took 179.895982417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.360824921 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.354469326 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.363052672 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.370097309 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.35750064 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.365144491 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.36300142 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.356292368 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.362499441 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.356996339 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.359280244 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.360470232 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.357118641 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.357828752 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.365181936 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.361559749 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.010733638 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.360648619 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.35718399 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.35599646 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.151293771 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.355798608 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.359320711 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.354850623 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.359401387 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.357016638 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.359441523 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.355449231 seconds)
  done (took 152.781605934 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.364086665 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.913456871 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.378504291 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.492394147 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.388316297 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.364320696 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.490918133 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.425646943 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.377809485 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.361572283 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.365254679 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.66104557 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.364031063 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.873807559 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.553494387 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.512153404 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.866495051 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.383020633 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.362299256 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.365179237 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.494151452 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.371884994 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.662696641 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.920243744 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.379226302 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917092859 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.348407197 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.36705355 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.365951991 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923267219 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.38574521 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.665432243 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.447364078 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.425069392 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.9353262 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.89247269 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.894814678 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.514365511 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.371907047 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.369493024 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.370317163 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.356260127 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.929013526 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.388800329 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.373202603 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.914632645 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.390496267 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.371752742 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.373651781 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.367252748 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.428633022 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.43781466 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.680157016 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936129824 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.462405643 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.374038553 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.49521271 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.745776916 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.368434943 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.873267816 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.355510286 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.93028325 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.389852037 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.352201807 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.369363235 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.373477181 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.516233911 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.492110635 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.875122424 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.379640461 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.870608746 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.524402896 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.364634364 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.369451756 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.371690681 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.931443477 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.890220081 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.525263264 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.493992967 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.559912989 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.348421646 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.368943509 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.354949432 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.443568846 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.368332636 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.934431421 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.889850125 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.382426107 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.372073537 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.373252601 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.370251131 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.540188701 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.942108349 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.465350994 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.855633912 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.682380658 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.673045551 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.375591342 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.429531205 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.382156524 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.671897615 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.376231562 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.426925656 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.804977414 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.668901696 seconds)
  done (took 162.866774253 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.609295961 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.559398543 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.46281193 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.513745027 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.961775601 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.941702751 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.6107782 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.521491852 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.474722289 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.617234195 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.498699683 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.464173988 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.589611634 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.443156838 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.090133709 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.450473628 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.47126073 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.511376348 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.52226238 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.369535437 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.030381538 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.665730801 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.557113157 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.205626975 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.463919002 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.150639596 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.919654136 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.928460753 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.534623111 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.684636881 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.907463024 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.471486272 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.338148921 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.055047972 seconds)
  done (took 65.878216869 seconds)
done (took 690.48377183 seconds)
SAVING RESULT...
DONE!
