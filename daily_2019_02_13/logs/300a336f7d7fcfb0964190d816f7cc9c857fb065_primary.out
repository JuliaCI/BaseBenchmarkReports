cset: moving following pidspec: 323
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.320421853 seconds)
loading group "string"... done (took 0.582279362 seconds)
loading group "linalg"... done (took 7.327735426 seconds)
loading group "parallel"... done (took 0.170259316 seconds)
loading group "find"... done (took 1.18231312 seconds)
loading group "tuple"... done (took 2.052408422 seconds)
loading group "dates"... done (took 1.30214688 seconds)
loading group "micro"... done (took 0.241184195 seconds)
loading group "io"... done (took 0.98487588 seconds)
loading group "scalar"... done (took 41.01214186 seconds)
loading group "sparse"... done (took 13.287560203 seconds)
loading group "broadcast"... done (took 1.065007997 seconds)
loading group "union"... done (took 14.508381962 seconds)
loading group "simd"... done (took 5.03319536 seconds)
loading group "random"... done (took 9.854167284 seconds)
loading group "problem"... done (took 2.016623194 seconds)
loading group "array"... done (took 23.170681133 seconds)
loading group "misc"... done (took 2.089876858 seconds)
loading group "sort"... done (took 3.46457011 seconds)
loading group "collection"... done (took 19.827163164 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535890716 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140855236 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118002873 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13604636 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187543678 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129954424 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126863632 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101966797 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.948295378 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145117077 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137792279 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.502181638 seconds)
done (took 4.955991363 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.195407653 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08767402 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094657429 seconds)
  done (took 0.861807693 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065533497 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126541689 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065305398 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082516637 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065857301 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.0806899 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066865747 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064976818 seconds)
  done (took 1.238915739 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073593758 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068344891 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085001052 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06797488 seconds)
  done (took 0.9808337 seconds)
done (took 4.030716813 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.926885416 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.240773239 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191292549 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453650398 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.15374632 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189811867 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673839561 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.380731789 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.207568933 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.07400234 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.12261971 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.373223291 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124469597 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671141314 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077820775 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108318189 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.173001583 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45488306 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082702681 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082166593 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10405792 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129144026 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104312195 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089445588 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.159259845 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069066846 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.151008836 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097957173 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067349654 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.259531393 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173288705 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.738310991 seconds)
  done (took 10.629382979 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097601726 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118815337 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069196118 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140562772 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105652243 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086863827 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071333366 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083081378 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092887491 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160560356 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116101297 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10720973 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080850375 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070857722 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100190082 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.215339695 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108926944 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086456359 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087022675 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076007851 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122146853 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083624517 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095038776 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080458338 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15186865 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194409567 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100677837 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112604098 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068398975 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098209851 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129464238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131408059 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065996358 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083752377 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.157888738 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096020643 seconds)
  done (took 4.547410223 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.069274809 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.174747088 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09096385 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154076424 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085252783 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110921183 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124011134 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100410345 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247319697 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.087741142 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067635914 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.474380453 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12878957 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.086307788 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067524513 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087778412 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067128933 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.523866949 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145490617 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102438499 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101973096 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073593409 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087848306 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.717303407 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067618633 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065735633 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085116043 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064746905 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057118475 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146550203 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084585938 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.168137155 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108328643 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069414423 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120467926 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185241515 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098596618 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123120065 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065465825 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08279457 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161269849 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074843333 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066378848 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107295802 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120224587 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104475294 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084493389 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067581527 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182337101 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066435045 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100867244 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.903450542 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168307657 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096041736 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066755121 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293119119 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083629727 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085222629 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064293964 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.265984093 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.179650149 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086482929 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067378875 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066044088 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086637019 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.733357349 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067425718 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.715550267 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072153424 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077632188 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086467869 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066958267 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081112568 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073903881 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07236768 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102805804 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065727838 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085356786 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066357177 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065890451 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081731929 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068301508 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099690563 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208041835 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068033251 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066994318 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082977255 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085688486 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114026894 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06928176 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082092302 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101023396 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085621641 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06758571 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120580489 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06778234 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100971593 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085040434 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114212271 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084904216 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.121355654 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068283584 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117186737 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070743526 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116292378 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096935174 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069394259 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15463033 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064999013 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063731013 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084892538 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065441288 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085337432 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069061223 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077813813 seconds)
  done (took 21.621812798 seconds)
done (took 38.550378572 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.312176946 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094793206 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092974071 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076582791 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094143784 seconds)
  done (took 1.431647756 seconds)
done (took 2.164308173 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.13268267 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119476278 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0629572 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114553016 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063237153 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119025525 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115709983 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081877738 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118008913 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063863877 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113613246 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064113491 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063397027 seconds)
  done (took 1.993555255 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082050526 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084060245 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086457883 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081388178 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063145971 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097834621 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079480894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105341799 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079514097 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071172497 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080493907 seconds)
  done (took 1.641967085 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080256422 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0833328 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08601293 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080453529 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06288293 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096379381 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079412233 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101860706 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079763491 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072054886 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080714045 seconds)
  done (took 1.636184277 seconds)
done (took 5.992993648 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07785418 seconds)
  done (took 0.803597189 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.732798375 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.655141507 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099531219 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134423648 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.214699288 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154995465 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.451678292 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110537132 seconds)
  done (took 10.455140105 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.112008723 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087108727 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072093702 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088671433 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071353944 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073623274 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09033784 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074405249 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08962845 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070614744 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088157078 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071674313 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07051458 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089704327 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072589907 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08959259 seconds)
  done (took 2.10424929 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.104754558 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104538478 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09371829 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078265138 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092676713 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074603885 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095205537 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075940656 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072657403 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089258828 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075955819 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090589471 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073600768 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081772612 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075134918 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092521931 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071457102 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090857473 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076085171 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092824706 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076084143 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.081064911 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073822035 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091386034 seconds)
  done (took 2.858740698 seconds)
done (took 16.949750959 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117704269 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087233678 seconds)
  done (took 0.936951219 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081233622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097767818 seconds)
  done (took 0.919921285 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082634473 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08226357 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089630651 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094536889 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06654749 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082740553 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10433414 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067835824 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066577624 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08255225 seconds)
  done (took 1.560195991 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06840178 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095363687 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070798037 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097350102 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074155568 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08141422 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07470773 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068847988 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095232028 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063856253 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087772823 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099934564 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071861844 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101609855 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074688479 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086895009 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073783544 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08677663 seconds)
  done (took 2.212065792 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066648074 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067836233 seconds)
  done (took 0.874684429 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067798658 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064422471 seconds)
    (3/7) benchmarking "month"...
    done (took 0.0831652 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066943301 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080679923 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064572291 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081933077 seconds)
  done (took 1.252448733 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.411048472 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109059485 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.250662856 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088304022 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106040224 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.278788719 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083615001 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070574364 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088508884 seconds)
  done (took 2.266331849 seconds)
done (took 10.754363683 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079396412 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085189514 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110990608 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420731229 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093011759 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081394123 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131030325 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.231968325 seconds)
done (took 1.974232832 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126440707 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617877059 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405448391 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214752986 seconds)
  done (took 1.985770376 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.384226329 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089233584 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074885134 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067136684 seconds)
  done (took 1.365960896 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066151365 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07012249 seconds)
  done (took 0.885568686 seconds)
done (took 5.10777836 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067224554 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066896128 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113879966 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064614395 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082388348 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066802272 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063938059 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083219642 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066907944 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066534673 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084292613 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066947478 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066829711 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080741054 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065135522 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067213514 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081434835 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064754448 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064224247 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083194419 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066525139 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063961217 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079861363 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066416975 seconds)
  done (took 2.527453295 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085664468 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084550206 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073031031 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072503013 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08773443 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072000324 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090163531 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068086643 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08960174 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070618135 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089322305 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073581012 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070833327 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090359746 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07111911 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.089805781 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073835621 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086070938 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071356579 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089927295 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074601474 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068357488 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088959265 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072618897 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090290655 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07213809 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087082499 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068434822 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090199842 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072402676 seconds)
  done (took 3.137959565 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072316466 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06369893 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081329697 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071183492 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064579992 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083428997 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064505501 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065065112 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082877678 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064118038 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066848538 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081334391 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064837173 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082882325 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065931348 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068333638 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099296338 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064589195 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064869087 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082644627 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068405534 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064471653 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081389901 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064007358 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.082090553 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065829312 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065684275 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.082030674 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066776225 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065651393 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.086104713 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069004709 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06436152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08807073 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068826698 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064723665 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084810319 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064623432 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065279982 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080929107 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063895438 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064221989 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080861183 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071595743 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064386734 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083611749 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064623879 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08298375 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065572612 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067395757 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081086419 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065003978 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06627092 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082286211 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068642781 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080465058 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065451284 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064299969 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083402245 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066570655 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065542265 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082607379 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0688801 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067154663 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099042229 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07284917 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066210047 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.084988065 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067659742 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085935625 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068603452 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080513491 seconds)
  done (took 5.996082317 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119991382 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093657253 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084616385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06734881 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063805812 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083775465 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070183537 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083886702 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067972062 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089656166 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067071969 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068107031 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085505654 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081951471 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065904984 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084773098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072394134 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082047141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066560977 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070466878 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084234061 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069940611 seconds)
  done (took 2.484964936 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189475842 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088266555 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109447634 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092375593 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068839145 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091700048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070883869 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088712496 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071838865 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087883388 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069589745 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089876319 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070916027 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071381581 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088897388 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071588094 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.201905191 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071450069 seconds)
  done (took 2.456019276 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078469445 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067123918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106154473 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067306006 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084290676 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06923459 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091416847 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077134985 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088056598 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06956553 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094740375 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071008383 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071626087 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086613662 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071211707 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086392023 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071770164 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069356063 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095527044 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074470783 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092005734 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077512713 seconds)
  done (took 2.523608665 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082605552 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068556965 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103466302 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070076585 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082200491 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067124996 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09276292 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068606507 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092373363 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071438638 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068615219 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084904435 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074765021 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085977494 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074188746 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068992209 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089144727 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07004947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088834811 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065878239 seconds)
  done (took 2.332324604 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089130086 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08586097 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068626711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095613058 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071177944 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07023121 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096456836 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071193615 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088056966 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113532278 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071572434 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070535098 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096461695 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093523204 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07164421 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095754378 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079078224 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097369479 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070841198 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088440327 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09586509 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087851629 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078940587 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087754455 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070429761 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070992685 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08866707 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076025559 seconds)
  done (took 3.104794503 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067701232 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067784672 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082193004 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06524782 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066071293 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084159782 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066926196 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066344765 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086508555 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067059417 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06965242 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086383653 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069084566 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069140549 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086794743 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068998297 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068830055 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084443922 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066512591 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067267659 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086350106 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068713228 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069366253 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084550079 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067120598 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069076025 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084604477 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066581414 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068813132 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085308229 seconds)
  done (took 2.971760562 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076372244 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073936819 seconds)
  done (took 0.916065743 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065449714 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081689094 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082513661 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07141386 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090826431 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070208605 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094672079 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073693455 seconds)
  done (took 1.400510993 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081811447 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077417995 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086112971 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080163173 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095228023 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083777632 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159841696 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086818549 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075858075 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065751683 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.09902912 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066881322 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091529978 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068548894 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074218501 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093939382 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067595359 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093754097 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072639537 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06865929 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089954845 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08188409 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09309758 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067148038 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070996355 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097765607 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082154424 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.089185989 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072757766 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095883326 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075630165 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063783444 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088413194 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071229838 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068793125 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097069406 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08669745 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090766856 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07989302 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089715514 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081283524 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082580333 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074397483 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076646724 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098418732 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070344526 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.089235715 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065525969 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067946794 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.09003245 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066280791 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087280237 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064948103 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077095021 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090868713 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082016823 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086904546 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072045756 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073206599 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092064983 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077254765 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090287142 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072487286 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06999994 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09467657 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074243597 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098177544 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0661078 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063913332 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086268415 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0812284 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112222704 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076602721 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088661856 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072388101 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068513877 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091781147 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071518988 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093828411 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07613591 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068529011 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0916082 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076147881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085625827 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071033926 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092923121 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066800378 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070008646 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083393874 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085210014 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085326797 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066473965 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065532906 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096729579 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071502744 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085201761 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065774095 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074970191 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080129235 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068581376 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086137579 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068671322 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079029877 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091433946 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073747003 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09474093 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07543046 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086451072 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071512746 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065264044 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087090356 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067115663 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092897465 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062230157 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070394964 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086586432 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068816477 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09397997 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066585066 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068347615 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093368573 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074200307 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084152531 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065817657 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071222885 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085307794 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072335033 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094056962 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067513576 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06350005 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080871239 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071527987 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067958319 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089083743 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074090759 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088829471 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063224943 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083431596 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072524927 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076761537 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086341616 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06844727 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092219724 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068842259 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067486365 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092025856 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071181876 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08454482 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073827531 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069550309 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080735726 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071897774 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08891553 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067094423 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072407851 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088823031 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070682925 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086781013 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067573795 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073431674 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086433022 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067114284 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085403599 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067187594 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077745602 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08785473 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063527954 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083745914 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076165421 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065822767 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085024673 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067164978 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087601402 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069335143 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066844856 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085652457 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069601081 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097358771 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073322873 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069335468 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090756909 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079605133 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086006558 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071211853 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067462858 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087509141 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068623221 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094008338 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074094978 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091130448 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070286582 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065027728 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091378339 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075367498 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084772656 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066146671 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067074914 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089918762 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073301085 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08876813 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06945266 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066362946 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08649699 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071669509 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08805424 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067564768 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067713576 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090805651 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067693775 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09228398 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069486337 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096522842 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07202223 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063494122 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089090149 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066458361 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092160457 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064043092 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066184838 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084546752 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069798236 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067250767 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089002457 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062701622 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092618032 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076322707 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068744335 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085116492 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068767843 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09252427 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070217447 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072754333 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089198349 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074599614 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095910362 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06753609 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071345629 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096515491 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06865159 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079983739 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07410286 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.0660512 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085102288 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068102897 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083404781 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071385476 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07782954 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093055379 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06249518 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08832694 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066718702 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06741242 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081608027 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072623851 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088371649 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068974021 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075450902 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087146543 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069502695 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089674421 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069246506 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070454952 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088351578 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07275808 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086962713 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070750241 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068175137 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089086601 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067266431 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066371299 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087205456 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069654204 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086143692 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074046576 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067806793 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085991353 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071135345 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087136351 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069668476 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069005153 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086222208 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071497293 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08615178 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068931109 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070965988 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081160243 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07543631 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067531951 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093886184 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068464744 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083367114 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07410823 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070022892 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090887776 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068800665 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087094452 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069360623 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067973564 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088940346 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074966979 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083558165 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078935952 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093963627 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068975422 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071264042 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086899342 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070264641 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067190323 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086866463 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069198163 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085987456 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068244742 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07229813 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088925446 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068253813 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087704291 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06983639 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06865155 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087671182 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06373165 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067013233 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085619506 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069010422 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096700506 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069367406 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085247477 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067134801 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069664196 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085630841 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06517006 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094441591 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077398599 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069103924 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093948856 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068101982 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087408873 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079675914 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0831152 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066821581 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066131632 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083951868 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075851786 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069314927 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095697583 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068557205 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085577271 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065679434 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069035166 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085031507 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06318504 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066107333 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09032734 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067650836 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085721963 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068362986 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071382203 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087528806 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078669234 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08562268 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069677962 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06821888 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083640704 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067820848 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068133151 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09010128 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06978131 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083757046 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065924901 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068612606 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087698716 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069487047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068106094 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088104747 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075800735 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086021575 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071309176 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089592973 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06377515 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071405992 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086691213 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068794841 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067457193 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089906708 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072063443 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088371965 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077096496 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086309273 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068925569 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068824565 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084667718 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068126684 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067591531 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087288241 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067609229 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087407127 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077035804 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06659819 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089322998 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068246192 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086224793 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075947263 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069420682 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089974685 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076893206 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086668579 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070906101 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076016933 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090253193 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073183307 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08781409 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070848331 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092473895 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067941971 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075405125 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087951018 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069967647 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069686218 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08464498 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068976381 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086426814 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068479734 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075080474 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08846655 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068763645 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086012321 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066858669 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069546839 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089889014 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076550667 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089011626 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072062425 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063939354 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084011367 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069952901 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066086612 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088417756 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071318689 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091945946 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070751133 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069128397 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085681715 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077452219 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092431761 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072040708 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066088778 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090317842 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069901942 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089003069 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070336854 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068654553 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088540013 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073097716 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088295222 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068607842 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076112497 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090535443 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07035571 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087767866 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069394585 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068750641 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081928401 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069184293 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070534478 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092236157 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07098914 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086990499 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079305783 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065950214 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086620597 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072744696 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086566944 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072853208 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063284859 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088393244 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070217438 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088142221 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064202665 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067576412 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084602814 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071156976 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066776473 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082371204 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079047214 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095920726 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071318362 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085464383 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067395872 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063753322 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082544359 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068410316 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070272764 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088590957 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078987274 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085981896 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067598319 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063827364 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087513075 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071601585 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090168935 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066258995 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063971285 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085288998 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071529576 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073727576 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085733193 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068966228 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089849668 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071388498 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067079199 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090243293 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066164946 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090022116 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08175339 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087627795 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069711737 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074811595 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095769139 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069663539 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082260015 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069522389 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071423662 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087134018 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069895218 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087743475 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084385713 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071164467 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086619209 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068258422 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089386721 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06769627 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076810444 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0882154 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069309803 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091490375 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070920644 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095374783 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071269598 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076964398 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090243807 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072044414 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085666999 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069071195 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067009508 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085772887 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069975883 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08763591 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073215952 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076671332 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086882907 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079363801 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096814658 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071022989 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08429232 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068218381 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068423865 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082399582 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071008849 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067563663 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085298522 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067199621 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067708406 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088681709 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075525873 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08858528 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069999473 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068488145 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081600059 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071003125 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08958053 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069595019 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065805783 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087431092 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069986727 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072169882 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091492049 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066724284 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089167862 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070806324 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068854728 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082724575 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075956724 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067190309 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090255692 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068308701 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086651294 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069900523 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071487812 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09376618 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069928592 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089721766 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07789707 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089006048 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066675498 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066035475 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092525195 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067441985 seconds)
  done (took 47.21980654 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109824739 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084916532 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064897864 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082902041 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077404578 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083925297 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064100614 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065271818 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083886218 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068104013 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063999018 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082409202 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073933034 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106420012 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095536305 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069182882 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08276375 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06581869 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064180361 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083923736 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073255625 seconds)
  done (took 2.458654307 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.087957518 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103327512 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079615102 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101607427 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073601196 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099773791 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09785729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080421417 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102024967 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075250196 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101549072 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097978058 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075994891 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094033239 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076469794 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095855105 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083265235 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092145494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.080525116 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098547693 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077009691 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098452585 seconds)
  done (took 2.784242611 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06907808 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067913082 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088475469 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064406308 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068281394 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082719764 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072632545 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066021059 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090922698 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.07467465 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085340788 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067486981 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06930658 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.085083616 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067964701 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066006519 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13443649 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091568931 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068351158 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088285278 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063827599 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07002149 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083493055 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064907742 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066271662 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091112154 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069589467 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084553026 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068382822 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068247761 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087220701 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066150132 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069517735 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088356278 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067480949 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067075075 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087146353 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068467003 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082117431 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065946377 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068964639 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082549569 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068919788 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06953384 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085335196 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066282851 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069637912 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087378022 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063812106 seconds)
  done (took 4.523602975 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08729832 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.144156354 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089894104 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105168441 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104406096 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095519655 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072822787 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125804581 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067176116 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086995251 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086622914 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103637904 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068636825 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093440169 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076071162 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088282481 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070577013 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086711472 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07396586 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086492551 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073064517 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093353497 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08360361 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100284851 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072280297 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086547022 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068295542 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092686313 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082339843 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092871071 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073568083 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093104058 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084588618 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093359875 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067797572 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090068575 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085443553 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08785837 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071464251 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085123534 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070923337 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092004381 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075810781 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10478547 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0695141 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093048769 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06890159 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084470256 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082140709 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090521772 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077192508 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102586517 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072616015 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08778191 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073622753 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103104906 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068466893 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085474876 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071448953 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099439245 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066284113 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091105059 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082590596 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089381246 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076315828 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101911728 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074078972 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092420934 seconds)
  done (took 6.775794873 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078303367 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093745515 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084200325 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103223621 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074729425 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.095481192 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093553621 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075629765 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093751093 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081362869 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094312734 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11548546 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071404837 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077442173 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095803747 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093853118 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075464999 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093865281 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075467484 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094691805 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075226319 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102172312 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075081602 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103390129 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124365921 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070353211 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093775291 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075360143 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103673048 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074511319 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10698168 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09391999 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075807292 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102627487 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106407189 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075493106 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085748413 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076149441 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094297228 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075903299 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08882872 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084016903 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093931414 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070544356 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093839561 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075304067 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102629374 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106947741 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078634337 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099149559 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074903326 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102372829 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092911664 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075878114 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102903688 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.11013531 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103990186 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102821727 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074888215 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102726999 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10180898 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09186535 seconds)
  done (took 6.404276078 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090034056 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09803233 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079552582 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084665747 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066622761 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092383923 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06705895 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066218131 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097539039 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076886016 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100046959 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091852905 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076293656 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099765807 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072335138 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095461383 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073248779 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091882182 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077369229 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093299711 seconds)
  done (took 2.515654364 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078194312 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106030921 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069738464 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074762309 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092486881 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076095564 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090946224 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072350038 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08895187 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072954793 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099490828 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079430328 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069980772 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09525779 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098282822 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075614652 seconds)
  done (took 2.165116781 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080631342 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09953186 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084051595 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088792567 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067484933 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064903577 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089030994 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064815678 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085620007 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083639764 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089372719 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071650119 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068056745 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087635498 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065989485 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091548235 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06557801 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066958645 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088012698 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082844622 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099294152 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068132893 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089297752 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07130684 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068653425 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094876234 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068165245 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.086538039 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067541348 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088458382 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069925133 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095887587 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066554599 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067324438 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087517012 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066953676 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088159721 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070308112 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072067886 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088110723 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067738846 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087920841 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069845331 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070318637 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085017667 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069818473 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084671653 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07513576 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066582878 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089113008 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069000184 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09056783 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069558303 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098816426 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072700415 seconds)
  done (took 5.156532708 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082426241 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072064721 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084907331 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067748337 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090966852 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071146551 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07220462 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09068317 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071028211 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085975576 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071692733 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072090638 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091079625 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072902704 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090325209 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073223525 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065449396 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090488653 seconds)
  done (took 2.247293881 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074834533 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06923645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095909647 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069467954 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087554371 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072146741 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065217264 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087412257 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067938044 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069135744 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088355877 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07130983 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086340927 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071513581 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068543385 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088308884 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071913967 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067584276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088250296 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06475109 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091148086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068564562 seconds)
  done (took 2.513282131 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074725388 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095668177 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16736962 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110593615 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084948641 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10210486 seconds)
  done (took 1.468205673 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092641163 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102836068 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07034603 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08969525 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097282757 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070067045 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092200905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071082423 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100022446 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103965529 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071610587 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100337336 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079800197 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102588734 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096396054 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07782775 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090580404 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071369321 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069289013 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110628962 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091112385 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080671383 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090973383 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071681221 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090653929 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079775534 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099435917 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105004892 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07116878 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100758035 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077468983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091370022 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079992759 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105484342 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072155357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10136409 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091415327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090338959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097610155 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079391025 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092010976 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077054963 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100531792 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096134409 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081537961 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091217544 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077019254 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090791812 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071282092 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116881582 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096779306 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079744966 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097775279 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080367611 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100966343 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116588922 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085753619 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099749988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097407557 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085717314 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100400074 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096872449 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079684882 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105324111 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077569586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100941285 seconds)
  done (took 6.758386234 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086562725 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108564776 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072289025 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106039185 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080446813 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091870146 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070951464 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090983939 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071873054 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090705796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132912946 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072674006 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100354549 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080396791 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091768433 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070446453 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091318847 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099158053 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071469319 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117905757 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071182347 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100542967 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100629932 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080476136 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104849025 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077152994 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092380611 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071434704 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091247231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072182309 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097677459 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071374812 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100926398 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07006446 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1014505 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09051598 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072238999 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096722185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072475548 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097023161 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080039613 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110602279 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091327442 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071563914 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105687527 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071755851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091240139 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072078551 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090896819 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072309547 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106681674 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085398506 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105701997 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10045357 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0719161 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091563957 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071859686 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091217203 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07203514 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097656229 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080125995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091437802 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117307211 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071971601 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090821578 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080476683 seconds)
  done (took 6.655121062 seconds)
done (took 130.243411144 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207113003 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187676947 seconds)
  done (took 1.230173453 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071277649 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09855847 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101343958 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131560545 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090205978 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103002408 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101555333 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102296017 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069846914 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089815857 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069606423 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070941693 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155842207 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069784342 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069790179 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092433556 seconds)
  done (took 2.330688315 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097739599 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.20243396 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.083757329 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.089484653 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073463654 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092801708 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068407139 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074747635 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094127446 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068810077 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072297135 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090944394 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068032299 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069122856 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093691548 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072101357 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087929522 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072814938 seconds)
  done (took 2.415278808 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096516457 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.112288561 seconds)
  done (took 1.055742938 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205180853 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125350354 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209404945 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.428462152 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.250832498 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284277726 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179932405 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180506237 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158042765 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175438057 seconds)
  done (took 3.041937831 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102139241 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164485559 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274538264 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139689118 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.1111707 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088651406 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140364609 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.092736844 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.105165669 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105524081 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084737783 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101392321 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100423171 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099737052 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077186462 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10086045 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104116964 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097690567 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077560151 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099450521 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099388618 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.09050866 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078754545 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097180873 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081726591 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102440909 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069672991 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068744529 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099346916 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077825197 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096959051 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.086583238 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102102745 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135297133 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105711165 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135543234 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080552256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09485853 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078445098 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073401853 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101484379 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100296853 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087327096 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099909418 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069637581 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080035702 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089510494 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068696706 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097040385 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080754214 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097196457 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076688885 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133638042 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101458313 seconds)
  done (took 6.248239619 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.763383918 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113774617 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098715191 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.829617349 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118839742 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086711545 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.729817421 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119553801 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211706247 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.731061512 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115375311 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080985022 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211119875 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.21831521 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937464924 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.272389377 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.616032738 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109051516 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112007926 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136979754 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102130707 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099107627 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115051932 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.411684745 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077903853 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096031737 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081348489 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102623238 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141628594 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085979214 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098689689 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160096895 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.231575223 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186423085 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077774379 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072971362 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095897997 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.151892918 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.222215228 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19880271 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163079919 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0704426 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094433659 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.084086282 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115208419 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070783337 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143494735 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.156283683 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.152337112 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098061989 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080851281 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103580798 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082525853 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16909486 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083268019 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.302834694 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.26835658 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095754683 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08202716 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110385556 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216870917 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107826163 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206727919 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101052218 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193524967 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073047918 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754065028 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15145642 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073377743 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100255079 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082611189 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099621264 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083051654 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.150432176 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.374131264 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084632817 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098245414 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073692982 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223519111 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087516546 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07237349 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165319946 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078119115 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103362258 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085644464 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107390652 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151046214 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215906773 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.083919185 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103305695 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077318841 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109499837 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077600156 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193565778 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.202985924 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.145469204 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.189549598 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105544934 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.146234167 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151304946 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1028984 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.15411779 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.081828337 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107361657 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084836273 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200151619 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.12983678 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084435296 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099057743 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080560947 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130440741 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109749384 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081303163 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153087504 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46245248 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150464759 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071646903 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110690338 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082203989 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144277426 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101025374 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216720006 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105400417 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.150989203 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.082144346 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092500232 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.083224781 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.143935471 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105454502 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082717418 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105601421 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080482555 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216960296 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198066911 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103819428 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202519284 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166077135 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079794235 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152116709 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104467521 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150076855 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081063547 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105245285 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076972917 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759981063 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107437141 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.08248053 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098208548 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.149916327 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095661864 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085327246 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106961746 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071266857 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75715654 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088227674 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104534109 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085250323 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101118976 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.081480531 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101630152 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076808945 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142186432 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209703723 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101549356 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.080882644 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107772574 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.142745027 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077642721 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107134884 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085245169 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108054311 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.082656646 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098981731 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085010108 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149842455 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165261249 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.179672661 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571377609 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074385687 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107153483 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.185261433 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094708074 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.246243775 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10257535 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.184674376 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167516057 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083594721 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286810015 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146796557 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170915375 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088855308 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154158426 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092997533 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080526129 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.145280124 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09623926 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080332498 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144163876 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10865829 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.084973419 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.944904866 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073606998 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206908456 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092992672 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154939179 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077116522 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10398547 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.277174147 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074149325 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08999273 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168291312 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07770596 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107975218 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.681485014 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085594518 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105926134 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100825837 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181823303 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.145371729 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103554637 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.080464966 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103006338 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144064313 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.189431903 seconds)
  done (took 39.065338572 seconds)
done (took 56.226924211 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.237305907 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.199107629 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.228990001 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153914865 seconds)
  done (took 1.782074052 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.133388284 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.13231478 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126961812 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068626651 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.134238973 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068309137 seconds)
  done (took 1.536334735 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320075873 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278314436 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205759779 seconds)
  done (took 1.679120656 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270194227 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.227626466 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.452615896 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281398487 seconds)
  done (took 2.22443399 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.189448733 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115165702 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071634963 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10956331 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156144444 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.226230569 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124507285 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159583003 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104238323 seconds)
  done (took 2.17402029 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.155861718 seconds)
done (took 10.416832557 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.113501892 seconds)
    (2/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.099165784 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.227698238 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.10544398 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.235148313 seconds)
    (6/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.19853874 seconds)
    (7/309) benchmarking ("sort", Int8, false)...
    done (took 0.179097452 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08527504 seconds)
    (9/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.186512787 seconds)
    (10/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.194168009 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082272556 seconds)
    (12/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.107508901 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07800063 seconds)
    (14/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18392894 seconds)
    (15/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.174301247 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129226873 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.194165817 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.191098504 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085779849 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.103008506 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076817933 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085284329 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077756855 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170282474 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.19057821 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.148022159 seconds)
    (27/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.170447251 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08676363 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.207786727 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.198352819 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.207320405 seconds)
    (32/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094167909 seconds)
    (33/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.100329041 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07667255 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098076891 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.218550575 seconds)
    (37/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079740504 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.124793055 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.178923605 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.191247894 seconds)
    (41/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.18396317 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.190327256 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.107320873 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099096233 seconds)
    (45/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075595296 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.0761997 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09377465 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055713799 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.217336112 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.183514621 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.171877158 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077329752 seconds)
    (53/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.150077547 seconds)
    (54/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079669468 seconds)
    (55/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120031171 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071609159 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.118860367 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.120600561 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.165418764 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199359137 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079356536 seconds)
    (62/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.112491988 seconds)
    (63/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.183025828 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055607656 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.185780378 seconds)
    (66/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068235244 seconds)
    (67/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.130660993 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.163208274 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069773586 seconds)
    (70/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080376767 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099688901 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056829033 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079896308 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.092558899 seconds)
    (75/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063740846 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119010649 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074972999 seconds)
    (78/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111652141 seconds)
    (79/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101630251 seconds)
    (80/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.127196052 seconds)
    (81/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.183990745 seconds)
    (82/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064912195 seconds)
    (83/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101096379 seconds)
    (84/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.112469737 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.161186835 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054870794 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121187339 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.16995837 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.100711454 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.158324347 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.084393366 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.177026659 seconds)
    (93/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07989833 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083040392 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.101388946 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111234935 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115461813 seconds)
    (98/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.154215423 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196917435 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.120597353 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.169345474 seconds)
    (102/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100251129 seconds)
    (103/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.056020317 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076802879 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099359883 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11840043 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091648198 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180914723 seconds)
    (109/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.16989302 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.173851001 seconds)
    (111/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.10436331 seconds)
    (112/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112241783 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.101223454 seconds)
    (114/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05504511 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.204844314 seconds)
    (116/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100023777 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093189506 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.186114301 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 0.163217112 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078391403 seconds)
    (121/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215197883 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054974211 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.336077236 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093462125 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.091980675 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.152213373 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176643246 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079038187 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100329782 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075358598 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095484587 seconds)
    (132/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096270991 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117160325 seconds)
    (134/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.088782652 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080650391 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.098614636 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.195147017 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070275997 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123684109 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146356223 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069459534 seconds)
    (142/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071786158 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099678026 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068857825 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055615835 seconds)
    (146/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095641719 seconds)
    (147/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066096345 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068968348 seconds)
    (149/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079883875 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077075254 seconds)
    (151/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075795993 seconds)
    (152/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.088512283 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075011683 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054800946 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100210974 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.079048684 seconds)
    (157/309) benchmarking ("sort", Float32, false)...
    done (took 0.155008567 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12848119 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.092044854 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095986572 seconds)
    (161/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109979606 seconds)
    (162/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09824415 seconds)
    (163/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112530182 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.15077465 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118357347 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.142522478 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116817203 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05568509 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083447742 seconds)
    (170/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.170428682 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069770035 seconds)
    (172/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079087446 seconds)
    (173/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055902754 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.080394819 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.195119231 seconds)
    (176/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.102293855 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054807491 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078232946 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091518008 seconds)
    (180/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071237685 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070013724 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098662187 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091497068 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055492611 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.102682541 seconds)
    (186/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082964898 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096212406 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075943438 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078726278 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102607626 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072757188 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.188360508 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057309531 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093151768 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170891481 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078966713 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10185791 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055847663 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168447939 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068289381 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091972886 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151778302 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.099433385 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.107063613 seconds)
    (205/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079454231 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07481416 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080672751 seconds)
    (208/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.077848236 seconds)
    (209/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.180110266 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100945419 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078274079 seconds)
    (212/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106335841 seconds)
    (213/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055556405 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069509803 seconds)
    (215/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055108786 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091862567 seconds)
    (217/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071093113 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075141702 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.078052 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.0563172 seconds)
    (221/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055834513 seconds)
    (222/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097991487 seconds)
    (223/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055762369 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092598628 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091723691 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.103070918 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095031372 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054997094 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 0.12986286 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.124488933 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068923273 seconds)
    (232/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079555741 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139629707 seconds)
    (234/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065140892 seconds)
    (235/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.105701935 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077725852 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.145921187 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056765826 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.10054107 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055015695 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069853858 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.164007575 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096395165 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.168850823 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055624355 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094363204 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055029787 seconds)
    (248/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093223994 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080446442 seconds)
    (250/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074009616 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.123087104 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0701144 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056624864 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.118754933 seconds)
    (255/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073169585 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069675503 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.078784555 seconds)
    (258/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083391111 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.055309539 seconds)
    (260/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092099356 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055363757 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075991681 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11997264 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056327211 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078212638 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.078417292 seconds)
    (267/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055740664 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070070359 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.113657833 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056464084 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05555874 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093227365 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055236617 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069953852 seconds)
    (275/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100950955 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075527907 seconds)
    (277/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070665273 seconds)
    (278/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101848431 seconds)
    (279/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.056582402 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069681435 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.116516624 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070279761 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055336499 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078537442 seconds)
    (285/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05567641 seconds)
    (286/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073527634 seconds)
    (287/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.093386182 seconds)
    (288/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072993842 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077220358 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.092019053 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068767998 seconds)
    (292/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057892994 seconds)
    (293/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196628012 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077788028 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07976407 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108626629 seconds)
    (297/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094145083 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075447664 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069602812 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151636841 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056225723 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055046941 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098400456 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144988188 seconds)
    (305/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106262037 seconds)
    (306/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055778283 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055619156 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094586206 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054782918 seconds)
  done (took 34.115136141 seconds)
done (took 34.984597294 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082185415 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093290992 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102148573 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094363988 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.106387859 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07884216 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.099777127 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08013024 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105503727 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083647219 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080472409 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.081534577 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079341647 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.102148181 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079487549 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09385446 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105980062 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076979835 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100988545 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068620204 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078120362 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092773472 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071580772 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058442129 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104542423 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076914556 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098830323 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079201305 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070116869 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092736878 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072377458 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077791752 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092470291 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083080115 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076001359 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.100952667 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079263749 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102511539 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071502437 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069995089 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.101314104 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069731822 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076394894 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100454568 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075473573 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097905127 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077528091 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081729582 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117623048 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073066084 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102899921 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079762378 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078899263 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100381398 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073215051 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101130178 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075856297 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094850883 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.103922725 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072081595 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.103345001 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078542665 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075429505 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.103334308 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078395107 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10351715 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080847429 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07572301 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103438779 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075420836 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069317019 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101729437 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073358571 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.093110193 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079621862 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080653057 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091775897 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075427762 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077007793 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09857168 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069970723 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07189058 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.09566405 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076532548 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071514253 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08160144 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073427202 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076057887 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093241411 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079223979 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098844615 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076670648 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071722381 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104337022 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069746038 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075002843 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.09348827 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069953182 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071890272 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097389323 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069735086 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072041189 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102270604 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071494687 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075403965 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105586181 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069819063 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099103943 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069064297 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069261954 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10679126 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079858976 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.09373135 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072218826 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069898528 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.100619136 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069569267 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069490616 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093103427 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070463073 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076422124 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.092957156 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071934253 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076918337 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107181601 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070134153 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072989157 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095832924 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070167282 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075131423 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093831777 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070353191 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094900301 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066423532 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072340369 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0935765 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077927413 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074673032 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.10207848 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071224339 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078519807 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097865577 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075647508 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075810814 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092265349 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062715792 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071846775 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095820748 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071611289 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070068973 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095808773 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069733725 seconds)
done (took 13.673401774 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070019202 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.165965755 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.107633674 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.124217115 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114369589 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071024308 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080732626 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125704606 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072266983 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125326352 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092309041 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114517626 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.105710381 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093378202 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070450847 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098566618 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071553838 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085711708 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128608334 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090760266 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144806441 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.093278075 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.10429279 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117604343 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.079587092 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121517763 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070256194 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07408459 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.097511793 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086310194 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114801064 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073764839 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070503652 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115837918 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088096787 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.10210145 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070446731 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.100293754 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070112615 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070127536 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.121781261 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.092284206 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099825428 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075619481 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097848263 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072969386 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071432583 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.103981156 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08110387 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075008749 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108852711 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137911165 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073768599 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103494009 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069794429 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081842388 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104095874 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073569425 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.094104079 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073144831 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070161052 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097120136 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08488882 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.123690482 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075474943 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103738803 seconds)
  done (took 7.164147646 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086730203 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097411546 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.11206401 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088237815 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.093958822 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071180784 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095276588 seconds)
  done (took 1.574048909 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070950587 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09275132 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118120027 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093543478 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11455505 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092040001 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104674225 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070621424 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088842754 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.096873481 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091722996 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134863838 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072951765 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.10277288 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095733996 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071315673 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118954883 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071409236 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098018427 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094281654 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074023616 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115727733 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073065023 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095495163 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084886968 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071653352 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144312706 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076479554 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097358839 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074391825 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093350129 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.122315274 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109713716 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082768055 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095062335 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086162528 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085295305 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093690462 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087047879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10091623 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085654716 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072109223 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096166014 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069594075 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076373298 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10615778 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072932035 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072402062 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097914679 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091793876 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096350638 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084809094 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071538732 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100044788 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072586446 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101769529 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081958814 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072083596 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115153035 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072893145 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11288615 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088521825 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085249386 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111754858 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073978411 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109168707 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085145805 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074905605 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097371667 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074853844 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112294969 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069375138 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073201934 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106462805 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073820718 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094185766 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.120420767 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074053899 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106021512 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07186987 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072712735 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096766515 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095046045 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099872418 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071679076 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075762134 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099243805 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069481514 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070275256 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.099395073 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0698856 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073261801 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098507868 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071922158 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074293908 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.11178728 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072583041 seconds)
  done (took 9.640308694 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0724937 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072335989 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097779328 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072633125 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07273645 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096697854 seconds)
  done (took 1.434514882 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095443833 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098541244 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086399338 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077624785 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.137708789 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086327389 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111250835 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079594214 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.11482116 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084620429 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.112091893 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086921905 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.1173588 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078393394 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110041 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077542168 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110675983 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082066678 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.108800943 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079297842 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117769252 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.078391999 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079206734 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.11317511 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075391912 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102235003 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082703391 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.109997574 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084580634 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104699381 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078467187 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075726797 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.10135089 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08048769 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111076359 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07718553 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102542744 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076126161 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.107020276 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07564343 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086728264 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103303797 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.084227019 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101027885 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080341468 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.101481015 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07615275 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106934902 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086199488 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099996223 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076905884 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078080445 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.099866525 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076555963 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.102244838 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079465746 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076571081 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111105719 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078980701 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102011183 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075160879 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100305236 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080063072 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100768646 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085841066 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076332759 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101527484 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078428683 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103311713 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078392472 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.100591276 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.074787504 seconds)
  done (took 7.580031412 seconds)
done (took 28.318152177 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.659894073 seconds)
  done (took 1.603666346 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.693297114 seconds)
  done (took 1.638955271 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.654837811 seconds)
  done (took 17.598982067 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.473005064 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.546545329 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.783985483 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159540148 seconds)
  done (took 2.904871863 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.897993717 seconds)
  done (took 1.859855873 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.22537258 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.212093736 seconds)
  done (took 1.385693671 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736611909 seconds)
  done (took 1.688956883 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.309735007 seconds)
  done (took 2.25703413 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.310627308 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.140930471 seconds)
  done (took 1.408765316 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53693356 seconds)
  done (took 1.49845057 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.959359797 seconds)
  done (took 7.920782298 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215062529 seconds)
  done (took 1.183313654 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268154982 seconds)
  done (took 1.231824445 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.467787023 seconds)
  done (took 4.428116443 seconds)
done (took 49.557946274 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081193806 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08453126 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109117604 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080993549 seconds)
  done (took 1.310915027 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08329207 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078332126 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107270929 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077450861 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107851924 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0776457 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07949371 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10856791 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077461464 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104049118 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077702545 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076626355 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.105176182 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079784824 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100566968 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080334917 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106819541 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077783856 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081112699 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103254988 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075307407 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105020823 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081158571 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076732158 seconds)
  done (took 3.096051232 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081153341 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076276339 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102974402 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075064092 seconds)
  done (took 1.30375121 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08158333 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097617837 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.119791072 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081870247 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.123495623 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116940182 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074192312 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074174651 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101410654 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081154785 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.0725704 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.130086253 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118510974 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082168042 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083327382 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095818218 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073618646 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.118296688 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081976411 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082410943 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100575396 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081435185 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072668833 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120918602 seconds)
  done (took 3.235855649 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082030702 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106525924 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.109999181 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095504122 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.122551916 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070444301 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.107357924 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096811369 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.158284654 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070138023 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100591327 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070511927 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076947307 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.095557477 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081397377 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140772034 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118144482 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.098544876 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10025435 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070732723 seconds)
  done (took 2.944994373 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079127455 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074653753 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095274548 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073634892 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081538668 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10366866 seconds)
  done (took 1.48733604 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07290336 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071682852 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096937401 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071874058 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076616909 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097326306 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071489143 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072004122 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097246808 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071699608 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071711016 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095846977 seconds)
  done (took 1.941508688 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.469562217 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073110722 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.098619665 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070805333 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076626512 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096706484 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085115081 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072753952 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.122568067 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071480845 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.097339962 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073784867 seconds)
  done (took 2.382578032 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216812369 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107164177 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243590373 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170114755 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139289178 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152385937 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134468666 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119787526 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204975185 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138534998 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186894737 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176947364 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13354809 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171092665 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093772505 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131277689 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177552452 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224601215 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136057683 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185841108 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180531478 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146323068 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161378512 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132288633 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09424241 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149885279 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102887553 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08645804 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216573273 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15880822 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168730395 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144050311 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127559059 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194181936 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230965839 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17677822 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168177574 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11623704 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.131081963 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.147066632 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242401058 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094108408 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187020409 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139627124 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113475932 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17344041 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148582069 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.154699586 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130464767 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094263953 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200704458 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19350293 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172495919 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119825132 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115319853 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141486958 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146965418 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133109025 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229850959 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180008467 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159872807 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075343859 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126808131 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171987417 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162332735 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148810804 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160531353 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126772549 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171925273 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1670177 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145642038 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17128254 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.163024527 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118315011 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148978801 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153931026 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150857143 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207679263 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160472832 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101896306 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147293986 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103540795 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111741664 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173741305 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079522829 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194042397 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130825534 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.094019044 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143096321 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140028519 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140671941 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176778121 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172152029 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127695607 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070405927 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136348333 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.136152925 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167985637 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093377471 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140449602 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141311873 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.110758089 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158432027 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07850028 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157000263 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077478405 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155558077 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187649712 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081611513 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139804163 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106052004 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129954619 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156395101 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179215146 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121597053 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087985746 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186676931 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179918763 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104137194 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158890535 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179291493 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.129039371 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13051038 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178465357 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223773043 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094277682 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182603685 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13431587 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116528169 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093752841 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158180319 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137235822 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142106552 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087011114 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160967438 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216098981 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080423295 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11911889 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168259072 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087374547 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112921004 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140765572 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102104252 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119895292 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127263444 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104710891 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160383935 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158324991 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133390092 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146074029 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132362721 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230026698 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095067268 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130700647 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102325992 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101528808 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172863439 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177641027 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11217267 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183778774 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152075652 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135848142 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14975658 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089228573 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158006815 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08473233 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101999317 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173537544 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147496563 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14224657 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.175873351 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107876851 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188374522 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160426835 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152596385 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155159248 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.117602376 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139706165 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.119468364 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112462755 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145202196 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104545836 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09618322 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114289376 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13703193 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097030057 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115223148 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177622668 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148169905 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129153537 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112192884 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129625514 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161224678 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108894087 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156566831 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.15716227 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100433835 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.176156858 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197418722 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166673293 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096891442 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212917736 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075920911 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106061837 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.097318302 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150890238 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114945482 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090795895 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148271129 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159937118 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162461183 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156548241 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143305919 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1550957 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168885183 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077050386 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.150083228 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163834213 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155123055 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.141154627 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118821317 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.131891527 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128581934 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136331953 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234933576 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14674796 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156061052 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18922809 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129989488 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08580247 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131613085 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165968418 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134649062 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155846057 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127682598 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094354547 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141073979 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.086377514 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138777238 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189780875 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116470276 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197162919 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.104803547 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162255341 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109030241 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145671242 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139010229 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117253422 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.096218755 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153740501 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180938207 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129009209 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150132648 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171987222 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085149855 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.158012377 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217808638 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174222358 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090666604 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13924942 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140941945 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144634363 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151939405 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129688186 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139327198 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167590473 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138026029 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.116833833 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093389373 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130195916 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104798629 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.118389009 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128679419 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15499863 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09304663 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194221456 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114338153 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137950876 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149920114 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.130738882 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097598046 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131423599 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195228495 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15396058 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217552439 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102808492 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158138865 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182166121 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106552371 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085467161 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114149821 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157578524 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089673006 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167705569 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127744767 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136963462 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160629303 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171924847 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093145165 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101606473 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109295356 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152276071 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144497605 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132186351 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13877501 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184474798 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127767739 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086610721 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153028579 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136026186 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101240819 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174346986 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.093821105 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101241841 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108561797 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087471257 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14411132 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185992318 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.11674445 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.139286756 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147565189 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14789436 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144736905 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130900327 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101897445 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146097131 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179952915 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162633091 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.112910774 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137801107 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155122189 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174400004 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140756234 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093325553 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208617698 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172149287 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177330505 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09490086 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147647135 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147594141 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136764913 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163289324 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116096816 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185037599 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087672162 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20430542 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133371914 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095412607 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153679731 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128404531 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139210033 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167047092 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15352837 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089121222 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113059352 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147420939 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157650545 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107941396 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.107939562 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159343408 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077971278 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195990945 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209703836 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11334389 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106390695 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12765953 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115507746 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108902328 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137935018 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120459954 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.118173593 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1810319 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.114842722 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169199987 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20780932 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148597367 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153708478 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097897155 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672044032 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.11039011 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173039164 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1067866 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211668833 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103036725 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151819787 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138545123 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148052451 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174340993 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138707593 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.211321168 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170782607 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157046188 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112335517 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11048402 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140991437 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.125412306 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132444975 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118485618 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139082329 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133226642 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156880454 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149159733 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086946064 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120481111 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17657036 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13473572 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165062453 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158655056 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092240772 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152342968 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161469979 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113734816 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159299177 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213376086 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095471453 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131544262 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087714709 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134759698 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236618846 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078275786 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176808282 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15391852 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137352304 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14610477 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.126915165 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168069513 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137265246 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156302943 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098216689 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139202819 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135469028 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117810231 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082921567 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134035876 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145778327 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101427299 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13853419 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121100452 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192416246 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077838276 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125533344 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108504851 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166137565 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22167945 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094519692 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11680403 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142844516 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104365314 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154164888 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15593637 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115605048 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088570786 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.116674638 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.117953314 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121674323 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106757765 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134141375 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143796036 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182785269 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.117659242 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258208773 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09454685 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134421743 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075557456 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112824274 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101516489 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127015664 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137299392 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103049873 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238720221 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125603349 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086716646 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129211114 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079678919 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116647346 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117845006 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14332261 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158039869 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126531139 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067097221 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138876541 seconds)
  done (took 68.91660325 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140622943 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.110295714 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125653622 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.180607143 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15562289 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247200518 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.188555692 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233134248 seconds)
  done (took 2.422697732 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074258028 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125084519 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107080429 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11506667 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072341988 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.099101553 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.309623472 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111903404 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071884109 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09455041 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.151779537 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075223645 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.4896204 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070535786 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.101117651 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091220558 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072922598 seconds)
  done (took 3.269606837 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.436557605 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.668034007 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.478039998 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078349101 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.036393103 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115072066 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.643247008 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.172173095 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097273276 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.44860851 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.735389238 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.141616696 seconds)
  done (took 18.096010565 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079873821 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07397561 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11585481 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088189542 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077402162 seconds)
  done (took 1.488160912 seconds)
done (took 112.84520016 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085673732 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.371289219 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058863926 seconds)
  done (took 1.511588513 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088921717 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089196658 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117958334 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.0877008 seconds)
  done (took 1.439003421 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078974284 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07987843 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116725685 seconds)
  done (took 1.327516455 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.302405125 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141016956 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.121634416 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087076661 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08192087 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.111024335 seconds)
  done (took 1.32941427 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078051005 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080646967 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106049182 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082163036 seconds)
  done (took 1.393393468 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080844639 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057358345 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059228276 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088005075 seconds)
  done (took 1.338204528 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094747135 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084087882 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.112230682 seconds)
  done (took 1.344606553 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110126619 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.118143553 seconds)
  done (took 1.286312554 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086126993 seconds)
  done (took 1.140333196 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099267495 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.149051249 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.169496265 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143872159 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.179701129 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144108651 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093482723 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.122427162 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.1103224 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095490085 seconds)
  done (took 2.36715639 seconds)
done (took 16.172475853 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084348323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.396592027 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366993564 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123802112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673130958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360723402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.012932809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097146027 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142044203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073175139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117025151 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653380507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.002308373 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329316534 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988820193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.423025474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.660568401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100873862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072903579 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073064494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.997124423 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073124203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101137513 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074105905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667528404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403995815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073018399 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.444959526 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073665944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075027007 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.388157857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073783883 seconds)
  done (took 16.247748031 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075836582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.150702312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08070934 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088896108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.104165166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074984443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104665974 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074974745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154295938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073193244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089975469 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101397266 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076584448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101578265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093224695 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072787919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101839392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073069578 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100095706 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074520252 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091574789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100619171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074277595 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073746804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10114965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084829779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101137662 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073795521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072829482 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103016838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076707693 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073659031 seconds)
  done (took 3.957417164 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121454828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.160438752 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079476105 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136049843 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120047803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103402766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.178488866 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099597699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15925248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07351381 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117949292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074079492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.134129348 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074488446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092909252 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101192599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074856908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101203068 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074029914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073364812 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120583654 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073459922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101549171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074218722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073733982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114609723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074652845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100254984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073619307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075120403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104718533 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074805022 seconds)
  done (took 4.275848881 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077853594 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079901956 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11595379 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08947312 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075318058 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.105006055 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077614967 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102720435 seconds)
  done (took 1.790356127 seconds)
done (took 27.324514703 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084477569 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075142789 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106231586 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086609 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07811703 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.111464917 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072329163 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107487326 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080842569 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077847167 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10932134 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072949482 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075991534 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100329901 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080878233 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073431456 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.112664944 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076884069 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.11200745 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084374049 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074534384 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.109330781 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079484268 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.111543323 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084495881 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083289219 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.115530724 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078059063 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101822266 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075366367 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080869938 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116264405 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074339928 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112105789 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074652183 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073155094 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.101461734 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073223169 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08391665 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108959258 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076217717 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108362934 seconds)
  done (took 4.832278982 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093175459 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096412296 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118293448 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067289288 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072192463 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.094860774 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093594079 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.093641808 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067685852 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09198686 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.088867115 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063605747 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064780495 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058664436 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.091112473 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062099915 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065460716 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061438865 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.090775796 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064056634 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065076473 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.086734038 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.065667772 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064390871 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062108838 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.094804433 seconds)
  done (took 3.105254104 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080878912 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087458985 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121225602 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13185559 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.140609039 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081110805 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112248342 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092932378 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.119056848 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073855478 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077165486 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131122813 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092047343 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108154778 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076213975 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08761381 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.11616226 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075862559 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079083373 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122520835 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089520086 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.111765337 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095011231 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084828992 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.101788674 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075437329 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.107414188 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086816702 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.080470766 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.110851065 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079217517 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.104871418 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075226487 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085476371 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.107915974 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074782005 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121446298 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083756246 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081908386 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.102993037 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076655208 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075764723 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.122602478 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.117499307 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.101881617 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079773098 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108762761 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082889954 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.074155494 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119918049 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083728226 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073075331 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.104682995 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073980813 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.103230013 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08916859 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074390188 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104286369 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081158179 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076223846 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.114030977 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077410425 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117309738 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073618147 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08010634 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.103316873 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07385052 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071522121 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123955294 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07830123 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.142569742 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074235795 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073646718 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111355421 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080188047 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107658869 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073682988 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088007398 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111985208 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077043281 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.112192344 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077532995 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075780314 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120315888 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074977097 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074955822 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.102993875 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.088856565 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104035784 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075114894 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087203605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102959329 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075850716 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114278276 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073396061 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074609584 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108177716 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077824588 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072407016 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114411566 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077962891 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.102317836 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083197742 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073697648 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.104974814 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082764539 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.105872995 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073638884 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077293121 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.108829021 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073904176 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076238193 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104865223 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075192327 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08244472 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.107568296 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076999558 seconds)
  done (took 11.913075778 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.20517806 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.196660741 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076192251 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.188422124 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084943127 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113824441 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.190511966 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104371131 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.103321558 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07455295 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074026516 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.14300896 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10671967 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.145452049 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111739254 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073528886 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091604778 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14444916 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.193567522 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.185697764 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093208213 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.111623301 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076058616 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074319092 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105713016 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083291078 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.120089054 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085612063 seconds)
  done (took 4.442486507 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087031098 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.135100731 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079532707 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094406385 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.126900314 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074235643 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.107869383 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075750894 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086417956 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.114041764 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073100139 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1088872 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080638313 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.111686427 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074879946 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082284611 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.11244383 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075013507 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105404252 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077591846 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07905824 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115961483 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077637318 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101787579 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080708155 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071956633 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.1003139 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.09210821 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.103025756 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095836378 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.101216179 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080595781 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082604611 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.10417577 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.074068574 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075932431 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.105428474 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07564201 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075421688 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101322345 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072939364 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063922952 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102105507 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087276597 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.109144741 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065203238 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079134223 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.108699209 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078708836 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071448937 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105037948 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075922351 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.10575334 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081058154 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077971318 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10803631 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.076823945 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.071223275 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.109708014 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075890598 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069708408 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101505715 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079015111 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072310423 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111384458 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078166133 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.10132831 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075852062 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077584482 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.109549237 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075604687 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075938427 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.100813772 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075786804 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078533839 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.107445718 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07719319 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072255474 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.102026217 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073962449 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060936477 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.103103317 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059661138 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076401392 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.101208244 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072154928 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075401142 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108282571 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086579552 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.104217952 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079719279 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.103917035 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072957973 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076950414 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.09797704 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076409003 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088260571 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.120474646 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073699801 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.101608818 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086609214 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079318043 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.102102542 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061859219 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.082050684 seconds)
  done (took 10.358091513 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097055592 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098914266 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.105097926 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087786694 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.129455312 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096432025 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.111046781 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080462648 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074956442 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120935752 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074021301 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082372256 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.107302196 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083137943 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125680858 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082097988 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075812516 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.11293687 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.082622744 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13820864 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08748212 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091016441 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.113878272 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073619106 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.108019901 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08618328 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099232456 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113080035 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.08273452 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.116459848 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08402132 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09870592 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.119008653 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.078220955 seconds)
  done (took 4.414502176 seconds)
done (took 40.118397688 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.160932683 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.361919995 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.137187334 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.066174454 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.172840037 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.16891595 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.147246792 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.13573462 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.723366227 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.140960494 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.381810458 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.822806327 seconds)
done (took 59.501893393 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.138118624 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.276507801 seconds)
    (2/2) benchmarking "String"...
    done (took 1.416475253 seconds)
  done (took 3.774519804 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.491292567 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.143282203 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.424275263 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.139057405 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.141340101 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.582316948 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.755485454 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.502254907 seconds)
  done (took 27.770212182 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.144217256 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.526096782 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.740822293 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.757653373 seconds)
  done (took 18.249742214 seconds)
done (took 59.503401032 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.137485916 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.18066006 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.152127546 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.12137579 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.250514801 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.169527594 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.4292655 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.372474388 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.142187572 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.12092215 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.154713471 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.136827302 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.155104349 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.461795484 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.149721131 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.141625787 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.187288848 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.618682027 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.541492606 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.150936232 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.163531808 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.158713912 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.159017105 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.156744774 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.200524471 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.137266272 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.137366908 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.155012101 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.668506016 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.141393609 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.140500091 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.660730707 seconds)
  done (took 189.735711469 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.138222657 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.275359026 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.339109 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.168534591 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.5952301 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.339814602 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.259498641 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.658346285 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.156592294 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.168569503 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.392706909 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.142650051 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.457374912 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.125778998 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.148180881 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.246238794 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.350274724 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.446094844 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.157808205 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.403694366 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.161101024 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.390074649 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.297844492 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.350885805 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.190142205 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.197824593 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.165730451 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.152289995 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.332383377 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.290901806 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.148048295 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.182572458 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.75724929 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.000559134 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.156163425 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.161806653 seconds)
  done (took 147.987241645 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.417370574 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.13989684 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.138901381 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.140560385 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.170834078 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.13998366 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.139177521 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.705378899 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.646934532 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.203970307 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.711176843 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202926635 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.418849264 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.14255909 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234448749 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.152888237 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.140001669 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.15545719 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.165972613 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.144052576 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.140547087 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.711271421 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.156346213 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.198419548 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.146735027 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.139438889 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.172786211 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.139416341 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.535720433 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.139992406 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.172344918 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.462252422 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.186030494 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.140978179 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.484074498 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.882470522 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255015325 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.143023519 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.173589864 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.140158201 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.412562752 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.141247413 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.142069422 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.143890465 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.770081397 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.146165217 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.709232179 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.146793402 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.086031789 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.146378962 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.142566645 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.725875947 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.680965022 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.145142867 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.141904707 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.143777754 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.142454459 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.141984549 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.175559202 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.68563019 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.243082638 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.142899221 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.146073549 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.174377996 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.14194853 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.170813095 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.142033616 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.135402104 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.195795459 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.247062686 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.714363557 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.146689967 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.14230752 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235673577 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.261643892 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.142909158 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.143085596 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.142943021 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.143190498 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.250804979 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.143117672 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.14286603 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.563933855 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148477562 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.143567473 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203566857 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.237780929 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.144113983 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480606358 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.148143976 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.143408887 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912110706 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242365937 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.143136907 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.142930492 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.142500774 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.564246395 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.709305309 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.368781597 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.148100088 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.54769693 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.148321725 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.581303362 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.692716681 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.777989932 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.14984724 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252032837 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.147584753 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.146356255 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.144370492 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.172106453 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.145001615 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.202651113 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.143839013 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.541873276 seconds)
  done (took 339.205229939 seconds)
done (took 679.424372484 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.856842019 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.808975989 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.946166307 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.822643506 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.803803598 seconds)
  done (took 10.325416916 seconds)
done (took 11.410739219 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.333659068 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.333366483 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.204832486 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.332399517 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.17548683 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.348347913 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.31151773 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.167532308 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.247653661 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.227228608 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.249699537 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.201144692 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.176080963 seconds)
  done (took 17.39775167 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.47044547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.455830529 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.21018825 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.462550317 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.184667219 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.453188298 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.345769321 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.353529517 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.345286552 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.16011845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.158777432 seconds)
  done (took 15.69122743 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459897838 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.466603075 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.212895967 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.465772314 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.188082568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466520892 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.350598408 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.359029574 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.351853567 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.160758226 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.159184098 seconds)
  done (took 15.730445348 seconds)
done (took 49.905682212 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.154788125 seconds)
  done (took 2.244519529 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.190962625 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.357317259 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.174988008 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.161509237 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.157294548 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.159899227 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.161753756 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.15712254 seconds)
  done (took 10.612594179 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.153489845 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.152416964 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.153457331 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.153291806 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.153224242 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.156167539 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.153364668 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.154114066 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.155888197 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.153083217 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.156160454 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.1523313 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.152761933 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.156967411 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.155952684 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.155833972 seconds)
  done (took 19.558397804 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.154188308 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.153912073 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.153661979 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.154745692 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.153721211 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.153370283 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.155457504 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.153895799 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.153719534 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.152991952 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.155326035 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.154288461 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.153374447 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.154693929 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.1539013 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.154456295 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.154268168 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.155724879 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.159579509 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.154463095 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.154510217 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.154681856 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.155391408 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.156107382 seconds)
  done (took 28.803865492 seconds)
done (took 62.307609833 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.346567433 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.87195155 seconds)
  done (took 9.311669919 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.156544794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.156463669 seconds)
  done (took 3.406610098 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.156374957 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.15643872 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.156629126 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.15696939 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.157091399 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.157476528 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.15710949 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.157801481 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.157093317 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.157464697 seconds)
  done (took 12.663191101 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.157759105 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.157150034 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.156281406 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.157876649 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.158015632 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.15572817 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.157886135 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.156928941 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.156559899 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.155688406 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.157899936 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.156118195 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.156343989 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.155981557 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.158811176 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.156217247 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.155333938 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.156261411 seconds)
  done (took 21.916740122 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.157946219 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.158452571 seconds)
  done (took 3.409900288 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.155545048 seconds)
    (2/7) benchmarking "second"...
    done (took 1.155599396 seconds)
    (3/7) benchmarking "month"...
    done (took 1.156195352 seconds)
    (4/7) benchmarking "year"...
    done (took 1.15464173 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.156353329 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.15715803 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.155785219 seconds)
  done (took 9.183622268 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.159200694 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.340540898 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.426578432 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.765591848 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.159949511 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.161769921 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.03936242 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.162431636 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.164794374 seconds)
  done (took 13.474508789 seconds)
done (took 74.456860829 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.171022552 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.15692149 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.044879907 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.174189597 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.173462481 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.45289243 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.160264936 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.277344231 seconds)
done (took 36.704030621 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.158247487 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.903466168 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.922943158 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.157664607 seconds)
  done (took 11.079071381 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.149260722 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.107542613 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.146254008 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.207505077 seconds)
  done (took 17.706084594 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.201369618 seconds)
    (2/2) benchmarking "read"...
    done (took 1.492566846 seconds)
  done (took 4.788647301 seconds)
done (took 40.82562284 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161262105 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.159172262 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.158878094 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.157861773 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.158318378 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.162103232 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.157626657 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.158592401 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.161834637 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.161304299 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.161270038 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.161641386 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162449047 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.159496577 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.158869862 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161224832 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.159739523 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158965181 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.15737245 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.162247101 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163204491 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.15794907 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.159341618 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.162070922 seconds)
  done (took 28.93828633 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.162648289 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.15938965 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.160993241 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.163396294 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.160842002 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.16227823 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.163547518 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.158847436 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.162620031 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.163023477 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160238484 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.159432192 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.162519188 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.16074155 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161951075 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.16059315 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.162602168 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160707682 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163346617 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.160760395 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.162053995 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158718106 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.160934324 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161796092 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.161774477 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.159836223 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.162075688 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.161160664 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.162941631 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.160870774 seconds)
  done (took 35.94100932 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.167487575 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.170036253 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.163118375 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.162362539 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.163087522 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.16308033 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.163943727 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.163487672 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.163024221 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.164098997 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.163809406 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.163803059 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.162795236 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.163715977 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.163329924 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.162794634 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.164203441 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.163216033 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.163900974 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.165162171 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.164169889 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.163987387 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.16438253 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.163646648 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.164045683 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.164353087 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.163876605 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.16390101 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.164528631 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.163805514 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.163556082 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.163875227 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.165272859 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.164034844 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.165032577 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.163791061 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.168880839 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.171316168 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.164404007 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.165025662 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.165560981 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.164344296 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.1646641 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.164618739 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.165106971 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.164611173 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.164651983 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.164617067 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.165377623 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.165405724 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.165795468 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.166060213 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.167827525 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.164325978 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.165614071 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.164723817 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.165836552 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.167307376 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.170124809 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.169866939 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.170562561 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.172083735 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.170992641 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.167634281 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.165398998 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.166609851 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.16682107 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.166940934 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.166668996 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.166348934 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.167596107 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.165954793 seconds)
  done (took 85.007065188 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.166422069 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.163437501 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.164553618 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.163237979 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.164209306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.165964325 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.164008612 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16655163 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164148538 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.166600998 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167216766 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.165182833 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.164454678 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.167115797 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168094729 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.165297344 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.166485516 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.164687658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.167125775 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.167791355 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.166932477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.164457019 seconds)
  done (took 26.745904349 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.168346044 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.167224537 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.164750846 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.167073305 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.163910694 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.166300738 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.166448034 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.172790194 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16669948 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.164956565 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165565537 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167705475 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.165156236 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165991054 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.165690807 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.165537593 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167765933 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.166307868 seconds)
  done (took 22.100335157 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.16587224 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.165953624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.167748838 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.166225853 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.166329233 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.168601484 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.165324769 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.169254973 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.168284751 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.165902225 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.16825809 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168571293 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.169120806 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166350163 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.169638325 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.167910887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.169116136 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16647219 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16915451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.166418354 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.167143455 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169571441 seconds)
  done (took 26.791180268 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169481614 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.168843683 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.166638049 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.16647976 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.16668419 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.169298701 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.168675654 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.167350427 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.169897232 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.168850934 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167463023 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.169677704 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.16662325 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.167712015 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.165929387 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167993519 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.169551383 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.168042316 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170304961 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.166275922 seconds)
  done (took 24.46609278 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171023843 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.171684087 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.171397418 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.171647272 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.170426496 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.171439088 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.17224125 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.172665323 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.170837997 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.171070262 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.171428303 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.17132744 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.17169647 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.171293464 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.171448851 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.171002021 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.17123196 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.17242952 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.170838155 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.172394802 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.171619963 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171475914 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173261997 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.172290417 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.171774048 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.171238481 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.1718509 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.172085864 seconds)
  done (took 33.909522649 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172342351 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.171941155 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.170233802 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.169369139 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.168547407 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.16969235 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.170851666 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.170166516 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.172343037 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.168930465 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.172642071 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.170850142 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.17234205 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.172493621 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.17133339 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.172785621 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172869288 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.17012634 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.169645112 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170412334 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.172500885 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172641184 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.172563379 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.171425528 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171444963 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.173050728 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171066087 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.170162924 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.173108465 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.170509834 seconds)
  done (took 36.246272129 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.19306478 seconds)
    (2/2) benchmarking "in"...
    done (took 1.192047875 seconds)
  done (took 3.492295168 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.170942953 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.173693211 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.173797531 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.171823041 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.171577298 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.175000391 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.173385061 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172094735 seconds)
  done (took 10.490315021 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.173284279 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.174009194 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.173381989 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.17410518 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.174461442 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.172159494 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.181537126 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.190993818 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.175583037 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.175874081 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.180685947 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.180729336 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.176401265 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.174896328 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.174254951 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175425702 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.175068786 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.174857621 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.175418152 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.174642576 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174978581 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176616649 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.177167934 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.172993889 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.174216833 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.184071528 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.178252022 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.175227676 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173742332 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.178503342 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.175387259 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.17427718 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.177523852 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.178421868 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.176104461 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.175994268 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186599586 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.192497886 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.181898001 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176380241 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.175176694 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.173674189 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.176404857 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.176670489 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176314901 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.175878708 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.176710392 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.172518856 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.175038528 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.17943639 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.181220781 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175357411 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.17417376 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.178873823 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.176626596 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183557127 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.193408907 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.179231131 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.183806543 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.187528375 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.189098891 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.184144587 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.178525847 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.177420418 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.185928443 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.199778676 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185119555 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.192462427 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.172947712 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.176402625 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.183803618 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.189156477 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.186167361 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.176575151 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177489001 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.176920714 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.177147755 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177344445 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.183835385 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.198220297 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.178502198 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177874272 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187976513 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198785756 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.176018441 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.17771843 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.178351141 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.178805619 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.179048497 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.18895608 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.195737703 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.178088094 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.177966702 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.179126133 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.178896616 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.178851455 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.176578182 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.178369346 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.176474908 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.179602898 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.178763952 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.180796888 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.186054218 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.178960823 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179193138 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.185447085 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.179070377 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.178043997 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.185779459 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.180026417 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179697951 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.180722958 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.186190262 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.177959376 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183593597 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.187397887 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.180383857 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.181179019 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.180595841 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.180618152 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.188804425 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.205378298 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.179732396 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.180301319 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.184213636 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.190638607 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18054921 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.1827766 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.180944882 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.177542314 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.178255413 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.18122592 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.180687615 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.180985201 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180473363 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181569745 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.177994947 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.181227781 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.180510145 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.181161954 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.181518109 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.180317745 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.182238347 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.182477979 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.18111779 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.1822572 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.186047842 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.181118498 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.181956516 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.181246818 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.178495225 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181479312 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.181719112 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.182067144 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.181327351 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.182101002 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.18064782 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.182114631 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181912666 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.182608572 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181373935 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.182620176 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.184524555 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.182598885 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.184729459 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.180941624 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.179805899 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.183102857 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.182311976 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.182023609 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.18300032 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.180487057 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.184830912 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.190208186 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.182505583 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.183123316 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.185179934 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.182335264 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.183996837 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182854547 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.184925083 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.191020836 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.183117092 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.190358286 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.184187576 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183150794 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.18286715 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.182442743 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.181549223 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182915902 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.185018149 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.190646714 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.195024379 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190812506 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.184395048 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.187521469 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.18407779 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.187122971 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.188748487 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.183823108 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.183943017 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183281086 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.182954959 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.184104599 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.185252873 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.184317019 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.183112039 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.183801734 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.184447935 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.183630559 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184316224 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.184946347 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184946742 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.183493469 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184091728 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.184979704 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.184053628 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.182177371 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.184342009 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.184439794 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.184364602 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.18557962 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.191262248 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.183134095 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186712234 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18633692 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.185965546 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.184465026 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.186552971 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186368591 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.183857602 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192207326 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.202839478 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.185708006 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.191444643 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.201493217 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.185246331 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.18741275 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.186930864 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.184518787 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.187740015 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.194436239 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.185937548 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.186200022 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.18679178 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186385272 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187571367 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.193599684 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.184582416 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.185810022 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.189937605 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.187916505 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.184676986 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.186997724 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.187433713 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.187417309 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.188094331 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.187547202 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.187222378 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.188095074 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.189155017 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.188678748 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.187112087 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.189864596 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.194531611 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.192501566 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.186845144 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.189625803 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.187144327 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.19202211 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.188062214 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.187953598 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.187094413 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.200860837 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.196677636 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193861102 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.188356547 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.188985124 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.194068695 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.189107712 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.190461508 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.187528243 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188852427 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.187888278 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.18748619 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.186608327 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188821157 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.189333382 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.188226185 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.189660211 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.191254975 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.188484274 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.187185151 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.188568367 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.189297156 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.189316069 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.186958026 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.188131288 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.189857212 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189437885 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.187224861 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.187883629 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.194048032 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.20684799 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.188745678 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.188380508 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.188476048 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.188718167 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.189416103 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.188765986 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.190923647 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.197400886 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.191711084 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.197164119 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.191051156 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.198182394 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.190715942 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.192713245 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.197540797 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.188351544 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.187555916 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.188874225 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.190185363 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.196502912 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.207883371 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.190603365 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.193930175 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190481872 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.19014935 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.190965271 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.191076085 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.192474467 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.190794259 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.198846469 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.208953768 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.193492668 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.192848852 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.189300784 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.191602443 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.191278309 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.189047017 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192745698 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.190877291 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.19131854 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.190040568 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.190527294 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.190936785 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.191593242 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.192093538 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.189641176 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.191568934 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.197895897 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.20916326 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.195696639 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.191085548 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.199312728 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.19182479 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.198355213 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.210002128 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.192567538 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.192851993 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.192785334 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.19347769 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.190807618 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.193163668 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.193828337 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.193193763 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.196005236 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.192293027 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.195397126 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.192989514 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.193201182 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.192280849 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.201782799 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.21548321 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.194851716 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.19626707 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.191374091 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.194400391 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.197359536 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.19344826 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.191366507 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.196802037 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.201628188 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200475508 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.193429209 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.194268536 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192915622 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.194044147 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.193771459 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.19291886 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.194003867 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.194275614 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.194063359 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.19472224 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.196510022 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.194505144 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.193673171 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194150109 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.195897671 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.204459081 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.194820908 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.194619253 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.194645999 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.195007872 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.194844641 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.195691417 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.195353891 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.193975353 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.195312988 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.195250497 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.200886419 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.200119535 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.197433091 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.193524315 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.195123245 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.1950476 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.195425509 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.19514359 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.195137156 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.196433504 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.19579453 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.195562208 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.195870876 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.192020956 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.194445028 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.194654444 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.19562965 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197311568 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.201748976 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196102356 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.194498762 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.196549745 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.194920416 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.194119207 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.196077467 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.204723343 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198317922 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.206178756 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.205410955 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.200446023 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.196184138 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199143925 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.205020616 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.194749434 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.197348822 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.197704536 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.197105792 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.196334181 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.19868974 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197367172 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.202920586 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.196234128 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.196176993 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.205993719 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.215548232 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.197522252 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.198586897 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.200508566 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.195743391 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.194765282 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.197520199 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.196526721 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.204613458 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.215660322 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197537107 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198535216 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.195241751 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.198814972 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.201758264 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.199505597 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.198241801 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.19515094 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.197893584 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19729389 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.19787501 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.195744006 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.198260762 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.196383115 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.200840204 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.204122827 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.196284049 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.199999353 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.197263739 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.199110411 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199726303 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.200320502 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.197450511 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.196536664 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.197700346 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198336507 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.198920413 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.200925972 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.199132947 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.199362257 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.200686434 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198756596 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202449626 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.209496403 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.206232916 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.197903329 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.199149603 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.200415022 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.201902793 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.198274757 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.198677786 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.199883358 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.202532482 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.200751349 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.199427421 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.200107855 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.204093129 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.215138765 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.217413197 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.199500693 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.199880867 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.203713309 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.199613208 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.197771197 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.199638236 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.202314473 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.202160234 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.207434352 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.201918129 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204931746 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216072782 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.20077753 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.203678306 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.203191421 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.206320325 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.203004439 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.201600041 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.201400238 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.205170722 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.21573752 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.201039792 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.210361645 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229807853 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.218557622 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.202837192 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.201938883 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.199484838 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.200553207 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.202188634 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.20137356 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.201668845 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201597527 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.200559528 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.202785289 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.206619224 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.202076 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.202673768 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.201450517 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.202013882 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.202069856 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.198954675 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.201287533 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.202172573 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.202014116 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.202091292 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.202457584 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.202505764 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.213506001 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.212460201 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.202616873 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.202340568 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.199834856 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.206551616 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.204438114 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212083441 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.210165923 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.2031375 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.202832385 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.203745557 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202815138 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.200259509 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.203212558 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.20122444 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.201832935 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.201203711 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.21517881 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212260598 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.207159373 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.203459855 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20369998 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.203391675 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205047119 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.20335918 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204216747 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.203761461 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.204491367 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.207896752 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.204861585 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.203954967 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.206563911 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.212166042 seconds)
  done (took 711.00952689 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.201312122 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203231382 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.199869264 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.202125359 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202419062 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202342932 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.201374087 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.202312842 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.202650774 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.202955335 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.201772422 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202915529 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.201878006 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205562965 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208559962 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.208247982 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20803564 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.20812532 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.207737166 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204604508 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.203649045 seconds)
  done (took 26.419239155 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.206546873 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.202305085 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.203401474 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205918921 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202415094 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.205843717 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.203013933 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206887636 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205869405 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201617771 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.205699756 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204736827 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.202840411 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.20376554 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204612798 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206225334 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.205318841 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204036714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.206405051 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204015185 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206481528 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.204105712 seconds)
  done (took 27.640245569 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.205476345 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.204986615 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.204802038 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.204140335 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.207529104 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.202511384 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.206674297 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.20610103 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.206401566 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.205649851 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.205108189 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.206206409 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.213270968 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.211429664 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.20896137 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.206983698 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.350352766 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.208182518 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.20645359 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.207141823 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.204567188 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.212723424 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.205500348 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.204262248 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.205725064 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.206424925 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.208128332 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.20758595 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.207830476 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.207872008 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.211032177 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.207361435 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.20717788 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.209918734 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.2069513 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.208941455 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.212097035 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.208407937 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.206109604 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.207876098 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.218278115 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.229347985 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.208684791 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.213731352 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.207515005 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.20874673 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.211460809 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.216508291 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.205573037 seconds)
  done (took 60.495456428 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.209096359 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.208900092 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.205507658 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.208960571 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.209385601 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.208790946 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.209160022 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.208859888 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.206243377 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.206310767 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.20911487 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.207122606 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.205229166 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.209518005 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.20953706 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.206380811 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.205971636 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.206130637 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.206690701 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.207786706 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.206987916 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.20973732 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.209734886 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.207557178 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.210191195 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.207015914 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.207514461 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.209961691 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.20774136 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.207381793 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.210373495 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.210329193 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.210535229 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.208576296 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.208513267 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.210029402 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.210274991 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.206576101 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.210143825 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.206723822 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.210648857 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.210460313 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.210263722 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.211905347 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.208287172 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.208992276 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.208342182 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.208067722 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.20721681 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.211822696 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.210408845 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.209022775 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.210198184 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.209166343 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.211405712 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.211277352 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.20886838 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.20973222 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.2117956 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.209409952 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.211151697 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.211925017 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.209941101 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.212170133 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.211715045 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.209507198 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.210857658 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.211180812 seconds)
  done (took 83.360316706 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.212966293 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.212358722 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211525616 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211115794 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212280489 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.212601811 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.211959899 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.21175344 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.211398487 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.211239068 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.213480087 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.212937797 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.211088435 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.211417252 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.213145522 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.212464802 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.213009352 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.212179825 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.212576223 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21350713 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.21299491 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.212114617 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.213413409 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.212577944 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.211937226 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.212400929 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.212829572 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.211920257 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211891841 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.213196379 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.213356233 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.212549718 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.213274669 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.213684549 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.214195168 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.212170266 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.21447331 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212977362 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.213529473 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.213609048 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.212107164 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214273872 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213260321 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.213929112 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.213064441 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.212050928 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.21450129 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.214931828 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.213443288 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.213845464 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.213668167 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.213862507 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213780942 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.213634391 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.21475307 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.214032918 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212928566 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214008287 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213806111 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.213720719 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.213171793 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.214564606 seconds)
  done (took 76.35318346 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214182282 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213603333 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.212448622 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.214125886 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214272056 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.212943664 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214541977 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.214990504 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214799691 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.215832715 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213959771 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213102732 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213521143 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214572238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212936156 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212952191 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214573074 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211884422 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215467399 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21343397 seconds)
  done (took 25.42550794 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.214101891 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.215721602 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.212193322 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213963439 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.216733205 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.215723103 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.216713997 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215968084 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21367647 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216982107 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.216302214 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.216191486 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213219854 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213906207 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.217527484 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.214361094 seconds)
  done (took 20.59193567 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.2133863 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.215803585 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.216891136 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.215472958 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.214328069 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.213723487 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.21773117 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.213558127 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.213697145 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.217211491 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.217959411 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.216970349 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.216837767 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.217369972 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.213628687 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.217319667 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.215577404 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.214184727 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.217517375 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.216742247 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.215155481 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.214330031 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.218624761 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.218098398 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.215070048 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.216405609 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.215365617 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.214879875 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.215216461 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.218330503 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.215846856 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.216606263 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.216471967 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.216243222 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.216574565 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.216897067 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.217857983 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.219567789 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.218748831 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.217880838 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.218635057 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.216242642 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.218654784 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.21859299 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.216858032 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.217971355 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.215458422 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.216845257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.216455763 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.215984026 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.219478859 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.21950658 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.219436829 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.21989726 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.218521817 seconds)
  done (took 68.069275906 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219836386 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219949195 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217163607 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219696123 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.21996237 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.217865474 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220802314 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.217987646 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218642665 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221276208 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218946203 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.220361898 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217259596 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220928964 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218797531 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22103761 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216790161 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.217261146 seconds)
  done (took 23.096767315 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219015118 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218212497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.222189602 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218057528 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.217353414 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22037989 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217811885 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.21950507 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219488708 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216637298 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218545852 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.220776841 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219598529 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.221316161 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218990868 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217796847 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.220387278 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221590555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.218432852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219021326 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221977602 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221601516 seconds)
  done (took 27.981619109 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.219120326 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.219458277 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.235869853 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.260199467 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.249919221 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.219481595 seconds)
  done (took 8.557639049 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220068486 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221366112 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.219824643 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222292785 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221779806 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218823177 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220063703 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219066268 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222337388 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218713583 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218980429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221878049 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222161284 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220170587 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222222183 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22239135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220695104 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221306659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221226246 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222897361 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219953296 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221983885 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21903709 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220665601 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219957897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220978216 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222761791 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220148909 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220249924 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222228909 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224315558 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221563113 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222168867 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221570166 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223677243 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22362301 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221585504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22482631 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224215965 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222403145 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.224213597 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224023716 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224405321 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222675736 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224530863 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22218517 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222080569 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221719345 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223598681 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225070461 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225106038 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222299767 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225058439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225234787 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224918569 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224161596 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223343233 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222582857 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224114762 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223269588 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223901218 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226061592 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223870372 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224359573 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224966586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223769253 seconds)
  done (took 81.833083618 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223294609 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.224069331 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223814745 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225260725 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223031332 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222451165 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223502278 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223379601 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223606305 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224007548 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226904785 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225233188 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224720477 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224946448 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22458034 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22424787 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224686634 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226231333 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224232835 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227760162 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224847449 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225060892 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22562466 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225564004 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224326895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22750767 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224948875 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225389034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226405011 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225085754 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224342426 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224805933 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225049276 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.225143227 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226235579 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225179608 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225474811 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225472503 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225742585 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227579549 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225823487 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227894711 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22553404 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226151202 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225514408 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225257864 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225951872 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226436159 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225901553 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225789174 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226657471 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227601576 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225562623 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226497819 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225812574 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226099161 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223394519 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225316853 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225666787 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227681139 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224800592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223641778 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225860599 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223799359 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224042194 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2236342 seconds)
  done (took 82.027097189 seconds)
done (took 1658.082984935 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.276117683 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.288098986 seconds)
  done (took 13.722135498 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.385574927 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.342103849 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.222953081 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.257222596 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.225005651 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.229933922 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.242322034 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.222645822 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.222990958 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.221833887 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.223369774 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.416156864 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.231603977 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.221528389 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.222320123 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.314073464 seconds)
  done (took 41.360849681 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.250862915 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.229872803 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.343517462 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.248410686 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.250883758 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.414384274 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.283984696 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.229919628 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.404656954 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.27311388 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.85014497 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.250479464 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.22673993 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.374804228 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.248251854 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.419357739 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.484860769 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.876289696 seconds)
  done (took 28.816417015 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.693091054 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.251386256 seconds)
  done (took 9.100014676 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.219889865 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.25347954 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.267847664 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.261136675 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.272739631 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.292853518 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.24753461 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.244051489 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.229465098 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.291771879 seconds)
  done (took 63.737870569 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.247153751 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.231098885 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.229034026 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.227188305 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.222732624 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.225211861 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.226054893 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.222604862 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.014799597 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.360265301 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.248926092 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.236086321 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.227623851 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.227782115 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.225098608 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.263413323 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.375892157 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.225088434 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.224531627 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.23343519 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.228970997 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.313245422 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.272788615 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.228968265 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.356222092 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.011761154 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.23527117 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.23423327 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.357513642 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.22681041 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.226983592 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.228571226 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.229082405 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.812796105 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.762002668 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.239416789 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.249921771 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.23656888 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.224929155 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.345369841 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.228005469 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.234889521 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.219887363 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.722343098 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.387128888 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.339753776 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.513522836 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.232361493 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.229068108 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.287907922 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.226917874 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.22612983 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.255971433 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.005526031 seconds)
  done (took 105.984305626 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.262237778 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.706469012 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.388225435 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.241812062 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.095754268 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.034753243 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.223881161 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.512674322 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.242555492 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.219602893 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.562405585 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.740797374 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.226603959 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.283579292 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.788556075 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.2969762 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.222058333 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.140796178 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.225478087 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.218840854 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643930487 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.241529057 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.237592116 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.401608879 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.25829705 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.68394947 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.688883891 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.730440804 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.226987145 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.219176393 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.693548941 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.229840285 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.261615612 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.216496545 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.492032154 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.573596275 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.543867224 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.219086917 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.244734068 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.219141284 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.230849587 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.671206745 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.554506084 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.2162804 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.216423783 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.674677855 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.216145077 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.221680743 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.220438994 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.42747118 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.189727862 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.220732304 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.665608772 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.221272337 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.473685814 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.219521245 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.262431129 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.700483225 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215852932 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.329762272 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.254649877 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.217586357 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.217082553 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.2221388 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.216617289 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.558025133 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.551690066 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.217904817 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.558405226 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.678203329 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.222875076 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.740649989 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.115389843 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.249419398 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.260675088 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.217771582 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.904749139 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.705177747 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.24415911 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.217767016 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.544273555 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.221321706 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.535778293 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.233881531 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21850565 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.645112976 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.241733047 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.258506069 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.218797257 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.233697288 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.017157268 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.226807494 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.50333801 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.24144807 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.219218242 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.2190832 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.240692527 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.218715443 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.223131505 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.220641573 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.741713166 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.226719266 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.517172168 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.241635307 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.218438599 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.22205532 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.22359267 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.219954581 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.449050948 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.752732444 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.224793531 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.221641712 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.21893116 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.240861619 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.35182292 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.222364806 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.521721592 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.219885366 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220105098 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.223244734 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.059795329 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.267965242 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.21941218 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.222760296 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048765948 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.430551051 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.238028188 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.221069997 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.221463185 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.239668533 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.604385149 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227596908 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.312455684 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.222615058 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92578191 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.252288162 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.260384167 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.822775458 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.226885055 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.220926453 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.231440164 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.220822069 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.532099854 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.502363493 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.375016558 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.22154337 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.226013522 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912648761 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.230252497 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.362206639 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.241540917 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.213457893 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.41792574 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.41611399 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.22404856 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.766318631 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.223397004 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439074595 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.226158181 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.540500703 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.712324581 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.225969194 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227010298 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931381404 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90003191 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.873556893 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.224854582 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.553869303 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.219781983 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.680832654 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.222156863 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.222764334 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.819692557 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.230741504 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.224059245 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.222826401 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.223075971 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.295251286 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.39810473 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.127826671 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.226995747 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.690631753 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283114607 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222785481 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.233011667 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.224944144 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.573608036 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.236756391 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.224146161 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.25342707 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.230566707 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.233606766 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.697709193 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.168869068 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.228572375 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.375253982 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853164112 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.228929135 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.225167997 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.893465936 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.445029635 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.731992856 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.263651533 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.535131815 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.235489386 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.262786402 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.017011572 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30095983 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74010753 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.232049878 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.22313129 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.823404742 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.226828044 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.268358637 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.22433302 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.225118069 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.765969041 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.228595317 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.230250357 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.609683428 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.22924468 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.480827429 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.223873787 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.254083587 seconds)
  done (took 1088.095067828 seconds)
done (took 1351.971813085 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.224743562 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.228395478 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.218009035 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.228562465 seconds)
  done (took 26.06009762 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.234354721 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.234670239 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.23081147 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.228572401 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.232938401 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.228659959 seconds)
  done (took 8.5504548 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.273571385 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.227272108 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.227574574 seconds)
  done (took 18.888272252 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.438190702 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.531815825 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.581859425 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.376737676 seconds)
  done (took 10.089554478 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.229175575 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.229542865 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.229787995 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.234450159 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.235401849 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.236018071 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.232318081 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.232314201 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.237095035 seconds)
  done (took 12.256290905 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.013927352 seconds)
done (took 82.019125796 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.349767076 seconds)
    (2/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.326466176 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.774748206 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.334009262 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.632158992 seconds)
    (6/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.867813134 seconds)
    (7/309) benchmarking ("sort", Int8, false)...
    done (took 4.239854863 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.468283147 seconds)
    (9/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.591843744 seconds)
    (10/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.867714318 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.263970784 seconds)
    (12/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.221886285 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.269279973 seconds)
    (14/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.208176061 seconds)
    (15/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.253201915 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.03342624 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.451361882 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.501505767 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.956198247 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.253656201 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.323833753 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.916747692 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.781800693 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.593911144 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.769241049 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.112824245 seconds)
    (27/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.581853119 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.995447775 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.687849095 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.239220714 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.322309731 seconds)
    (32/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.23309544 seconds)
    (33/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.286644085 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.324531771 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.426349079 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.239417767 seconds)
    (37/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.311564708 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.22825605 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.213543774 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.567239709 seconds)
    (41/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.741763659 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.699642146 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.613697265 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.581301733 seconds)
    (45/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.253872888 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.334342784 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.308258586 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.207763654 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.239190432 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.950427978 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.349217454 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.483810167 seconds)
    (53/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.305414004 seconds)
    (54/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.231907923 seconds)
    (55/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.2509242 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.279193061 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.6007731 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.225991021 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.594124743 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.227706817 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.282512299 seconds)
    (62/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.433592478 seconds)
    (63/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.454857481 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.753727114 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.228119401 seconds)
    (66/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.58583509 seconds)
    (67/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.212616812 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.711300305 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.244523142 seconds)
    (70/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.255559685 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.251986001 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.208281493 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.270695388 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.401910268 seconds)
    (75/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.594892238 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.115032441 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.679459423 seconds)
    (78/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.615077203 seconds)
    (79/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.345632712 seconds)
    (80/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.038558446 seconds)
    (81/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.997298282 seconds)
    (82/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.484855692 seconds)
    (83/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.228963541 seconds)
    (84/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.454953919 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.647597087 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.070600324 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.846521077 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.535238811 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.246400877 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.256468641 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.960217083 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.807335494 seconds)
    (93/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.247841784 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.378838765 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.323807312 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.613193097 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.625269145 seconds)
    (98/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.811971315 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.325277393 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.074193694 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.069664474 seconds)
    (102/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.413332862 seconds)
    (103/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.362320941 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.42456869 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.356442047 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.971734515 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.635187167 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.242578185 seconds)
    (109/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.600184464 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.242343929 seconds)
    (111/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.81112775 seconds)
    (112/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.543232151 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.275743222 seconds)
    (114/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.419874441 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.228723563 seconds)
    (116/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.238548811 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.605361069 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.782775152 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 1.739049219 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.252047642 seconds)
    (121/309) benchmarking ("sort", BigInt, false)...
    done (took 6.227426307 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.622153407 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.490080343 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.510152792 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.309644539 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.260762622 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.229253074 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.852271286 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.280919427 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.953546395 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.816869086 seconds)
    (132/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.237796829 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.511878809 seconds)
    (134/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.542439769 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.222738966 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.756169875 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.94304297 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.256821464 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.228455493 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.335187801 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.12471259 seconds)
    (142/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.295079802 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.328984244 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.658111216 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.217162674 seconds)
    (146/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.416071731 seconds)
    (147/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.229512072 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.965622774 seconds)
    (149/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.923595539 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.271395293 seconds)
    (151/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.254503914 seconds)
    (152/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.315234807 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.043887611 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.46917276 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.252038816 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.571001629 seconds)
    (157/309) benchmarking ("sort", Float32, false)...
    done (took 5.232918605 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.303721981 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.225637988 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.680738939 seconds)
    (161/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.583111302 seconds)
    (162/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.250386533 seconds)
    (163/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.961083175 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.218626287 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.277527402 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.948804458 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.24567598 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.830358087 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.381963119 seconds)
    (170/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.224484329 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.83020303 seconds)
    (172/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.753976689 seconds)
    (173/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.08251221 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.070149083 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.432304777 seconds)
    (176/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.303961855 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.483097519 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.259608675 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.025395325 seconds)
    (180/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.316421588 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.08361232 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.261086344 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.607850438 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.219243601 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.256479545 seconds)
    (186/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.318037152 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.229500721 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.276921563 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.272182699 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.234039286 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.313860224 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.255884241 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.223305315 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.845329409 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.231034752 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.069489018 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.23326121 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.220664686 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.468511151 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.954543028 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.292097053 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.230255677 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.262079149 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.302955122 seconds)
    (205/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.824224336 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.261452678 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.255453774 seconds)
    (208/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.311731677 seconds)
    (209/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.659535699 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.472285285 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.889478163 seconds)
    (212/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.552221008 seconds)
    (213/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.596161858 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.138896455 seconds)
    (215/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.419495204 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.129134414 seconds)
    (217/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.320100918 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.254154336 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.550645782 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.221109678 seconds)
    (221/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.261564858 seconds)
    (222/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.321966362 seconds)
    (223/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.759348997 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.716013013 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.486825786 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.246465519 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.335716068 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.428858131 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 5.505064719 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.150470872 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.272022942 seconds)
    (232/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.229381463 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.238906414 seconds)
    (234/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.477175914 seconds)
    (235/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.237109335 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.238417762 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.235175057 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.076224298 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.261086331 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.56637063 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.253645272 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.339995278 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.072266776 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.253491759 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.968332812 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.265722068 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.560072954 seconds)
    (248/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.25381911 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.552869807 seconds)
    (250/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.296824132 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.282393407 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.241099177 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.2324418 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.123721356 seconds)
    (255/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.301514412 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.436441849 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.733070315 seconds)
    (258/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.94526259 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.396483186 seconds)
    (260/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.316891906 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.55718236 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.264931056 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.519621583 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.598153974 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.627707855 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.783945338 seconds)
    (267/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.041116793 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.83904551 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.655595849 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.528432347 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.543860335 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.281494437 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.653789735 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.627094782 seconds)
    (275/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.35190561 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.252192937 seconds)
    (277/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.234297427 seconds)
    (278/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.266903614 seconds)
    (279/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.525204345 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.639748181 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.316068799 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.596846007 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.123668811 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.452074733 seconds)
    (285/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.825530289 seconds)
    (286/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.3222133 seconds)
    (287/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.234185639 seconds)
    (288/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.34938754 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.317482556 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.318323634 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.352058715 seconds)
    (292/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.220675683 seconds)
    (293/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.254371795 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.042919321 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.08889713 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.313097743 seconds)
    (297/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.234063949 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.282168049 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.96780123 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.264113933 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.631807638 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.583655733 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.26219864 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.235202669 seconds)
    (305/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.397153435 seconds)
    (306/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.422549467 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.826081684 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.345274758 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.4896425 seconds)
  done (took 885.619258017 seconds)
done (took 886.779127723 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.270677343 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.262958287 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.2490986 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.268873678 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.358472227 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.275572416 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.258899092 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.250730474 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.296224059 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.297123867 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.244881782 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.274503661 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.248348198 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.247800062 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.247914315 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.260728636 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.249233167 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.250922904 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.263906493 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.257362019 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.264601191 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.246549701 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.298132444 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.275251757 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.252199934 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.252141105 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.250436555 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.266612787 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.359360053 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.251629343 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.251447263 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.259135625 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.248702764 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.251812876 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.245588294 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.269050275 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.258653724 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.258517285 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.253907521 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.279942359 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.610690396 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.247968434 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.249545434 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.250255411 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.250382136 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.255200012 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.24954261 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.256428688 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.261072966 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.262758437 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.601029328 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.263284906 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.251844274 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.251123742 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.261679473 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.248575287 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.253822892 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.264689862 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.268253825 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.265044788 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.24025295 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.260907369 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.253341104 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.265870881 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.256586909 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.675257617 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.251137534 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.255070429 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.630442537 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.261813203 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.675157872 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.26418381 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.253490871 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.26610097 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.283547071 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.254441461 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.252196975 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.252409989 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.258167717 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.248396735 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.261478974 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.263834198 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.25704763 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.252588374 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264688099 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.280208176 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.261996685 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.252699219 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.261535687 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.27132291 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.258484759 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.262215169 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.255464863 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.24790345 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.261502659 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.256845823 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.255760362 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.255132619 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.257143883 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.263764329 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.631534584 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273277366 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.250279339 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.250788284 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.251283975 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.266262261 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.634327826 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.256725204 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.274626643 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.301427794 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.255713562 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.246687491 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.260713208 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.268071036 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.262570564 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.257277478 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.248521862 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.246583507 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.649277765 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.271681511 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.255691871 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.250519174 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.268034173 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.257370345 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.250613072 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.258668803 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.260376574 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.267201497 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.374242158 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.26585922 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.286221619 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.250655229 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.258264702 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.282324193 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.269490537 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.286214138 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.257510085 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.269548304 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.270092607 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.252481816 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.264452648 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.266345592 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.25662891 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.261780326 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.249817691 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.286786774 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.265601751 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.266568796 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.276814042 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.376042243 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.252949545 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.245684715 seconds)
done (took 212.207383384 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.311531656 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.24960434 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.333178656 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.249520516 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.34863116 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.346827684 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.247685749 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.24733336 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.247484763 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.632903603 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.247384903 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.248831986 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.251207879 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.249160983 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.33189513 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.250866438 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.248854684 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.59545908 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.250993808 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.320744334 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.250591905 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.24970004 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.251314596 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.631224067 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.251242874 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.247537396 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.321294271 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.252290015 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.595105982 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.246508792 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.248838733 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.595670252 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.341804816 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.268542352 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.262153979 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.258533737 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.350943775 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.26656505 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.331794993 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.3324582 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.334998187 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.290832485 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.244803015 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.245418553 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.253264855 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.252629176 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.249884666 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.28042027 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.250133562 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.249839768 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.59593226 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.263292549 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.251552858 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.250377842 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.250878755 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.281750141 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.251180117 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.253489435 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.341639023 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.252897152 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.314335701 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.632291844 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.634953355 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.251844458 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.250454053 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.252584343 seconds)
  done (took 142.927538868 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.319384325 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.327940506 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.360024809 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.254175972 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.302926874 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.368513226 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.254889751 seconds)
  done (took 10.369653966 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.258294294 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.254434084 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.301956697 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.303024651 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.253579142 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.40197078 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.254369369 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.264683912 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.252170219 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.305206567 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.256796366 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.254210192 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.260897988 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.247107077 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.301213332 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.265800269 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.368586415 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.253993459 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.256027671 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.405448124 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.252055589 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.26202432 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.30606039 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.26633987 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.256615508 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.260452023 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.823511095 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.255027407 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.254276352 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.255783107 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.253949072 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.292941126 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.255974396 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.25157817 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.252897226 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369993243 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.254660884 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.252921066 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.256928431 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.251380164 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.255040469 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.2560364 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.256351238 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.252975698 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.254734222 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.276207396 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.255557481 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.255851851 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.257285831 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.255961917 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.306406707 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.256638904 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.254015908 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.254264007 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.31035736 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.261868005 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.25633445 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.254556433 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.256752221 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.254773844 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.406841598 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.315227328 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.256240034 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.303576745 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.257257472 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.257964513 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.256615507 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.257301413 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.31104957 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.257208814 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.303726937 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.255136917 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.410852063 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.278716168 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.261315403 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.26098974 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.259203122 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.258214155 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.25620489 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.262730323 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.255982378 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.258684129 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.263113905 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.256379758 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.256944126 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359976164 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367521952 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.256067726 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.270086801 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.26567779 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.257188864 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.310436755 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.259793673 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.255926871 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.310315612 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.373550004 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.312372535 seconds)
  done (took 145.610858539 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.262972505 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.266655915 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.259504932 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.274553129 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.259604494 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.25634583 seconds)
  done (took 8.766626111 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.260652178 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.258871796 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.260003117 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.26012035 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.25929175 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.261712232 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.25967556 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.260862532 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.263040009 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.259692821 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.261011971 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.263114794 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.261462012 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.260733511 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.259601104 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.260128921 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.261119717 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.257105032 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.259247656 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.260348208 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.363547996 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.260375215 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.261623908 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.261654481 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.265217941 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.260663467 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.268886501 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.260418745 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.260496969 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.267403823 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.263238828 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.261721153 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.261246414 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.264664342 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.264497868 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.261309561 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.264673621 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.263871449 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.25884881 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.261955307 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.262747967 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.26062593 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.262401988 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.2635521 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.26147584 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.265775049 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.267035249 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.268665151 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.262516569 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.264316425 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.264284074 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.261648178 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.262880995 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.264632397 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.263859027 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.264162577 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.268789014 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.262192374 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.262207497 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.262723989 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.261935586 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.263945746 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.263919766 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.2641568 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.260970298 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.267076227 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.26386738 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.265924609 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263683752 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.26206583 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.266504722 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.261285629 seconds)
  done (took 93.196241214 seconds)
done (took 402.048755742 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.580571713 seconds)
  done (took 7.772122721 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.290960962 seconds)
  done (took 7.483501406 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.233150578 seconds)
  done (took 21.433045286 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.300348209 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.346095526 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.260851602 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.258266489 seconds)
  done (took 26.356763346 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.568421635 seconds)
  done (took 7.75941915 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.254805056 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.261167179 seconds)
  done (took 13.708387471 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.639531386 seconds)
  done (took 7.83000808 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.906897556 seconds)
  done (took 8.10452798 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.262007601 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.273931041 seconds)
  done (took 13.980534326 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.241888792 seconds)
  done (took 7.434357607 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.064221345 seconds)
  done (took 8.256605037 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.262937866 seconds)
  done (took 7.455387035 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.330527332 seconds)
  done (took 7.522490183 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.054773492 seconds)
  done (took 9.247482796 seconds)
done (took 155.534654172 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.256233898 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.26178423 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.261957851 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.26174245 seconds)
  done (took 26.234569233 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.297676728 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.297858182 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.722663702 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.307536366 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.301375391 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.296179 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.29019839 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.290752527 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.308695294 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.300423258 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.299092029 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.298801327 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.299483178 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.291855426 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.301160617 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.300529316 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.308774428 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.300118475 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.29137124 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.300187623 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.265330236 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.309855761 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.305679323 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.265744655 seconds)
  done (took 32.745347707 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.4665648 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.334250634 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.419439059 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.316901345 seconds)
  done (took 6.730753609 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.317072218 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.317808568 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.329921144 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.36908372 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.398328935 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.32815831 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.292325425 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.287749345 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.273387337 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.319910215 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.394159876 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.33415297 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.404610769 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.266367524 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.462082124 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.265803454 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.266363748 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.318243198 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.369401223 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.383400745 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.265434414 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.317690025 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.321376549 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.336080921 seconds)
  done (took 33.13426109 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.265921324 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.273773515 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.271520108 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.265785658 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.266126536 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.266101069 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.271999495 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.26805767 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.286836231 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.26640498 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.265408328 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.266540233 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.264148884 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.266810842 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.266047922 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.278975943 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.278732447 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.265609752 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.269855821 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.272326322 seconds)
  done (took 26.592008046 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.261128614 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.183555628 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.610687363 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.515520539 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.260080472 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.264322127 seconds)
  done (took 27.290597465 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.333486009 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.465328909 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.27128332 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.610039174 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.692748009 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.272928421 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.266383685 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.499988558 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.794917086 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.79807508 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.326328609 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.336318622 seconds)
  done (took 18.865169592 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.262403192 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.265498955 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.273010738 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.28276475 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.318148418 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.275862933 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.274262428 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.261644885 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.324935613 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.328061967 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.277096369 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.321527701 seconds)
  done (took 36.66292152 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350107412 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309232506 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.255970541 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990360003 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.985801291 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.474877892 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.261365737 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.685699195 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.268382577 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537210065 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276342891 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358371762 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.51864814 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266133134 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26889798 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.242348031 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491685309 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743605952 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265605043 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.123655649 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293753689 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271778719 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.319151998 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.295821768 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.475089636 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.24185293 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.530310929 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.040690762 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54027243 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280014073 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274393963 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.262794022 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537303834 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918117525 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360731128 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275964747 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.95472702 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.813921273 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.26720697 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.22025564 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.030143518 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.27187322 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276106854 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265270897 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.199488357 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276845576 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693991347 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.272132003 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.975962921 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.264930796 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.276752944 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361490282 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.269113552 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.836017151 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272288348 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.27130497 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.263898117 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271525959 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840434076 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.614733975 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276212814 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.204806977 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.63700551 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.140214106 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886729487 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.368523899 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.270488056 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270746895 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199760775 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.138886174 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287797335 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414492425 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.290551246 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.916480374 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96627618 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.27305397 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.215843805 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810009275 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268244257 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.205011787 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494907767 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042393497 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201288605 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.212935073 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.202542659 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984802711 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27663229 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.659073728 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.274606738 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.686177257 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.280211873 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287441836 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291817837 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.491789277 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.153333996 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268947245 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.073227314 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413243729 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289898608 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689723591 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2054157 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.272866729 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525268434 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.479858249 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268920083 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.247400757 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.467349579 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278003591 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.287808969 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.269690033 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.283474732 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.822842375 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284744276 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.620877919 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290209658 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.046197983 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010055619 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274355008 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.375425548 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.270626981 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515383032 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.040728305 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.429119538 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336389615 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271540108 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268620482 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.257775913 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123165426 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.169849257 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.271492818 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268333395 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.285225027 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.271036395 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218618134 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.274271021 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283996397 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.053814649 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.492566611 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269310402 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562833748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203421816 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417565156 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279334537 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.493650094 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.442683251 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.273041022 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529545732 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281837269 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276366203 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28606601 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289839901 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36809369 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292656081 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.269920137 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.54954279 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.274394883 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.276269006 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.309846235 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.05414686 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273351371 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.278747601 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.099724179 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851739228 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25347857 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.279798657 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.160196451 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.285417957 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339533919 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.276892424 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.282328648 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.059958863 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.087228895 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.279009888 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.277914833 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499857845 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281217782 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.248646069 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357294427 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.462475211 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.857149329 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292029008 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.206525135 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.984481669 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.966338351 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272769181 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.460696949 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272587668 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282739615 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283594183 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.792171011 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.833137047 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280123484 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.177109875 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.28346739 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283349061 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.279337196 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272694729 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.018677822 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.645652766 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279704392 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.29574467 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421313415 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.288607002 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.20857858 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.788844487 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.278809338 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.273570513 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.048128486 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309216357 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.161923049 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746663648 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533477824 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.957624719 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290549456 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.275916877 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.309479611 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.280091438 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.111638828 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300527572 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.300172621 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288278711 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.285840246 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.248582629 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.716732464 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843958365 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969651331 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814339105 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198969084 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.287612797 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.16283442 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.702202637 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210209895 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.931692939 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.459017382 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.712154822 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219654184 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471815475 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.452738475 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028115382 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286154469 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.50295063 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186731169 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.12836065 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305717024 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.486649736 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310668319 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.283020258 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.207670658 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.561066129 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500440048 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.088487874 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36218774 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699395126 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.116619873 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.07363842 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.273867572 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.634756574 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443758883 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.821152178 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.663805371 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275456231 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293627657 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746932492 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285902525 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.802012473 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882462858 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.28306257 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.475066476 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21240439 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.286714078 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.287743579 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.2805162 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.533895021 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.29035549 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.537469028 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28819409 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21151372 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277495273 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790716275 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.139549363 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.28313196 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277692721 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041151493 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284849407 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561608324 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.295351754 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.014706189 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286998257 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.213137278 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212736209 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.971998031 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280672639 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257089218 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780460658 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.632700452 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.278925467 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298156019 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128663732 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53414832 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.291638753 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.852936565 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50928116 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.076037804 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305368605 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.380025153 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.164910911 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.284409867 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.160153094 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.513994057 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.108689936 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.503725426 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.283404882 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.186008666 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.277494103 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.495967076 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.171588975 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.281042259 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523197573 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.996239014 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.283565185 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973942938 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309914723 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.283783411 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294923703 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.651998042 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.289683503 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350839133 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289847765 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.290078013 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.292771799 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446342778 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280370729 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286982715 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.294242296 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374970128 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.668493216 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.023676801 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.059376094 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864474615 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016665237 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.851419918 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298195295 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280497921 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280721302 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215276985 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429611293 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.806199394 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555380073 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409461653 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.731007405 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303437533 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.175403728 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31284096 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498816931 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557409937 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.151982174 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280740507 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.945640278 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.440455779 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2921543 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.49325229 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785832381 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851615195 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395641914 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281778391 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.726971735 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556738665 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372734192 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282748147 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.871677858 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.289817848 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.647861061 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.287040847 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281350262 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434215203 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.292678503 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942746717 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.293821666 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.441448534 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.057294537 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.301089393 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.543079387 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.750066708 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.294506352 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862697299 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977734701 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551671206 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354121935 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293430289 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.386687612 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429090402 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.285541632 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.175132022 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283693531 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125974742 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.993489234 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.294371647 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852007648 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551551587 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.280022619 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.28801186 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311117339 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.29244537 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.507462129 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999444796 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50728219 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294870521 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.285405271 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.853378158 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851992116 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300917868 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218485076 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.288892957 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521202315 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.526652844 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308703727 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.737286181 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.995993364 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836396725 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.256974124 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307334475 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294066568 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.967841902 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857071072 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.031855805 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781377863 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.942850103 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287845087 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563839967 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.290899211 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288674282 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565373115 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.289399178 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.292304433 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301829989 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.870007584 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042897664 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.310394823 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.232368765 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.226561178 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.512662198 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925452519 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224587332 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286187039 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.465006544 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28727056 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417005126 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298344429 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.292148984 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296558603 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.044898431 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564655231 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.293428933 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.287419665 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.257432737 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.294242122 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312155296 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513557494 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294602633 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.961909718 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.637325096 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.542381561 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.291396476 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.276224323 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.291179439 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288108074 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004656858 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256566823 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.822677442 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85678032 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.298093595 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.303201165 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.291340954 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.50389739 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499646943 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.301611451 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304316764 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287115702 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308557496 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.19219674 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.053998968 seconds)
  done (took 1553.848884292 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.308306774 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.332036554 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.321690509 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.338643388 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.298349021 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.364039451 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.366308207 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.384076035 seconds)
  done (took 51.935510224 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.293255817 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.452471362 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.31789978 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.289789099 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.300966769 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.290413906 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.742776176 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.298422744 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.302041318 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.297266066 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.288200632 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.300090639 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.946191716 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.302694606 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.292026368 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.29159252 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.301005304 seconds)
  done (took 64.534978652 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.288310685 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.795952577 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.392169458 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.293616109 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.208348433 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.302269789 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.033996432 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.297506031 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.290353419 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.494651943 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.946352971 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.294050276 seconds)
  done (took 83.860734733 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.296478755 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.295991032 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.296138829 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.2970194 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.296474837 seconds)
  done (took 7.70469425 seconds)
done (took 1971.332079834 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.692736232 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.967642075 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.923713519 seconds)
  done (took 5.114460313 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.434393344 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.483489495 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.603759902 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.610004722 seconds)
  done (took 7.35196026 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.567641035 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.664388941 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.478727053 seconds)
  done (took 5.929888584 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.659948545 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.306360642 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.427760804 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.288364273 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.290324119 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.291046121 seconds)
  done (took 20.091973846 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.291173442 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.294702339 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.291585948 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.29417795 seconds)
  done (took 6.392288836 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.273602652 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.983117531 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.27459493 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.293278232 seconds)
  done (took 18.046453587 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.036432884 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.050404528 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.03494174 seconds)
  done (took 7.342916707 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.287534322 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.134064225 seconds)
  done (took 9.642365549 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.585905008 seconds)
  done (took 2.808144293 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.423999019 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.617431056 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.329149603 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.255500645 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.332281793 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.01893188 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.885504942 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.471260056 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.253530888 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.399685379 seconds)
  done (took 27.209353045 seconds)
done (took 123.238503969 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.031479389 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.533991167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.494852686 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.04697948 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.519963876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.494377501 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.509878109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.01708504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.56031454 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.508540822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.000525639 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.520789735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.455502107 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.534740915 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.455002149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.658847831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.582850019 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.080403386 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.68752895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.888003856 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.510612668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.644749681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.836480926 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.702019071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.687652948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.44371379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.22397205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.664825478 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.865125702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.305199743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.508024492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.061826369 seconds)
  done (took 190.259352376 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.289082615 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.289428771 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.288637985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.290037951 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.28985225 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.294089146 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.303135533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.300929792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.298643857 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.291079464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.290895093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.314355609 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.28953526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.304335952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.288906764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.290403748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.290906882 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.290193164 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.30578226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.289714076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.291670118 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.289703804 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.289826634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.318183308 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.301869525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.291502789 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.290567627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.290571751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.291142202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.294779596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.291383158 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.290949172 seconds)
  done (took 202.647758522 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.296152643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.291843263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.291167572 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.291336776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.290651058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.293791685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.292525275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.29089342 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.30438372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.297256162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.290544905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.306106979 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.291355541 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.292058609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.305685815 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.29271414 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.291629942 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.296715129 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.293421737 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.291520058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.293234379 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.291555318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.292333937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.316561255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.303295876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.295374168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.29262369 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.292347675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.299239698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.300558815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.297254697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.297374398 seconds)
  done (took 202.690254741 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.486826267 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.299930693 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.300788332 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.236975689 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.305453449 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.300888213 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.297322882 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.497901722 seconds)
  done (took 13.953436354 seconds)
done (took 610.771009369 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.555234434 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.271829962 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.493544948 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.325754733 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.056311752 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.322187284 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.322163128 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.486893823 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.216230288 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.489213624 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.518483485 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.318743508 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.663930546 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.320262693 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.566370309 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.417370397 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.203988756 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.319065522 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.634354783 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.812259476 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.573949733 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.735653877 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.48494889 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.220573567 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.66253982 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.734953758 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.968354735 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.201321906 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.322258454 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.636385982 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.948180262 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.230368955 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.377456583 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.36372278 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.4188207 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.400891708 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.206445877 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.35778 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.499788134 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.501551294 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.825350458 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.042258047 seconds)
  done (took 89.256488131 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.291180397 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.290121339 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.290876196 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.291397278 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.293039127 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.29018038 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.290377748 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.290942058 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.291695671 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.290456879 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.29168168 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.292536339 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.290560898 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.292153721 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.291530193 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.292100934 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.29192174 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.29443915 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.290898061 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.291243175 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.291808549 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.29206454 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.292596249 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.291597146 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.29313382 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.2938276 seconds)
  done (took 34.815521789 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.305282709 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.553502559 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.717429836 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.311666682 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.304876429 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.308449733 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.380049662 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.306621259 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.307793905 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.308340535 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.472371043 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.309087091 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.341131296 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.738699174 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.307427875 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.306699634 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.305055523 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.304974998 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.559200867 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.314066509 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.38362169 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.30687356 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.380509423 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.315382914 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.307440706 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.306479688 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.310603134 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.831259487 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.306174794 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.473179614 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.075724644 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.38212884 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.817482889 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.725899315 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.076242504 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.312660852 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.308104436 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.476776663 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.309781365 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.306681351 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.381608565 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.306317918 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.72351784 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.940561606 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.326074063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.307025129 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.851613246 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.476497345 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.546636681 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.315416958 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.746602086 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.313230222 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.31050609 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.307529861 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.546161975 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.313831282 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.306988408 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.881861668 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.326890442 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.382499057 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.309085336 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.307571113 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.568054101 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.307886208 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.557223605 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.310012671 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.316954193 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.309647654 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.729441326 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.310494672 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.954582057 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.323948265 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.308710541 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.474299616 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.558343351 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.880810746 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.312418891 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.572398557 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.833366471 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.382490994 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.313068472 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.822862252 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.386174997 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.314044916 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.312421659 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.313246467 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.309262336 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.364221214 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.381348261 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.879639665 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.954640466 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.895983884 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.400308605 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.316548133 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.309480819 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.880638439 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.325112984 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.310114178 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.719433392 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.959444701 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.326420111 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.317905137 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.940499274 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.327646671 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.386466694 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.315986516 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.736895375 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.311282849 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.356661856 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.311600971 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.318480228 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.313844133 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.385911576 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.313339199 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.310647825 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.927574452 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.497830129 seconds)
  done (took 172.818314877 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.302962678 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.304781396 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.304841143 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.303562364 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.30408462 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.310141624 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.303826442 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.304891829 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.30977003 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.305059734 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.304920647 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.304541964 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.306802699 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.309091041 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.312924609 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.311899925 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.91471086 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.304929211 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.307132448 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.317328544 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.09602862 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.309799001 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.303857352 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.320445256 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.305118285 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.307089736 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.313985588 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.308225998 seconds)
  done (took 151.25010166 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.313676429 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.858912886 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.314522072 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.44035918 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.332317264 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.310296746 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.438191225 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.366808983 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.313895048 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.311896608 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.309866853 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.609436262 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.320826572 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.810658044 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.496967872 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.439158132 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.808898157 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.314731811 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.311426848 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.312168095 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.441994633 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.320065496 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.609008926 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.87151078 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.318206987 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.869589398 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.307711686 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.314424588 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.312144907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.871248624 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.317178436 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.610738731 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.388933502 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.369310629 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.872297274 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.822125618 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.821866764 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.459860449 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.312276278 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.31285334 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.312038532 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.303234983 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.866294067 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.316105251 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.313928794 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.85779014 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.330750344 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.315748492 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.323616251 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.312887296 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.372022803 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.372869284 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.612091607 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.870793911 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.388118264 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.334489343 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.440929152 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.70804421 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.316804681 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.821051741 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.308183333 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.869171672 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.318661122 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.306141135 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.31492834 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.31938621 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.461295119 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.44238329 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.822016947 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.320349911 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.822883268 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.466575908 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.314990205 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.314755241 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.317696692 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.869442964 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.824242132 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.466266797 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.446024849 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.502592598 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.305741383 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.314835726 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.3051471 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.38912388 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.314753359 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.869321526 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.823395321 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.322166056 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.317946206 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.317859552 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.317872498 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.487046673 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.876795231 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.392209399 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.817958631 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.632951432 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.616709815 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.324019388 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.373703635 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.315883222 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.614366202 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.318604166 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.371723364 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.774682546 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.61446317 seconds)
  done (took 156.946767375 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.553553304 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.487499757 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.404734477 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.427030646 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.887020859 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.876976205 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.59303033 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.437658174 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.421704294 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.552224714 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.441363825 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.404941744 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.481045682 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.401911046 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.044615191 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.382793409 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.40494381 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.436973854 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.408717992 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.310706709 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.918250646 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.611234369 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.490302346 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.234100349 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.40687317 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.062913514 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.858880255 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.891570008 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.492055027 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.591482547 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.860129899 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.390219051 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.236760342 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.960234564 seconds)
  done (took 63.608382855 seconds)
done (took 669.92067148 seconds)
SAVING RESULT...
DONE!
