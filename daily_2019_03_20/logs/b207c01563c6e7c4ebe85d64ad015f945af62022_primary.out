cset: moving following pidspec: 27853
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.32472421 seconds)
loading group "string"... done (took 0.586357164 seconds)
loading group "linalg"... done (took 7.286627526 seconds)
loading group "parallel"... done (took 0.16643631 seconds)
loading group "find"... done (took 1.162341912 seconds)
loading group "tuple"... done (took 2.037985226 seconds)
loading group "dates"... done (took 1.28261954 seconds)
loading group "micro"... done (took 0.238653526 seconds)
loading group "io"... done (took 0.998137223 seconds)
loading group "scalar"... done (took 39.656550626 seconds)
loading group "sparse"... done (took 13.011196155 seconds)
loading group "broadcast"... done (took 0.999680139 seconds)
loading group "union"... done (took 13.7290183 seconds)
loading group "simd"... done (took 4.657036133 seconds)
loading group "random"... done (took 9.392816161 seconds)
loading group "problem"... done (took 1.996282251 seconds)
loading group "array"... done (took 22.394541661 seconds)
loading group "misc"... done (took 2.006915279 seconds)
loading group "sort"... done (took 3.406611017 seconds)
loading group "collection"... done (took 19.155639354 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.560168374 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144907998 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120280574 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142452792 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186865737 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13391263 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144755424 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086777438 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.903485012 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167354036 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141019014 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518144334 seconds)
done (took 4.998276541 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.239067111 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0928358 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098249522 seconds)
  done (took 0.888978868 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067063372 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13245146 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08151913 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068586307 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067500405 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081983762 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068305873 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066724598 seconds)
  done (took 1.265492368 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076382513 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070490566 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085429848 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069355642 seconds)
  done (took 0.999477772 seconds)
done (took 4.164738265 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.933621419 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.263839567 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192294261 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465931449 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.15252538 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189191756 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.717245839 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.339900347 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.215284462 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102784667 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106494428 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389784826 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108269478 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.70580364 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077156654 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107875337 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.165263817 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.458584062 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081962201 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084079644 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103939655 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144287496 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102630243 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079365417 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169368379 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070584094 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154203772 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096152814 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068742427 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.248615299 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190746782 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.734946339 seconds)
  done (took 10.763607688 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102903728 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120151801 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07022927 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142076707 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120149247 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072624068 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073413081 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084304648 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094246426 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162834307 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118604048 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124727165 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067193541 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071165201 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102872857 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229698977 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.09297546 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102116145 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073335465 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076394756 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124607464 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098663502 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083288973 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095043599 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152709143 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194999868 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101259927 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113420204 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070002879 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098645987 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.1309194 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129734921 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069087169 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083903108 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158517216 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097487181 seconds)
  done (took 4.615392072 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.115908672 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.177728308 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.0932125 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15690514 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086612532 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130681159 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068197317 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102770171 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255132614 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.103980229 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.500694073 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131010938 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089551556 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06864846 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08795863 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068625051 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.64425027 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14739493 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107206643 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104213921 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076822643 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087711821 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.719206883 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072087675 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067941041 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086137374 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060975879 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150515112 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069937025 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.290714442 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110183652 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070356191 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12137793 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178581068 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098808152 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125827044 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083716613 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068436048 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17508189 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074777006 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100137058 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.111664126 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068286191 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109670516 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12245856 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107365308 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086205253 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069581685 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185288819 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068633881 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101456733 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.959119418 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16848118 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080025842 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068026674 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297717729 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103778665 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070443554 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065886774 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272067928 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.168362407 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069412412 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085369567 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068684773 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086346215 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.720084255 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071407551 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.211434052 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073074964 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078226644 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087503598 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069441774 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090662672 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075060736 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103460507 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066882813 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067204901 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08759387 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068593548 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083372955 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071149096 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102762369 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.211378442 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072053742 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084574356 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067357328 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088583017 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11481126 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087359632 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069099712 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116088242 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070862134 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069142858 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122360814 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069695907 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082588858 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087675627 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087348188 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130536705 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069705293 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145151849 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069501977 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11481927 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07409593 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117257919 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097773261 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074834079 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159208414 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067162531 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083671238 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069297736 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083177059 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069972401 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070052241 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10054263 seconds)
  done (took 22.715634272 seconds)
done (took 39.907242404 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.311704868 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09420015 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094038042 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077136271 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094734769 seconds)
  done (took 1.451191252 seconds)
done (took 2.197496524 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151116023 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104011656 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082099814 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099741685 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081578917 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103753761 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117082057 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083201894 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119227137 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066240737 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115328747 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065452203 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081213508 seconds)
  done (took 2.048665501 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085917294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086472897 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086573348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083793628 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079841926 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083197461 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082050925 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105946787 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08165266 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088914908 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065221391 seconds)
  done (took 1.669320335 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08467857 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085050468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086968154 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08259633 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079903152 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082080875 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081007674 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103094859 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081343411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089439282 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066569148 seconds)
  done (took 1.665267025 seconds)
done (took 6.12104123 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08225877 seconds)
  done (took 0.818744596 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.74406045 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.085405332 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.087306696 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139054975 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.225613449 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160735267 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467530952 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.116953794 seconds)
  done (took 10.976548859 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.104062688 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086481008 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071343058 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10182461 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073933361 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086877531 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073878133 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073128022 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086542828 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071960499 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08587021 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07403628 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08838156 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073344758 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085883221 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074403326 seconds)
  done (took 2.123164301 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.107045359 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105108698 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092610407 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078288374 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090924629 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075214207 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092778447 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0769984 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088697414 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075908597 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09275969 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076308109 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089658875 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067521505 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091849116 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079294506 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088796513 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076564398 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093207532 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078622195 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092364931 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067700142 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089577749 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076877401 seconds)
  done (took 2.902614792 seconds)
done (took 17.562943765 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.137358602 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079121197 seconds)
  done (took 0.961255842 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086347496 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100614755 seconds)
  done (took 0.936099779 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087433004 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082611142 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092078552 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09473438 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084289459 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068227245 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104754226 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069243315 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08336568 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068179385 seconds)
  done (took 1.584174348 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072764113 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096004374 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072170844 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099445647 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076657243 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081738495 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076566382 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08572465 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080762883 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080088397 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073582896 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100925223 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07368473 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102351093 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09162672 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070583482 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088923348 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070098237 seconds)
  done (took 2.24573029 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069790003 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069420342 seconds)
  done (took 0.891039447 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070738451 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065886025 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084780977 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067954287 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080770238 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064922278 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080357472 seconds)
  done (took 1.267310875 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.417922571 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111686254 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268354216 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073412851 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106486272 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298842423 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067902582 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073138446 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090087775 seconds)
  done (took 2.300647367 seconds)
done (took 10.935700801 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083636247 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087815914 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112832576 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.43969672 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107824297 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068531272 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14560444 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.215025463 seconds)
done (took 2.014474405 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.131342217 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638266104 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.416902415 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.217602612 seconds)
  done (took 2.029514909 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.392443214 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092915411 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075058151 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068319733 seconds)
  done (took 1.390332126 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069531932 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071520298 seconds)
  done (took 0.901919467 seconds)
done (took 5.212158259 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070479648 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.115721322 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067852816 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068344493 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.083662802 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068144966 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065131314 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083182256 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069260361 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085286053 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066720067 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068073365 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.08389437 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068363191 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065566447 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081494882 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069002855 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068213623 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081141562 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066265743 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081584622 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067905515 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066025954 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081231326 seconds)
  done (took 2.589127723 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.090395598 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085288823 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075134365 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090479187 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073120257 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090066653 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074321486 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072279661 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089539145 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07014456 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087608996 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073078331 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086404825 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073593311 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086000413 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073301336 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089634968 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069616878 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070287315 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088593983 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073783083 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08521055 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072873666 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089051511 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072689045 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087560711 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071662247 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084962398 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074608058 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087994062 seconds)
  done (took 3.171088091 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074194533 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065630976 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08243052 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073763962 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065494918 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083951278 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066384135 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082362783 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0671709 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065619954 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083261042 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066313787 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065984339 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082744263 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066551452 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084901938 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083878167 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065800722 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081885965 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066557308 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085488231 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065781311 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066769773 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081922435 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066079139 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065364942 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082700247 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065973521 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082128615 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066157357 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068993605 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085698753 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065201913 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072997554 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08538744 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065505795 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069207522 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081636377 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066693015 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081559686 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066037398 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066030292 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081732189 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072893785 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066074619 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084090016 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066583799 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083146055 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067255704 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069242527 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082146792 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065673037 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084136292 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066828963 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070199697 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081088231 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067086403 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065533453 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082415137 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065673683 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081682046 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065934016 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06821181 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082137677 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081866091 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088821542 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065949381 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068438177 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08293365 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069069314 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068464803 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096264715 seconds)
  done (took 6.083812823 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.123292231 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095007751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08546017 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068022215 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080750686 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066584288 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070658689 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081333598 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068235155 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087780421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06681838 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083979662 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06804388 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082097559 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082645939 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068232404 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087718313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064574307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066403036 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085660625 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067136084 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085165844 seconds)
  done (took 2.504877566 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.193953973 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089752453 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113095089 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093039988 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087080031 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075992563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089218774 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071931651 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072543904 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086988377 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071658807 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088774541 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070083572 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085946268 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071023474 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08744509 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072383029 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086721324 seconds)
  done (took 2.376284543 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082108443 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069645052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107896697 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068101543 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085745951 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071840131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090694183 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077783755 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08673682 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069725998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094014831 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071541362 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.200208867 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069497034 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070989992 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084427776 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07188025 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084639103 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077961983 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089987769 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074798296 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092800656 seconds)
  done (took 2.66315925 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084941748 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070496749 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103111974 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088034846 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064075532 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067212185 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091381212 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069261685 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091153024 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069704422 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085251558 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067814521 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073544815 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083974952 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073829137 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084850466 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071062491 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085324342 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070873973 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064724813 seconds)
  done (took 2.331965124 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091602963 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086232521 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070397525 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09458624 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070318895 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086228767 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07900368 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086201811 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070268126 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111657684 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07055385 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086525805 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078841768 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091536489 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070443693 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094194033 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078229067 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09542297 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086040293 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069573036 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11135751 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070503448 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094249685 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069719415 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085809145 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069791964 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086605502 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075989956 seconds)
  done (took 3.107920461 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071055453 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06942525 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082711307 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067005596 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066159524 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082329414 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065739094 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065547917 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085257132 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066755632 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084954024 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068503884 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068365882 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.0850623 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068349429 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068818431 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085436437 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066999514 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06608683 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082928187 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068085551 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084912326 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068980109 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066303171 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082862819 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068690387 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066536163 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082569209 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068461035 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066038364 seconds)
  done (took 2.969170197 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080379431 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093235916 seconds)
  done (took 0.951959637 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06758146 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083868682 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082190068 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073048662 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089283267 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069857334 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093630689 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07382671 seconds)
  done (took 1.408500621 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086640065 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080646095 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087149576 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097475084 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080759877 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086122639 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160139808 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086734212 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075999313 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084498922 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083738771 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067772452 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092547498 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069001623 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091539226 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075685564 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082941688 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075303635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07164264 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083846657 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070288224 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096793394 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072109292 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082549342 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070655054 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07850471 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09748395 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.07041035 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089086176 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077102922 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091495811 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063582511 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069122978 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085950084 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067560951 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095543792 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085423089 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088920717 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078791699 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086634475 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079073882 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080854488 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073978689 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075028538 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09605626 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069743884 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086636212 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.0641361 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083252315 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072052454 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064166231 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085560357 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063752527 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092655103 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073052413 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079694289 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08501804 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070769763 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088718742 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073294044 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092776955 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07212646 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071703382 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084740909 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07685844 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089473614 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078673122 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.08092833 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063905233 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067936284 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09570943 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092774608 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092028983 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07040433 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086566328 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067425608 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07325454 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08707375 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074752435 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092477282 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070121664 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091793542 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07768706 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086782337 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071617717 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076463281 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084009584 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071594687 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083607592 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085809582 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084667726 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067449402 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06638358 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096459295 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072558692 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085630322 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0674986 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092960846 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063229307 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069658409 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086734934 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069993406 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097292323 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074610844 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091502301 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078845622 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094351874 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069466783 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072217065 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082782152 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069867534 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084880188 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077817096 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062524754 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08871267 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070177884 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086432238 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079313381 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084403868 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069338218 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077373076 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091400646 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06814989 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082628624 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072793503 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086030322 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072099863 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077726919 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.084201115 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065225675 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081269575 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07293015 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069260713 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08887304 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074648032 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089690176 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064510476 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083388468 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073713957 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095299654 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069154776 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070423935 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092113446 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071243794 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085367853 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076232337 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071726661 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085272054 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075293166 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087076835 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065037209 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08940623 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071460508 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068651837 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089570185 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073083959 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088625503 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069906803 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067527213 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091522153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070985299 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085773118 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069129947 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084547235 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079946891 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07196662 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08101429 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066539866 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093301523 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067703869 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08490374 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068507228 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072170366 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087079412 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067467554 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084940891 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071836321 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081279103 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091394542 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070341652 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091870156 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081247013 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086358966 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072126602 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085448494 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0696003 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070531874 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0958309 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07490607 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090784029 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072467008 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082831407 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074921802 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07667636 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086255921 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067794533 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085265798 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07325819 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092054904 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072935045 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069832324 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084621595 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070746267 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089313491 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072299821 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068603348 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085579683 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07459956 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085883479 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076089945 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08812212 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079808382 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089637318 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06470314 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071818775 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08520008 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075932215 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081606302 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067070508 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067973162 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087678888 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068570208 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088981741 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063683995 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076054708 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094521088 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070089886 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085499699 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070425581 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092468495 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071046632 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07321759 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090083396 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075826231 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097026383 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069073456 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089780963 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080014256 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068497259 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080698038 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074768081 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085087943 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069156725 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067765774 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085173028 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072553232 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095067434 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076350101 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080888424 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072536712 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067338016 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085216241 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065399078 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091179998 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073265924 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069383639 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092761869 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070792761 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087075036 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073660665 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08614938 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070736806 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070551138 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089242654 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070489857 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089305316 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06910377 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089765164 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067990044 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067695615 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088287482 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07050823 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069443944 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093029791 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069286219 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086751098 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072106315 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086878965 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070393122 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069518443 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086256334 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073078915 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087015943 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069492403 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07226901 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081630399 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077607318 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085947549 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078340809 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06911007 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083249418 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075061563 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089374566 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074327721 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086608051 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070125264 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070733908 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086558136 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072278465 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093804322 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068032732 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097362564 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078115611 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086894256 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072804782 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069900625 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088752379 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069088264 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086762708 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070568449 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069336519 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086712159 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074587436 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089733476 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070216981 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071101309 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087300704 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070371994 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087758645 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064509436 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0688942 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086665864 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069594363 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096886905 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07067684 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086322977 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068630402 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070383325 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085477906 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06648939 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095303449 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078660935 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087325718 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076926589 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068680782 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088754183 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080610327 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083842835 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067858648 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084838299 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067128168 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077798577 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088297457 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079884093 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086720395 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068715905 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066200337 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087202535 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068623604 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081630241 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066757845 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072872711 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085496414 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068481543 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086802656 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07308702 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070063786 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097315322 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06897915 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087568084 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069828487 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083464924 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068771756 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068355603 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090163571 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070329397 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084190319 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066629562 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069490094 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087685853 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071252682 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06846228 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088735431 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076513026 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08639784 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073218536 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090066992 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064755484 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072721333 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08659286 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068840942 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085719701 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073570831 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073035096 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088376483 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079113718 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086847406 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070285338 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087772361 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068394926 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069306274 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087197029 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070286982 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086162749 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070397179 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078132182 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085070317 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072784229 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086522581 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070148177 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094009995 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070211929 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072255198 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095298306 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069910639 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088935362 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078375679 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090370382 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073391077 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087187064 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070723112 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075505524 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086228806 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076127084 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087398875 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070202307 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070832871 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085131526 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06936934 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086628939 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0688614 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075818296 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088550646 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069473232 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085823622 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067261237 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070168347 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091003774 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078214193 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089610009 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072885642 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082573364 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067113823 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070443221 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084659019 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071187201 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090910306 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075749355 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071559462 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087510139 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069032854 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096433783 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077084583 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090308313 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068188492 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073506582 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08892971 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072787494 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08796353 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070561062 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070370922 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091366254 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070862203 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086559962 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076465407 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090221209 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070623644 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071319511 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088542137 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07092138 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081901174 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070776616 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071473511 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092782654 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072440333 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087553549 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081249684 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067623895 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08780426 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072669492 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086635493 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074436279 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082335511 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071790466 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070567043 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088464065 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065419174 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086690548 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068091076 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072173277 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086965862 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064798134 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098545582 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079447354 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090267688 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068834235 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068562589 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083033891 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065759986 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085768318 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071264801 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070999678 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097874238 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069538706 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085774838 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065664182 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06970911 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089804917 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073544514 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08439006 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065217436 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068812687 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090998216 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075665758 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085759803 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070179944 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072815033 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089595111 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067988578 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090694405 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066834094 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090983267 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083566944 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08774143 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070849022 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076178054 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095446002 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070906669 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083105233 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07021225 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072355645 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088364145 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071189305 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088611888 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085221503 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091534885 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069723805 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086569818 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071689854 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070092935 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095773362 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071268568 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088772995 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074725361 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071156516 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096942495 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072256734 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095458242 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073295509 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090362357 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069231288 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087876309 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068068048 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068037573 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088659519 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07041583 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093104676 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077858223 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086645386 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081103641 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097088045 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071653169 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066839647 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086842169 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070011195 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064399301 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088972078 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068781973 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086482855 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06801083 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068535606 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088870221 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075450523 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088775597 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070874209 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086692711 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064349378 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072481143 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089233004 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071872637 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065888945 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088057562 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070877224 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091311303 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072752336 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085349271 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071530046 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071697818 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088625905 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065149787 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09456885 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06909846 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072566327 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087097766 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07048405 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089016705 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073328422 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074896947 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08979583 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07220667 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097221237 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072307314 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084727134 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066714936 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075465599 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085358056 seconds)
  done (took 47.812033155 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114094902 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086421459 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065542226 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082955785 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07732475 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085090878 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065649411 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065614681 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084524824 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068897114 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083221053 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065400565 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091567007 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089602847 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095825605 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088353603 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06509363 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066294754 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08288448 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066823423 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092847657 seconds)
  done (took 2.504534717 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.092284682 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.106035232 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08119996 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102194268 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093483504 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080868679 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099052118 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080467363 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101316478 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094449425 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083999861 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098204143 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076649564 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094768704 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077376363 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096822022 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101478848 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07600865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.099879037 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081936427 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096573944 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080427907 seconds)
  done (took 2.814701365 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071631758 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069048602 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089725966 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064738635 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068369371 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082544181 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072971412 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085291514 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07327714 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067814117 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086391151 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068998597 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088726362 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.076668832 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068437715 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084818977 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137350928 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073335097 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087505974 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070142093 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064554167 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089903113 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065176443 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083391245 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068444968 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07235166 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088216774 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067975515 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087348042 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068250313 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068824002 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084855558 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071660842 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069336801 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086195568 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068916525 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086750061 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069188464 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06509835 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08508829 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070090664 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082680499 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069558487 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070658783 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085624045 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06755637 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069910269 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087979703 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065331625 seconds)
  done (took 4.592851092 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090392926 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143762995 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090331227 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125603695 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084519994 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095888043 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073348248 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125844069 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086764391 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068350924 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105838585 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08450904 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089563409 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073905478 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094353389 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069983531 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088757962 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069141964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091302014 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069178618 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092465299 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076137318 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101919796 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08314286 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091931786 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067679441 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086807939 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074235205 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100594312 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092956569 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073808753 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092780219 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084303978 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.089767148 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069746951 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090092314 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086451077 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088438969 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072555891 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084635279 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071951361 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092113926 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076409285 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105012762 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070290163 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093389178 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070115965 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084307607 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083308638 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090329815 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078540222 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104296525 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072728671 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087943399 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073866383 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103658239 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087928165 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06799751 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072504522 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101093683 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066385617 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092467134 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101855777 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.07202312 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094722787 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084712426 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092760612 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073426658 seconds)
  done (took 6.847000025 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081569911 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096624762 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08422198 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10337532 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094259911 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076381879 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094279695 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076471859 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094051979 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080921002 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094237376 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116975962 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070701859 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097287831 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075256908 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09511409 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075639871 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095057874 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094276667 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076936949 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093714221 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084985618 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094740189 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103171737 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106767412 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090291448 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075405312 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093791358 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103312547 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077263988 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106897112 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075655347 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094655449 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102427731 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087219635 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095265608 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068318968 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094031176 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076354585 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094500487 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070444615 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103353064 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093744027 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071682626 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093861728 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076173559 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101961262 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106110106 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079040278 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099314934 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075404275 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103162489 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094175767 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076309523 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103433984 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128668709 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084875091 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103265096 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095068847 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083869021 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103908439 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.11002409 seconds)
  done (took 6.485376078 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09384423 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09964925 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101017548 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065460175 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067636731 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092892656 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067567906 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085855671 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078291613 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096224278 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080800281 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091772967 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07671811 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09941019 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091562386 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076842524 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09172003 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073741892 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097673649 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073567776 seconds)
  done (took 2.536093807 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080824085 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10849202 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070214272 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096449786 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072979225 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075037188 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091326206 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072203722 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088933456 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072901602 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098857774 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080373056 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08927148 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07730949 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099091695 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076189294 seconds)
  done (took 2.188542995 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084386779 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.102493436 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085952701 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090428082 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067921604 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085500451 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070434323 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064806496 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085249656 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084157237 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089619259 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073170296 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088563295 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068626243 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065775195 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091405641 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065512769 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086239198 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069432548 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103185312 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.081072519 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086989659 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070868051 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.09053583 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069608066 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.0939991 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070691567 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066855034 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087190736 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070139533 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088571757 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078028823 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085830101 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068981375 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087072596 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067119162 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068634819 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088753202 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072405969 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087958767 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068412755 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087071138 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069764256 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070432457 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085365515 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070019395 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084513317 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076306259 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066982622 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08971185 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069203538 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090786604 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071380584 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098498046 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073859493 seconds)
  done (took 5.216685178 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08612005 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074704262 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085971663 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068077185 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092020828 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072171339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072086278 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091390604 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071744547 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086530302 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071650785 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091092583 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071469802 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072375111 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090084759 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073494037 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084949661 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072275902 seconds)
  done (took 2.271627071 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077372451 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071146413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098451341 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070955599 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090338711 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072852532 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065320621 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087658072 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068558762 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088848745 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070168751 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070897519 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087091597 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072100448 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089140542 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070340176 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071352731 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087531419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069892341 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084508185 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07255137 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067585972 seconds)
  done (took 2.54943786 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.077425873 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.097818696 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.169731948 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111593274 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085306541 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103064293 seconds)
  done (took 1.489600444 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097174761 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10498747 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071765817 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111359636 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07810495 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090374751 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071736053 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090098803 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080725352 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10444018 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071977623 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099966134 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098956594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083135969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09670569 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077064274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091134168 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071162869 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089491161 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109954116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072609759 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099125396 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072432637 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090260833 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071087922 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100121141 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09909222 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086587963 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090193461 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079954887 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096835606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071373665 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100025096 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104952815 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073754502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099497539 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07187004 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109553262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096150334 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080781921 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091317751 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078340169 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099742983 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07585636 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100170445 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090528978 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077574547 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09061692 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073423748 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116292593 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096689327 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081278145 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096250607 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08037224 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10040245 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116078184 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1049334 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080746209 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096304706 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105793627 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081132811 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0960902 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080282002 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105745948 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096573715 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080504548 seconds)
  done (took 6.794364855 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088403938 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111678789 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071834409 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105118953 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100717422 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072430959 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090480923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072291154 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091129776 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071357676 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132465596 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071917807 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099594148 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099458933 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072059916 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090163969 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072675467 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100184414 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071377333 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116579459 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090715031 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08060723 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100400039 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099176693 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087056521 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096700189 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071653676 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091406975 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070560549 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091269507 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096682191 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07280202 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099402727 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071779753 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099721644 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071821573 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091035678 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076936672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090721003 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075887231 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100725485 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11041056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071776186 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090996024 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105067043 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072488402 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090964732 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072383032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091116732 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071935463 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104621432 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085062757 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104847563 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099651966 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07188304 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091069262 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071765212 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091469724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07207202 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096489828 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098847674 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071677997 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116624338 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071543485 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090896967 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099358084 seconds)
  done (took 6.696700087 seconds)
done (took 131.717114035 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.222038731 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.245278049 seconds)
  done (took 1.311103865 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073676747 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.120407218 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081894056 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.161361733 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089518144 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.115577937 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129439259 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082852956 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.0695958 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089599804 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070179074 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090723136 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172968891 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069365574 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090592323 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072867378 seconds)
  done (took 2.436960089 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.109028058 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.203111377 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113727332 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06852654 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102151534 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081514371 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088161477 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081856711 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094736208 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069166724 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101159815 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080300873 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067549659 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099159195 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095188471 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081818822 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067671349 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101209674 seconds)
  done (took 2.561673486 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112210018 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156644773 seconds)
  done (took 1.121250137 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.212585944 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125004477 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.212838304 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.443998065 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.231763447 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283589502 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178854577 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.179542035 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156195839 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.173710132 seconds)
  done (took 3.050609858 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105572048 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177969418 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324082221 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141969249 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0899237 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119904112 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.143530646 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112831354 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086265063 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105324835 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104921253 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081908661 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121566958 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078767761 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098229968 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081285934 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125634713 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076671923 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099679004 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078371545 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.12190541 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069626577 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.0987807 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077271126 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.101481006 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082022382 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089655512 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069490311 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097455653 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078338836 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101170817 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.119175582 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082077106 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135458975 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104764681 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136642289 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079785713 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0956059 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.0772431 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096667808 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080296659 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100121898 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106564603 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081107203 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068114926 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10035283 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068557655 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08843328 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083752292 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099862329 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082630529 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102460489 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135030209 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100339214 seconds)
  done (took 6.419351851 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.78024463 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137828144 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074772215 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.8360938 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118279296 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086021226 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.762194428 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097281887 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238026678 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769302445 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115558433 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080612941 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212383029 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220440095 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937649019 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.295820833 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.652394282 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108466255 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11355215 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137616001 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.168651785 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163327263 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153316306 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.410535163 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09974707 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074927986 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143495103 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102469141 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145089386 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086100065 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099463963 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161847379 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.233763091 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186885834 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077688753 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094526688 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073422567 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.153490297 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251327692 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197463649 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162744498 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07160972 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072110433 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.166590333 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136566725 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071588044 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.147026965 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.158133662 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174964705 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077077209 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079989473 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.169733654 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.147381129 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148838639 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104270545 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282175797 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.294599553 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094418571 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125932158 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087903522 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246360291 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085648924 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211675522 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146592277 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19690657 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073672855 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76130876 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.155829533 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072715779 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100274485 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125613131 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077596884 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144198359 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149672552 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.375194534 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147732061 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099213718 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073286802 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215136879 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08769231 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094104206 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146069899 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077849943 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127586849 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150164268 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.173120871 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153827989 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.219916097 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.150028412 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.167203465 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077983437 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130294775 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098183921 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19659907 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.179035433 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.167600531 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194534911 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.147355782 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.148449751 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.153130146 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102245462 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.158456351 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124888662 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106878677 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14699524 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.179961854 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.12797517 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107555065 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076467547 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.166966015 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.131357244 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090153795 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.144593295 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.178470161 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.439626585 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.152740155 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069029151 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111498991 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145164815 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146368625 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100838102 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.219013118 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128035153 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175525975 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127028813 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071470354 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125957972 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.148154709 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103779624 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128181954 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148453517 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080162698 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.222671408 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205083734 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107125648 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206682972 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.169915175 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0796241 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178476705 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126031479 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.154039517 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08189144 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143643917 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100306576 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780324749 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.149503553 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12783119 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077612335 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170852897 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072378643 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107882854 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106533136 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071904018 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75813377 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089160243 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105236492 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085290429 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100327388 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127293338 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142819644 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077484322 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167657626 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.189389852 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101892185 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125408005 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085352114 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.167232248 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.079584538 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108521104 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087377069 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109141848 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128263449 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075460406 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109385505 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15395372 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.148097295 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.202718683 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.548626823 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095414779 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085508764 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214462276 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094121563 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.251154444 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143076215 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.209652087 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147374956 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105334608 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290727304 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.149351309 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170661953 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089180457 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157828721 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093160696 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144461716 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.151307002 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094485101 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079005634 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.148835456 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.176250708 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.155602572 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.952792716 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073831411 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210599118 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070073207 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.178282456 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.079267443 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102467405 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.256399113 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095677246 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.154235036 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.148605333 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09844044 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085931091 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701229665 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086607861 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.16727601 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08000616 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20633425 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.148705738 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144686845 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142916703 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102352378 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.149277514 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.196353426 seconds)
  done (took 41.849729377 seconds)
done (took 59.599297055 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.289796627 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198288885 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260558158 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152955681 seconds)
  done (took 1.860413499 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.1553827 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109123102 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12231716 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089248118 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108248497 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089461047 seconds)
  done (took 1.554196374 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.442013196 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.284061705 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245110548 seconds)
  done (took 1.849792549 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307329183 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237262014 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.467937787 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.308993414 seconds)
  done (took 2.31296842 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.1985498 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11862821 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.092719548 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087961283 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166114923 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.269351335 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130791274 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19419235 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08210069 seconds)
  done (took 2.27021847 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.206201942 seconds)
done (took 10.93579803 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119928581 seconds)
    (2/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.138277439 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.239375592 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.289116959 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081120816 seconds)
    (6/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.119130303 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.134701225 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.151300888 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.304762095 seconds)
    (10/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.216939775 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143634845 seconds)
    (12/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.167221776 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095713142 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108470336 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.171069816 seconds)
    (16/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08621747 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.149691999 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.291831937 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.25485809 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082497077 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.121177769 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079868257 seconds)
    (23/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.118372657 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080538247 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069757748 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098051394 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.174700568 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.23145842 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099872728 seconds)
    (30/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098569356 seconds)
    (31/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.208992019 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068812823 seconds)
    (33/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103601882 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134273983 seconds)
    (35/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.221558544 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195625114 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.133517058 seconds)
    (38/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.185301998 seconds)
    (39/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.233557915 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.199901153 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.132672467 seconds)
    (42/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095413013 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077325137 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079431913 seconds)
    (45/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.127870261 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076820097 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.10322588 seconds)
    (48/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.221976863 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.168765364 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.25450287 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.327934156 seconds)
    (52/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.251371082 seconds)
    (53/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.136444407 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095675705 seconds)
    (55/309) benchmarking ("sort", Int8, false)...
    done (took 0.170612636 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.200895367 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116926129 seconds)
    (58/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.279215809 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077003957 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.257718078 seconds)
    (61/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.113334585 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.099011605 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075867452 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171564704 seconds)
    (65/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055803924 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071005964 seconds)
    (67/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.1710954 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.247971452 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.209783091 seconds)
    (70/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065123513 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.271835353 seconds)
    (72/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075958492 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10446781 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056013073 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135009857 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077240764 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114552429 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.272093658 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076984923 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079600511 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095667098 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084558451 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.099270011 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075638952 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.136228717 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.070526981 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.260456603 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172951414 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079712622 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068499437 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091060006 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06909512 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091172465 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072310666 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.136320359 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075166671 seconds)
    (97/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.16496592 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.104699615 seconds)
    (99/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.160219803 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.194446748 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.252915774 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054853424 seconds)
    (103/309) benchmarking ("sort", Float32, false)...
    done (took 0.155459322 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121960341 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096212736 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.188766509 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094185716 seconds)
    (108/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.0924087 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079404451 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082299884 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.143948237 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.099096629 seconds)
    (113/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075228793 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.262411814 seconds)
    (115/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.256519534 seconds)
    (116/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084673359 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.257015176 seconds)
    (118/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080748942 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.175700674 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068229235 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116035625 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126242927 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096003004 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.055013888 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.091021121 seconds)
    (126/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063878186 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071836543 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.163588125 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.0994495 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11736426 seconds)
    (131/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144293417 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072473353 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069882722 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099981398 seconds)
    (135/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112523339 seconds)
    (136/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.075519154 seconds)
    (137/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055191351 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074306511 seconds)
    (139/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101618942 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148768454 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.352940825 seconds)
    (142/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081947181 seconds)
    (143/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.248333828 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053957766 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101400146 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077634143 seconds)
    (147/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092499703 seconds)
    (148/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070514662 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070131108 seconds)
    (150/309) benchmarking ("sort", Float64, false)...
    done (took 0.153740517 seconds)
    (151/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080346979 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091535473 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081396313 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098081415 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10124758 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161754616 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055076245 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123249965 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055591195 seconds)
    (160/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069582837 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100488992 seconds)
    (162/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075411726 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073992633 seconds)
    (164/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.077026577 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.119056631 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.099565703 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089515722 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.11312697 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068484828 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.133044184 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094750865 seconds)
    (172/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09180019 seconds)
    (173/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055153484 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054981231 seconds)
    (175/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.136189736 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.07980137 seconds)
    (177/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098294515 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087165548 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117602734 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.220932789 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.092015046 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054531672 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075912263 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.076359453 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069314953 seconds)
    (186/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10895602 seconds)
    (187/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101765038 seconds)
    (188/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.269192942 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056437785 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11721633 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054568421 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200330248 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071713509 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076526176 seconds)
    (195/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.077647382 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.224508688 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16911365 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115801007 seconds)
    (199/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07129862 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078498933 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.13259827 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055491201 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055101867 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.1078131 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07063262 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078419804 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153344929 seconds)
    (208/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079678874 seconds)
    (209/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055177947 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05528131 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091589729 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07562779 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056902251 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.206871423 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055356538 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198544078 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121368193 seconds)
    (218/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070756667 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068813832 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.089535862 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054915046 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078002978 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099135733 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117906279 seconds)
    (225/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092911706 seconds)
    (226/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054684052 seconds)
    (227/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111981978 seconds)
    (228/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.094237024 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068885666 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068888439 seconds)
    (231/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078324151 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070511157 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098377676 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092365204 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055071776 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.077030783 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054545509 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075579527 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096446939 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069153074 seconds)
    (241/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064545948 seconds)
    (242/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.087594069 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055830008 seconds)
    (244/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054288987 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091285852 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068515377 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055044001 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092062173 seconds)
    (249/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054162047 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0691352 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.077530455 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055178722 seconds)
    (253/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075918715 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053536103 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077988192 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144872295 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.163185912 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096348896 seconds)
    (259/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055328318 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054870325 seconds)
    (261/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054405188 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095418422 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153315321 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.078422049 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054470116 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.108021854 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100956071 seconds)
    (268/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.056403599 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079545541 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18332607 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092437975 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07765651 seconds)
    (273/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068875916 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100460509 seconds)
    (275/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075854572 seconds)
    (276/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099011286 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100404786 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068331792 seconds)
    (279/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100316306 seconds)
    (280/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094908448 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.077510453 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056077397 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088943499 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.257197799 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119333517 seconds)
    (286/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056688845 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069232158 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091841773 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076950324 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055184538 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089992511 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091658725 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091785136 seconds)
    (294/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054462211 seconds)
    (295/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073792908 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089688408 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054122007 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068917495 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099652448 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054655134 seconds)
    (301/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075649556 seconds)
    (302/309) benchmarking ("sort", BigInt, false)...
    done (took 0.240535357 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074732518 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055242019 seconds)
    (305/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094515383 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054705872 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074393939 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.115300985 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069339143 seconds)
  done (took 36.25086677 seconds)
done (took 37.135014689 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086370061 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120645857 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078887796 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119416441 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085288148 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104185248 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077196882 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.1055027 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084373086 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108904325 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083006721 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057745133 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101510725 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079134642 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100739607 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096575292 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105063921 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076638395 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100495495 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067698202 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077181036 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091658898 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071009093 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057892873 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103950056 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076183097 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098185242 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078531963 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068230476 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.091695728 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072847605 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099090255 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068884125 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082668347 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098598238 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077348028 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10151062 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080152094 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070338691 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.09090474 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077388568 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090715004 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075900822 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07659635 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097826272 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075107097 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099154957 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084121644 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118564289 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072006621 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077543937 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103455532 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080424195 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098451774 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072781698 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099467069 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073989294 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096436566 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.100611445 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071524076 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099033011 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07821594 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074275351 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.099310199 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077214365 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101414357 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080262553 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097117167 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078452052 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074728365 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091810209 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077902721 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094349906 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069881647 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.0797142 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10259928 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068111057 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074476628 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098405679 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075362119 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.09112042 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070816874 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071242183 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097755234 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07106251 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057605411 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.095126003 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075562528 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068354181 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.10026092 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076233632 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097675999 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070762063 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080228614 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.091223261 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074091284 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091143013 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068908319 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.07069759 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095800434 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068619831 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071069817 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.10071956 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070896654 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096244918 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084241324 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068271514 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098966135 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068611468 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067481233 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108755822 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078580235 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.09212165 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071751477 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.09069408 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07609058 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068461147 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091479237 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069307323 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069379368 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.097548366 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068572205 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071035506 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09865324 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082465612 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093363161 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072763577 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070601507 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.092417821 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074469744 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06918142 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091589719 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071347743 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088776934 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071342223 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069251826 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09934419 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071311919 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077607033 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.09311537 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077919686 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095768789 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075470376 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07394798 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.09051558 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061980559 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071190604 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094101935 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071142782 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091849924 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070672681 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069443311 seconds)
done (took 13.666377168 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071550329 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181770502 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131624165 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100516114 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11639999 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069990941 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104349867 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134459011 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070642123 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133838137 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091571413 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112986375 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14430478 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068516715 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069805196 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095899946 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070409063 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116543997 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108241144 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113406167 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.14669697 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068721523 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125591777 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094328116 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117177415 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.131523223 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069887296 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072525669 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096177622 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120762381 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089841187 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072624153 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.092635872 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105421971 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122122088 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.1124122 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069572327 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111815129 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069090881 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069987584 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120032246 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1289177 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086333056 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109516892 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074004101 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094526802 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071139672 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112333492 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095287915 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.107949357 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116187915 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139201233 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073453243 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110758989 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068324148 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114797487 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.087299153 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094444045 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069874183 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072006801 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091890347 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072719796 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11690565 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.097537467 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09689503 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086438933 seconds)
  done (took 7.506435754 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090566815 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.121109464 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087669666 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112323636 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069524866 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069532831 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092934745 seconds)
  done (took 1.590658754 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07269266 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09435541 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117469422 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093511379 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113245525 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090963053 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103592367 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070674616 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11084333 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071182599 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115950592 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109305641 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095377369 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077158571 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118448059 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070191994 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094849961 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093559154 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073428888 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117450311 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072649517 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113946507 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071960562 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069342056 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109520442 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070002454 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14295838 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074646402 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094995879 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073969504 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067915779 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145321666 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109116365 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080980448 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092888679 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086813679 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.109708486 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068087555 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087902748 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099527955 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085572594 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093848281 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071586159 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069490374 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097952493 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082156256 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094400684 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071930708 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07314553 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115368988 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071975361 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108316703 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070787854 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073401045 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095865128 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076892521 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10362073 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071886652 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090999547 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095606914 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088425598 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111424718 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085522021 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111362556 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073840206 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10883495 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086550836 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072432481 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096034295 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074619025 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110792996 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068849291 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071583079 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105966836 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072223924 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117964845 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09530618 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095243175 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081347685 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070575173 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094258352 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071175727 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118546667 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074152382 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070674128 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098000598 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073811327 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091540681 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069303344 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074065614 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092930641 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072105536 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072921938 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094891466 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073529131 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111766131 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070760151 seconds)
  done (took 9.630418607 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072969973 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07172222 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096066233 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071883241 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071064464 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0953689 seconds)
  done (took 1.437325725 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.104770141 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096921932 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085420985 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100296349 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111303026 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109025841 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086966476 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110559289 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088976025 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10712626 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085738243 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110752661 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09179392 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101263575 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08545864 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099954526 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08676027 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104870859 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083161478 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101065351 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091636973 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100925204 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077594457 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110951328 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075205521 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101258092 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081661082 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107326184 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083927305 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110251484 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078146209 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073110021 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098520371 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.10991985 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087760482 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099339401 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076946425 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074800438 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105748966 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075031354 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110748226 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07815399 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10549135 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075436261 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110882193 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076409337 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099030924 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081164297 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109988766 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075333099 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098181175 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076455323 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098293175 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075051157 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076411328 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110133085 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074751915 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111234879 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076675859 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100634607 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074441899 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098139436 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086066013 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097658294 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084919151 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09824188 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075314243 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101730472 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07790376 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100441471 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074639955 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073468211 seconds)
  done (took 7.59241825 seconds)
done (took 28.698271047 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.67166751 seconds)
  done (took 1.620868266 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.886829017 seconds)
  done (took 1.839788923 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.510060769 seconds)
  done (took 17.472084182 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.661292388 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.844481675 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.850129685 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161153098 seconds)
  done (took 3.470105297 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.918641483 seconds)
  done (took 1.894331078 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.253206731 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259686069 seconds)
  done (took 1.472664874 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.756477561 seconds)
  done (took 1.72017701 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.308291732 seconds)
  done (took 2.269562689 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.354996796 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190146373 seconds)
  done (took 1.515875069 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.539148619 seconds)
  done (took 1.506177379 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.711919921 seconds)
  done (took 7.682633866 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240077319 seconds)
  done (took 1.222899765 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.281039549 seconds)
  done (took 1.249342513 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.454874598 seconds)
  done (took 4.422808171 seconds)
done (took 50.320715453 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083614168 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084762786 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108293556 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082220636 seconds)
  done (took 1.322355298 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083336666 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076367088 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104712672 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07602423 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106413261 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077468808 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102768227 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081673861 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100448328 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07800798 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077153508 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099995888 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079928963 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101884841 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074774765 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078693132 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105059652 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077098754 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104103239 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077117233 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098263337 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079029818 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079428035 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09924725 seconds)
  done (took 3.096138094 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083446044 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077206689 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102519937 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075799099 seconds)
  done (took 1.316090969 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082262277 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120927202 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093948304 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.105083724 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096892441 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115547653 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07301271 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072141919 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.10002194 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080829758 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095699071 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104082674 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.117375178 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080722908 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1074924 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070171296 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071605519 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.116144854 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080447311 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106232672 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073959906 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104593376 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071902725 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119988808 seconds)
  done (took 3.241692877 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082386842 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.131686432 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082940456 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118019484 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09701138 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068658175 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104196588 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095067437 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.155832947 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06878038 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098496654 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06895957 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100298056 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06930516 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08038089 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139550652 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141809717 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072246805 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126575696 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069384886 seconds)
  done (took 2.947826442 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080601956 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073181128 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092990309 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072285699 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079857377 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100770183 seconds)
  done (took 1.484494324 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073017093 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070237136 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094267096 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070496707 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075231443 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095231596 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069736443 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070673686 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094589184 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070887736 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094417548 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069243319 seconds)
  done (took 1.928867957 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.476254355 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072404284 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096269771 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069560204 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074899786 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094682215 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084781489 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07155393 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119872187 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070252929 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095002614 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072304606 seconds)
  done (took 2.382086837 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276354324 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081126299 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.341448655 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17494081 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144382011 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163480783 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108191165 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146236489 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207655269 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144523134 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238957166 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208214785 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140330738 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199415964 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095012325 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.139787972 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220339388 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205921927 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135621163 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236265936 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190576351 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162429646 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215298205 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133780486 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114766488 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177250312 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07702661 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108805474 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245540754 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16991056 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183786991 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143402454 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12530208 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244093736 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229415595 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179167343 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169315878 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115507805 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.163545263 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173342122 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270898037 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119257781 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203365169 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140112427 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111022638 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181573953 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1530626 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153638307 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142763533 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119884924 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182070638 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249312107 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200034789 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092844201 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143209682 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146698293 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150116941 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134406743 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256904386 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20358711 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191033303 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075472311 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12852261 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195879877 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166409448 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147824201 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186671759 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098116834 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203500159 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197265466 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149717299 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209427885 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166752521 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119585581 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154278221 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179631065 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18929592 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214884907 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160677028 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103206927 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158219846 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133757365 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086598237 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176482345 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079896519 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244354892 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130850829 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145829421 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144149561 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142878915 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11577862 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230196507 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21236833 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135990121 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070012086 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135764393 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156852198 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182792907 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119194375 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140987114 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153414786 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082380066 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198852711 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079564787 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159290233 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10870515 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15954865 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16849783 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105573147 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160063534 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108148361 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133328606 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170736385 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229065769 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120411773 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086486272 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238056394 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161296324 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138694995 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184006675 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224110028 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.132455257 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133373711 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187092358 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255872525 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120265829 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234402783 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11073586 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115025057 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11806376 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162753943 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14821482 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156011835 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08741179 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160448553 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236928082 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103940994 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101272664 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19887323 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086155266 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112801497 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147394603 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132011781 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.101028304 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131956863 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139078564 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176534855 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160908094 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140526601 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159765973 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131454551 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230920384 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12033121 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.136259009 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110870421 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09961456 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174049633 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227775567 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084062811 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236809687 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161662579 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136773729 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153518241 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087376472 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204459377 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083203451 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100507709 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182635962 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143860449 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143511866 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193824818 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13580979 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161783933 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159155319 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195792183 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169269373 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169925682 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139723338 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117563054 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121033318 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187651398 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078066139 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.126604007 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112840594 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111036583 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12566098 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114535082 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180330794 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162518693 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129483415 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146842763 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128900909 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189208305 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106595326 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168583087 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154796888 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126339155 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19543599 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224238999 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173518944 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133445729 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183302298 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.101280803 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078098629 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.1213035 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164779893 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114472843 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08830118 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15056399 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215449 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165692409 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174230941 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143765628 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156749059 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225168863 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075416049 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148245549 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188871683 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15953625 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162435929 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119990699 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104553284 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210725875 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137667223 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26076033 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149818708 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1603953 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19078252 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.136811635 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117311748 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136506715 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177177927 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1383016 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190123008 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132086232 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11993534 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144903157 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085518866 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13667555 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189821334 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154169177 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174876916 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151492995 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168340612 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107405695 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151397788 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160040858 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157227056 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06752508 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180303321 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205979425 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127402356 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153043093 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222069992 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084130618 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157101058 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251591482 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210537975 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090304212 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143001176 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157557614 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165801753 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180114671 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180588771 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143684129 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173924853 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144282194 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089972489 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119948866 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13112431 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14111217 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101552343 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14619763 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177821286 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099903851 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167508005 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146135021 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145117227 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153537456 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.130251326 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096059656 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131188302 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248997921 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156677824 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246941491 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.133642949 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190435903 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238273573 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105565675 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084768975 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111334119 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181027296 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088254303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198318979 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100609015 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138207348 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162290663 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209262182 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100616519 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.099222065 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143948836 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172299804 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144145956 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131052454 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.113170079 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232380136 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137127672 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083241122 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161101169 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136968545 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136914275 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250014842 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064639854 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129745532 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079466647 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11289191 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166824022 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225302737 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086951473 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160450049 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155197875 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157243814 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167372672 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132991061 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129369154 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145857116 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187842552 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16455759 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.1228404 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147433586 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167302738 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228075433 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139714624 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128095295 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213615249 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223772368 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.235273782 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093410374 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150033834 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149332434 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145965952 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209408553 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087999764 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237183883 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114497108 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175283063 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137137517 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125528828 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165019079 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127949238 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093882793 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214720098 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15499281 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113077184 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084446561 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149275156 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175321591 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136114408 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1050846 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177944311 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076321793 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202767322 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238747551 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087195405 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14016891 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129150167 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087450346 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140851793 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137491565 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119039825 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125843616 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243754701 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.124296229 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218977426 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181896218 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150351551 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204248175 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106211182 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670522236 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109811981 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196101363 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153728401 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278588762 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104888981 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156411384 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145944969 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158529592 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20840699 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139946701 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.184257561 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195510929 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158600557 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083808427 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137562071 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144799404 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.12244784 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141181654 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149484344 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151084453 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132959845 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15651668 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165513904 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112750788 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101643739 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227715482 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154528988 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181684659 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207632845 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090511178 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15428503 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20960789 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083923658 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.184961907 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198160892 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142454169 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132469751 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.112178921 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139931531 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21449736 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.104326523 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231582571 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160007647 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144711791 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148711057 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15673203 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17048068 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140933753 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160331232 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129009568 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147326783 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149882439 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116454222 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082078381 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139611951 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146119233 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.131420454 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135666826 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.126417824 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218736221 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07494995 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1271761 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135320122 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183805181 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250947161 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121319924 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08796088 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152838554 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147954911 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150065444 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185725688 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087031313 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113821719 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.0875882 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.142474275 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145503883 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149403625 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109757067 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145663048 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239034698 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115946895 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231881665 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128345946 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142449631 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074052339 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110781861 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129152106 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102192171 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13738746 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131026553 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242447298 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102709667 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123527806 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125493335 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077967874 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115206936 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168986142 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144701024 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156723706 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129939484 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067579921 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14158941 seconds)
  done (took 74.708530506 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214395414 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128988076 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.201859364 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198156925 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166786945 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259977631 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.246496096 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247577507 seconds)
  done (took 2.721293422 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074065605 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.12340561 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108000754 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121239928 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094801811 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07237731 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.310823971 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.114394829 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069707846 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120563532 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124561501 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096424491 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.490298926 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069117078 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097582408 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090901795 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07162666 seconds)
  done (took 3.30135764 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.462342884 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.675690445 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.45527231 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.10273571 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.082941481 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115092707 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.699966848 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169654253 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095045374 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.444869385 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.735555187 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158838532 seconds)
  done (took 18.253839634 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080208894 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072997299 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115010895 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087784411 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.10272921 seconds)
  done (took 1.515058352 seconds)
done (took 119.184802471 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085251209 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385458256 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056758083 seconds)
  done (took 1.533979489 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090166637 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088524225 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116418789 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08807822 seconds)
  done (took 1.450325601 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.081179376 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079326038 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115902582 seconds)
  done (took 1.339456665 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.300550548 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173805506 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092888719 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08977093 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080927244 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108325505 seconds)
  done (took 1.343049554 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078986435 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078337819 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103943343 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080050678 seconds)
  done (took 1.397559063 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081861205 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057071772 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057889635 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085785192 seconds)
  done (took 1.345733058 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096302065 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110286142 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08490359 seconds)
  done (took 1.34989594 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.11588273 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117968854 seconds)
  done (took 1.296276672 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08840868 seconds)
  done (took 1.144621892 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100421327 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148388216 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.165165197 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.14423049 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.175329856 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144812593 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.119893381 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092418203 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109070255 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.122925823 seconds)
  done (took 2.386725267 seconds)
done (took 16.292272511 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084623213 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.39531455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364282388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123098288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671481138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387106169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.019031973 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12402641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112881861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099541772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089181557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677123844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970581461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351049566 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955655083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321947874 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680710624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071511995 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098535461 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072316094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004530918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098958746 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071942398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098772045 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65279196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.407818204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099653111 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321713971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098062796 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07327617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.391543222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099205259 seconds)
  done (took 16.137997092 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075988833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149832919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077772825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087297673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102084546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073110642 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103221942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072572569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152929301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071176959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116354926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071213276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103228292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071793197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091279603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099253625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072887017 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098866716 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072365506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072238756 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117728817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071162713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09894056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072678308 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071758135 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112030426 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071834979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098314368 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071949326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074238781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101569007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072324687 seconds)
  done (took 3.932324839 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121744507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15917316 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077630508 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134639894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1459696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074077613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.177184654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097320066 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157798293 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071820513 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115590472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071034679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132819396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071757342 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118971096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072130767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099540334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072218769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070889107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098800196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091141436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097995536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071796514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071726139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098474729 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084919171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0994258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075229301 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07117189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100538024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075104327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099318355 seconds)
  done (took 4.24997087 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078102714 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078384194 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114216671 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087114358 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100494169 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076337974 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076197214 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101065785 seconds)
  done (took 1.779121556 seconds)
done (took 27.154249497 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083905495 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072816981 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103853831 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084450469 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104043059 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083062987 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070777058 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106290684 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078482326 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103234996 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078840197 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070397258 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.102267938 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071417712 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077241308 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098904418 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082989372 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102601056 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083495097 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110437006 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073719412 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078852106 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105198228 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083213082 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110288442 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083926761 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110763975 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077738726 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071806016 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101652591 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080263265 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116484757 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072475512 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082945103 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099450865 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.0707603 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098549324 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071731912 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083000613 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10611131 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074305804 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106179261 seconds)
  done (took 4.789536152 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095713515 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096151439 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118037376 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065008899 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100390278 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066153898 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.1213649 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06316847 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065063323 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121712828 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059399 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060290779 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090986296 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057103563 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06049193 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059584534 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.092156392 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059618254 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060612611 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.089080441 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064656467 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056966768 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091095602 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063081282 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05911387 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065140911 seconds)
  done (took 3.074356405 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080663083 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085592963 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119700831 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132791815 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.138534103 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078129952 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110070078 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089318567 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116345894 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071060642 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.102466857 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100806937 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089121594 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105831494 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070506204 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114711224 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085653768 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072410721 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105432541 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091380858 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115603095 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081457794 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120551487 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083676369 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070186663 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101459996 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075443205 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11312218 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076694791 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080653637 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103504627 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074455334 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100478131 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082954221 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103470813 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073299032 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090431652 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109081227 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080009291 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099814289 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075136722 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071249065 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120410291 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115588998 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098716208 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078205408 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.106511628 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081388273 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070752403 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118232443 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0802546 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099027309 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074800681 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069704818 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098475792 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085572707 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100129959 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073904437 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079774644 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102019255 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083403237 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074947832 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.115355106 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070664058 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106977229 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070694543 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099627588 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071346938 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093328802 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101367506 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.121400009 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100409262 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072604183 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108408938 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079496543 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076921841 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100347784 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087195508 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109079869 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075993503 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079315748 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103107364 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074516425 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117557985 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074668807 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072460677 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100727221 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077589496 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101780155 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072549449 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084963845 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09985139 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074792521 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116862283 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071689986 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072232002 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106190577 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075751707 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098576758 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084193169 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104733686 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072409509 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080783823 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100299568 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074865156 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109326952 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076168035 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069928204 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104165818 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078909264 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071265284 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100560112 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074040731 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100832168 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081525251 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077080991 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104542632 seconds)
  done (took 11.742881426 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.205825025 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.193100717 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075036124 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.186338842 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079226068 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112285827 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186879881 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101566018 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.101240971 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071921506 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072518133 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.140300326 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133807577 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114341633 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.112232162 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071095595 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119341407 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112833619 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189747303 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.183785242 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.121221898 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080250922 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.103068285 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07301637 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07354564 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.111535296 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088189158 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.107469568 seconds)
  done (took 4.406384419 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088128717 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129932815 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078248234 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088999439 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.124489722 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070892743 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104552622 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073242066 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112722178 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084218853 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100313898 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077360771 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077770707 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108348056 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072556242 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.110099699 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081789472 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073132308 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.103513596 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075921853 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10678904 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084735055 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104854116 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070660209 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078486842 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100103944 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069170158 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.119380151 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071399636 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120202143 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069843316 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10672199 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082889367 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072564709 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101046195 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074291741 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073314637 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.103133037 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073632527 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098680324 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070700902 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061139507 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.099818533 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084436863 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106234784 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063723467 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078006129 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106765474 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077386414 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068818529 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103518188 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074208664 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103108668 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079492516 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076126643 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105970086 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07579429 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070183338 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.107490468 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073936905 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068653883 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.099139493 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076251887 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099767033 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079883005 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076351355 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.099217948 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073074414 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.105126566 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078346132 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073663622 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.103748863 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069757578 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074469073 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.105280053 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075546188 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103730022 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071907481 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071402629 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.10089452 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059743573 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071386482 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086101395 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075156126 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070131338 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.099548813 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074529983 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108648088 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08561325 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101884795 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078162498 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071638181 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.099488167 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075121052 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06592419 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10332949 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085973748 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.118138039 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071957034 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.099461853 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086467323 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104878377 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072187814 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059771176 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108793249 seconds)
  done (took 10.234712394 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099697826 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.125836683 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074119122 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085672517 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.127980003 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097298665 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108523333 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078878703 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072895644 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118127267 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071613849 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109675255 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076135259 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080580905 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126249058 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078944284 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103137966 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08108291 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.079768359 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137897198 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084413219 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.115396035 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082047794 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.102097398 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077747039 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083795658 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128884506 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081896316 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110947703 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.08613978 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.11118513 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.100011523 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086949711 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105843597 seconds)
  done (took 4.384368228 seconds)
done (took 39.69804965 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.146880733 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.366706185 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.144345766 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.068724745 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.159893243 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.174358843 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.15819864 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.158900076 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.651888718 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.149062955 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.392068232 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.843827299 seconds)
done (took 59.503443072 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.335082402 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.286163597 seconds)
    (2/2) benchmarking "String"...
    done (took 1.418570043 seconds)
  done (took 3.810666863 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.500667662 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.164149886 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.434542167 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.147720494 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.147576887 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.592556022 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.818788312 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.045034084 seconds)
  done (took 27.437370656 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.153722197 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.533447142 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.75709535 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.760284334 seconds)
  done (took 18.29636842 seconds)
done (took 59.469367089 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.142754265 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.197535631 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.15468026 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.130765979 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.256481876 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.17141878 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.53366016 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.171210464 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.146715642 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.139689293 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.164233166 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.153538132 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.149741691 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.762716332 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.155806001 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.144546007 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.174272848 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.705592167 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.564664983 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.160285435 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.152545538 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.152369805 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.168048671 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.156251453 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.193363526 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.150476689 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.152548504 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.151070995 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.670235319 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.149619239 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.146467087 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.163244091 seconds)
  done (took 188.674893381 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.150164596 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.186178258 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.277113536 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.196931877 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.556891772 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.34668119 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.283432396 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.648202606 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.165142718 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.174981559 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.377724321 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.151640062 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.444804858 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.13445289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.159646949 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.255631628 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.434953082 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.460327445 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.168348578 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.415115862 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.161619168 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.399032876 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.306025287 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.378145934 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.178399506 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.15985931 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.173005879 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.163189748 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.336955883 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.363494429 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.157564484 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.163760874 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.763116934 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.008650588 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.150659848 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.174388822 seconds)
  done (took 148.117783536 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.442071958 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.151027885 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.150394008 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.150263457 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.184175181 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.150993365 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.701294575 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.699480475 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.670649495 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.433366184 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211970409 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.396730792 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.148718839 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246547343 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.161318015 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.149596703 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.165374177 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.177874806 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148501829 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.151477573 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.7028158 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.161764819 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.708927418 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.155264715 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.152161961 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.184945995 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.549402608 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.14957016 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.18470107 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.475127003 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.198483043 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.151896084 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.462645956 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.059232701 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262369548 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.15231059 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.184103792 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.150983371 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.428305321 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.150252005 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.150826899 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.151059942 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.151167459 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.154674372 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.748495457 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.148694511 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.703419956 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.149628263 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.085270621 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.149692763 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.150939532 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.542165762 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.636985163 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.150100626 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.152250171 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.155414521 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.153891352 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.153169392 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.186353728 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.555745668 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.257857882 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.152393807 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.156357459 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.183932568 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.152562329 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.665102846 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.150964171 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.213504035 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.208650858 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.260761418 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.704359487 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.151116425 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25079621 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275301848 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.151524346 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.152177717 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.153371323 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.154268607 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.152883234 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.263469047 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.152309116 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.583189149 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.1580942 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.155887835 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21580844 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.251993376 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.153604244 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.465106838 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.152704642 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.15409164 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885860156 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249194271 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.154637759 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.153444937 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.153670917 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.154157045 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.583513807 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.707260257 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.368752677 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.152862604 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.509590584 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.16004259 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.594684533 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.699880337 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.74495691 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.154002032 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267018068 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.158661577 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.157713885 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.155257409 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18549716 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.155316951 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.215768482 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.153643269 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.554927071 seconds)
  done (took 340.088596771 seconds)
done (took 679.412784154 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.784248896 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.764535376 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.877038657 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.759522445 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.719393379 seconds)
  done (took 9.998733802 seconds)
done (took 11.09457968 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.345020157 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.342065141 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.214459781 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.349056045 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.183711229 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.363981349 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.322953051 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.17651195 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.258144587 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.231909388 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.258192929 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.203174975 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.185487605 seconds)
  done (took 17.530075211 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.481282926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.487086576 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.219519885 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.479041297 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.196020339 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.481178971 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.359926973 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.37000658 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.358095659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.169759648 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.169515141 seconds)
  done (took 15.870541949 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.48506624 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477271021 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.222464884 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487707943 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.1963839 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517176253 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.363355966 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.396562996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368146143 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.17061352 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.170498127 seconds)
  done (took 15.952471942 seconds)
done (took 50.450772983 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.166717013 seconds)
  done (took 2.263620955 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.202365911 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.366409483 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.183250755 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.171999816 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.168457351 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.170034648 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.172900127 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.168412334 seconds)
  done (took 10.703539223 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.164201676 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.163553226 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.162755234 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.167679112 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.167864837 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.162186166 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.167638621 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.166337403 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.164603836 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.165226009 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.165500155 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.168044166 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.166863434 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.167668368 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.164342558 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.167283691 seconds)
  done (took 19.750727764 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.166324996 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.164659082 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.163976285 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.166308284 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.163925933 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.16467902 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.164535864 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.165253739 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.164614034 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.164382567 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.165487 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.164551187 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.165866938 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.165292326 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.165906858 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.165390648 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.165754875 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.165644978 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.170872883 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.166395086 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.166052204 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.165333282 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.168781918 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.166871214 seconds)
  done (took 29.07892549 seconds)
done (took 62.892747643 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.364583682 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.934053132 seconds)
  done (took 9.397340298 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.167924767 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.167848876 seconds)
  done (took 3.439702898 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.168474386 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.166537255 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.167939117 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.169325565 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.168411852 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.167329315 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.169393164 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.168659329 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.16992711 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.169070538 seconds)
  done (took 12.785533326 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.167535985 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.167205968 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.166594323 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.168984314 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.169072171 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.166918451 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.169870804 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.168592775 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.168520013 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.16513627 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.169243114 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.166832951 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.168871368 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.166204773 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.169520473 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.167071216 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.166756472 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.166262308 seconds)
  done (took 22.120451355 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.168664891 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.169904123 seconds)
  done (took 3.439840271 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.166948708 seconds)
    (2/7) benchmarking "second"...
    done (took 1.167154376 seconds)
    (3/7) benchmarking "month"...
    done (took 1.167973542 seconds)
    (4/7) benchmarking "year"...
    done (took 1.167645382 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.16724367 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.166367791 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.167369257 seconds)
  done (took 9.27299687 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.170422878 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.356940438 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.436713001 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.76435087 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.171271717 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.172980017 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.034114677 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.174051247 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.175915063 seconds)
  done (took 13.558811625 seconds)
done (took 75.113297275 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.18801925 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.162001642 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.132794353 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.167647906 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.178459066 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.507207334 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.216797593 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.288954406 seconds)
done (took 36.943773755 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.178466897 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.901383494 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.907936606 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.179465122 seconds)
  done (took 11.092313263 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.148226352 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.119843724 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.165196583 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.186040341 seconds)
  done (took 17.724805715 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.815416918 seconds)
    (2/2) benchmarking "read"...
    done (took 1.496554692 seconds)
  done (took 4.416290247 seconds)
done (took 40.513976616 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170524494 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.16963679 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.172753678 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.172141359 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.169850789 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.171507027 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.167748562 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.169950507 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.172242295 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.170773161 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.170101524 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.170553653 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.172890005 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172811653 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.170171691 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169165238 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172764336 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.173221677 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.171182929 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171459814 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.170449335 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.173631419 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.170527469 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.170720502 seconds)
  done (took 29.210514629 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.174427405 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.171730198 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.172512736 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.173659972 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.170345495 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.172970036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.17320724 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.170941216 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.173525349 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.174093322 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.171175151 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.171420172 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.172958106 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.171845438 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172881387 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.171430034 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.172747339 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171749492 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173714659 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.172361401 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.173979431 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171074132 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.171316293 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.174028203 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.170680215 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.170089012 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.173660142 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.171192044 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.172360091 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.171277494 seconds)
  done (took 36.275222573 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.177855127 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.183811206 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.174151036 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.174433001 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.174666429 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.174997181 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.174095495 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.173568588 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.174319673 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.176012464 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.173244603 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.174602065 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.174430603 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.174070794 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.173863834 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.175134698 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.173153939 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.173720715 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.172823604 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.174027977 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.173835547 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.174902603 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.173976527 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.175302257 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.174313569 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.176112873 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.175577647 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.175368175 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.176173956 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.175426241 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.175276848 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.175068757 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.174511056 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.175826823 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.176395091 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.176556033 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.180866339 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.186347709 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.176537805 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.175982214 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.17546508 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.17813956 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.174888928 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.176663559 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.176084888 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.177259132 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.177575053 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.176808662 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.177410088 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.176530596 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.175668893 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.176724267 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.176021196 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.177816114 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.175893482 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.17701543 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.177214967 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.177196033 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.176133965 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.175808324 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.177705806 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.177668795 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.176521757 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.176591186 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.176861243 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.177193192 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.176860135 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.177134479 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.178575472 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.177987992 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.178798216 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.178499447 seconds)
  done (took 85.792066231 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.177294192 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.176300017 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.175690595 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.175003716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.175618369 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.177687504 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.17699238 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178423203 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17725339 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.178272611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179137657 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.17706759 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.17567584 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.180718311 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179015316 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.176357885 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.180385641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.175767562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.17827999 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.179249448 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.17803932 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.175437685 seconds)
  done (took 27.013895336 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.179112581 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.179400937 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.177266879 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.179864877 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.17665628 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.179976655 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.180270444 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.179955644 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179147005 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.176687346 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17790659 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179612229 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.177415718 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177715522 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.177452093 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.177073484 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180208429 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.176908705 seconds)
  done (took 22.323034211 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.176979901 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.178635265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.178168227 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.176848351 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.178606963 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.18028946 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.177183106 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.179934783 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.179709285 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.176753262 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.179568349 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178456213 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.181265452 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17610561 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180744256 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.178532989 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.180763526 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177417303 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.180089906 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.17835387 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.177197873 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.181235221 seconds)
  done (took 27.04559494 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.180198671 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.180706738 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.177579604 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.177788318 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.178122468 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.180524113 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.18035187 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.178845079 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.180960586 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.181203968 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178898791 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.182771181 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.177996718 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.179251365 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.178166951 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178013374 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.182070477 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.180700746 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.1830633 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.177789004 seconds)
  done (took 24.707172517 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.181580406 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.182946558 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.183453701 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183197682 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184072781 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.183653617 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.182780497 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.184705195 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.183230172 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.184322528 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.184520054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.183846777 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183664211 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.183463636 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.183713163 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185133108 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.184169473 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.183291852 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.182733724 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183400928 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.18419908 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.183755582 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.184511917 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.184452694 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.184077782 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184677968 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.184604008 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.184575808 seconds)
  done (took 34.26102096 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.183786552 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.184838146 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.181041212 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.182516106 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.181334822 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.181401112 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.181145267 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.181887743 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.183374209 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.181970221 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.183685706 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.183970568 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.184626833 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.184456205 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.184509707 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.186011611 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.185072937 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.182110592 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.18301548 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182032934 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.186018177 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185353878 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.184463294 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.182689932 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.181771759 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.185149056 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.181631938 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.183435275 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.184465779 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.182058707 seconds)
  done (took 36.616091558 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.202966547 seconds)
    (2/2) benchmarking "in"...
    done (took 1.203481456 seconds)
  done (took 3.522168942 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.181562567 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.186090475 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.184862439 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.183596389 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.183227996 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.186179508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.185329312 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.182106196 seconds)
  done (took 10.590515716 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.185346828 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.185304395 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.185584047 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.187898436 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.187233584 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.185882369 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193201694 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.205831266 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.186611788 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.188232604 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.193002319 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.195392704 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.188645438 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.186363513 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.185495896 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189271492 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.186835013 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.186894383 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.187387577 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.186463748 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.187306089 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187792739 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188928399 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.18548366 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.18809819 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.198158167 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.191711769 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.188024386 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.186810016 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.192151497 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.187190777 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.184370483 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.187295096 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.187822928 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.187093625 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.187109662 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.19713897 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2067345 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.194597321 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188291541 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.188636882 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.184114515 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.189146979 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.189017104 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.189040366 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.187944179 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.188238695 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.185200319 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.18727767 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.191428579 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.194693693 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.186793017 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.186912571 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.192266651 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.189446097 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.195962367 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.207093144 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.190942164 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.198463437 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.198525386 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.202138751 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.199085365 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.190867823 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.188921234 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.197393218 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.215926189 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.195024414 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.205986411 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.187604656 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.190666981 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.196688367 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.201998465 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.201047641 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.188817577 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.188539227 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.189063129 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.188209883 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190193613 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.197360991 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.211491244 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.189947259 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190307034 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199811253 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.215597839 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.188580159 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.190356408 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.190668058 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.189643537 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.191206598 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.202218683 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.209465733 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.190419427 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.188870428 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.1899278 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.191221104 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.190304768 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.188124663 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.191271582 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.188102923 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.19139357 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.190154801 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193896468 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.199423806 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.190426507 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191224862 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.196242367 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.192501922 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.190437865 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.198756964 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.192733877 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191932547 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.192837194 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.196339883 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.190529888 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.195008339 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.20027407 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.191583752 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.192972446 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.192518948 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.193212551 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.200911683 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.222197542 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.192852392 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.192442261 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.195359797 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.205991542 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.192277252 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.194248916 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.192840232 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.189396723 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.190678956 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.193919176 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.19171309 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.192643864 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191766568 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.192457426 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.190382091 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.191547523 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.192961311 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.19277611 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.191853992 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.193381539 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.194708466 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.194724286 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.193361848 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.193293688 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.199096057 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.193089901 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.194537669 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.194013725 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.191351015 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.193160619 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.193786126 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.194457445 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.19296194 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.193525196 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.192371275 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.194921214 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193358835 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.194442288 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.193329216 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.195408846 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.198094495 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.19504325 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.197535975 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.19408787 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.192829085 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.194952708 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.19570023 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.194475745 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.195758492 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.193738747 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.198570681 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.20329407 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.193835116 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.194680215 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.197062553 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.194935212 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.194985621 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.195063092 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.19712135 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.204189681 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.19520532 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.20149935 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.195180471 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.195167643 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.196193781 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.195564777 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.195072764 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.196396608 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.198228778 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.205742762 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.208019778 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206395472 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.197555145 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.20076146 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.196078313 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.199786955 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.199171535 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.196874963 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.195760831 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.197113785 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.194825295 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196149366 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.197814884 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.195596656 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.195534914 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.197116114 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.196589354 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.197444677 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.19845802 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.196541892 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.199194467 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.195203658 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.198443251 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.196582891 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.195367305 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.194614591 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.19464826 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.196445084 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.196948552 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.197282906 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.20327053 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.194848695 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.197959144 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.198356253 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.195892073 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.197077566 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.196750791 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19879962 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.197254331 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.202595734 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.215350304 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.198308911 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.204264983 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.215891791 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.196967971 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.19964555 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.198278293 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.194843503 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.200506431 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.207574432 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.198602838 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.199171203 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.197914254 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.19797061 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.198514122 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.204043809 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.195617847 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.198739923 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.200044592 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.200533733 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.196125663 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.199035559 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.199103545 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.199735237 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.201379244 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.199980189 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.199986117 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.199870746 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.199604515 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.199551631 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.198897039 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.202257787 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.208071526 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.202438488 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.199566343 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.20038195 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.199661071 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.203464274 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.200228889 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.198600836 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.198938976 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.212387612 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.210100791 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.205960169 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.201666213 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.200427096 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.205213725 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.201517536 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.204445784 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.199699436 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.200890051 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.200277342 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.199888427 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.197218635 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.201115956 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.201532408 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201922722 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.202063091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.205808252 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.201097218 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.199105276 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.200989035 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.200869733 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.201356029 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.201512987 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.200329957 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.20281571 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202974326 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.199790569 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.200041926 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.207937772 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221139783 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.201877747 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.200596014 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.201955135 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.199854429 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.203107813 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.200628031 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.203112139 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.209212769 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.203305349 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.21177871 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.202007373 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2097886 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.201169701 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.205020331 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.211080298 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.197967714 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.19993407 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.201133797 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.20131197 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.208236504 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.222459001 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.201873932 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.207519609 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202172269 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.20251693 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.202566428 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.202291224 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.20370471 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.203456147 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.211900458 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.222540535 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.206889251 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.205023339 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.200545404 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.204034174 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.204188922 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.202112539 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.208268246 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.203110678 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.203661218 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.203920806 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.204181373 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.204259455 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.203571299 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.204151733 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.201217179 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.204140526 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.209842475 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.225337663 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.209233985 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.204887689 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.211503904 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.204097889 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.210234617 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.225601244 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.20473993 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.203939933 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.204588223 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.206073173 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.204131068 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.204567175 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.203732274 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.20470318 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.209779299 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.20551355 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.205496163 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.204201141 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.205417504 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.204356321 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.216810564 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232332707 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.205574721 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209108764 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.202858888 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.205343883 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.210352978 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.205117491 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.203396546 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.207469392 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.21732011 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215761004 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.205752104 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.205694144 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.20613966 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.205987021 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.205336553 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.206922404 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.206415228 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.205531331 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.207165357 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.206389315 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.208603917 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.20619338 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.205783703 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206442266 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.207291124 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.21626074 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.206680041 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.20703744 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.206001692 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.206110626 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.206080209 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.207758954 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.206281419 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.207723908 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.207490612 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.208695207 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.215192295 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.214695537 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.209358851 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.205251549 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.206618456 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.208663551 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.20805272 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.207856749 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.20780027 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.207112306 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.209129805 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.207308806 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.207977946 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.207434869 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.209179426 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.208546851 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.209232836 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.210543176 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.216403323 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.208460867 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.206011726 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.207809849 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.208279666 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.206699824 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.209479079 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.215246092 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.211990265 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.22121492 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.218871141 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.21292412 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.207385967 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.212592444 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.218326555 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.208622194 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.20963156 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.209571252 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.21126244 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.209509696 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.212433541 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210348322 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.214233579 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.209738708 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.209481954 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.217517458 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.228815748 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209439228 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.210592625 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.214015992 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.209191897 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.207559277 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.210427022 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.2088627 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.216332839 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.229668969 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209534729 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.211026495 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.208614229 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.211386229 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.214708786 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210730029 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.210899616 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.207758302 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.21068948 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211080101 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.211443392 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.208216293 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.207795966 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.209597417 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.214472478 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.217883435 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.20645835 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.212348916 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.211855942 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.211863246 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.211544697 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210977631 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.208279047 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.208935554 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.210954215 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.212802246 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.212231682 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.2141384 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.212288359 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.213037484 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.212703815 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212090496 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214179494 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.223589195 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.220455282 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.209721908 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.211195746 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.212026835 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.213914121 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2130443 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.212509269 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.21239037 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.214162912 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.212933259 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213324493 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.212296923 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.216491161 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.228592402 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.231632051 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21170447 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.211367705 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.215387446 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.212459672 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.209505399 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.212967886 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.212992007 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.214502213 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.221583636 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.213242299 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.218291169 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231612218 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.214749504 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.21762743 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.215699437 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.221497453 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.214649848 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.214095504 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.212362142 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.216219816 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.230390024 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.212024992 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.223438259 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24421372 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.232467882 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.213448109 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.212590571 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.210490028 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.212532693 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.213517372 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.21259373 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.213044994 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.21356929 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.214526338 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.215477946 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219894538 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.215085696 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.212572318 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.212693865 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.212690729 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.214375325 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.211995916 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.213583101 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.214868689 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.215704835 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.214102557 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.215567989 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.215545881 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228329965 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.226226963 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.214350437 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.213363279 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.213294051 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.217860502 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.217366964 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22720869 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.223842771 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.213881678 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.215642933 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.215607498 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215402035 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.214184107 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.215689875 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.215756173 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214380277 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.212642435 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.227736066 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226857128 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.219471866 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.216738067 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215347753 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.215061598 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.217100132 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.217509005 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217222336 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.218007643 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.217757253 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.221338248 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.216691525 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.217020874 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.219512823 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.22650382 seconds)
  done (took 718.448349237 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.213970076 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215724812 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214538421 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.214774589 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214815163 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214875905 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213951172 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.214047877 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.213865662 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213854358 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.215244353 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215337045 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213673212 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.214425389 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21378696 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.215269449 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214533202 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.215126923 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.214627578 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215060336 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.215922862 seconds)
  done (took 26.654793649 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.217206141 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.214073533 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215145255 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217007529 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214948846 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216908623 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214735833 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218385986 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217491855 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214740987 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218463521 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21730055 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.215619902 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.215589238 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216609014 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217626303 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218206123 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216647882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.218191928 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216433169 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218798308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.214030183 seconds)
  done (took 27.911534689 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.217995373 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.21799315 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.217500948 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.216403232 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.219203766 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.216567191 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.218427944 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.219196274 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.219184307 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.219280473 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.218199074 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.220571428 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.226330168 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.226749458 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.219950816 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.218418459 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.364314184 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.219948118 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.219264133 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.219734498 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.217167515 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.224078372 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.217457288 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.217337666 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.219354491 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.219464091 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.220387301 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.218973995 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.219325122 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.222551343 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.225055839 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.221485073 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.220231033 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.221568299 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.219083303 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.220770096 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.224053574 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.220779744 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.217374806 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.220605069 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.230632782 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.244766796 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.22003098 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.224709485 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.220834909 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.219938137 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.222796339 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.229038414 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.218548441 seconds)
  done (took 61.124085224 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.220982799 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.220466227 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.219081031 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.220195291 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.220925918 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.220142124 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.220472665 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.220312665 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.218646081 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.21746997 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.222115277 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.217844482 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.218936596 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.22118538 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.222053682 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.218511941 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.219473531 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.218913001 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.220499618 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.219181089 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.219293007 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.220978473 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.220629318 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.220247864 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.222119311 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.219365854 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.220004983 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.221730359 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.21933198 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.219393374 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.221803405 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.222386157 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.221916902 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.221245845 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.22015411 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.223011263 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.222130642 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.219279625 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.221519022 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.218710745 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.223295166 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.223307031 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.22272323 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.222470798 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.219653128 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.219834802 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.220176242 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.220056482 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.219933889 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.223923889 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.222433754 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.219493878 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.222082907 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.220081373 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.222708862 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.223363577 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.221504774 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.219683089 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.223874712 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.221129799 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.221316283 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.222728486 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.219317934 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.223907206 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.223944203 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.220797896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.222374068 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.224717447 seconds)
  done (took 84.176969472 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225216056 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.224943415 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223704849 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22366416 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223919007 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.224388782 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22474097 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.225461607 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.224217123 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225101984 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224362352 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.224129075 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.224996077 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.226423509 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.223942657 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223517954 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.22387634 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224581984 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2252066 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22591981 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.223971919 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.225433325 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.22720261 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.225282342 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225021313 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.225296878 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224345784 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.227353268 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224956569 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.225169573 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226270543 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.223579695 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.225519257 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.226397455 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.224819901 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.224712855 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.227051706 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225996342 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.22635398 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224577971 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.225915813 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225514044 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22424014 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.225358055 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226488218 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.226231305 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.226979208 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.226294003 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.228106869 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.227238101 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.227831044 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226829901 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226258659 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226780291 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.226233719 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.226762762 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227114595 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227813685 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226635541 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.226563672 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226756448 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.2284816 seconds)
  done (took 77.144801572 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228095962 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22725436 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.223555134 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.224416226 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226245458 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224469917 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227601752 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.228517165 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227606239 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.227112086 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226732321 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22471055 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225341184 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226802244 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224842405 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224811336 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225791159 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225585305 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228816479 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224815729 seconds)
  done (took 25.681075705 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.22617547 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.229718822 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.227542388 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226683198 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.229265814 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.22729155 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.230303328 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230211939 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225351628 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230103693 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22891416 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22863533 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227798481 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227195927 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.231108946 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.227151538 seconds)
  done (took 20.81185585 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.22782071 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.229103322 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.229540411 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.229713543 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.227172101 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.227436298 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.230152431 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.226865807 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.228491153 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.231390742 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.230247088 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.229603662 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.230363574 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.230108432 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.22734961 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.230094441 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.227682169 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.227000175 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.230533703 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.229930349 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.22834201 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.226780097 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.230108076 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.231142513 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.227948822 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.228398186 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.22790567 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.228069239 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.227396168 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.231021101 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.228611023 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.227689604 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.229387155 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.227660019 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.231768989 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.226944496 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.230930086 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.230675028 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.231376758 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.230940178 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.231926158 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.227283081 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.232291578 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.232177983 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.228728832 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.232404097 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.228786794 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.229686621 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.229500425 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.22866437 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.232786135 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.231815364 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.23132009 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.233439643 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.232496342 seconds)
  done (took 68.786707336 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231185638 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23261838 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.228515864 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.232415915 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.231892133 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.229043236 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232537033 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.229567325 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230393068 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.233536458 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230904055 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.234381449 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229516799 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232285385 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23100994 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232921206 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229377263 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.23051269 seconds)
  done (took 23.324543063 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.23077926 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229311211 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.233497981 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231057816 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.228949171 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.234617837 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23048344 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.233139514 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233622743 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.231658192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231241963 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.234234359 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233255735 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.234136542 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23191808 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232586716 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.235372913 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233436203 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231755641 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232709699 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23384113 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23360047 seconds)
  done (took 28.278423678 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.232184538 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.232166324 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.249516759 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.282315216 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.273278189 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.232122604 seconds)
  done (took 8.664536264 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232594127 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234788207 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231836778 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236355785 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236344118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23196528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232391507 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232823829 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234487503 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233418353 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231766915 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234296137 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2347335 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232080211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235409423 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235910753 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232635192 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232742332 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233796918 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235390031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233023283 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235616403 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232742559 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232332728 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233359291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232681636 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236282824 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233953654 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233228128 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235803067 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236138626 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233504859 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235774623 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234171556 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235947718 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236056055 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23319664 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236083074 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23602095 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232764928 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.236296257 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235978453 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237079899 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232894416 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235238659 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23308566 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234049501 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232676483 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233687813 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235857329 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234960942 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233617783 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236328422 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236404136 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235805099 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236703381 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233911942 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235470692 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236309567 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234981553 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233797584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237239375 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234194357 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234719148 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237471118 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234159999 seconds)
  done (took 82.642718473 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235538632 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234504329 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235506344 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235502779 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23468434 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235016296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23525301 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235015478 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235016296 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236322153 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239440496 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235031182 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235560237 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236101297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236277462 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235360781 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236572317 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235209319 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235842933 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23884825 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236006678 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235950036 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23608321 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236381813 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236946348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238045417 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237211535 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235823031 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23752413 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236765064 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236492737 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236895094 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23637331 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2370241 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237037493 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237212607 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236970934 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237174017 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237770001 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239593022 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236243785 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240307002 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238000756 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236818005 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238089418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237484322 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237088132 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238584963 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237570403 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237896055 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238590746 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239434125 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239315897 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238104157 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239308188 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237797127 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23967341 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238777424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237459566 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240100882 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238861286 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238709451 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241254087 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237557959 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238832943 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238173187 seconds)
  done (took 82.824807091 seconds)
done (took 1674.935525733 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.282479133 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.3363605 seconds)
  done (took 13.786853778 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.403498747 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.353230778 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.238580544 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.266066968 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.23628297 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.247276163 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.251474575 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.235379918 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.238927618 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.239740702 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.240131156 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.428639004 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.289595558 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.237527388 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.239134111 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.333267551 seconds)
  done (took 41.659689 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.272628123 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.247669797 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.368076942 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.26275867 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.271671919 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.437020886 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.299209147 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.244949401 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.426580433 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.283409888 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.888455484 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.26836506 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.245510652 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.411735495 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.260114268 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.437537854 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.500667861 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.890903479 seconds)
  done (took 29.187805184 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.724827466 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.236905859 seconds)
  done (took 9.133800973 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.245981506 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.275204229 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.287716716 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.233975975 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.27052859 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.312865874 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.272912323 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.270499834 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.262849864 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.234883749 seconds)
  done (took 63.848765033 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.264764291 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.244545683 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.245019988 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.243777942 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.23561992 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.236483915 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.243098218 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.236931969 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.195611413 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.380868112 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.261262864 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.252561419 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.245353022 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.24492289 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.243624363 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.281886022 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.391228551 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.241729546 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.242236713 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.251587113 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.245224272 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.334672603 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.28857896 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.244187624 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.381995391 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.203180496 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.247572066 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.252359903 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.370866752 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.242995957 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.243953526 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.245868088 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.247513145 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.82939342 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.798493246 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.250487229 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.269315589 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.255669462 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.243314015 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.37121539 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.246329925 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.252490808 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.24250211 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.774357865 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.411432683 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.368212373 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.661352117 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.247434138 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.246432221 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.314246868 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.247893899 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.247375012 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.277809894 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.015286134 seconds)
  done (took 107.47913312 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.247253699 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.727824331 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.413337032 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.263500563 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.131165719 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.909369366 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.240909736 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.557570251 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.251790018 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.238088494 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.527650792 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.779978092 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.245919699 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.261996586 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.407268655 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.287852122 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.238079292 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.228040095 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.238677191 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.236657123 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.680141193 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.256328021 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.237162804 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.355954653 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.280410014 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726150376 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.843153436 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.676226055 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.239747233 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.240565725 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.749505291 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.250771243 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.285399786 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.240478631 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.524625555 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.641686517 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.61709228 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.237678373 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.270436623 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.236980365 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.272288072 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.724668055 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.604291781 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.237959375 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.260378558 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.724125993 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.237299851 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.244905334 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.247872057 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.45565802 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.191019405 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.258883189 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.862594571 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.242841318 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.51200939 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.250752165 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.269962028 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.7535156 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.239248721 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.439664363 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.289730721 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.239861021 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.244398595 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.242327094 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.23972325 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.608371717 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.63109328 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.240082673 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.614682309 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.737972961 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.242581097 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.808915112 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.167115853 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.258860994 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.295844615 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.245168315 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.039162507 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.752162914 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.267873177 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.240036467 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.599569439 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.240472503 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.53454931 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.254758327 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.241078748 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.687414515 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.260887043 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.287592901 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.242070639 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.25578306 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.047898214 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.245472655 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.518761874 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.306204383 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.242026143 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.241795734 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.273240975 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.241391134 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.255833628 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.243743096 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.80504703 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.245206413 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.395266505 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.260735188 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.258996222 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.240429291 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.244034609 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.244728611 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.474480048 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.840129815 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.248948078 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.244094816 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.241890189 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.264382692 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346002641 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.243212212 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.577491549 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.244190053 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245749017 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.261767384 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.955231399 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.282820565 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.242136211 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.261886944 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.088850768 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.452164255 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.26466421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.241925769 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.244774597 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.262383221 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.807108292 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.247174174 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.313476288 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.24980683 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980694042 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.261785071 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.269743199 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.833406106 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.253062844 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.243614188 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.247268065 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.245322863 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565519505 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.533012236 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.553408931 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.246792574 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.244320721 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.973894434 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.257604231 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.388710696 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.26592116 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.275866044 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.446770181 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.479772499 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.246637251 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.809081208 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.246997944 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469208548 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.246412921 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.576846207 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776211855 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.248235751 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.251372338 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.988133549 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.908954015 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.89221295 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.246801016 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.532288978 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.241783724 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.705095411 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.247925944 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.247714215 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.87521417 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.248222479 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.250941595 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.246369302 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.247224373 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.311442197 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.425653922 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.196572978 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.251440554 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.731098463 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.262557197 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.255935413 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.247024365 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.247564127 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.605692833 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.332984092 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.250731226 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.250772105 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.248180532 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.253644623 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747872792 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.213313771 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.24881689 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.404436318 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.91967333 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.246553533 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.250980908 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.067161 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.497275964 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817753207 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.283457664 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.580223538 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.247397851 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.289336389 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.073869767 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326392278 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.784224796 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.248439229 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.247555448 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882783688 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.246037951 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.301360887 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.249272177 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.250115576 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812295605 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.247094888 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.254065611 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.703950257 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.246364914 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52608405 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.24987084 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.262993151 seconds)
  done (took 1094.620326544 seconds)
done (took 1360.885186217 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.250180792 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.250019597 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.23524383 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.250019196 seconds)
  done (took 26.170785289 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.261777801 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.254076394 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.258464424 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.255260106 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.260343746 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.25592719 seconds)
  done (took 8.733976498 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.568950669 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.252040887 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.251366135 seconds)
  done (took 19.258264061 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.491271243 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.579193072 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.656399538 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.558909395 seconds)
  done (took 10.474384104 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.257371244 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.255987699 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.257639171 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.260463934 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.263669971 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.266472778 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.262606089 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.262336777 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.263356195 seconds)
  done (took 12.53631403 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.532166296 seconds)
done (took 83.889673696 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.736760635 seconds)
    (2/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.738048774 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.004074305 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.244747651 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.349369149 seconds)
    (6/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.001298526 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.185749554 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.256334504 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.605196588 seconds)
    (10/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.911858981 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.259292364 seconds)
    (12/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.253876409 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.310568398 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.517789127 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.257715792 seconds)
    (16/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.420741666 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.210731854 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.144265708 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.878614583 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.291033932 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.83313577 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.27600235 seconds)
    (23/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.336479396 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.337364319 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.37956186 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.278689152 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.359700507 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.361802135 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.892363117 seconds)
    (30/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.75003036 seconds)
    (31/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.918761734 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.229213487 seconds)
    (33/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.370350892 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.371765521 seconds)
    (35/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.885473308 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.250351396 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.631344628 seconds)
    (38/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.134796395 seconds)
    (39/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.87914567 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.24685755 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.122742193 seconds)
    (42/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.284276964 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.355958495 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.279262143 seconds)
    (45/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.653511569 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.278138483 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.270259645 seconds)
    (48/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.951745117 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.215237938 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.171666351 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.681327082 seconds)
    (52/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.23777489 seconds)
    (53/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.635424427 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.123857604 seconds)
    (55/309) benchmarking ("sort", Int8, false)...
    done (took 4.313027224 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.252757914 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.267950812 seconds)
    (58/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.452354315 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.384315622 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.726590584 seconds)
    (61/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.09923514 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.510904847 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.340617117 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.253014227 seconds)
    (65/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.173009215 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.309989948 seconds)
    (67/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.920770053 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.903892791 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.588895725 seconds)
    (70/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.63317927 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.265773103 seconds)
    (72/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.340136237 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.340262055 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.187196677 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.66948319 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.280274435 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.674726711 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.440764516 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.338638859 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.305444249 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.320621482 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.747337216 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.33651233 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.281969269 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.257963011 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.492296399 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.964036803 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.377306396 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.262597152 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.765732384 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.678358861 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.241300255 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.253761158 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.319611373 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.256804376 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.379559936 seconds)
    (97/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.240749079 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.957661942 seconds)
    (99/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.476275908 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.262324068 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.256686701 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.750090403 seconds)
    (103/309) benchmarking ("sort", Float32, false)...
    done (took 5.295618258 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.249206939 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.276781433 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.830358848 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.271805922 seconds)
    (108/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.365208531 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.25433489 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.033741955 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.24146665 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.468246586 seconds)
    (113/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.339279962 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.240896541 seconds)
    (115/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.617096678 seconds)
    (116/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.577760093 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.764733781 seconds)
    (118/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.265606148 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.260435376 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.372051618 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.897082114 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.280123022 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.321551372 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.913143088 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.258832053 seconds)
    (126/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.797421775 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.339303641 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.782020464 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.278483909 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.274232361 seconds)
    (131/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.278045985 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.393754484 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.259511047 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.514135757 seconds)
    (135/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.836670844 seconds)
    (136/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.550341486 seconds)
    (137/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.804050513 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.066109239 seconds)
    (139/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.266553151 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.280509134 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.537221788 seconds)
    (142/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.342587109 seconds)
    (143/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.59868846 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.173464907 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.273275866 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.386432968 seconds)
    (147/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.365376152 seconds)
    (148/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.24369394 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.4260959 seconds)
    (150/309) benchmarking ("sort", Float64, false)...
    done (took 5.595889801 seconds)
    (151/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.256158321 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.089401407 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.281730908 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.284632697 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.302410907 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.258875733 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.521733141 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.239671917 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.302244786 seconds)
    (160/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.27128967 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.28103934 seconds)
    (162/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.284957602 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.516143466 seconds)
    (164/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.676399721 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.164993592 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.261594862 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.836567213 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.903129526 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.377670264 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.332104706 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.469573518 seconds)
    (172/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.273008011 seconds)
    (173/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.94875951 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.260616236 seconds)
    (175/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.638234268 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.621727524 seconds)
    (177/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.298042206 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.710279941 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.838349645 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.646598653 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.926034105 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.724167007 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.284077407 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.647838613 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.028714795 seconds)
    (186/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.632778777 seconds)
    (187/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.367872638 seconds)
    (188/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.897420937 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.271561484 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.291057168 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.078943688 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.276064054 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.365437934 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.286830356 seconds)
    (195/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.455441852 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.103240974 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.259098494 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.914755998 seconds)
    (199/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.384345623 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.303696301 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.637407171 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.244903537 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.246140989 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.839862986 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.258119834 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.276098147 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.368370674 seconds)
    (208/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.246805862 seconds)
    (209/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.360027395 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.710662199 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.318394937 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.148297637 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.264178923 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.263576148 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.881609957 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.283859231 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.309403543 seconds)
    (218/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.285658233 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.969038725 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.674219451 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.716080826 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.910255972 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.479926212 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.339278669 seconds)
    (225/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.823234937 seconds)
    (226/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.031398656 seconds)
    (227/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.676168958 seconds)
    (228/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.385790422 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.484326063 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.197444408 seconds)
    (231/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.389341986 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.260070937 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.102457492 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.419375347 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.768418791 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.455689446 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.940361325 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.105511956 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.284545236 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.772978951 seconds)
    (241/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.660729571 seconds)
    (242/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.134450708 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.24747958 seconds)
    (244/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.586713029 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.681920811 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.316394464 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.150645415 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.276752731 seconds)
    (249/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.990235167 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.26331532 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.592726553 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.690789196 seconds)
    (253/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.288605721 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.753709596 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.286994929 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.283965998 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.27849031 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.27843592 seconds)
    (259/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.473684822 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.547124408 seconds)
    (261/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.407366809 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.262051695 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.26234933 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.672451476 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.630431738 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.33534563 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.265696899 seconds)
    (268/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.943387077 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.252704011 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.265016551 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.065740015 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.289128202 seconds)
    (273/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.488363008 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.287757082 seconds)
    (275/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.292372819 seconds)
    (276/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.276180941 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.314689323 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.179648937 seconds)
    (279/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.649437384 seconds)
    (280/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.274552288 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.835629322 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.074281082 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.687732306 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.605290183 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.809533326 seconds)
    (286/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.564033164 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.685894633 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.127345258 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.347100523 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.990960681 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.345339711 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.427664798 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.256095325 seconds)
    (294/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.157029847 seconds)
    (295/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.391354456 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.381413545 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.464873725 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.70972626 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.050077383 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.498052674 seconds)
    (301/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.29257196 seconds)
    (302/309) benchmarking ("sort", BigInt, false)...
    done (took 6.265641638 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.306736628 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.868119438 seconds)
    (305/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.26475582 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.57970053 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.287073934 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.914014086 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.981156257 seconds)
  done (took 911.829293905 seconds)
done (took 913.014780198 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.301232474 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296696949 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.278796573 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.299924016 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.391486249 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.310817357 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.289335955 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.281820396 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.325097147 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.326309096 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.278521102 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.310585578 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.28179136 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.281706685 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.276183813 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293019609 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.392699614 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.279369362 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.297385026 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.288534653 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.295715435 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.279544033 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.329570397 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.309731892 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.283521929 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.28234722 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.284369976 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.299481126 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.393067267 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.28336969 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.281174705 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.292525034 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.393227287 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.275376001 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.275154349 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.301317616 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.293321664 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.290381836 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.284125568 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.314642748 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.821314242 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.279645274 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.284485907 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.282766018 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.280591876 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.284770061 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.284338177 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.289833847 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295244072 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296022792 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.813362413 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.295227391 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.287308821 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.281928704 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.292355407 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.282893227 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.285633206 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29926373 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.302351458 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.297658321 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.384699231 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.283723541 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.283362491 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.299624752 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.291066569 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.856583516 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.274690102 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.286248108 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.824562499 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.284835583 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.85742347 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.288576169 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.285307063 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.297014053 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.316084262 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.399419456 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.275841945 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.282293782 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.290092585 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.282188963 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.292718184 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295356971 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.287459546 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.282799949 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296480898 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.314065353 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.293012033 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.284953317 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.293600052 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.304080301 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.291301904 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.295067734 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.28737357 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.279133926 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.292691221 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.287383236 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.288430042 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.28833161 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.28836173 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.295263296 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.825724751 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.299927432 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.28094727 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.281558553 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.28269692 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.297969424 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.82807373 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.28512086 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.305760912 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.330847369 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.284750123 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.38798244 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.286906852 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.299973396 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.293394975 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.286407271 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.27943779 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.390853943 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.825684177 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.298864905 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.285197458 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.282806332 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.301894963 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.286218789 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.281805256 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.40453926 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.283920655 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.300135655 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.407741004 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.295980874 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.317780483 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.285423088 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.288085299 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.317411465 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.302076729 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.318330978 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.287668615 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301007104 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.300850679 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.283386209 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.298258907 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.297025698 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.287439175 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.292201815 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.280376585 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.322539311 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.299770852 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.299958561 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.3077673 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.407132874 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.283201877 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.392986356 seconds)
done (took 219.202325135 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.345541394 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.27664708 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.365682955 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.281482023 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.38453562 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.382549805 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.279203733 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.279675767 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.280328027 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.688048758 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.281155087 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.279623293 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.275479353 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.279985589 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.363026228 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.281874897 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.280148544 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.624815642 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.282710243 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.352751344 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.27842612 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.281162407 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.28281033 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.693422873 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.281407946 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.279081658 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.352529235 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.2826762 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.629919394 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.283216254 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.278192391 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.62902602 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.373092532 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.300750421 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.292791879 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.290336599 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.385686283 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.30277447 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.364319885 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.363650144 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.368123677 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.322041289 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.277338516 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.280890691 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.28532899 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.284327261 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.280685902 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.31089114 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.283382116 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.28361381 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.629211495 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.293861895 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.281288526 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.281839613 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.283119524 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.313982923 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.281934082 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.286836342 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.373169994 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.285874353 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.346095821 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.695874757 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.690952572 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.285680698 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.279364995 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.282231898 seconds)
  done (took 145.167748699 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.350848524 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.35773982 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.40354409 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.284486354 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.335032899 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.40655008 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.283696753 seconds)
  done (took 10.634571068 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.290047982 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.285918434 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.334760936 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.333453005 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.286494966 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.430488898 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.284027148 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.295397954 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.283803736 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.337139006 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.287782402 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.285374684 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.291425617 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.284370735 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.332154459 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.297202652 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.400215819 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.287735513 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.285712189 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.441217289 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283741433 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.293811652 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.338081699 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.296013315 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.289617177 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.29270919 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851594916 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.286343672 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284192318 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.286366597 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.284533405 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.323505193 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.289050881 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.278711358 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.28461824 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402800806 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.287440698 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284773275 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.286849944 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.282257631 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.2878221 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.287368972 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.288527575 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.285482632 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.288420245 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.310127498 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.289245258 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.289484019 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.288903861 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.289858972 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.338216326 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.289082504 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.285637746 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.285120906 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.344417612 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.294479736 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.28804444 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.284140197 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.29046304 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.285682545 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.445087434 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.334827176 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.289070096 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.335669411 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.288020342 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.288969062 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.289866616 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.288471484 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342315662 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.28860275 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.335774992 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.28688714 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.442751262 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.311710583 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.291098211 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.290597563 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.290232611 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.290346775 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.289324545 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.294850338 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.288036721 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.289227649 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.294722503 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.287478188 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.2870593 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392181666 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398600896 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.286310619 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.301236268 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.294978657 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.287873934 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.341651962 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.289776588 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.287036413 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341164931 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.403101427 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.34313596 seconds)
  done (took 148.696722663 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.294454603 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.295044009 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.290031492 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.306109314 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.290283678 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.289650778 seconds)
  done (took 8.982842844 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.291062419 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.292655714 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.290687803 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.29132254 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.289240614 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.293116932 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.290483177 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29157966 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.297820585 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.290226585 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.294783371 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.293499191 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.294436391 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.291771406 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.289933476 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.291381238 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.292100355 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.28955972 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.292783904 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291389523 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.395212555 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.290675482 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.291879298 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.291589953 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.298903073 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.29107572 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.299703098 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.292531132 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.290917103 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.300321864 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.296280606 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.293358476 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.293118837 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.300662167 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.296270416 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.293445817 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297092662 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.294985457 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.290464346 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.295507187 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.294049485 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.292426378 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.293253694 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.296961055 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.293520752 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.298960917 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.301199191 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.301018849 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.293089964 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.295077782 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.297420716 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.294862801 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.297049325 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.296048182 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.295336558 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.299389563 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.302505025 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.294021275 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.292738141 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.29440113 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.295770291 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.296424958 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.295770201 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.298264026 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.291504898 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.296862208 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.295797109 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.299577683 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.29379704 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.293429839 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.297584418 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.293096444 seconds)
  done (took 95.523354169 seconds)
done (took 410.213306356 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.474536679 seconds)
  done (took 7.694818574 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.730723554 seconds)
  done (took 7.957208695 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.269740079 seconds)
  done (took 23.502843502 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.318752863 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.348815146 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.30212191 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.294897738 seconds)
  done (took 26.485355979 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.328687017 seconds)
  done (took 7.551337585 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.286556789 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.304282587 seconds)
  done (took 13.816068198 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.524420241 seconds)
  done (took 7.747599023 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.309395086 seconds)
  done (took 7.543525444 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.288793307 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.304489959 seconds)
  done (took 13.835937123 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.274526998 seconds)
  done (took 7.497147963 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.497381345 seconds)
  done (took 8.722266696 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.294645092 seconds)
  done (took 7.518985674 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.290469333 seconds)
  done (took 7.513546026 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.922603563 seconds)
  done (took 10.145860137 seconds)
done (took 158.753063924 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.2886483 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.291651193 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.287183923 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.285381285 seconds)
  done (took 26.37360294 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.327742484 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.329576825 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.3301054 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.34055832 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.331422818 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.330424828 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.321300227 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.321295307 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.342094776 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.331787097 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.332402277 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.332855456 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.330621061 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.32094793 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.332939358 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.346205483 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.34203184 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.331900507 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.321847687 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.332928661 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.298671553 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.340171131 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.332281754 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.297429628 seconds)
  done (took 33.12499669 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.495720676 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.366405785 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.449641594 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.347704678 seconds)
  done (took 6.884274272 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.348536878 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.351779873 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.366847761 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.404772552 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.427877088 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.36014076 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.319709223 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.318930654 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.30487393 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.351848128 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.426104588 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.364820077 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.438092658 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.298235905 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.484143962 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.297191672 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.29768776 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.349488599 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.401279946 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.422052854 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.296347261 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.348170414 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.352490847 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.366561864 seconds)
  done (took 33.923216118 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.2963856 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.304844767 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.302210586 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.296862918 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.297306905 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.297665304 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.30322846 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.298621437 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.319245244 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.298716023 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.29658327 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.296973149 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.295926924 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.296466902 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.298073893 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.310272506 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.311996179 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.297240831 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.301171978 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.304500618 seconds)
  done (took 27.247699275 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.292119005 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.143641753 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.642982486 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.547253521 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.292901319 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.290234985 seconds)
  done (took 27.435161541 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.37359994 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.519031777 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.296490277 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.696407395 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.769354973 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.296148628 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.298948984 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.560456565 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.896726365 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.911825893 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.35630125 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.368217023 seconds)
  done (took 19.571917207 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.29800406 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.291313211 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.299442215 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.310013008 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.361239298 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.301972089 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.306324682 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.29336666 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.361703224 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.361732547 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.301077481 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.40651392 seconds)
  done (took 37.121660726 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380802802 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348147015 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.438422449 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187341575 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053560037 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504462421 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.195657977 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.236993606 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.300652434 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569629845 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294910286 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388003005 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.552933016 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305166561 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296983916 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.417042268 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523856636 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832790887 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296335939 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.635645592 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324773369 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296911683 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.815532651 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.327407644 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.507564877 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.280052551 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.558084553 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.0760025 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617328219 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307667383 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307184749 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297386291 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569510453 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01969252 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393544696 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307495987 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.165405874 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.848459512 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.301491869 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.718728497 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316358413 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.300703416 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310110941 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298340451 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.233864206 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308227793 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754461621 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.304899268 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.010517068 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.298901425 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31036474 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392518481 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.303024237 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.871399272 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448418126 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302787449 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.296254833 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303115182 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867564344 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.232222871 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312972745 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.234989688 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.775357854 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.717394295 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958938542 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.398249649 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.302135977 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302497197 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243545801 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.698130326 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317265772 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443557461 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.322208208 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992238348 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096772104 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.300808361 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.242870617 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885854729 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304390538 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.235473923 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52867619 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075382566 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238432696 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.247682001 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.235212164 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105921965 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308497676 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.817332284 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.308853022 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.748793908 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.314464996 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317401849 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323926416 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5250566 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.182711732 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299967022 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.29957428 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422284033 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320098675 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.750917319 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247131008 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.301657173 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558405444 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.511923358 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299354273 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.428535508 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525061553 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309822203 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.317243706 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31475256 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.311846699 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.926150976 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.313411628 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245927682 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319732516 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.077803276 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147580505 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320692819 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.40275807 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.302687078 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567807517 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.178875226 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.192209159 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369925827 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305240666 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.302481519 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.752523599 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154347045 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.204011703 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.303517667 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317644374 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.311670579 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.299698138 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295429859 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.298566927 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298530341 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.080057429 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527051333 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30364559 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57679862 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235296617 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446142288 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.344304177 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.524224205 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.665666492 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.302615882 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564859576 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301783064 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333319476 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315482406 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320696906 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399849798 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323557819 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.302817724 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561617129 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.305959086 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.307335432 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.75973664 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.083264908 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303512734 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.308026948 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.243241586 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928493017 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286609538 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.304722561 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.196874023 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.316270942 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369407884 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.30849367 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.314438613 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.324222674 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295309063 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.308504611 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.300790616 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52790962 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313913317 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.729800829 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385882188 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.522286375 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946322283 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.318843202 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.238097674 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.014625092 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.996291417 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304083534 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.494315732 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.303099309 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313376039 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315118145 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.956608845 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948618567 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305282088 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.660498227 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.312312104 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315066281 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.309959874 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306807718 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.301647131 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.264427123 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312577172 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.31696536 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448079705 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.31869274 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.239390667 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.821910785 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309272482 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.304654363 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.081366108 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339713008 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.668139149 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816392315 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565343315 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.139301053 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318319718 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.806081513 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.337357329 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.304887706 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304672626 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322362736 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.309447684 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312155472 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.317594225 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.658560094 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.787577231 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869294764 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108578732 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883744258 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387635511 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.312157498 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.211799194 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.765117258 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243673382 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.966546383 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521335657 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.770338094 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302874775 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5269454 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.61600351 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141835777 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315179553 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535779888 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389876586 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.314274309 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320578504 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519458822 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340434839 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321106338 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.248669989 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.607315754 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558808632 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314954947 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386802361 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763863894 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315861339 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.087349581 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.30569769 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.795820689 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499150763 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.857447529 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.735121989 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.305268704 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328829052 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813489152 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310882005 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.836250275 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972095059 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311856075 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.528323066 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250963839 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.31909861 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.318838121 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.308706477 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.792612066 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.309165044 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.568568586 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319026572 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243946722 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32325283 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883875319 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.164789813 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.315101875 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30956748 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161903195 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311227701 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653282088 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.317876463 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.281906949 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310675177 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.243054382 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244470235 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.003645897 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.319563401 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290884331 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864127215 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.739510522 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.448042036 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341361048 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159841471 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.568648976 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.32331097 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945695821 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535767631 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.257967763 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333598212 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.409479604 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311408053 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.296916152 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.191247032 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.548003147 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242508153 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.535324207 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.495664801 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.223212001 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.309976677 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524193287 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.193062045 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315220216 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585875481 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.023650115 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.332765861 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112786789 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334613561 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.31138208 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359447363 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.788199298 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319331511 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381181521 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32238927 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.322903181 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.323360575 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5034719 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323272795 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312808794 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.324612317 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405642092 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.312231921 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.364630277 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.084909877 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961692537 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125037423 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965518553 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325424762 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312972885 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312565866 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256234106 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458686699 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.842118387 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585483727 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44060497 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.879787489 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335807455 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323123891 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323842266 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526009945 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587209059 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.18769085 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317626818 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977413579 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.194626736 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32149845 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.525183362 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871850899 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915587431 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433437342 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323558541 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.766326302 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587629663 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.405530816 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311519489 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909998192 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.315899994 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.809130428 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.319072591 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322033305 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46089242 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323833015 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044209431 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.323954598 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.468926749 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.087595424 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.69420655 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575327147 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.867295626 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.323980849 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955921236 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101518204 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581828767 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38426447 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.32630064 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.424710342 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460032994 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.322879597 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.195448577 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312929031 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16561814 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.025784103 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.325270866 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956657466 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578347002 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.312225619 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.312877881 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350965269 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.325018372 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.539887692 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133587854 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542569888 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325664718 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.324986009 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.889011819 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955998798 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326315554 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258580222 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.317225064 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589765972 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.552746695 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340806701 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.767838979 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.027282607 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912835183 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.291430948 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338029351 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332561134 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107113428 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954337347 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.301061251 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849640361 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.975193267 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320730628 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590753166 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.321574841 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.314795827 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5935691 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.321917353 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.317493151 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328789788 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.951042994 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161699745 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.331365292 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.696863669 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.254480023 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.546186838 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020373395 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265593081 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313809949 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.521467194 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.317858888 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443820197 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326259599 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.325207174 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317772629 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.052198217 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630307503 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.321514788 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.323150533 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.306303712 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333812616 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323119755 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570082907 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322522549 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.99489121 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.672742275 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.575817324 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.334292295 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.30364613 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.320623848 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319400495 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.073360942 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3256283 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.970637745 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922293572 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.317915517 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.346952998 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.322578982 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.536018724 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531012636 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319063218 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331970147 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317172794 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335022227 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.224055141 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121362628 seconds)
  done (took 1588.086783586 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.327064601 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.356793799 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.347699956 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.441165817 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367763706 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.347378784 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.402594484 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.364168638 seconds)
  done (took 52.207575878 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.319002386 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.472364224 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.354202137 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.319400926 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.326627939 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.333650591 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.815331067 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.319003533 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.32644309 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.328172315 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.333319945 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.316822385 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.028704996 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.326761449 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.328697031 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.306670742 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.325633204 seconds)
  done (took 65.143457554 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.322230484 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.819278344 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.368917601 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.322403713 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.751734063 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.327010729 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.706302431 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.322711929 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.340102452 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.648221323 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.000012887 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.337987403 seconds)
  done (took 80.521113488 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.327845987 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.328342709 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.326990466 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.32781748 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.328484212 seconds)
  done (took 7.894018791 seconds)
done (took 2006.759178494 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.62211476 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.122263406 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.059951879 seconds)
  done (took 5.436113054 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.469018165 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.519094979 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.671685242 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.679734049 seconds)
  done (took 7.597148104 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.61112076 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.706117774 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.511813962 seconds)
  done (took 6.083921128 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.907641969 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.328737375 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.473468979 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.320605121 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.320375562 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.323204642 seconds)
  done (took 20.221043483 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.326544404 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.327858786 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.327912565 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.330251016 seconds)
  done (took 6.568713497 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.308466554 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.032727848 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.31129169 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.32763484 seconds)
  done (took 18.234469436 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.077511542 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.086308689 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.070733208 seconds)
  done (took 7.490651684 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.336187737 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.168272493 seconds)
  done (took 9.759867816 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.638088409 seconds)
  done (took 2.8935352 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.459206187 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.657573937 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.480203598 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.427191503 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.477125305 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.646791398 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.174777756 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.697208108 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.41341884 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.78442768 seconds)
  done (took 29.476995891 seconds)
done (took 127.347769772 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.512002304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.340641058 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.529553772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.48421362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.544905755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.529796071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.813013079 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.447433291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.988774295 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.97954008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.484488402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.545807732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.534224888 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.339478789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.530461709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.342766568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.551161146 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.566650159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.208119993 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.33646983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.81276599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.129267453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.316654123 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.149905123 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.553389481 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.437738652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.705762289 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.349870632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.324025751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.725371693 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.437313376 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.332473164 seconds)
  done (took 195.140506643 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.325258437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.337590615 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.324266918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.323084287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.335649621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.323158901 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.323981953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.337904969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.323643035 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.323250029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.353769229 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.323280567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.325160727 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.343387799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.337337194 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.349131773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.324681716 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.336111685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.324371758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.330208104 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.326741417 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.323283841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.337418717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.3269353 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.32502731 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.339922096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.324426343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.339374454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.329298784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.324381993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.342751007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.325630225 seconds)
  done (took 203.851056714 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.325623822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.324779758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.325720081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.324574231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.337855966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.326961148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.327859859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.33490034 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.332597945 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.326948374 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.325560167 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.338699938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.345561702 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.341177081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.327183657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.341490653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.325510677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.325472253 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.325568294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.326119569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.341528696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.325017871 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.325203742 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.342329703 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.326337767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.340331326 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.325221513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.345732507 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.326223623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.325576846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.327050824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.335123146 seconds)
  done (took 203.857610139 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.531457763 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.334689872 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.336359162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.289123491 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.336278164 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.336623578 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.332109128 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.527351579 seconds)
  done (took 14.285488268 seconds)
done (took 618.389944847 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.773698247 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.472254445 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.541462366 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.354882485 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.217272312 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.356489894 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.354598421 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.541417979 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.288043166 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.544658259 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.695871012 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.351618887 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.848454991 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.352521063 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.622510917 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.458132503 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.253469564 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.372386364 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.688843157 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.94999202 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.628494493 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.9232295 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.538422953 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.312600153 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.846251418 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.922377052 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.192096985 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.251760506 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.354663035 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.694918508 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.141097652 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.46218839 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.425190931 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.405312763 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.45738796 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.439648441 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.419959909 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.400275522 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.547668342 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.679134861 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.943399788 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.099349318 seconds)
  done (took 93.38739892 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.324140229 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.324275382 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.323985429 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.324384722 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.324127511 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.323906097 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.323617259 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.323942739 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.324445457 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.323469236 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.32534185 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.327167602 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.324702004 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.324906157 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.324127501 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.324117568 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.32602022 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.327964199 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.325832793 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.325112087 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.325950869 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.32511871 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.326228299 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.324904514 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.326553818 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.326051187 seconds)
  done (took 35.716571845 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.339753989 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.606436078 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.784201855 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.343813257 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.336873705 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.343319422 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.427007978 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.338026296 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.341680982 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.341981661 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.511764345 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.34021546 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.377935659 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.81138469 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.338988827 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.339409377 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.339428373 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.338158861 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.614487022 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.346722639 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.444651513 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.338464009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.426863053 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.348788409 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.360749246 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.339617866 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.344409018 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.867711527 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.341064475 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.511264841 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.215902692 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.423947464 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.820321539 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.795460236 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.217412704 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.342307403 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.339860692 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.516297455 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.340390072 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.340100962 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.427060762 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.338510667 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.795769303 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.988291504 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.356530728 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.341909375 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.890965002 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.514950584 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.620604383 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.347771613 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.819774696 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.343215333 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.342553152 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.342431368 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.619229498 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.346086835 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.34061026 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.900216591 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.360681212 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.431405957 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.343275752 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.341987056 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.622973403 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.340970041 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.614537318 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.344512325 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.350727969 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.343613812 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.799804708 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.343502532 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.019386296 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.357814525 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.342093912 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.515951832 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.611809371 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.928685353 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.34390301 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.628069064 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.83740858 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.42734349 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.345215947 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.858404769 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.429938868 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.344884323 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.34607423 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.345386506 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.342962156 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.393012287 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.425586508 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.937560578 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.000712909 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.918177555 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.447460882 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.355902589 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.342907288 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.901759856 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.360533981 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.344301715 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.792971316 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.010208584 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.357838136 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.351867685 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.992228876 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.360117246 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.431288226 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.348114867 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.805892018 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.345194635 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.39563783 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.344978465 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.351294687 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.346010973 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.431114416 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.347261262 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.344053059 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.981133744 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.534847018 seconds)
  done (took 177.748366981 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.338480245 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.336789347 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.337658618 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.337909421 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.336732417 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.343786695 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.338415378 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.338105765 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.34348632 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.337556351 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.337703927 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.337337778 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.339262374 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.339836322 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.348089679 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.345953007 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.948973147 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.341012224 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.339520093 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.33771846 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.158492564 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.340921378 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.339581231 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.352850924 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.33896559 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.340016037 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.357229032 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.340488649 seconds)
  done (took 152.244970392 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.347753976 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.979565534 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.345971994 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.499036213 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.367221787 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.34429608 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.493963806 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.411758692 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.348640795 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.346009289 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.344400539 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.683201695 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.346615044 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.919252397 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.55784952 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.493145697 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.917515956 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.347004093 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.345452749 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.344953347 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.4959891 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.353718202 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.685097177 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.977797186 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.348549401 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.9773158 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.333585231 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.347512193 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.346846333 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.982023058 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.345490376 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.689208243 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.433152693 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.415831795 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.985439528 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.926956976 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.922732276 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.510340256 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.346567573 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.344834346 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.345300557 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.336287958 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.010860756 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.34821701 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.348865913 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.008029025 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.364802185 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.349460155 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.359123755 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.345821185 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.416219752 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.418365478 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.716321389 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.037591392 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.436133578 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.367846906 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.496267318 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.734926235 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.349988103 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.924496326 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.333979647 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.034649671 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.352885515 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.336302189 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.348215023 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.353643671 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.516405682 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.495988968 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.924649223 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.348594446 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.925261946 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.516005377 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.345544971 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.346746815 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.351389848 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.034632361 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.926584081 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.51802151 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.498860213 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.565239322 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.337557521 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.34850934 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.337895596 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.436025927 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.347796968 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.991133226 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.926651811 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.350064016 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.3516119 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.352313581 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.352030957 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.548106103 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.026968684 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.437103423 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.919424424 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.73161081 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.719122294 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.351881513 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.418424795 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.349588741 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.719977149 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.352074847 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.416817897 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.800323242 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.718788166 seconds)
  done (took 163.260199239 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.619133477 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.627234125 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.448970671 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.471496543 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.994405148 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.937346035 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.761172642 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.482780359 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.464917349 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.612498207 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.68617677 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.440075172 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.537370372 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.446754595 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.105384657 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.424943557 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.447776908 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.485455144 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.454316783 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.434166058 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.057317217 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.652059543 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.533465233 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.536079727 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.45347585 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.162672216 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.949362131 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.923839936 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.538307 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.813038502 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.914071379 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.558306926 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.379673735 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.099200087 seconds)
  done (took 66.731795449 seconds)
done (took 690.350715312 seconds)
SAVING RESULT...
DONE!
