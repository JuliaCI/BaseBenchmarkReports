cset: moving following pidspec: 17538
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.327294515 seconds)
loading group "string"... done (took 0.552423357 seconds)
loading group "linalg"... done (took 7.331120577 seconds)
loading group "parallel"... done (took 0.153184127 seconds)
loading group "find"... done (took 1.069474859 seconds)
loading group "tuple"... done (took 1.770622952 seconds)
loading group "dates"... done (took 1.156098137 seconds)
loading group "micro"... done (took 0.233812894 seconds)
loading group "io"... done (took 0.887667055 seconds)
loading group "scalar"... done (took 36.157392323 seconds)
loading group "sparse"... done (took 11.290771201 seconds)
loading group "broadcast"... done (took 0.929141237 seconds)
loading group "union"... done (took 12.018384129 seconds)
loading group "simd"... done (took 4.34398072 seconds)
loading group "random"... done (took 8.59829696 seconds)
loading group "problem"... done (took 1.765409474 seconds)
loading group "array"... done (took 19.884724348 seconds)
loading group "misc"... done (took 1.69424197 seconds)
loading group "sort"... done (took 2.975634211 seconds)
loading group "collection"... done (took 16.489051437 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.506060818 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127301911 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131985217 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119631 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14739432 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11813103 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123398835 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088673789 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.831814479 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147121646 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113482358 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.388559048 seconds)
done (took 5.209869876 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173559774 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083486832 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083907731 seconds)
  done (took 1.224197619 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067396311 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124578863 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072451693 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068822608 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069558332 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068622719 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067956256 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068338579 seconds)
  done (took 1.59761101 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073883992 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071030433 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067933603 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069214535 seconds)
  done (took 1.341016509 seconds)
done (took 5.470473638 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.741928974 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211367171 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183547162 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.381189687 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130762352 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.17215049 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641101947 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.307471746 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183026886 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.078749019 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.1080456 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.335736172 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120366544 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.647214584 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076232537 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091240405 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137668069 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44255031 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069351545 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084135813 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090643944 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13016587 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0875994 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075240972 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146634375 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069864444 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134592321 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081997574 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06822046 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.209455591 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174194439 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668618214 seconds)
  done (took 10.168888596 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101204349 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099049297 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072445035 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129596436 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101728452 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074229593 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079409837 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071597871 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093793747 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133122806 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09426679 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109414542 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070493889 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07362512 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086482073 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.21236487 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081807732 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084485989 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074035042 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081949071 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112535241 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079705058 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081980791 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083159973 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133332137 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18541274 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101705259 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102508865 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071061453 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084969008 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118691759 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128493344 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068243188 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068240696 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126080837 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099367272 seconds)
  done (took 4.66849398 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.943086921 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136921494 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09002094 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130523278 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068026353 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109110199 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069354364 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084641977 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.205843851 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.384787524 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.566562362 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.129054617 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115023416 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103533992 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069561463 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073385537 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071580206 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.438521044 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102071862 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107803379 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08319925 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07317716 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072767151 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068582275 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070418679 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06721047 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071562898 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114536476 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077388208 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.306710324 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123090848 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074332251 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.915711581 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166822586 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07029995 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.244479572 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167773958 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092820947 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137988825 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070456984 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067608523 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155496172 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066798745 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071940331 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067834108 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08547828 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105720583 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1181989 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070704823 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068808127 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166385921 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066891529 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080023093 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.10996568 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15714391 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071199288 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28813502 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092179842 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074338716 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069137077 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.197010451 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122408069 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0699259 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071357535 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073487252 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073033898 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366463558 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068208709 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.243966705 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070453862 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079241389 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073303801 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073680933 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075241881 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074445876 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087248981 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06677532 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068419723 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076718816 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069144817 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069610494 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070363696 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093924459 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089153316 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354479151 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.171075824 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070308167 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068158342 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089445445 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098039411 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069085323 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067238425 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101744511 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067204983 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069505414 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.0680547 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068081859 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085461101 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071605439 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114390873 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070620105 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.1267415 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096860463 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071061101 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100116566 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079320392 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069325983 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.403917585 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067065727 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066622853 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068891434 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06672956 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069103899 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06803967 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078209738 seconds)
  done (took 21.95495479 seconds)
done (took 38.793689024 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236440666 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073017007 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073053698 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073138923 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.072957244 seconds)
  done (took 1.669704282 seconds)
done (took 2.80076249 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118907519 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098951904 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068520213 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099278904 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071085168 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102891452 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102362198 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08008609 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10177439 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06856016 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100230615 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068133061 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068141101 seconds)
  done (took 2.290129571 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085239938 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085775422 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072288469 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085631191 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06633952 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083918969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083954969 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091111204 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088860445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076116523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067809236 seconds)
  done (took 2.012486579 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084077986 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086737098 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073859755 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085668131 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067580312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085682128 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085486115 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089358808 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086087072 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077547363 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068008425 seconds)
  done (took 2.010417328 seconds)
done (took 7.430594571 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078117604 seconds)
  done (took 1.188375198 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.518907879 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.568255987 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080687309 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.104468201 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181904449 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.110611453 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.239249316 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083123835 seconds)
  done (took 8.150611647 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089665326 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084416486 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073680296 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074459916 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072000459 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072834357 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074214731 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074954677 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07523119 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072346856 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072842056 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074707633 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073320722 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074879627 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075563872 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072218785 seconds)
  done (took 2.39370443 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092504815 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093012169 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076107238 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078118576 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07645496 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075363099 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077378146 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076602087 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074797495 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076284304 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078355995 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07703895 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075732686 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067329334 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077646434 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078883454 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074589754 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076780178 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07771871 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078320329 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078373011 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067449146 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075179749 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077546776 seconds)
  done (took 3.066854058 seconds)
done (took 15.920519573 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.104061363 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069529705 seconds)
  done (took 1.288890072 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079840995 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082266514 seconds)
  done (took 1.288661225 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081156508 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065918161 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086854671 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079244706 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068575027 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068596934 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087815031 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068753729 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06864096 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068715445 seconds)
  done (took 1.871319112 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068506458 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075747254 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072264949 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081732788 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075378499 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067596982 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074049219 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070384888 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078658181 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065905521 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073152808 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086098768 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073379868 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086672518 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074211089 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071679395 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073178299 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069286767 seconds)
  done (took 2.469137845 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065944638 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06724484 seconds)
  done (took 1.265408043 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067764093 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064564017 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069264573 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068848445 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066831744 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065938889 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066658101 seconds)
  done (took 1.598608771 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381563742 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117327676 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.301359789 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075467 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084839502 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247721473 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070532046 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074982825 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074636709 seconds)
  done (took 2.597258699 seconds)
done (took 13.510599303 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081000199 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088411809 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098975673 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368919915 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096470582 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.071740411 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11731676 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180743539 seconds)
done (took 2.246875487 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208075971 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.641723972 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401074612 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204989538 seconds)
  done (took 2.383163911 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.318856696 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090839359 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065049065 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071958314 seconds)
  done (took 1.690981172 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068097472 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072440546 seconds)
  done (took 1.282314095 seconds)
done (took 6.705236041 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067991554 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069156202 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.068670648 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.201545134 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067916968 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065945841 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067326438 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067862442 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069633927 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069353386 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069191027 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069571354 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.069451818 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068998992 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067392083 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067533088 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067534232 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069145797 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067602271 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067333191 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067652221 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069393326 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06717988 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067322956 seconds)
  done (took 2.939027585 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082900112 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067945908 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07490366 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073563155 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071863116 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073439185 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073612901 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069929895 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07401418 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072175941 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07182672 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071956621 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07177364 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072022846 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071441616 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071754646 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073478381 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069854027 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071826584 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071971806 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073547003 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069818102 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072095897 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074220749 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072351102 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072173224 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0720102 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07074144 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073836936 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072325314 seconds)
  done (took 3.323124818 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070930801 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064377258 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065253608 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073592209 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065896629 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06683713 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066059484 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067172959 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066940499 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066492864 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067378081 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066095763 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066081914 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06706368 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06683354 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070615564 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082692687 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06632163 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06621477 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067237289 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070307551 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069619721 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066772427 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066044164 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066079694 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0660784 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066689231 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065967974 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066983649 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066012992 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069897649 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070456198 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066216238 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074301719 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070405575 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066753057 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071145052 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066204163 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066896147 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06583447 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066056774 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066322058 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065929863 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074202835 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066581622 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067568262 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066550217 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067272499 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066714497 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068332497 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06641714 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066087288 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068392445 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067906273 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071336836 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066318244 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067458006 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067106339 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067449231 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066678446 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066126138 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066311285 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069915429 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067078746 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083095534 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072935982 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06471884 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066366108 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065352749 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067876607 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066402041 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079929209 seconds)
  done (took 6.055536751 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086964167 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087131356 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067949334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06724365 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063181785 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065565905 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071315041 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065309174 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067802933 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082826172 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065839236 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067500402 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067818871 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068967172 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065441305 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067677028 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073446582 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063445586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066637708 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070986962 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067531452 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072954893 seconds)
  done (took 2.706582162 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.143591322 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070419657 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102900988 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075203199 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072047416 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075862261 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070808402 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07086747 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07124638 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07134975 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071187973 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073144887 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073725451 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071380679 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071310963 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071949842 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073163146 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071610099 seconds)
  done (took 2.555409452 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078003739 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068526747 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087675208 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069891184 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068853669 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071569676 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073998709 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077341277 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071947426 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069982781 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077333794 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071847494 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071925249 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070045222 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071769924 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069789525 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071973916 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069935067 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077254039 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074198292 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074355598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076806241 seconds)
  done (took 2.768702543 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080389554 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069111623 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083848765 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071442629 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065290138 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066964532 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073501578 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070347869 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072962135 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071297214 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069456978 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067227079 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071675432 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069650938 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072029892 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069992816 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07149541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06950057 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071099855 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064723777 seconds)
  done (took 2.5786537 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084257791 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06916666 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07040127 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07690672 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070642786 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071467971 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076842236 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070787387 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070658123 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088965788 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071382045 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07073956 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076747619 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077783757 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07045062 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077314448 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077077823 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076890089 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071341069 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071092009 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088714298 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070967494 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077230117 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070773784 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070476965 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070757142 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071249247 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074882601 seconds)
  done (took 3.243584395 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068227786 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067143955 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066586151 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06765013 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067066362 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067386946 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068049786 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067561376 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06979949 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067967471 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069708758 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069633258 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069328816 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069760193 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069146753 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069273766 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069717295 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067749304 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067423282 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067735084 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069178376 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069536396 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069485623 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067340453 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068026945 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06915384 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067536758 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067254654 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069262222 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067844593 seconds)
  done (took 3.212197726 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075597584 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073913674 seconds)
  done (took 1.310750055 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064468455 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080830284 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064344283 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072643998 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07068787 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068068801 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07363149 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070899441 seconds)
  done (took 1.722999675 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081928787 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076083993 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067734787 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078231161 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077403373 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08528324 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12350516 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069057779 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07639948 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068320486 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081672273 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069107976 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076592851 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069979975 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075511698 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076852461 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066614125 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073845635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070672411 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067575149 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069852611 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07879748 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072816619 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064862152 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071161104 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092266155 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080594587 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068320279 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073065073 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077427678 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075987603 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063826652 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069071418 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069286964 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067769499 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077914589 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083947367 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073008288 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07811185 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069876581 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077424981 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064687846 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074549668 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07730654 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08064991 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068828488 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069144799 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065190269 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06809653 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072337561 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064866809 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069937792 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064434008 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077308941 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07324194 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080259847 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068280588 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071651914 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072679211 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072697892 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07684854 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072056947 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072510034 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066927087 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078210309 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073045256 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074888935 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063828245 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063901102 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067116594 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08001369 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092552203 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075610684 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070022285 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069547878 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066996125 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073095941 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069934809 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074519585 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076275684 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068755691 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073282403 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077209945 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070067256 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072188086 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075177262 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067136592 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071797751 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067797025 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085453874 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.070320595 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067023658 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067004555 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079104607 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072717833 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067788437 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06702884 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075636682 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062688806 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06771645 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068406614 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070024603 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07796068 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071576464 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071761469 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077927389 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074745351 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069367097 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071219064 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065059695 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.197335604 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068847859 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077456948 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063151413 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071586243 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070006399 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068145006 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076855845 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067956955 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069079906 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078010582 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075818919 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067917564 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066318444 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073419995 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068882844 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071847781 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078507974 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067832182 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064696382 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06488366 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074137975 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068307713 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07341645 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072870121 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073193818 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064418443 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066596401 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073140376 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07823867 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070180484 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070674318 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07582083 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071030394 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067874223 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076563307 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072308879 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069404452 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075414189 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070766529 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064584289 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07097456 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072155018 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067615876 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073779439 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070722391 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071521875 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068783981 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067310539 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074591528 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069445155 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069110395 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07033149 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068303869 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080027765 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071739232 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064824345 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066376263 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075846825 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067898253 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06880919 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069604146 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072130913 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069193419 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067078411 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068529473 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071652918 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076789489 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071761971 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069506674 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075004781 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082038083 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068586732 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072049365 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068570268 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069725336 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069788405 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079359982 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075696903 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072634395 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072580633 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066259443 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074210766 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07679503 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068687194 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066806494 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06874263 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071789358 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075180167 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072621508 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06960424 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067302101 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070727281 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070929371 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072425082 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068773809 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069127061 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074334483 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066946179 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073756872 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068897436 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078896433 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071875024 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064408053 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068699452 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066227299 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075321341 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063928801 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067164432 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068552916 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0682113 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067252965 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071432836 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063011036 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.206623314 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077647106 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070213381 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068875792 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069995135 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076976047 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072530073 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073648472 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074881747 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0764302 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080658826 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069529595 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074075389 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.083949603 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069633358 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064561068 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074732176 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067884606 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067606802 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068241794 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067144684 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073202695 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076185677 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07586712 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064274439 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072953586 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06716206 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069232928 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064997632 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073621745 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072721342 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070792095 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076611925 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069450525 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06904968 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073076216 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068429899 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069293827 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06979019 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072905832 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06929311 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072328861 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068974032 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072060107 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068530047 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066546957 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070965348 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069283877 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070118466 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074816806 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068307418 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070014038 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072407431 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069345311 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070760681 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070500233 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070317316 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073011774 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070922522 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070645391 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072357929 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064729114 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077368982 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068547111 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078411411 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070637986 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066864738 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074895172 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07250954 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073698028 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06943919 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069614768 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071342974 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068583444 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072902327 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077264594 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068205758 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080471941 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076731105 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070970157 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072620397 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070794858 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071341364 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068913333 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070538182 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069274432 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070185566 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068392974 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07338913 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072466948 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070227054 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071427481 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069310053 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070509815 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06970101 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064376052 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069546459 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069080595 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068507572 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078285406 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069332727 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06909361 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067815068 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068630562 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067691021 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065416788 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074433819 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074776674 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068269982 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07491952 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068159016 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070817466 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079192966 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063261866 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066271453 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.19828254 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068191426 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076589542 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068710602 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077542487 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069110863 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06816316 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065983685 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067765278 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066809444 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065265279 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06690778 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07328454 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068925504 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067870473 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068958931 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072645524 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069363338 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07842192 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068837682 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071315975 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069292623 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06666032 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069164369 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069365474 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073016219 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069077449 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068385892 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066928325 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068989899 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070402807 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071381322 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068804792 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071375079 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076651891 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068800641 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072239881 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071192989 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064371664 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073000667 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069018584 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068282535 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069401797 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073348817 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075621428 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070141564 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078111573 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067942261 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070404472 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068853369 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067387234 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068705529 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069252945 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069141314 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069185351 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070023869 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077793603 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067178298 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07282809 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070139312 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070633231 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076559112 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069905812 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072999898 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073693458 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06976746 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072093878 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078425527 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072815708 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073389349 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068726282 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069817708 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073734953 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067839769 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075154153 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068840192 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067437072 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069732161 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066217824 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067137681 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066748587 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066830133 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073463786 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069398676 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069259281 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069289182 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066772052 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070705251 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070868389 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077441201 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072014516 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07299768 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064732343 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066708611 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06919848 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068286242 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071941772 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072159205 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075096766 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072046998 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070114513 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068498082 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079059946 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074979246 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07304938 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067918102 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072598562 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068804125 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071586697 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069688858 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069181204 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068926243 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072838109 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070749902 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06845972 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074629083 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071957006 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.202352144 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071621612 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071028359 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070271435 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063907316 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067973998 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070788979 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072986466 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071343626 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069242735 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08152017 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068831114 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070764743 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071353399 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069291361 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074752085 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065147744 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072163244 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069499836 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069325942 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064586338 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069875305 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068510075 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072466174 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070264478 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065138159 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080116145 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079689591 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073025916 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068170213 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067879861 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064946129 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064551835 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069362047 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069986674 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072432191 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080257867 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069281615 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069453253 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065338327 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069173939 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072298421 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072794769 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066413047 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064861112 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.0694968 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072697136 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075432888 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067778551 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068283461 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073493997 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072128375 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067270813 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07172655 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066920917 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073644293 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081598327 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069022939 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071144276 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076569819 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077935607 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069637722 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064942312 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069311596 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07289149 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070528765 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068941273 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068543036 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082698163 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071262998 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067821412 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065916301 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070689035 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070541445 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076871471 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067959958 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067622079 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074131716 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071916724 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076525663 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073786907 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076558963 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073407991 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073164652 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068602415 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070456393 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067208566 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06910232 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069487769 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068978623 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072921799 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075159674 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069316427 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080223331 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078879314 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071774252 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066053809 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069390861 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069747056 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064665947 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069724925 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06764336 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06718528 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067241321 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067524856 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070779072 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073699895 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070250733 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06867653 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067902713 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063361581 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071731633 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070829541 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06991605 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065693962 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067626664 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.201059939 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073670988 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070847577 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068677146 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073595589 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072902749 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073109861 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066024526 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077682735 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068958316 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072538477 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069538353 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069295539 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069824316 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073357497 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07341487 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071217669 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072109254 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073982278 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07101662 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06700951 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066607972 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075276561 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067217381 seconds)
  done (took 44.294821016 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09735017 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064176462 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062904804 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064509081 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074492631 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06601661 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065016295 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066062573 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066485164 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068043182 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065277215 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065487211 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072431386 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080134825 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075586302 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069593158 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065327795 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065938123 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065177168 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066106012 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072920817 seconds)
  done (took 2.709393802 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072505904 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077680703 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075639842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083308866 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07438277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071839132 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077993902 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072097908 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080071751 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075499976 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080423508 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072425586 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075390166 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075694263 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075640512 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073323775 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080652892 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074769809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07235799 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077966936 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072845886 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077873371 seconds)
  done (took 2.91183748 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066917158 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066170183 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069997002 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064253308 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067928862 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064294563 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071255741 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066751698 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071379374 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069021621 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069123804 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.077394411 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071300657 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064509038 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069583963 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066873615 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108604203 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07203814 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068612355 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069183949 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064445883 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07139121 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065079728 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064946245 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068291777 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071259914 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069329882 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06727261 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068198969 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068873008 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068759196 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067310965 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071660555 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070030558 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068712718 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068923125 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068221433 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071506684 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064925902 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067162839 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070405595 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065019373 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070001628 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070452489 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067010443 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067135077 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071506665 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068754648 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064419232 seconds)
  done (took 4.640710478 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076965206 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108422181 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071025715 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088697635 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081486381 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074928804 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072966432 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090053134 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066471016 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067618748 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083097055 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080956107 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068389562 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072014429 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073425183 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068478758 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069805912 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067804182 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071940205 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068237026 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071684187 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075162517 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082390607 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080393609 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071989337 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067929833 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068243004 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072632826 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080412199 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072392564 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072889181 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072964129 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082044827 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073766613 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068170005 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070668452 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083782516 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069330249 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070737168 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067254795 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070558662 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072300568 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075455853 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083276023 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069092263 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073416984 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068657631 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066180811 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080756104 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0709715 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07565355 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081507788 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071831325 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069208184 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072404366 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08249593 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068452277 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067434065 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071313196 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079946682 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066504009 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071812391 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081553199 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070257241 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07468052 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08139441 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074308299 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072216249 seconds)
  done (took 6.426057868 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075746209 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094398852 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08210502 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082353201 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075763753 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076403925 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076324978 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076377819 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078486486 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081437611 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079530759 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116104856 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083910899 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081506558 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078446257 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07868478 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078915146 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079179931 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078872026 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078725497 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079267119 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085272186 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079390158 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085230087 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082269066 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074670589 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078690902 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078653129 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085448884 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078832299 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081353776 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078030746 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078921158 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084945706 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081920334 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078389381 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069166281 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078585444 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079244603 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079584951 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074406932 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085273743 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078655275 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074920182 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078873405 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079072101 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084914914 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081617115 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081152807 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082828322 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.0792005 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085207624 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078106068 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078733693 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085045803 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.0878022 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084785788 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08526346 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0788479 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085231293 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08520396 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087987452 seconds)
  done (took 6.307982345 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081266537 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0735993 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085203611 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065310665 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070301962 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07611478 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068431851 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068448638 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07657417 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076832348 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07834889 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076133617 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078705085 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078951061 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076073548 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078427292 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075766979 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076115932 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076973563 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076152198 seconds)
  done (took 2.786355554 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076303617 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084138037 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071238627 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075430707 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073780107 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074724412 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072738414 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073041061 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071726052 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073795139 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078559249 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079353928 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071471369 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075669265 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078769109 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075666484 seconds)
  done (took 2.467858421 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082818672 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072710493 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080612056 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070241952 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070355871 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066310961 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068935541 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065743753 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06604149 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081377053 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06897305 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079658227 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069286429 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068329269 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06663837 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074709503 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066213095 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066629403 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069109268 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08143241 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073917081 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068104147 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073172229 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06960523 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072628753 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074079184 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069141556 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070776708 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084465384 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069632004 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072854046 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073572507 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066091169 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067495037 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067611948 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066502336 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068421079 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069400317 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074242665 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068700077 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067660919 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071858737 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068637497 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069987256 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065568438 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069322579 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065781423 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07216407 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067215892 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072570993 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069462918 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071407433 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069999656 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076356072 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071587548 seconds)
  done (took 5.168149687 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081034015 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070915219 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064845936 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066831641 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072165825 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070974635 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072652069 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070930754 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071180554 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067350322 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071292624 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072255356 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071627919 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072643476 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070880181 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072859307 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064861019 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070674055 seconds)
  done (took 2.56771133 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073456344 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067991069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076598409 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069836898 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069465323 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071143811 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065368181 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067596926 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067242923 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070292482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070020675 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071983665 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067419675 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071700679 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070851917 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069778597 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071396986 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067518488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070079122 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065188871 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071737226 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067481734 seconds)
  done (took 2.813265913 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093792461 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084494348 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137153437 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082357254 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088380577 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074707441 seconds)
  done (took 1.842080778 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090489714 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098347997 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070217626 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072368405 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077594412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073626144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073585055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074092713 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080263368 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078606592 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073510309 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083399849 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080364328 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080525542 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078059089 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07843203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073669666 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073959963 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070335669 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085344253 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074660016 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080444582 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074452982 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073862041 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074382635 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08062296 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080547247 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07924288 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073796955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08132984 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078509105 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074160679 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080768843 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078975623 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073113271 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080573188 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074108385 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085424292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078954918 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081013668 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072670458 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078679886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080634968 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078395002 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080685434 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074501779 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07758592 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073585481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074017038 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086663851 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078312363 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080124058 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077721929 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081035047 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080286614 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087351884 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078530804 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080117311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077180175 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076886831 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077917041 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078069944 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07972537 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078760864 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078424926 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080174203 seconds)
  done (took 6.455630169 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10274899 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070226071 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074037191 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078374162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079726404 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073777713 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074040567 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073714052 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074024999 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07102779 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107655883 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074320956 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080730723 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080371041 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074366667 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074337573 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073913077 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080447936 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071020658 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086907116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073763863 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080419908 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080793011 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080064042 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078640442 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07836231 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074112355 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073948043 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0740946 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07417023 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077897741 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073639558 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079975921 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070738648 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080379794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074011294 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073770416 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077770599 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073955186 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078477738 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081176975 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084978905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073615955 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074160673 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078928544 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073526893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07416904 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070922287 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073590748 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070936362 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078706359 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078650151 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078511303 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080314007 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074228514 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073994769 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073955597 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07376079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074180793 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078479573 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080298706 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073497212 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086565314 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073639834 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073697733 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080854596 seconds)
  done (took 6.397950967 seconds)
done (took 131.348808031 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198690772 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173874536 seconds)
  done (took 1.643893368 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069360647 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096941632 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079477414 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131872088 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068398552 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101909898 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100421173 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077922091 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067626895 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068228295 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069924415 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071827828 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135638636 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068342413 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067766291 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071353162 seconds)
  done (took 2.634128515 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096764149 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158422088 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102011869 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06830709 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098839992 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075730566 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068551547 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081159712 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074633978 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068753555 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075499587 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073751676 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06908426 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073792846 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074416711 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07602224 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068788791 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075817827 seconds)
  done (took 2.772378036 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096137309 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090334931 seconds)
  done (took 1.482324728 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155321891 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134145921 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201620414 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.328115404 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153014326 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146657868 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145519448 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14065799 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112791796 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136906726 seconds)
  done (took 2.94544522 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098816433 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145928853 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.260120944 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119244854 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077297233 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094135445 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120411117 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083546576 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082120303 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082569404 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082887031 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079432804 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102249916 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076833508 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078166627 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078997188 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105171703 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077436224 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079165035 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079003401 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103448975 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070584218 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076895239 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077778058 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07929131 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080240762 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069469529 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069868822 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078568923 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078569419 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079798199 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093384599 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080806808 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105567062 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074806716 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106597594 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079849575 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077028987 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078754668 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076993 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080917935 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080938966 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077299588 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079681689 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069584314 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079571006 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069850342 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069825985 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080854689 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070998511 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080841302 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079612445 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103515794 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069417408 seconds)
  done (took 6.050182238 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106383273 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105341346 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071529058 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113336851 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10376702 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07203524 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106722673 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101865196 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110778715 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07405552 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071853526 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073684064 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082479674 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085421497 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117924584 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106860753 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075545174 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072874908 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109976244 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110315013 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072436081 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103410408 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100112071 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109615075 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071710128 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073238762 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072031117 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073515557 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078861531 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080106994 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072214937 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082214837 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090206281 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077886576 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070845392 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071526089 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071555211 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080712415 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082149795 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081669982 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079715679 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071414354 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071732806 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072917198 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072566375 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071294007 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079895875 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081499408 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07984498 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072014633 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072934354 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072083702 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07275472 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080806259 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079306517 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08301361 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081767405 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072271341 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071551723 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074356994 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083388532 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081513847 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081282426 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072880517 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081953937 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074885234 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083869651 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085198476 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072014816 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072777756 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071709748 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071742438 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072880367 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07845727 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078977586 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073154625 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071497511 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07135529 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081137733 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078532197 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071557115 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078544486 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070415655 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071192686 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072291312 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072706326 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079202932 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080764215 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073435821 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071391664 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071502969 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070662721 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06981736 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077156762 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079028342 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078867723 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077989956 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071243957 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078598036 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077750234 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.205597715 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078674584 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070890431 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075510951 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074495213 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081708269 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080101848 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082697195 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072542621 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072089934 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079426079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082660766 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072571462 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07964636 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082750525 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080468674 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071445387 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083127563 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072832999 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081655136 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069866754 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079695952 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070426412 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077360976 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069490071 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069463776 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06956998 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077683522 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070906815 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06992808 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071019841 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069413208 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076960358 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081440177 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071264374 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077363648 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078497721 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07219016 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080346869 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07143374 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08088086 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07123248 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072948865 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071051595 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084457886 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072961772 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071669599 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071919292 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082763661 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070203098 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07954328 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077037283 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069430167 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080570275 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07940325 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076669917 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079626087 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071285824 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069562928 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069807447 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070161397 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076236303 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078928358 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07114654 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069971851 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077439549 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079155781 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069152936 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07709711 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077126792 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077280122 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069791723 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072168884 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082912123 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082298535 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078054213 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07740511 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07969339 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072030939 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078744766 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080093852 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071970982 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084874851 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071590215 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083507845 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080043502 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07763616 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079161658 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081411494 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081669371 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081868115 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083575101 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070616182 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070887682 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078107114 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071032465 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070582433 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077463254 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071510487 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072468357 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08405158 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068525478 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213455162 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070560202 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082665027 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071502053 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073806839 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086223216 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073108543 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074129889 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080949104 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075304465 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08044418 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084621703 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08041465 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07209035 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073620537 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080837444 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081503185 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072688035 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072786591 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073496569 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081075406 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079466523 seconds)
  done (took 19.057043175 seconds)
done (took 37.890373086 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.190131375 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14090404 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.155978696 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111531371 seconds)
  done (took 1.976841104 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108793233 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097267663 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.089203501 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069158339 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098797452 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068722447 seconds)
  done (took 1.86201751 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266626518 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185117739 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168855215 seconds)
  done (took 1.947384311 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.193134727 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.181618147 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.406047406 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.247703803 seconds)
  done (took 2.454045572 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.134481881 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08484481 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067564245 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083963011 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124284997 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152406269 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095411978 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.119878191 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078957639 seconds)
  done (took 2.316458912 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14214545 seconds)
done (took 12.028834766 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12132373 seconds)
    (2/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.197876635 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09656938 seconds)
    (4/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169059887 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.198143822 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101028724 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076277152 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075696859 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072208339 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114596591 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.091604029 seconds)
    (12/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075844191 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079444066 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079747608 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.100869196 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08341048 seconds)
    (17/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081750632 seconds)
    (18/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.220601486 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.165754074 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075228991 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075503569 seconds)
    (22/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.223143938 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.209687415 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075553033 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.431576839 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087497014 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073654199 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159012238 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.230872402 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185495666 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070303 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.190736503 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106218772 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.113931919 seconds)
    (35/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068891395 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077903032 seconds)
    (37/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.164714414 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.068382074 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089742175 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072118687 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077504361 seconds)
    (42/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07644172 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087730347 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.103008903 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093659124 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082690637 seconds)
    (47/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118617768 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.146273805 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162037687 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076127909 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.222457071 seconds)
    (52/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112696086 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118584025 seconds)
    (54/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083118232 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079230821 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077786169 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.070837095 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068580838 seconds)
    (59/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.178597319 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098653491 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085948627 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057778602 seconds)
    (63/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155552818 seconds)
    (64/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.211969371 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.178351923 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068884336 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.0769305 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057163097 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068809299 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067823658 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079043937 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112958345 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.192056578 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087331386 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077377653 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162907958 seconds)
    (77/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076454983 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076633849 seconds)
    (79/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056021421 seconds)
    (80/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065802319 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069486233 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05593864 seconds)
    (83/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071596299 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072855618 seconds)
    (85/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073832763 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.294768393 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.181530024 seconds)
    (88/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071122825 seconds)
    (89/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079558575 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.078032608 seconds)
    (91/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.109151769 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.15229554 seconds)
    (93/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076574302 seconds)
    (94/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094539888 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164022678 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055158875 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155690172 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172499302 seconds)
    (99/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.168550721 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118208786 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186987214 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12069996 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075078074 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 0.127773048 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073576321 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073590281 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153746104 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07399487 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.115265387 seconds)
    (110/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.203098098 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075530188 seconds)
    (112/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056589422 seconds)
    (113/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07072803 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07352109 seconds)
    (115/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.116038574 seconds)
    (116/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07986989 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075024955 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.055247691 seconds)
    (119/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.169655004 seconds)
    (120/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112907673 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056860673 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074974507 seconds)
    (123/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.109473492 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.218867628 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155956818 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089415149 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075870301 seconds)
    (128/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.185774552 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074878471 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095657767 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056650753 seconds)
    (132/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.057718288 seconds)
    (133/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069204857 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088321459 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081492804 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.149141059 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068702604 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055651841 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066969568 seconds)
    (140/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079281596 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.1736421 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06959533 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168623916 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077798912 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057270272 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075464104 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.119175853 seconds)
    (148/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06637658 seconds)
    (149/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055175603 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054823433 seconds)
    (151/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089643517 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07274839 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090280749 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090318368 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078467117 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075164632 seconds)
    (157/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.104122634 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064996405 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082631946 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094824568 seconds)
    (161/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076740528 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150002595 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.111660901 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.1699718 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071562143 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065998259 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056013081 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108525556 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.0556981 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066137085 seconds)
    (171/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055416753 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073657949 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072639714 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078476011 seconds)
    (175/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072721189 seconds)
    (176/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075642737 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140502003 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.109059883 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153620757 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05835165 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068947571 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13731121 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068891272 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.056554409 seconds)
    (185/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090305357 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056374808 seconds)
    (187/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.275133047 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072089057 seconds)
    (189/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.104257301 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075782798 seconds)
    (191/309) benchmarking ("sort", Int8, false)...
    done (took 0.142891601 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055303813 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06676424 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067242969 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057591109 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055303258 seconds)
    (197/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056831246 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06533401 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055986819 seconds)
    (200/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.104806052 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125335285 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081407939 seconds)
    (203/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070399606 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058813164 seconds)
    (205/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070046928 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06907596 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060540907 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08033609 seconds)
    (209/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.11417894 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067999276 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174337391 seconds)
    (212/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.057193417 seconds)
    (213/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070337425 seconds)
    (214/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090711694 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067121588 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.056734481 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087525166 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067219486 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089612247 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074086405 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067240168 seconds)
    (222/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067401833 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076205209 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06969478 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093460242 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075656335 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095221564 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.144520132 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076040619 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074085707 seconds)
    (231/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055964004 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136252373 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068519396 seconds)
    (234/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05669495 seconds)
    (235/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07726487 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087419781 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130556178 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056132324 seconds)
    (239/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079588936 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074601885 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.0816705 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068025865 seconds)
    (243/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055718553 seconds)
    (244/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183777181 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094231751 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070025157 seconds)
    (247/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059057547 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05729227 seconds)
    (249/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.118795504 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069856132 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081445617 seconds)
    (252/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069140577 seconds)
    (253/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116651099 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057529569 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068090699 seconds)
    (256/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071206945 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125297025 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.074360479 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057103376 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057390428 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.105077599 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11319224 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130144205 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.055319198 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068130406 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.055054537 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.187499126 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058121936 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.057785824 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116615126 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075617063 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075793689 seconds)
    (273/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077242949 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06830476 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06862855 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073931972 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092600798 seconds)
    (278/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068447421 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05904693 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071386741 seconds)
    (281/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075062903 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057705708 seconds)
    (283/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.068140159 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068926812 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071027057 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0689318 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091381148 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.057824136 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145854973 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068807717 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055763125 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134495235 seconds)
    (293/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067819184 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075406989 seconds)
    (295/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082261021 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067977083 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057160715 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072706263 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055828302 seconds)
    (300/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067896502 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07417902 seconds)
    (302/309) benchmarking ("sort", Float32, false)...
    done (took 0.127418428 seconds)
    (303/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070617278 seconds)
    (304/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068026837 seconds)
    (305/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.056131422 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.229089519 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071193622 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078058034 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.057366154 seconds)
  done (took 31.514168569 seconds)
done (took 32.853517105 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086259415 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09567885 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079757315 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095713503 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083816377 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082286314 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077020379 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082045343 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08471501 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085316594 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082589426 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061576122 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077937259 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07766731 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077835612 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093363878 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083059842 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078819656 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078702682 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070451652 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078538887 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070807845 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072642996 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.062470656 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08315131 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077263432 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079695154 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079198305 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070876997 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070938453 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074579132 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078852592 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070280093 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08458133 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078984352 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078013698 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079573723 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081997337 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072255656 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070531319 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078459141 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070394401 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077379523 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078400321 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076538614 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075809181 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077826131 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082512393 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095554999 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073379745 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079557535 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080099689 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.08176889 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0775599 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075075454 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07781934 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076563943 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094805532 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078129227 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07346958 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079838804 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.0788448 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076357543 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077814154 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077377959 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080013588 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081617548 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076501807 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079756942 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076444438 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070175033 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077784431 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074442974 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070108411 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080387143 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084935539 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069494243 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076570386 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077178333 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076766651 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06809935 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070072118 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06949764 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074125934 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070217728 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.059310948 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072257542 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074300672 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067346776 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076135171 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074261758 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074945061 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06910592 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079092463 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067084461 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073018873 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06933605 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067849712 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069064 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072292922 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067461168 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069628439 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077379725 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068568271 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073304487 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079066359 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067297206 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074515955 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067860356 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.07038913 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082556256 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078492856 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068435761 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069727878 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066382464 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073949217 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066322226 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066642712 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067328596 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066336168 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072075688 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066021757 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068448473 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07321016 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.221986196 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069685149 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07388432 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07224812 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069335397 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074993597 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06856615 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068694631 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070654794 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067386974 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070888691 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068843574 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075123523 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070507736 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075425008 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068783543 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076016514 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073281036 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073970313 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073667788 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066998224 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06421932 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071784899 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073791018 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071712521 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070621796 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071542853 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070158328 seconds)
done (took 12.961572461 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06924342 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.130865851 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097028995 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097199898 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088703196 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07101311 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.08023685 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099273416 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07288179 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101905129 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09096083 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088830008 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113397299 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069519273 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070370057 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07452488 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072090865 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08420783 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099707176 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091310464 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112903841 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068231142 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.090874104 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089065783 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086949981 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093039182 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069973682 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074282185 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074415799 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104130387 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091285007 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074500371 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071541361 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10126074 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092017328 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08333678 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068456903 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084068458 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070145746 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069214231 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069573597 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.095938841 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080454712 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080965543 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072245083 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078042406 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069778837 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08328619 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088565012 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07978438 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08536561 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.097959139 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071053515 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084771618 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067376942 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084630578 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.07751258 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070748729 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068934907 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075577461 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068336519 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071764974 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081308558 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080722376 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072403092 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084133813 seconds)
  done (took 6.868902735 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085234745 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093332672 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083782069 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086694044 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068587422 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069682726 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069376166 seconds)
  done (took 1.994589855 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068476579 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087976515 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090049031 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091863741 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084353113 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093857547 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078799098 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070611301 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095769432 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071066217 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089898394 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097626205 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072079223 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081080886 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090162796 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068331961 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090442996 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06861505 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071199164 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090116976 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074347198 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096391913 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076130664 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069353148 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081253905 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069139347 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111756619 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072763877 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073918351 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073759923 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072746447 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109590183 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083690908 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078938506 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071746198 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085356809 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084576291 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07456266 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082226432 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078628567 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081372138 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069880727 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070138855 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070679835 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072685439 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078641045 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069764186 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073002664 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07137704 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087032979 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067738375 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081308261 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073524912 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075998603 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07161229 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075533133 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079125739 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070199624 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088491718 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072956907 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086619738 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086200482 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083955699 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086226339 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073496877 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082307011 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082476981 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072783072 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071947451 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072898583 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085366211 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069736712 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0719461 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079917672 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072742641 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091129584 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089785807 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070410101 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081665424 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069225844 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069520668 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068894943 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089985385 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073667633 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069156752 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072755688 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072492959 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071901982 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067854738 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07250749 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067409731 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074362551 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071767599 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072194633 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070958063 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083197373 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071530334 seconds)
  done (took 9.018669657 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072158875 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070224866 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071937944 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070210482 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070342793 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070133996 seconds)
  done (took 1.88953539 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089818166 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070286502 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083678465 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075143533 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105060895 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085836415 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087401624 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07792211 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083907886 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080344834 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086366958 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088028511 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091068506 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07377669 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086807542 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072502697 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087275945 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07822234 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080893403 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074220907 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085826767 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07389127 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075934758 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084309394 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079754247 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075612515 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082809627 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08197945 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081301184 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081616653 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076240683 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079634811 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073765307 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07947292 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086576848 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072515742 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072646895 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078519715 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073551211 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079572127 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087837434 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07384513 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075272188 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078291846 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078891161 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074444203 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080436296 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082258692 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088456544 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079161022 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079193161 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07247396 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076212378 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078446231 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071884015 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077967479 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078098841 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086642278 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07420214 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072282442 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.0706194 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076781409 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077680265 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076704985 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078727559 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077700296 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071832316 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073895975 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074031404 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073035491 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078125467 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071142319 seconds)
  done (took 7.134388114 seconds)
done (took 28.328620738 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534404065 seconds)
  done (took 1.95043303 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597530146 seconds)
  done (took 2.045187396 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.518855671 seconds)
  done (took 7.959908068 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.358449282 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470956022 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.694212682 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133228668 seconds)
  done (took 3.136562052 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.721547312 seconds)
  done (took 2.172238579 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231389986 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226004633 seconds)
  done (took 1.920465542 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386224269 seconds)
  done (took 1.830140766 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.092866106 seconds)
  done (took 2.537273472 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236890107 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16168833 seconds)
  done (took 1.846576959 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.427801238 seconds)
  done (took 1.873553587 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.825579717 seconds)
  done (took 6.276803091 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215676523 seconds)
  done (took 1.707501913 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241465396 seconds)
  done (took 1.692740173 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.726317446 seconds)
  done (took 3.17662944 seconds)
done (took 41.579385849 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084049009 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086059947 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08572274 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081575045 seconds)
  done (took 1.768120466 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077270172 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074415837 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078887662 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075894626 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080034442 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076904849 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078207185 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078585433 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07663087 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076758155 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076462751 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076295056 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078582858 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077967222 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07522557 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078819349 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080140963 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076180018 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079142887 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076766242 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074810287 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078463307 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078869855 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075545019 seconds)
  done (took 3.308149338 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079368918 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074184808 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077770485 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075415842 seconds)
  done (took 1.765753191 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080207423 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090337546 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088633362 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079499942 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090759402 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086557553 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070420623 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070457987 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071540443 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079421164 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070267402 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094920601 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090169085 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081733552 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083910333 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069658356 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071811964 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08982806 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081666478 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082657469 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074088594 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082135006 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072898173 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091924271 seconds)
  done (took 3.400299271 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085646045 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100965824 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08101992 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091215666 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091833496 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067433365 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087551374 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092976887 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125030003 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067750419 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072907273 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067525997 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076207703 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067949041 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081649149 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110188625 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112872295 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071966777 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098343526 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068380452 seconds)
  done (took 3.185329346 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073846166 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071005455 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071563563 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067323407 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078968299 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074343031 seconds)
  done (took 1.903337347 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070222289 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069255914 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069736282 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068481991 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073434703 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070401612 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068933921 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070331355 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069205227 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069195191 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07110599 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069771961 seconds)
  done (took 2.301966991 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.177797844 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070694013 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069952471 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068114883 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071662607 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068144368 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082162269 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06964388 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093445317 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068414394 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069142666 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070481527 seconds)
  done (took 2.443562227 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190248399 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075885802 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222055488 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148323353 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107060427 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111282744 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11025496 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109647393 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134544226 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098283528 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156073633 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156561111 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104609538 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133504506 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089052529 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103346016 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146962066 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160012133 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10442161 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158122918 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140365116 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125128994 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140979788 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10134657 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103695269 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11609582 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073532021 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080220428 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160814391 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126812025 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137006242 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113731039 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090683999 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167245871 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160177358 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133245134 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141800766 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083460831 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103590466 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.126410213 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183968536 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087526801 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152024718 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106259998 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078540882 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124372869 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110878682 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114154263 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098552136 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087237847 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134324236 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16469533 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.121100196 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081189878 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112312197 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102424098 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.10238307 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104324478 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155071285 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140413619 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116496691 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070310128 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104719752 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134014191 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120084777 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.098244456 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.112489449 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087678649 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118852102 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137058939 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11047116 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125293737 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.106822172 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082662412 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110131114 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123825106 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112970947 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14085033 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112891276 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070718929 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110444949 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091464808 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076711903 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.137655197 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073089569 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155554753 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093738125 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.100543873 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114449362 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100173318 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100567331 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138000424 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.384177991 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105300787 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073758127 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107209291 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11831074 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14003041 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088961641 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108126318 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114409763 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079881084 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131381011 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077703206 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121989407 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080978844 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121402729 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127228131 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07970344 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120587433 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103639133 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102461555 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127935196 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153769627 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088948332 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082336576 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158124627 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120208217 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10174945 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137319685 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150404856 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10365637 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097668451 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140417587 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165784008 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089993367 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154812834 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102405179 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083970689 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089595232 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119527699 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108811047 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119721971 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081438368 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.113498682 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154443141 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075878278 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094295501 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129878877 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079464501 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080543946 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102507291 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100551937 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094853503 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097240331 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100227061 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130743053 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270024348 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106982366 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119991981 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097426594 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157084444 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087337583 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101598314 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102891593 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072288123 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127513667 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147411878 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081173378 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157925867 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120354716 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11437119 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119294252 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086053841 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13927656 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082701981 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074948182 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137992549 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110257409 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107849462 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1432431 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112158864 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120755662 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115292052 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126117839 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125548299 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125241362 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109252085 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091589339 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113020567 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125086924 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075786049 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090883727 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081216248 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103579112 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093438046 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08337957 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135352545 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119282949 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108985659 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108688761 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094313825 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1387643 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076851123 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121508844 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116856468 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093845277 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.143449095 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143165503 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127064565 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097461266 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281657577 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072519387 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075189486 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087884295 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119543326 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08438377 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083161793 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110169372 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138879454 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122973933 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129363366 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118526214 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115555379 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149086533 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071988416 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117005855 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141692217 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11945765 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103957389 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092381346 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098800461 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135785473 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104444305 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169311136 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111156216 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121163469 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147854231 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100967765 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080059261 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101857143 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130407426 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102367601 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135705193 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096938699 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088667426 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105775495 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079806164 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098235893 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122514829 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116200368 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129671882 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108795147 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127304481 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07893593 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114438942 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121148353 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118928722 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06915492 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113788042 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14818921 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093761587 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11318455 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292370877 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079749149 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132053796 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162665857 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139852182 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08671012 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10828601 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118842018 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121989763 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118384159 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139524316 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106622173 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133969096 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108311225 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085047093 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086858192 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095747248 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104268528 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096907452 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104810311 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112686115 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097957042 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129925219 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105953765 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112486304 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118660215 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101713588 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096045297 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097383851 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166387499 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118218288 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165180915 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102480666 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139738786 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160489356 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077991463 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081194049 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07903759 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137911709 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088065651 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128204507 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111022022 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114037009 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118280211 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132409506 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094503857 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072486585 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109078673 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130456953 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122087789 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098405793 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100085949 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153312242 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100817163 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078288779 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257017168 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113349624 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101709835 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161214257 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068149513 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108025659 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080139885 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082946698 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123946285 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146454574 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08445316 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102268234 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120894775 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113405653 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124802938 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100457781 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114626698 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12552313 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144534482 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127166242 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091426991 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10875623 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122764166 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147084441 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100369927 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096894321 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163630019 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143896911 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15199646 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089204736 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115367439 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115292739 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110361124 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134711216 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083735888 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156796523 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081975845 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130314947 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100782936 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088173714 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122144251 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10808339 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08747713 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136808961 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112861077 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082815078 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078360888 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111994648 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115146159 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10060111 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075337554 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28169901 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074948355 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128912842 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151628424 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081769268 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10482073 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094381654 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080695171 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102307471 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101057643 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087093896 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100424433 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16276841 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089582632 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140815596 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128711107 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111598535 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132801366 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104461933 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642667395 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.0810305 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145575898 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115536796 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165930127 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101978989 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11812273 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11141377 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120324202 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140195196 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103715921 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176606977 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12665088 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113244119 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079133711 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101204503 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104854451 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089585395 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10807593 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114393592 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114780685 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095759737 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116372329 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123116189 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085313557 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098100771 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150742444 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115068433 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139853958 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13709533 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083877489 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113829623 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280869294 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0806295 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114328389 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143743074 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103246915 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098675151 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.09824074 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09715784 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149579425 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074043476 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14991253 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119749753 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111298032 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113124527 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110097295 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129995932 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106240151 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121556184 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094407442 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109994685 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114587822 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084409726 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07952488 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104528431 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108954177 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097792781 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09530073 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099363345 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142624349 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073597567 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09645215 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112098401 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137029934 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166604318 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090418901 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082828331 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115824275 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112730886 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112944252 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117084829 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080284802 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081573682 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080192103 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08424843 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106072154 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110828791 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110585077 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106736597 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154916458 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083676139 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219238704 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093971843 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102308499 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.0736395 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078577337 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09427979 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094536107 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252299237 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110123425 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150501311 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09515182 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089107179 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090877459 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076505953 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08455818 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123308331 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107683283 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115716786 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102017953 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067846328 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104018072 seconds)
  done (took 57.422452792 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120338701 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084346412 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097930495 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148424782 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12247551 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201497657 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160436275 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193008884 seconds)
  done (took 2.742085599 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072364558 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09574938 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103324477 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084367982 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068741825 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070494383 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.216535705 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081561611 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068737728 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094844228 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079355646 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071378583 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.401972436 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069350008 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070064252 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066892982 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070053768 seconds)
  done (took 3.373290615 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379159294 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.939960821 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.340986605 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080485126 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.645556964 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093540127 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.843213953 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.176421065 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08388006 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.86976953 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.410347734 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.177583682 seconds)
  done (took 24.638112774 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084672507 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078419705 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090039608 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090672721 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080103674 seconds)
  done (took 2.019970552 seconds)
done (took 111.750589463 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084901959 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.410491679 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058661974 seconds)
  done (took 2.09118032 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087706481 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086385903 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086207661 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08385105 seconds)
  done (took 1.947890116 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075866507 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078044539 seconds)
  done (took 1.7523955 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223612451 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169389415 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100801435 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085899181 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080711603 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085286795 seconds)
  done (took 1.856294949 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073894977 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07631462 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074651549 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077141141 seconds)
  done (took 1.901786203 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078153632 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056285693 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058424538 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061570499 seconds)
  done (took 1.855483834 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088769212 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08349131 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080364872 seconds)
  done (took 1.854956367 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099475832 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088517149 seconds)
  done (took 1.787765952 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082218346 seconds)
  done (took 1.681870677 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094167859 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099591182 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131698225 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113776624 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136396339 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113468604 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086022883 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086524503 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080242772 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088710093 seconds)
  done (took 2.629580772 seconds)
done (took 21.530417578 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079425451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.002375742 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361381221 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091031692 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71482864 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358614931 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.802043583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093761768 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139334727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070664082 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086159114 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652367518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.795077137 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.965882464 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.786280105 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.966752675 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65320454 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071598478 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070748888 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070930974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.790772226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071286797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070835598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071503196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65220233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373898824 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071536538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.966678492 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070785795 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072508841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375447527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071318465 seconds)
  done (took 14.070412599 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072287103 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118041932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074917488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08576308 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073395717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072120404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074675566 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071568187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121051632 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070834846 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087078202 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070812966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075119771 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071264077 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090601433 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070893841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071978135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072231848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073726033 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071446886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08981857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071374367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071124687 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071728563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071337477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082966687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071479518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071381585 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071177114 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073244682 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074639839 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071616605 seconds)
  done (took 4.093556384 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114674247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122849775 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075920525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104899859 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112244976 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07310219 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142980584 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095684546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127828906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071688527 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08797159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071616202 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103495267 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072311186 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090829472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071189168 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072434867 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072119567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071046727 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071456317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090792593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071978948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070947116 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072489519 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071503064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084503483 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071349386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07121486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072329927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073594076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074788762 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07192868 seconds)
  done (took 4.336749138 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074342459 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076847036 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084184088 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08526699 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071951265 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074098356 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075048017 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07272311 seconds)
  done (took 2.230236252 seconds)
done (took 26.333657394 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081413551 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072233569 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075488515 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089937621 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076520709 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079341192 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070182005 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078856492 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076396495 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076484882 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077637064 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070245335 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074555697 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069709409 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07649262 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071427142 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081217788 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074723504 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080488232 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08125571 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073541271 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075931857 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078038863 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.0805218 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080700401 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080453271 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079243249 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075229865 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071008214 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073791636 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079537127 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086359644 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070142009 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08095256 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071224192 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070422661 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074381963 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070085687 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080551085 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07837711 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072348958 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078856793 seconds)
  done (took 4.804456671 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090661701 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09437889 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087436953 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066040456 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071854885 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069493819 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092414052 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064438285 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064728955 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091959572 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.061367677 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064069275 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.068182004 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059439306 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064826016 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062468647 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066104889 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060419526 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064996092 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064158802 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092114361 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059421685 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079033703 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067977478 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061006204 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066818253 seconds)
  done (took 3.481827654 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075999825 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08468776 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091524122 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139886535 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109521446 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079133494 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08023694 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092690971 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094788958 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070831241 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.0736857 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094996067 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089557778 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075902204 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070236013 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085912811 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086643995 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071429373 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075168027 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093144132 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087407974 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086497114 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092348791 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085590043 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069293761 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072064781 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073499654 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082933338 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072296557 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078650811 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072565263 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073421926 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071875211 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080588198 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072807642 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071512547 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094441898 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079978102 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080226434 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070548609 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077514891 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071280039 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092734085 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126666361 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071151392 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076392041 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073774538 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079834829 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069688733 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095045472 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080778466 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071060435 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076418083 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069271993 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069648174 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072980428 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071512079 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072561502 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078219947 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075368681 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092734332 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074473921 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085309078 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069357912 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077738157 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069131827 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070966747 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069301114 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093482965 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071571953 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108553531 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070462693 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070566034 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078547911 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078404246 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076680285 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070113549 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085659503 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079867126 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073345132 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077678184 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072933751 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072259407 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097951012 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072701861 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071761201 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070580405 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074906542 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0722931 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070926723 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082290007 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070082703 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072331223 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086306642 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069412741 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071342069 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075001655 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073403802 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069015939 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079849366 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072897423 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070119899 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079080409 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071105108 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07176934 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081172781 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075987084 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068994766 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073854336 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074072341 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.0705175 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071037639 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.0719066 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07110118 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077794572 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076655386 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073853213 seconds)
  done (took 10.823415347 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160116477 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149830206 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072992998 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143130153 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07874214 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081252395 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144508829 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094971688 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070733264 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071437626 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07047176 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.107961959 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104039443 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114538572 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080213792 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070366818 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091394233 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113907292 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148351238 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144102665 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094156111 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080288119 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072916956 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071624735 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072834625 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079856851 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086752837 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078877833 seconds)
  done (took 4.4092531 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080714991 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103385922 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077730608 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094439027 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093118243 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072833772 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0751822 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074895141 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089524827 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082678608 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072409116 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076265855 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076382 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073245503 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071055146 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077152177 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076714909 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071379991 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073899553 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075514027 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079992013 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093674874 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074102914 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072362486 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076182672 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070836898 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066839471 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084869644 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070741305 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094013536 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069026195 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07522147 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083540057 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071299163 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070389061 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070477191 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070335835 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070348897 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072286491 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069158543 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069301321 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062118204 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069260632 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079755408 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08259461 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06084385 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074717152 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075212762 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0751926 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068266557 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072759204 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073019441 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072933449 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077496505 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074076881 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075052739 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07117037 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.080012033 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078067759 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070490769 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067951725 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069232308 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074489358 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068085353 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084221738 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074655866 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068799672 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070360262 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071896643 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082906631 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07013318 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074942224 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068406883 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072395733 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074527834 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07183622 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071011464 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06897929 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070035288 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07036706 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059382013 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070112835 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058356655 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07278963 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069925567 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069413564 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070152353 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074296121 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080448045 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071723325 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075762196 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071056152 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069454646 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072768494 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063867053 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072339639 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079988988 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083619618 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070579716 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068569159 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082331665 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074650471 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069832179 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061940292 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074005153 seconds)
  done (took 9.431799673 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093267096 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074246541 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084021451 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090463695 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087859473 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077583707 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079370937 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07206857 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085276183 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07827807 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080658389 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071463865 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080057148 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080465378 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072644974 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079638323 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074594482 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084738722 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084108719 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070608418 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078248379 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083509771 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091460374 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082455728 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081218624 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083232343 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09095725 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079923122 seconds)
  done (took 3.932930113 seconds)
done (took 38.49206493 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.712114593 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.864285406 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.687932599 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.020666607 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.89990212 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.702772151 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.807375834 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.682476496 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.849117543 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.721270144 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.015652806 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.796021241 seconds)
done (took 64.502509408 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.757267549 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.838456511 seconds)
    (2/2) benchmarking "String"...
    done (took 1.936352939 seconds)
  done (took 5.390129587 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.982230652 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.32985854 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.926690089 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.680137119 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.686461689 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.978409275 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.489272832 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.205562807 seconds)
  done (took 29.911149717 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.905174123 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.91648948 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.404772553 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.445483936 seconds)
  done (took 15.341463842 seconds)
done (took 62.194835775 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.719038081 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.721341944 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.708793931 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.666470155 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.738724463 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.698457957 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.968681194 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.67778503 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.674130789 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.669092052 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.676173313 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.105819027 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.689028355 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.885660848 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.672438665 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.684120442 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.742008618 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.244949141 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.828488551 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.686573673 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.683526216 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.708499625 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.673078697 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.678879554 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.719469192 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.670657064 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.078565923 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.684124265 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.292133618 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.674097449 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.699561271 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.050016681 seconds)
  done (took 200.683954256 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.667382484 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.596512228 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.667296937 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.698834169 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.104207579 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.842977877 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.76820166 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.128313539 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.666876055 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.690153781 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.860827981 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.663334495 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.878548498 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.615250696 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.691413284 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.738876706 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.832498801 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.900167169 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.696275297 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.817275056 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.680392248 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.668414865 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.604760233 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.847095825 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.705816791 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.748442599 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.676533261 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.842987429 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.857023224 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.804439932 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.695918277 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.669065523 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.89154206 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.540540839 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.68016959 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.681717739 seconds)
  done (took 165.721577333 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.857527448 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.663501445 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.662398291 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.662095917 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.675431256 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.663729282 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.788965008 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789678089 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.370195287 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.408219383 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.713142826 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.661048167 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536906962 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.660569069 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73512816 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.67322659 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.662696377 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.675721693 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.687941691 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.661757468 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.66246653 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794407355 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.67443316 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.662347701 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.667569384 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.661947409 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.667981333 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.966067475 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.660975057 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.890874803 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.661623762 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.667281408 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.927016777 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.661077456 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.661282449 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.589979907 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.328524511 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748697657 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.662972531 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.665707593 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.660213046 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.878434078 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.663040389 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.660874023 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.661549925 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.663802579 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872911356 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.663099215 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.784498907 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.664295253 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.140278366 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.660808285 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.660864588 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.510472878 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.23650697 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.661240235 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.66217558 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.66062009 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.659462545 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.666398026 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.310931484 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.732597306 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.662351126 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.663065444 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.664573386 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.659297731 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.796288479 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.658328755 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.969651128 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.715677582 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.797402074 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788358538 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.657846414 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.729705942 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756692351 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.658495472 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.657334945 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.657824943 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.658839429 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.659300927 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.741853211 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.659111065 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.658316117 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.791625461 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.666951986 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.660195477 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.711672476 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.727397116 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.659487663 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590911243 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.661629215 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.658517263 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.010296462 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.660135485 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.729155044 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.659392862 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.659465243 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.788209962 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781512455 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.373986214 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.661269155 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.222173785 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.798344763 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.659861161 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.87727885 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.660300638 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746289626 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.664813773 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.662073792 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.659669192 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.692342573 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.659802903 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.717827097 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.660797539 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.976373582 seconds)
  done (took 389.566983227 seconds)
done (took 759.503051034 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.276069907 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.243986445 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.339402168 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.259947383 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.23462266 seconds)
  done (took 12.948165419 seconds)
done (took 14.540990997 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.748712193 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.754131211 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.683783782 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.751431804 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.680644635 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.749751334 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.732057459 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.685333296 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.717713123 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.687192695 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.721189418 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.684913944 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.673339988 seconds)
  done (took 23.864941892 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.899739073 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.928890602 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.731106561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.90006771 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.708558046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.90143003 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.824308322 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.813223664 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.821444033 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.678513508 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.673533598 seconds)
  done (took 21.476817251 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.901033115 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.905285672 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.735173746 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91277544 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.709030865 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.908888621 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.82962316 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.818062384 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.816438122 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.679492781 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.675020261 seconds)
  done (took 21.485949589 seconds)
done (took 68.420814273 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.668721263 seconds)
  done (took 3.26445749 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.696149982 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.856826823 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.674841232 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.67238849 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.669468174 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.671044317 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.672715942 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.669445949 seconds)
  done (took 15.179864355 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.667114371 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.668366997 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.667483638 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.668416579 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.666378791 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.666419583 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.668703461 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.669233065 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.670434874 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.666703977 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.668502209 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.669805454 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.667957061 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.669725624 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.671200565 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.668064855 seconds)
  done (took 28.292190593 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.669980647 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.667187202 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.667876336 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.669527942 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.668861663 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.668491724 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.669835459 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.668082709 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.667583964 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.668078571 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.667691127 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.667720538 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.66724216 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.667071555 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.668393236 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.669768936 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.667649835 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.668288135 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.671489599 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.667756637 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.669326787 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.668420779 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.668170269 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.669263127 seconds)
  done (took 41.643382603 seconds)
done (took 89.975153079 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 5.281421339 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.199296429 seconds)
  done (took 11.078171151 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.670443329 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.67154051 seconds)
  done (took 4.943891645 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.670430544 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.670340256 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.670375478 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.671293684 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.671589526 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.670016257 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.670209483 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.670383178 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.669834911 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.670418529 seconds)
  done (took 18.302578636 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.670938675 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.671545825 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.668935074 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.670585609 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.671131179 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.671162409 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.671652399 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.671504067 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.670969003 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.66888191 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.671673303 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.671875795 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.671480219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.671580401 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.671859764 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.668635617 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.669579712 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.670842627 seconds)
  done (took 31.675340565 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.670847313 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.671620705 seconds)
  done (took 4.941021933 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.669707629 seconds)
    (2/7) benchmarking "second"...
    done (took 1.670165517 seconds)
    (3/7) benchmarking "month"...
    done (took 1.669187478 seconds)
    (4/7) benchmarking "year"...
    done (took 1.669223936 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.669350377 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.669577327 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.669340288 seconds)
  done (took 13.284878232 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.672073228 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.826613678 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.894541932 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.562148491 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.674013302 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.67559414 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.81932234 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.676398889 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.677061674 seconds)
  done (took 19.079195053 seconds)
done (took 104.901392615 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.516909578 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.671247629 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.060222954 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.719814013 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.689274908 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.982925719 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.671363605 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.874927548 seconds)
done (took 41.785812921 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.697540422 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.485266313 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.496145225 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.691362008 seconds)
  done (took 15.273149249 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.663647097 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.093582082 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.684393092 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.534967782 seconds)
  done (took 21.838683444 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.049545566 seconds)
    (2/2) benchmarking "read"...
    done (took 2.026316041 seconds)
  done (took 5.68675198 seconds)
done (took 51.096322196 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.680163565 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.67989818 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.677339029 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.680718278 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.678969385 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.678379861 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.676810921 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.678091191 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.679734484 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.680252631 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.680272871 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.680635427 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.680437889 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680537593 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.678555444 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679170065 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678011733 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679754778 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.678239908 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678878591 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.678890423 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.683239492 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.678990875 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.679721006 seconds)
  done (took 41.912841184 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.681718159 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.679294065 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.68283422 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.681753707 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.679271758 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.681773868 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.681898328 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.679874464 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.684143108 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.681260393 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.679961299 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.680350926 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.68104545 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.680920086 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681994427 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.680224729 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.682127319 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679805061 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.681865529 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.680998766 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.681711765 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679553955 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.678969804 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.681766147 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.679443299 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.679889887 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.681019956 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.680050853 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.681919648 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.679985019 seconds)
  done (took 52.037658908 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.687481237 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.688660285 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.682213358 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.682909028 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.682057974 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.681934196 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.682801951 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.684842464 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.682537131 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.682652801 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.682348713 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.682907776 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.68390162 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.682671808 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.682611546 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.684618302 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.683692506 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.684386278 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.683884563 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.684927371 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.683255766 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.683636494 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.684620309 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.684698507 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.684825098 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.683429902 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.683938775 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.684151294 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.684263218 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.684153168 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.685797169 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.684153029 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.684447001 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.684582187 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.685124963 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.684402884 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.689330518 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.690949587 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.684402055 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.684967524 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.68497261 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.684478404 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.685516704 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.685325408 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.685260631 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.684936393 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.68500994 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.686498797 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.686838142 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.684696442 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.685315183 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.685013432 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.685662148 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.68579229 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.686906792 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.685288227 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.684835044 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.686081825 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.686333238 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.685479312 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.686980568 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.686197238 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.686163785 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.68607285 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.685878117 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.687020524 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.687321821 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.686174012 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.686068585 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.686777265 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.685995747 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.687021415 seconds)
  done (took 122.93156411 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.686121729 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.684946966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.684149317 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.688446791 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684306832 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.685879554 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.68491943 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.687380649 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68461696 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.687567233 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687559877 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.687949955 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684586077 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.687729651 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.686583375 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.68589155 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.687935208 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.684380127 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.687293191 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.687700759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.688000406 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.686660096 seconds)
  done (took 38.715099739 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.687055633 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.687639475 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.68445761 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.688228808 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.685682311 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.68867811 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.687390976 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.686543547 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686779251 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.685528311 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685554838 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68791136 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.685685693 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686338105 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.685410326 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.686331868 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.687977586 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.685879142 seconds)
  done (took 31.974898124 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.685671993 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.686457594 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.687830029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.686903694 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.68734445 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.68906981 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.686493865 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.688383514 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.688260548 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.687173322 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.689751704 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.68913138 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.688875035 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.686677884 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.688826154 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.688082168 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.689611019 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686396467 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.689213553 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.687594346 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.686332881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.689311027 seconds)
  done (took 38.748322763 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.688939118 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.689109867 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.687617743 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.687398765 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.68747659 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.689878415 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.689515903 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.687576873 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.689915177 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.690561885 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.687648731 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.692286092 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.687607648 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.688907799 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.688146647 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687485734 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.690342355 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.690010119 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.690630338 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.687180377 seconds)
  done (took 35.394690768 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.689734797 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.690823742 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.691234366 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.691081099 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.690329551 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.690748585 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.691073215 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.691032259 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.692000783 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.691407567 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.691171954 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.690848416 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.691316667 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.690926255 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.692292488 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.690705213 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.692527368 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.69173793 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.691340195 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.692697549 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.692479876 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.691749379 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.691453596 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.691893449 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.692439012 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.692582565 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.691048525 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.691627598 seconds)
  done (took 48.977590178 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.691082325 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.690812962 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.690045551 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.688407478 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.688682031 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.689945026 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.68904742 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.689099169 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.692659991 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.689233747 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.692751715 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.692020156 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.691392319 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.692386654 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.693020582 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.692148677 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692831971 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.690048099 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.690990393 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690757545 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.694489498 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692864342 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.692317842 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.691095179 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690073227 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.692918553 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.691170274 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.690982178 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.693105193 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.691863715 seconds)
  done (took 52.356897009 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.712670188 seconds)
    (2/2) benchmarking "in"...
    done (took 1.716289513 seconds)
  done (took 5.047837317 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.691790159 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.693644753 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.692904747 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.691045432 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.69260584 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.693653456 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.693375076 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690807674 seconds)
  done (took 15.158968798 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.69375313 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.694543781 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.694833521 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.694376736 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.695078442 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.693882325 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.702029071 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.696038494 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.695616576 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.695151837 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.700858552 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.701558697 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.696811922 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.69441416 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.694608199 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.695999511 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.693915926 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.694421211 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.694905772 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.694907646 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.695551004 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.698096424 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.697193199 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.693155732 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.697430751 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.705382095 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.699680266 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.694995167 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.695350423 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.698423345 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.696172398 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.693943101 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.696565997 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.696542005 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.695787364 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.696545679 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.705253157 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.697347378 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.702256262 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.696680043 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.696394571 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.694786838 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.698839839 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.698047403 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.698688458 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.697325793 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.696714141 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.694698579 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.697857454 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.700437989 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.702273435 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.697173513 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.694701316 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.699802048 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.699103959 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.704609426 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.6973971 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.699678749 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.705951963 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.70693072 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.71186581 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.704596798 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.699250215 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.698162484 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.706324208 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.719598248 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.705002918 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.696038532 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.696431615 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.697239484 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.705198294 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.711189921 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.705754641 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.698391732 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.698608655 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.69762035 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.697290802 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.700773362 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.705015126 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.701890138 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.700236148 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.697927281 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.707505651 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720155645 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.697135324 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.698037564 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.699354025 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.699224529 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.700401296 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.710961908 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.700414458 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.699523124 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.698521984 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.698403911 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.70078722 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.701010622 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.698854417 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.700394497 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.697146268 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.698870832 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.700115583 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.703436559 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.707257135 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.699642319 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.699465518 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.705619396 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.699433355 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.700624925 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.707651394 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.699398 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.701235285 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.700348874 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.705482096 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.699159174 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.702906715 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.708096836 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.700639025 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.701326739 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.701020651 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.700775199 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.710095442 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.725673574 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.700135153 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.700507733 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.706197302 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.711091883 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.700445338 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.702661557 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.700681113 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.69767513 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.69836788 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.70252585 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.701008582 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.701775332 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.701373827 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.701760103 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.700792183 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.699866353 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.701094831 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.701529895 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.702225394 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.70096529 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.703483789 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.70418909 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.700913812 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.703102063 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.707979482 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.701980244 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.703219908 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.703462226 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.699295589 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.701379509 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.703093075 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.702410943 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.703060153 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.702900197 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.701962958 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.702320166 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.702786173 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.702220068 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.703195802 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.703604288 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.706740962 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.702306157 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.70606647 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.703252683 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.700914855 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.702653365 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.702643219 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.702641763 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.702197022 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.702432239 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.705586448 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.709796254 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.702819684 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.703057518 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.704514725 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.70364569 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.702640381 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703520962 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.705456649 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.710641257 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.703240634 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.710205861 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.703840705 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.703408911 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.702837109 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.703683287 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.70278158 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703633972 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.706571989 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.710028505 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.715844965 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.712166839 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.704825072 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.707985512 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.706099097 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.706192385 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.707603621 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.703884501 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.704469807 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.704846628 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.703410369 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.704070645 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.704782439 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.704071961 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.703195011 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.703818508 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.705105132 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.705203752 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.705203214 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.705527125 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.705524515 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.703423271 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.704974249 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.705130177 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.704539803 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.702394847 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.70327976 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.704157131 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.70548647 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.705628703 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.711564689 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.702561707 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.706065712 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705426928 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.703906989 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.704267116 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.704783084 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.706730773 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.705236253 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.712238955 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.705238738 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.705630654 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.713658379 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.705560443 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.704846904 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.708037261 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.705708203 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.703216276 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.708319208 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.712270901 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.707577625 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.706778666 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.705574472 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.705344452 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.704937829 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.711575758 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.704586865 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.704465604 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.706032906 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.707000345 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.704185659 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.707418301 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.706924959 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.707607207 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.708428548 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.707074323 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.70592896 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.70815901 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.706638782 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.706336152 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.707314169 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.709579392 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.714515159 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.711937903 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.706459601 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.709903188 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.708152754 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.711624792 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.708459552 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.707444077 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.708169589 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.719677829 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.716033905 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.714276754 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.708506942 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.708030416 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.713063394 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.708637423 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.712530067 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.708294506 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.708563346 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.708177968 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.708890156 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.705966188 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.709163115 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.708158962 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.709917834 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.708156433 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.712058905 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.708703237 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.707991801 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.709125011 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.70870096 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.709062383 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.707819688 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.70802368 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.71083489 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.709888666 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.71016457 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.708421471 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.715496656 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.709410089 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.710046278 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.708987953 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.709690512 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.708230476 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.709798312 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.709329624 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.712313775 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.716244799 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.712581652 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.718178837 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.710981018 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.717758843 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.71033271 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.712653524 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.717156975 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.707022209 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.708372594 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.709382706 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.709682864 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.717172702 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.71098451 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.710422021 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.714688536 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.709286319 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.710757088 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.710815207 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.710186656 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.711138988 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.711615586 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.719041484 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.711860207 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.714717593 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.712181731 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.70888336 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.710132945 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.710732488 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.709168082 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.714783079 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.711176834 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.711069734 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.710438705 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.710366894 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.710879757 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.711260342 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.711550716 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.708431745 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.710050048 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.717236931 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.711863522 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.714931973 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.712040777 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.719392485 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.711601227 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.718254312 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.712673384 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.712580654 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.711044599 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.71221788 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.712210645 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.711202662 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.712691955 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.711610635 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.712907621 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.715897945 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.712767662 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.713680499 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.712929821 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.712899253 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.711869926 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.72133145 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.734473928 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.713481194 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.716269527 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.710598691 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.713778756 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.716592791 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.712344301 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.711888742 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.715232418 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.721650256 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.720450727 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.712159297 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.71310793 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.714688593 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.71365491 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.712433687 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.712820673 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.713686031 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.712931546 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.713930965 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.714258084 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.717285524 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.713730725 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.713445753 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.714495719 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.714780213 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.723819908 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.713228782 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.714803391 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.714967018 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.713912247 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.714208262 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.71382682 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.713757154 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.713464213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.713418572 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.715002664 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.720959417 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.719545576 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.716448891 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.716123869 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.714143745 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.713488014 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.715186449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.714754653 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.71444872 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.714523708 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.715385654 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.713776006 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.714536991 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.712752292 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.714489512 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.715535364 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.715070193 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.717781655 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.722260929 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.714714942 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.712106775 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.714396129 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.714937112 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.714363173 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.714806588 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.721961809 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.71799781 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.725513587 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.723222258 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.719620214 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.714683155 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.717660202 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.72325103 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.714379122 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.716277015 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.716219314 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.717941331 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.716340233 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.71892049 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.71558264 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.722544025 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.716722787 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.716136271 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.724811429 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.718148792 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.716475003 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.717535912 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.720561507 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.716248295 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.714723715 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.716428389 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.71647816 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.723091597 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.719056763 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.717868012 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.718578059 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.715063833 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.717428521 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.720616636 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.716916861 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.717718742 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.714461625 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.717343028 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.716209103 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.718018526 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.714586876 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.716379655 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.7167029 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.719990882 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.722685828 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.714983108 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.718300275 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.716982696 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.717301202 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.71833907 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.717838727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.717714466 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.715424207 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.716844111 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.717788085 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.716785604 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.720744227 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.717350642 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.718589519 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.718840899 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.719822844 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.721818089 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.727967951 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.724584051 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.715524486 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.718057597 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.718784742 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.721627615 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.720332718 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.718192984 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.71940866 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.720050925 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.718503881 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.718481342 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.718701337 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.721515761 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.734164043 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.718601629 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.718406188 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.719723544 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.722890667 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.718766581 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.716939754 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.71895081 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.724559274 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.721899616 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.728082235 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.719606444 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.72703394 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.718372257 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.72047685 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.723609123 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.722631619 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.725762535 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.723109157 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.720180385 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.718912848 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.724318077 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.73489907 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.719608524 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.728523253 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74869729 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.720535401 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.721642805 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.720411325 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.719166223 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.720364438 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.721012983 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.720574488 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.719443577 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.720538128 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.720321909 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.720910027 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.726662376 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.721123706 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.720420745 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.7198601 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.721429273 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.721555745 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.718132198 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.721141154 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.720364341 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.721134578 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.721543152 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.721396912 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.721391297 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.733434818 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.730763992 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.720884876 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.721958427 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.718913024 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.725521047 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.724891248 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.73170384 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.729294622 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.722451887 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.721847523 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.722524565 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.722541779 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.720160867 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.723494154 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.720894454 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.722004803 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.719712192 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.734825585 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.729853498 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.727907963 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.722012263 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.722545165 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.721779084 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.72318134 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.722075307 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.722153103 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.723727791 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.722552388 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.726858751 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.722544171 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.722030434 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.725914845 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.729863433 seconds)
  done (took 1021.08463249 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.721181511 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.720081551 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.720423323 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.719950421 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.720312065 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.720839023 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.721441296 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.720707997 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.720956175 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.721296959 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.720957369 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.720320682 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.721284574 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.721438199 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.721299146 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.721077447 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.721045353 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.721420795 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.721462546 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.721239638 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.721320097 seconds)
  done (took 37.78824849 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.724073183 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.72280586 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.72154026 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.724320397 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72330198 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.724790984 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.722678114 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724058702 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.723543729 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721436472 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.724419939 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.724034697 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.721731466 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.722469793 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721713778 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723379602 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.724173812 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7225334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.723650196 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.723496063 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.724194811 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.722861474 seconds)
  done (took 39.560196218 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.725359899 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.725457685 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.724442837 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.722322927 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.724105217 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.722439917 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.725535877 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.725214569 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.724246338 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.725298539 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.723271644 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.726269531 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.731532513 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.730252326 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.727269809 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.724932813 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.875826116 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.725094222 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.726682544 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.725822533 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.723195472 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.73068392 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.723886127 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.723228559 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.724184763 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.726137183 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.726163694 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.726498195 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.725866611 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.728029418 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.730468933 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.72591168 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.72565833 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.728439891 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.725401596 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.726690774 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.730688331 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.727591658 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.723891095 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.726464254 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.73682453 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.746364713 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.728037471 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.733616692 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.72734499 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.726745964 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.730118135 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.735016729 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.725813991 seconds)
  done (took 86.431531641 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.72692621 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.727335663 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.725371426 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.726477017 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.727974043 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.727567373 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.727205132 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.727537055 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.725486285 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.725290058 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.728243584 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.725096137 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.725191707 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.727205295 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.727466693 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.725846006 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.725518102 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.725452279 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.72568286 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.725677545 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.725750346 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.728096975 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.727976391 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.725140928 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.727646553 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.725764877 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.726303954 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.72948753 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.72664019 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.725759559 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.728408961 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.727812464 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.728789302 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.727641224 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.726581541 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.729092112 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.729615775 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.727098085 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.728589325 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.726026842 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.729186159 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.729427626 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.728844934 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.729097801 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.726789468 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.727004489 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.727849197 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.727047993 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.727660451 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.729496904 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.72945997 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.728527082 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.730013545 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.72838598 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.729510873 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.730292516 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.727963267 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.728054884 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.729012636 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.727295362 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.727649144 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.728631453 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.728005436 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.728984408 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.729223151 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.728027949 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.727511654 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.730448953 seconds)
  done (took 119.130552592 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.729831612 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.730857702 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730360631 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731019662 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.731220507 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.731232659 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.730455335 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.730160489 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.731408788 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.73064608 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.731626027 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.730437388 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.73144392 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.73037557 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.732040372 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.731282371 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.73072997 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.731406162 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.731999481 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7313461 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.730828811 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.73133405 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.731724935 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.731875967 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.731964405 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.731161928 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.731341652 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.731828727 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731327248 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.731896769 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.732275964 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.731837667 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.732412977 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.732425631 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.732562431 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.73270146 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.732387902 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731603057 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.732337576 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.732168236 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.732473275 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.7329027 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.73329845 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.733103423 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.733167095 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.732266726 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.733809472 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.732517125 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.732375182 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.732527791 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.733570628 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.732732917 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.733742341 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.733380619 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.732210385 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.733608743 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.73278934 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.732907323 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.733298611 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.734223918 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.733182522 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.733900228 seconds)
  done (took 109.042567547 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.732775318 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.732776382 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.731681857 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.730625727 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.733414898 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.731816541 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.732696046 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.733561417 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.733022625 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.732465618 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73324941 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.732445239 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73197492 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733583107 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.731038989 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731942254 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.731593778 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.732125909 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732706243 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.732069052 seconds)
  done (took 36.306338024 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.733182526 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.734327084 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.732159939 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.731963183 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.733867713 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.731486623 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.733682337 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73434949 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732184955 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734171847 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.733939123 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.733934328 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733201908 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.732658336 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.734767978 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.733161929 seconds)
  done (took 29.3922959 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.732838992 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.735230307 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.735568271 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.734584282 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.733074481 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.732413205 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.735422402 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.732874859 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.73292704 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.735955497 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.735395115 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.735094771 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.735733707 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.735203293 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.732680059 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.735777724 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.734881812 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.732950615 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.734448135 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.73588947 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.73403507 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.733024615 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.735025006 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.734911113 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.733163655 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.733766834 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.733023295 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.733340497 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.733271467 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.73574263 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.734238131 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.734229901 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.733636306 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.733278383 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.736763127 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.734696856 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.73670408 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.735568653 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.735972371 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.736418053 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.736356294 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.733962765 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.736827133 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.736860602 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.734945989 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.736064749 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.734399356 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.735114556 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.734603208 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.735849818 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.7382559 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.737929901 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.73754201 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.737477848 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.737276663 seconds)
  done (took 97.084702501 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737502389 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.736988199 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.733135031 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.737552133 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.736996805 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.737603891 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.73731204 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.734612106 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734589294 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.737729543 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.7357804 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.737935417 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735405991 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.737700185 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.735559031 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738841449 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.735326602 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.735974755 seconds)
  done (took 32.918770543 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.736768361 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.736079593 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.738512196 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.736252997 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.735333444 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.738399267 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.736681189 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.739152903 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738283543 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.73636002 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735962943 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.73784053 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738479052 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.738742016 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.737086764 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736495504 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.738592287 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.738240013 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.73617497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736859906 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.73922716 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738866524 seconds)
  done (took 39.887907307 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.738360743 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.738047856 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.754492206 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.757984138 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.76069639 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.77048475 seconds)
  done (took 12.183533185 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737001332 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739507378 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.736956504 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739896682 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740662006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737831987 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738051437 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737687903 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739836014 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.739276815 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.738022367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740101522 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740000241 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738478061 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741774748 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740277906 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.738137886 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738713783 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.738839618 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740525039 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739343355 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740316938 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.738302248 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738566071 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.738263082 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.738245149 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74128313 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738771141 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739302101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741140901 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741108555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739035046 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741595934 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738805313 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741022491 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741165528 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.739593283 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740934495 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740772913 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739446813 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.741351056 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741381102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741658892 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.739111208 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741483098 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.738770236 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740359911 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739446955 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.738992701 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741858727 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741757488 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.739871326 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742200144 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741084029 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740650525 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741806813 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740384724 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740067716 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742343919 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741024327 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740931566 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742064623 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741605184 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74105385 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742374183 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741265646 seconds)
  done (took 116.509036226 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741055919 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.739952465 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740472112 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741182924 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740423302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740935144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740181258 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741171968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739960648 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740655463 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743307877 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741149809 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740299817 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740972897 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740533179 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741556107 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740831928 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741032262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740719737 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743316285 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74118257 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740581533 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741366698 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741224822 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74131988 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743733379 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740973671 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741642163 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741412714 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741990139 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742324338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743975612 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742589899 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.742402656 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742260915 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741942784 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741734223 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741835052 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742051083 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744500177 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741702782 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743855303 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743144424 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74208616 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742397543 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744238855 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742952115 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742268122 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744180034 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74242015 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745662013 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742927485 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743034678 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743346958 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74257068 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742847106 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742670736 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742684277 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74261957 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744559982 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742697756 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743903707 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745940871 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743224378 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744207573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.744859134 seconds)
  done (took 116.65692559 seconds)
done (took 2378.843052046 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.732896708 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.840370224 seconds)
  done (took 15.243316205 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.905751421 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.859009552 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.742843199 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.789496245 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.742685499 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.758975373 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.762171493 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.743316124 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.742968042 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.743471101 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.743265561 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.92870533 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.763031459 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.742564111 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.743282949 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.835961553 seconds)
  done (took 50.221683816 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.747102929 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.74729736 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.757936014 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.749717586 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.746785825 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.760111036 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.780853917 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.750849092 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.782874224 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.759910938 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.816377022 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.758064161 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.74613648 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.796250559 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.761388106 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.762469894 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.837273294 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.822943547 seconds)
  done (took 33.553996321 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.825978368 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.751147348 seconds)
  done (took 10.253461768 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.75917983 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.743433497 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.832215283 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.766487126 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.759095155 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.760276764 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.756194413 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.757796713 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.777803335 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.774512984 seconds)
  done (took 69.359948901 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.752015591 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.746709763 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.746709138 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.745052556 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.739427012 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.747140158 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.745962454 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.739501042 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.410795352 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.782023479 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.752887213 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.751497907 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.747446102 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.747949726 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.745276093 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.766386544 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.889018042 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.74446497 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.745389491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.753323427 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.746530108 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.808474264 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.760810528 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.749644507 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.777042528 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.410036698 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.756322601 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.752796147 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.885470433 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.746180311 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.747207421 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.747694484 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.748589694 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.147789978 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.100114122 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.746962904 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.761143481 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.755981076 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.744425052 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.891799628 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.748224237 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.753008313 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.358370911 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.071440389 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.82341203 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.7932984 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.096110178 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.765382965 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.750208414 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.777958782 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.752900116 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.749922185 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.76104692 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.222642484 seconds)
  done (took 125.684602546 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.74683718 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.105574353 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.92110521 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.746831627 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033310441 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972375108 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.74557737 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793238416 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.746916396 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.018864946 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.001282199 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.856121229 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.746332641 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.747324967 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.745262909 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.743396793 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.917039406 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.821097533 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.748869965 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.744103495 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779736964 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018902089 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.886880177 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.748214962 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.774953599 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.958856479 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.88166031 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.852003778 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.594410527 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.743185202 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.812407093 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.745658386 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.743496027 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.744193492 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.905777207 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.846106379 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.832381763 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.746401413 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744905561 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.74451329 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.41383502 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960277228 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.844669931 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.894460492 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960538517 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.975771952 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.648693593 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.745601685 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.590080352 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.92780982 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.976115434 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.022352351 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.884177784 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.752330996 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.526334045 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.74485372 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.744543875 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.998751359 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.906311927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.851432707 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.749354648 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.745582297 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.745210125 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.992980408 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.746702688 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.844213145 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.748467995 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.747505141 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.846967534 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850047094 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.899566049 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983075556 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.781468013 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.976689601 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.548210041 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.031138902 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.817780753 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000213327 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.74868199 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.74695243 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828361663 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.770947215 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.007428813 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.001231996 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.032941204 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789282845 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.57263695 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.746012636 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.001840839 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997063546 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.027298495 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.966447215 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.996805947 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.163968096 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.746900062 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.746802985 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.343122744 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.890550907 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.753524395 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.102598971 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.981165246 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.341909309 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.771528697 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.056097487 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.895706602 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.754656146 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.387279295 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.75096501 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.997418114 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.796339544 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.748083449 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.745912324 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.001405731 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.80299411 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.747569312 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.614299793 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.814251025 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.750137126 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018432918 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.753127435 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037945179 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.749847147 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987783524 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.278959385 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.782084798 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.999772743 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.967461452 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.755461889 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.997621401 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.997311224 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.881427209 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.99605526 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.523521007 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.75060194 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037310124 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.750484408 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.748934289 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.921702469 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.749775555 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.907677295 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.755484265 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.060324172 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.776737708 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995246407 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.755074781 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.05573173 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.785282105 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.80196951 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.75366896 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.883443089 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.752525463 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.606709868 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.924243318 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.753980479 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.750778195 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.796244613 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.748744295 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.907512314 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.986444647 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.77620622 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827976532 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.515489559 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.75010877 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834347475 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.780713233 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.163411617 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.751138584 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.005334705 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.757058665 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.749371387 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.749389985 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.994414434 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.956193277 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.751999599 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.751095954 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 3.164326697 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.750248347 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.751294846 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.936581632 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.195808462 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.751138095 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956144158 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.759115974 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.895671266 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.756369517 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.03718299 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.103592311 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.750971307 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.751263923 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.75217801 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.750739529 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.7524079 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036132933 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.790455216 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.296520993 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.891874058 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047502103 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.072998181 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.035055632 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.808067626 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.753674085 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010204791 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.760304862 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.820538632 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.757392458 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.776501152 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987061674 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.760753974 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966637343 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.076316175 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.627953617 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.804112784 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.757868735 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.751769186 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.751776912 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.920356295 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.845590106 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.75862791 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.751827248 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.87926698 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.890691609 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967830159 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.753716529 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.160722886 seconds)
  done (took 880.695870837 seconds)
done (took 1186.681382537 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.754180241 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.753418213 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.746165423 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.756454177 seconds)
  done (took 28.69293078 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.761035252 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.757052049 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.758915344 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.756843835 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.758795083 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.757656383 seconds)
  done (took 12.231914565 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.823747925 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.753925772 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.756551399 seconds)
  done (took 21.017014244 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.829676641 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.139706436 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.887985802 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.175735388 seconds)
  done (took 9.715011636 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.760972213 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.759851515 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.759960735 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.760603036 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.7621625 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.762670602 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.760679538 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.761807828 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.762438521 seconds)
  done (took 17.534414073 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.837959069 seconds)
done (took 94.710740781 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.466300727 seconds)
    (2/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.837960863 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.896856738 seconds)
    (4/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.849652935 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.109433002 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.104638554 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.840352062 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.816896734 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.855029729 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.780264197 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.761883538 seconds)
    (12/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.834873201 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.850075939 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.773442187 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.139162585 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.762638164 seconds)
    (17/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.880056201 seconds)
    (18/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.815070937 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.927465719 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.932640271 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.781722051 seconds)
    (22/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.357822735 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.965086939 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.783472702 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.092764569 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.081581828 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.853930308 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.968679623 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.239636948 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.090696606 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.193103924 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.819536583 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.89756588 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.588432646 seconds)
    (35/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.214063735 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.898865644 seconds)
    (37/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.853661709 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.842319186 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.89060906 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.849738717 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.743671383 seconds)
    (42/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.484058431 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.77764704 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.434294134 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.115803114 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.770180054 seconds)
    (47/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.841255204 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.237309646 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.758822807 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.091335453 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.746502408 seconds)
    (52/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.753045975 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.902136854 seconds)
    (54/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.447008089 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.747669101 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.930350699 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.543458776 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.030874137 seconds)
    (59/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.91673205 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.876366548 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.010069601 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.956242438 seconds)
    (63/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.999256295 seconds)
    (64/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.346898765 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.078662663 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.887751508 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.781139896 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.099745177 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.408402954 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.851694177 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.024823197 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.749309077 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.975439957 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.735528806 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.789237394 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.0495003 seconds)
    (77/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.902835202 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.758259166 seconds)
    (79/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.14714278 seconds)
    (80/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.894969439 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.854437264 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.746265828 seconds)
    (83/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.953708834 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.891878981 seconds)
    (85/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.779668244 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.758049447 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.120633583 seconds)
    (88/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.764559928 seconds)
    (89/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.901992577 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.196524259 seconds)
    (91/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.886644381 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.840366683 seconds)
    (93/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.885367848 seconds)
    (94/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.79947456 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.758223046 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.991168597 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.387119418 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.761454275 seconds)
    (99/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.292157105 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.911972435 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.338197632 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.8653734 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.784180467 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 5.669736771 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.782048556 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.910784921 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.996261899 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.780391124 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.124718669 seconds)
    (110/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.753912348 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.276402184 seconds)
    (112/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.316185852 seconds)
    (113/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.787181381 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.781056348 seconds)
    (115/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.947182143 seconds)
    (116/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.313128345 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.79565829 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.916122649 seconds)
    (119/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.7552126 seconds)
    (120/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.72820597 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.954042182 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.006206771 seconds)
    (123/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.795901876 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.944592768 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.113845703 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.738465848 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.796832142 seconds)
    (128/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.194370888 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.789643638 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.812072899 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.118834662 seconds)
    (132/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.344019526 seconds)
    (133/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.766339467 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.021618536 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.347649424 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.30533673 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.76229408 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.015125409 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.142611309 seconds)
    (140/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.776084905 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.760715219 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.096424408 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.765227207 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.796675398 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.045787571 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.012671704 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.782796536 seconds)
    (148/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.843230323 seconds)
    (149/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.203835352 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.939885628 seconds)
    (151/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.767228517 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.215005344 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.467262464 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.69656272 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.450433191 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.793644748 seconds)
    (157/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.071976339 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.945981722 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.913082553 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.62037744 seconds)
    (161/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.776952369 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.818279693 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.759076504 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.872280432 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.850844652 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.781572991 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.883550254 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.75614772 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.249954931 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.847955701 seconds)
    (171/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.856485401 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.798893842 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.980140762 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.902175143 seconds)
    (175/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.277658786 seconds)
    (176/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.768700444 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.269761571 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.945040588 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.871728622 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.279218243 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.034540177 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.766262267 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.750294002 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.209333097 seconds)
    (185/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.781781133 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.081984904 seconds)
    (187/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.996044642 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.766683081 seconds)
    (189/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.231344556 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.766845336 seconds)
    (191/309) benchmarking ("sort", Int8, false)...
    done (took 6.248818128 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.12083725 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.90962778 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.471527708 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.754249712 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.75693859 seconds)
    (197/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.398484956 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.215643324 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.143721632 seconds)
    (200/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.851536547 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.889102965 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.765569072 seconds)
    (203/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.87149547 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.662411185 seconds)
    (205/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.769566001 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.289182049 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.880611818 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.847319934 seconds)
    (209/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.269396074 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.080915045 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.767594046 seconds)
    (212/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.302999915 seconds)
    (213/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.856457245 seconds)
    (214/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.778877501 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.316289496 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.819655161 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.676566529 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.067504685 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.809095069 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.847614897 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.765958474 seconds)
    (222/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.103235639 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.099616354 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.195271652 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.83889127 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.062865813 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.880756584 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.75235528 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.810177872 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.98653849 seconds)
    (231/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.853196321 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.77334308 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.770721729 seconds)
    (234/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.823714087 seconds)
    (235/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.993571488 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.928603533 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.896172882 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.090185629 seconds)
    (239/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.770353847 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.890877823 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.617463221 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.77130535 seconds)
    (243/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.844627601 seconds)
    (244/309) benchmarking ("sort", BigInt, false)...
    done (took 6.76868981 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.623414699 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.206247073 seconds)
    (247/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.20779026 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.926704815 seconds)
    (249/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.994610571 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.03024087 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.289177307 seconds)
    (252/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.210547255 seconds)
    (253/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.770852993 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.958061348 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.886318942 seconds)
    (256/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.894195423 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.881350638 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.75395387 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.09234674 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.955811053 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.915139845 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.754273922 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.291183753 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.902142008 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.815485842 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.213558874 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.910729003 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.878875722 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.282147901 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.805491637 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.114815006 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.783757342 seconds)
    (273/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.851124986 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.768958591 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.82638171 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.0175586 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.768781919 seconds)
    (278/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.004720416 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.760723109 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.36011138 seconds)
    (281/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.851946553 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.710101776 seconds)
    (283/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.893428697 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.094910974 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.90793501 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.987553786 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.703729354 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.759025437 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.889019171 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.127075172 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.985290794 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.772223084 seconds)
    (293/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.001114645 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.608225805 seconds)
    (295/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.600900143 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.783175644 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.758184701 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.88876215 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.190687291 seconds)
    (300/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.90254401 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.794117057 seconds)
    (302/309) benchmarking ("sort", Float32, false)...
    done (took 5.659793522 seconds)
    (303/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.910601047 seconds)
    (304/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.843948098 seconds)
    (305/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.877576586 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.899887452 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.987060748 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.797941922 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.355591819 seconds)
  done (took 981.752313887 seconds)
done (took 983.499693601 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.803569794 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.795056479 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.779453405 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.800680075 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.902355717 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.809664183 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.790135347 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.782519551 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.806541568 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.807565372 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.777435942 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.807648426 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.78034423 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.78136024 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.779808122 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.79453175 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.090088162 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.807593586 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.797216177 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.79068996 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.797506743 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.778136129 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.808668678 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.809027327 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.785646983 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.782941644 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.783845469 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.801322322 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.902333165 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.782963446 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.782540137 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.791572624 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.090585337 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.805744953 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.775833393 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.799568152 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.792550258 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.790278926 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.784510814 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.812972433 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.173741095 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.813498762 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.783559541 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.781526012 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.782025945 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.785850367 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.782880799 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.789651031 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.79468955 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.795953366 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.170396665 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.831357292 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.785036418 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.7835563 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.793326133 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.782383651 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.788766886 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.797954335 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.801596321 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.798517264 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.074067013 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.814253881 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.784362671 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.799536835 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.789891448 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.207743415 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.812712294 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.787921605 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.176517975 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.820857489 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.207746293 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.825033319 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.784514143 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.797044591 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.814100934 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.093192812 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.805690671 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.782945825 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.791474668 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.780649909 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.792778696 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.796765752 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.788380907 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.784247549 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.797360349 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.813667984 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.795071016 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.78464599 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.792390672 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.802708061 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.79156395 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.794043559 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.78697642 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.780167832 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.793825709 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.790335168 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.786570009 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.786852313 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.789824624 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.795394047 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.174654508 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83451992 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.781830791 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.78140191 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.784319706 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.798866272 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.174440138 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.819811296 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.806952316 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.81223113 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.788175158 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.077260117 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.81365436 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.799780008 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.796064918 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.788877954 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.781046246 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.077163152 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.199662531 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.832710877 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.786027152 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.782340454 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.801085815 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.78855643 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.783358096 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.095637776 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.813950955 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.7993223 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.90666698 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.797921217 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.817371116 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.783289733 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.78936663 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.819359378 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.802332455 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.817759374 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.78991502 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.802593699 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.802671835 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.783829411 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.797363695 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.797291592 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.789521472 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.792606975 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.781478521 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.820225896 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.799070373 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.79875581 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.807566858 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.906623707 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.783632042 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.078408695 seconds)
done (took 280.500178023 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.856314643 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.784241659 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.883030055 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.78382911 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.867202971 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.871323602 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.780715982 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.782469757 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.7809534 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.160763265 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.78115817 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.78193551 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.784674118 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.781253845 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.867842164 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.783190789 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.781664685 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.125074533 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.785003386 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.860067846 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.780655446 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.782750772 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.784343883 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.166345728 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.784768634 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.787069447 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.859695834 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.784662473 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.12965576 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.778231217 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.784016781 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.129480835 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.878976696 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.803004105 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.794660342 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.791761203 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.869877418 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.788525032 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.867248044 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.870726731 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.886639332 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.825584093 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.780853614 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.783907971 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.787616399 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.786028609 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.78243872 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.812802281 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.783879682 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.784622571 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.126641647 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.794271061 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.79151547 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.782442595 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.782917123 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.806167525 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.782910287 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.785255296 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.879828688 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.784759729 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.850238554 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.165223527 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.162600516 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.784657771 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.778300867 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.782114524 seconds)
  done (took 178.661265156 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.849679388 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.855764016 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.850742572 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.787928142 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.831786108 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.853987345 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.787385279 seconds)
  done (took 14.523713214 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.788805162 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.782433605 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.835947377 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.836786449 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.786760066 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.946724997 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.781564381 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.792291175 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.779785631 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.836717231 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.78128131 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.780915617 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.787885245 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.775534096 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.832581658 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.791726204 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.897154758 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.782059909 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.782002602 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.929442429 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.777222384 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.787234373 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.813837017 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.792294201 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.780123023 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.785902044 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.381509235 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780446352 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.778522158 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.779560145 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.776768431 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.830214872 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.780702188 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.775952276 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.77617001 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901905337 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.779140731 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.776743549 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.777812229 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.774916259 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.778329842 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.777930305 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.777542494 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.776317228 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.777931247 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.801030498 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.776638082 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.777125997 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.777032218 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.776923209 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.810570063 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.777908103 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.774469109 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.77512549 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.832900576 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.784838456 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.778297107 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.773510888 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.776254759 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.773173505 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.926858125 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.829869573 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.777735057 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.829298094 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.776153403 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.776794644 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.775624842 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.776303467 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.876621949 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.775996506 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.830305601 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.774517706 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.944419702 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.800371508 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.778261025 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.779653579 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.779795941 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.777120014 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.775846475 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.782752035 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.775095198 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.778547553 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.783052284 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.775300964 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.774681422 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.912133752 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.892247146 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.776712849 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.790956814 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.785423448 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.775714836 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.812957244 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.779064487 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.778288342 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836060412 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.893985048 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.835458911 seconds)
  done (took 196.977267243 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.786115687 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.786038933 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.779493265 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.794548053 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.778056806 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.778493566 seconds)
  done (took 12.402321622 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.782505403 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.780486368 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.778394307 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.778569813 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.779390301 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.779132548 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.77967199 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.780068289 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.781587418 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.779066843 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.779918053 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.779835397 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.779775285 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.778637775 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.778979524 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.778642518 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.78044261 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.775521658 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.778849898 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.778716015 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.933019413 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.77911919 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.779054299 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.778725779 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.782577466 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.778343228 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.788591332 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.778567242 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.778770002 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.786104732 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.783464135 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.780310079 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.780286512 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.785701835 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.784945001 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.780252962 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.782654991 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.780636674 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.777112993 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.779811891 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.779394494 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.778641947 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.779698103 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.781167233 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.7819648 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.783729599 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.783578222 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.786680766 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.780467314 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.780814027 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.779840208 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.77839905 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.779299432 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.780409187 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.783263758 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784765836 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.785093195 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.779619784 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.778996646 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.779975699 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.780921795 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.779079747 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.781711001 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.784064559 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.777762835 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.779919027 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.780531532 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.784067112 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.779842344 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.779510109 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.781153871 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.778195298 seconds)
  done (took 131.062810574 seconds)
done (took 535.346766047 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.857275911 seconds)
  done (took 8.559845215 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.960337634 seconds)
  done (took 8.719401601 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.132800049 seconds)
  done (took 9.85152093 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.829483737 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.805284708 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.800207996 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.792774365 seconds)
  done (took 28.968657932 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.044160753 seconds)
  done (took 8.757943885 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.81557083 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.791243686 seconds)
  done (took 15.360920534 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.881687955 seconds)
  done (took 8.598336859 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.835768609 seconds)
  done (took 8.571003186 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.813367754 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.796896642 seconds)
  done (took 15.340146563 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.775677027 seconds)
  done (took 8.49187952 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.458369617 seconds)
  done (took 11.271579825 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.804439351 seconds)
  done (took 8.62578168 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.833611924 seconds)
  done (took 8.550685073 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.927730165 seconds)
  done (took 9.643226392 seconds)
done (took 161.012664236 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.806158889 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.791755489 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.790305215 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.789639392 seconds)
  done (took 28.893212713 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.826644143 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.826866026 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.82817037 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.838040206 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.829392443 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.828226102 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.819458771 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.819800839 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.838474995 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.830579286 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.830542725 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.830945626 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.827488037 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.819969472 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.832495964 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.829556248 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.83810224 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.828889471 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.818334054 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.831893883 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.796080063 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.839624891 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.831564798 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.795395354 seconds)
  done (took 45.550988368 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.01405281 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.864642924 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.961381599 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.846859009 seconds)
  done (took 9.403563968 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.847914671 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.848177339 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.85896112 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.905023177 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.975647945 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.858570229 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.820850214 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.816602372 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.802366845 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.847020902 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.937151122 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.842515703 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.00263272 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.796043186 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.043734813 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.793737726 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.794498233 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.846001677 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.900346431 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.961383912 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.794990088 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.84757084 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.847832104 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.840819707 seconds)
  done (took 46.54857941 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.792218247 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.800585762 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.800633303 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.792807814 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.793616868 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.793562707 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.798979648 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.795972788 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.809165292 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.792838915 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.791602689 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.792649157 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.791439191 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.794661143 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.792223392 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.800942614 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.802347544 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.79346593 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.798442742 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.798922713 seconds)
  done (took 37.643019744 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.786616911 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.638595174 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.13514504 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.040293136 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.787522475 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.784515606 seconds)
  done (took 30.888576984 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.804286502 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.794285389 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.788700514 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.845634896 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.928433996 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.793236345 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.787405986 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.799067323 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.833319274 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.85275753 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.807500833 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.814002304 seconds)
  done (took 23.559700247 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.781718703 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.782854585 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.781789822 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.799511892 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.791031647 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.788140174 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.788251049 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.776573397 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.792614422 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.796039787 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.785754936 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.790596408 seconds)
  done (took 43.16651156 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872462458 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.658621229 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44862693 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42883322 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774691862 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9788634 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.698899176 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938227272 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.77162194 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041041435 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.316220185 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053826136 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.049959357 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796055115 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.871177442 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.284851543 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105285061 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042300601 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826422226 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62535557 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919326709 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.233766027 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.65181007 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926390177 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007679499 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797347506 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.056413193 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.796501345 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940426575 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834233939 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805489944 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.798222778 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073196136 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022387459 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922701317 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80423142 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.453526112 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.79987073 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.784381164 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.638978228 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.559939355 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937947912 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804757454 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796549774 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.727844666 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.209816093 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986961988 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.802452744 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.498629634 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.79763297 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.80898996 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888546552 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.799052624 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.61723696 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679590046 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.8004796 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.791815048 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800169978 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.525161417 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939815295 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.23488933 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.741344323 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.90165253 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.626936892 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295048633 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.955853635 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.803122156 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.806320377 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729962079 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.631185123 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93110908 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941919143 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.828412546 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276252083 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10431712 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.486077657 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.886107866 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112532502 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.536333137 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.740885679 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032228051 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315047782 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727751079 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.750762304 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.727117199 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066374012 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830074098 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.732844452 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834073041 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959291386 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.801776161 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814693683 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796956343 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.012925471 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 5.635029102 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79057388 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.358245456 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090778623 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815565811 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.967994628 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724133297 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.795679083 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046750095 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.99878748 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.898478746 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.301207501 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949798299 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789173285 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.878719062 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.499502789 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806986758 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.081994871 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854001062 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.945352383 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937105984 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.803839946 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123878362 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833071283 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.978478025 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.434648753 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077857218 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.148291419 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831922845 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948152412 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.811663889 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.805425257 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.723509474 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908634004 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.804813487 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.806863444 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.134475073 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.822682222 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.805003349 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737505044 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.428060722 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.431952938 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.480837269 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.027030999 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.706541493 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085718161 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737288005 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.949198165 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.930662695 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.025727377 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.459725286 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.889252385 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060070633 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.607537283 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.907409591 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824549306 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821034085 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962269061 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826786873 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.172408585 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.067773178 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.809499682 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.808923555 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.668824722 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911286886 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813436828 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.811120875 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60098592 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097700554 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.838580922 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.81403214 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.740048583 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.819627697 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951113345 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812477543 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.815363383 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.411058624 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.481998185 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.815938555 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.465611757 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036497788 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816331655 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.630668217 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000962576 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.887631116 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091726405 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878038428 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.738916348 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.509316397 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.514004054 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807948546 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.740680616 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.80754164 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816372732 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817122477 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.112617955 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103609134 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865824035 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.626625468 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.926966168 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817338886 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.812515762 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808430743 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.384649915 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983352824 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256400452 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.825896223 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951132066 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.821370227 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.741062501 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.812834967 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812639908 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.807583626 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.808687138 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881465444 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.639544565 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143439242 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062660439 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.442681961 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823987849 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.671141569 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.942935071 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.883076477 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.378493813 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842897635 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.816202773 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871114763 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.818782963 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.628137457 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91572181 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.540483113 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129530119 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145422756 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259385655 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.22874107 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360129136 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975722999 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037294884 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.802802513 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866664238 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980686473 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741594346 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884884675 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.455784564 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163448981 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81171975 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031639093 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191647935 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.444896326 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965777116 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004786248 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865935862 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.503164323 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.729523195 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.644769517 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945290319 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.459603002 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028555732 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955305842 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.369714631 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.93337943 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.785947189 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.257837269 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870196939 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.784602308 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.782325532 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.235228391 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.43332759 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159666975 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.784464089 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.77973435 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163378618 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.995437117 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.86902356 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707705991 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784631652 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784271379 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.776917228 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.788884871 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.639766031 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.034789187 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78562587 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007590942 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.944812406 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073680117 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.756306199 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.779560229 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776937595 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092146395 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.524389907 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918761724 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.159949859 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.299798776 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780146056 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707739604 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708454674 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.484185586 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.780895492 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.750566797 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010847903 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.886004608 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.662105563 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.107184504 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991059077 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030627454 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.790746535 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059444261 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069997046 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.430465433 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803320485 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.87595183 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.352708172 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.905938593 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319672248 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010033856 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575635318 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006005209 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434136161 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.200629822 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.776241163 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989012328 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.320572277 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.42737605 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043001766 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.506402443 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.792395754 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148130175 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842747428 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.417214826 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894286465 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.880919921 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786878159 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864128086 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786757195 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.788478152 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787627984 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824941852 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.412380076 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922040762 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.791787394 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867853819 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.945743762 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.413339995 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.787657779 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066542721 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145071081 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134831831 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847900407 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.77872662 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780024781 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711536334 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935280273 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.779200404 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05124018 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.914708164 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.921434101 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803518887 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.366902984 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.914965427 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10247058 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052639332 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.780030304 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780013184 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847515811 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.779770778 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78992862 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.990195875 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017789673 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118092872 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076340771 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.76204553 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053581491 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053475265 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.781132638 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.779512252 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099631859 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.788608906 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.305002367 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.826001499 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.436806608 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090270496 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791151751 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016729694 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802825369 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.977585212 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.232558879 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609574529 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149564767 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.009589421 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.847340982 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068393902 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.197764647 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102939801 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869841885 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791811444 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.598151582 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931705055 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.683114289 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351396704 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.782576688 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990615024 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.493769973 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.790472818 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077627365 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100264376 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.781259576 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.722931858 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828196231 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.791207988 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.004488664 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063180083 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034276862 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790843187 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.786326412 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.602985048 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073669711 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848862614 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711802402 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.779303576 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874373133 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.024563782 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808429245 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.298365465 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.476259153 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077760889 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.693994908 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795188532 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.966905133 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238552099 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123706851 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.347988267 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021273298 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.802313098 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.55751815 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133847947 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.767690111 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.976455337 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132947913 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.76397719 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.220028416 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863930618 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.040843275 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087429388 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.773434451 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.654990944 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.80737286 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977055815 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314456275 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694334572 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.753448806 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.820383834 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.754648735 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.882621899 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765867252 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.728847595 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.5834074 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.570058219 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.114002044 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.758770254 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.851298957 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.337061705 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.109612713 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854739078 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912404119 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761341973 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.456493448 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.059602372 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.007568902 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.220176446 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.82714987 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.758813524 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.755691741 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680092019 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.755476606 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.060804585 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065085744 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.046194293 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.858132685 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758082076 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.967135571 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964065478 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.391306569 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922278152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266336791 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862414412 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 5.156836235 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.756060822 seconds)
  done (took 1690.81984206 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.764229422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.06691252 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.770170689 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.817025669 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.774499756 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.757892466 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.824987927 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.813584099 seconds)
  done (took 56.273344768 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.744811714 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.923078993 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.753400026 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.746066721 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.763161233 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.746290419 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.971555168 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.758230691 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.78113944 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.755062718 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.745363223 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.757904875 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.065531397 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.773582344 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.746529674 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.764365878 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.757566743 seconds)
  done (took 72.235833279 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.748938548 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.44608272 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.778893391 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.771586156 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.881560654 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.756863859 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.242342923 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.835973437 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.776844897 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.124757643 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.084518458 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.833428598 seconds)
  done (took 86.956306553 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.752265881 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.751429697 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.752541172 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.752806738 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.753481623 seconds)
  done (took 10.43810725 seconds)
done (took 2184.186147247 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.009253299 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.935803982 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.97449214 seconds)
  done (took 5.584887968 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.893099883 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.942406759 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.059747718 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.53313916 seconds)
  done (took 10.106331553 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.04562786 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.130049378 seconds)
  done (took 5.850489483 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.113998147 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.76898921 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.134020705 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.750744054 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.751863081 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.752455623 seconds)
  done (took 21.934340449 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.749807432 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.751982307 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.750445622 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.752276701 seconds)
  done (took 8.678976673 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.734729703 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.419074152 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.736048824 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.753130009 seconds)
  done (took 20.318039787 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.499134538 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.872759567 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.439645694 seconds)
  done (took 8.487097276 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.253804573 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.682524331 seconds)
  done (took 8.612003148 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.910245312 seconds)
  done (took 3.586879624 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.779325074 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.020365192 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.257552649 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.272511409 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.360203741 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.581702722 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.086918513 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.983178082 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.190289731 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.209637486 seconds)
  done (took 23.417568582 seconds)
done (took 131.276667158 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.30056382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.091148516 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.952064577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.9116142 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.98373519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.952729869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.156188803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.897233957 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.771157537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.758942873 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.909820577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.983897885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.103222446 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.084255473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.114053829 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.083932762 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.98117507 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.323989406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.782395155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.880403365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.17058472 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.748196748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.756860072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.763840282 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.982664415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.899652523 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.226093669 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.088799059 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.932950751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.237209455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.902816243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.030726599 seconds)
  done (took 165.439639287 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.750163144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.632205759 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.751629733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.282800046 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.485746359 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.751596262 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.750114393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.237715398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.345775063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.340658116 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.412105918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.478340831 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.753775665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.750079525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.753580306 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.719359094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.522210529 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.752353717 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.750770989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.752012568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.751434998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.301701382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.261295492 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.320378628 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.536458005 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.759189278 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.750697578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.749537832 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.762638541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.765038976 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.766136032 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.752032933 seconds)
  done (took 205.129493469 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.751958121 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.752143684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.754322171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.752779259 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.751513215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.752483181 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.754240899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.752362831 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.755693426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.757596498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.757477531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.757539636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.758919004 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.752456559 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.763119746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.752931063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.76540568 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.760953045 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.761951483 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.761706212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.765840926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.753356996 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.768098951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.76688374 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.768029734 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.762720306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.753485166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.761071157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.763501411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.763560107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.766841211 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.753340026 seconds)
  done (took 217.969703458 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.005899663 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.757658925 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.758362151 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.63292696 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.758882279 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.758478212 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.695049005 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.005101278 seconds)
  done (took 18.068147619 seconds)
done (took 608.29055233 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.197157747 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.045350556 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.914939351 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.789885093 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.997570311 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.816206247 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.782001453 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.847351323 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.398952431 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.851483374 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.420313232 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.80122169 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.503254388 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.811476587 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.883667384 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.843013096 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.324800839 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.41754925 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.939673872 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.836208184 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.923774717 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.732492732 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.864020893 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.429913419 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.530648566 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.768705292 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.833619127 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.331071249 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.791959942 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.918151478 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.744850916 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.0811912 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.795275813 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.780329035 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.839430508 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.816564573 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.035855579 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.791462142 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.881157325 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.536268617 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.825256218 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.305134474 seconds)
  done (took 97.66155001 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.751540154 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.749308458 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.74898331 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.750523468 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.749821009 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.749954307 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.749368823 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.748920389 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.750187052 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.749256398 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.749696805 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.749693385 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.749992151 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.749740143 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.750130199 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.749311204 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.750782059 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.751303796 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.749496743 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.749360363 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.750428337 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.749358704 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.763001181 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.750293194 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.750525393 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.750906952 seconds)
  done (took 47.204621854 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.761166165 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.915424371 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.035825395 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.784647407 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.761248496 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.766562318 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.779778153 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.772130002 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.764796689 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.763948561 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.870267238 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.773794308 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.780394232 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.026636755 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.783468972 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.762569497 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.763612345 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.763673684 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.922943658 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.782371764 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.782762914 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.772392252 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.782345142 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.779955414 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.764763233 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.764249354 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.766642175 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.19293028 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.775772377 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.867850384 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.810808393 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.784405164 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.167341832 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.042541097 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.819824498 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.769801473 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.763347128 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.871996759 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.774172937 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.763044134 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.781745736 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.773600533 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.023354983 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.216701735 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.780978787 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.763474568 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.20325563 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.882485323 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.809258151 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.775720265 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.028917199 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.783213237 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.767453928 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.764372474 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.80157768 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.770235908 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.763308697 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.069810439 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.780951908 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.782477402 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.77493534 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.7654915 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.927546517 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.776672754 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.917668164 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.777024963 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.770683854 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.765912232 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.028282845 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.784160595 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.225013634 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.7826301 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.764569132 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.869419997 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.927162598 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.234500792 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.782881279 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.926984192 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.186635523 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.793307996 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.775942819 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.183569629 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.796673458 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.775390307 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.767647312 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.76801054 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.766315337 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.814980932 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.782293649 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.151634477 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.236290506 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.091510245 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.796598854 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.78268512 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.766082402 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.069155265 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.778096807 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.766349838 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.02922371 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.239035518 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.783039342 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.773674157 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.210343216 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.786199235 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.785171139 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.778130139 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.032742516 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.78543349 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.81523131 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.76706605 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.772820545 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.769319133 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.785513612 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.777515465 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.767683397 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.208152828 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.895024002 seconds)
  done (took 219.575415882 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.763685867 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.773458834 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.761838128 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.776047281 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.761420827 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.767406049 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.761440521 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.762118783 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.767502805 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.760752631 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.761737709 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.761607699 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.763710955 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.767709977 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.782866149 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.768648974 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.351039783 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.763965341 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.762430222 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.768389132 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.40893063 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.769660928 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.764116367 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.762734625 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.762634619 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.761463847 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.76838144 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.777598863 seconds)
  done (took 164.376154034 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.767911872 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.88372375 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.789515924 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.796280768 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.777921941 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.766757083 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.792163755 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.783865486 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.7750167 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.766929855 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.767012479 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.830606522 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.78306731 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.866349812 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.799956622 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.800277 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.871375623 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.775246331 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.767402989 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.767999903 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.798538115 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.767947721 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.831293444 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.898468452 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.788631065 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.885708653 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.776571898 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.77111668 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.770239374 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.887336741 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.785893222 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.830711373 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.798859655 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.78950336 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.891029783 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.88631635 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.873284674 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.799114734 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.774416898 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.76879578 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.769101657 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.758286871 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.887676678 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.788294761 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.771040283 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.877207091 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.788697568 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.771608131 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.781822905 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.768554037 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.78299581 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.789280685 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.838286275 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.903797578 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.804696943 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.797058744 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.79523341 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.064495239 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.780296428 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.869432198 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.764938468 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.887765518 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.791068921 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.758681525 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.771287834 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.775475565 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.79952907 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.80341058 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.874095378 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.778705966 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.870444442 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.806538851 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.778246683 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.770914399 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.773652653 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.887223248 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.888850095 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.806491203 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.80994607 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.804427565 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.7680727 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.772005207 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.761269161 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.78835448 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.77620128 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.886794803 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.889368676 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.779373979 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.77323595 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.774056766 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.77357542 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.798085781 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.900592897 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.807220518 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.867073633 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.839750058 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.849272493 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.790445095 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.784604286 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.77674467 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.837279095 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.790708418 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.784151491 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.116151521 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.842861481 seconds)
  done (took 192.114694145 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.244237182 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.827676668 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.829384112 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.094998394 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.119955395 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.833496502 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.820629166 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.824024035 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.849497885 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.013811199 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.89744132 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.842025497 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.811652621 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.795669918 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.823470424 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.846233647 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.834955293 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.14815953 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.916739059 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.951536446 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.802718954 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.089289732 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.095525471 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.215226248 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.860528628 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.163952144 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.517889057 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.965524899 seconds)
  done (took 58.738435034 seconds)
done (took 781.350594133 seconds)
SAVING RESULT...
DONE!
