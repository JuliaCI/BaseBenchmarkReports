cset: moving following pidspec: 24673
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.359432073 seconds)
loading group "string"... done (took 0.549714532 seconds)
loading group "linalg"... done (took 7.660897956 seconds)
loading group "parallel"... done (took 0.17133684 seconds)
loading group "find"... done (took 1.182885764 seconds)
loading group "tuple"... done (took 2.110114912 seconds)
loading group "dates"... done (took 1.3321749 seconds)
loading group "micro"... done (took 0.247580393 seconds)
loading group "io"... done (took 0.98087963 seconds)
loading group "scalar"... done (took 42.006612158 seconds)
loading group "sparse"... done (took 13.731536475 seconds)
loading group "broadcast"... done (took 1.041664589 seconds)
loading group "union"... done (took 14.81027257 seconds)
loading group "simd"... done (took 5.060438931 seconds)
loading group "random"... done (took 9.984949471 seconds)
loading group "problem"... done (took 2.032448321 seconds)
loading group "array"... done (took 22.589023131 seconds)
loading group "misc"... done (took 2.036326485 seconds)
loading group "sort"... done (took 3.441673507 seconds)
loading group "collection"... done (took 19.760631465 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.56908771 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143474836 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151600575 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12946674 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204623905 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159387313 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158149022 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098844939 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.926539419 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181518326 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155325439 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.533423097 seconds)
done (took 5.147399879 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.220939288 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095920954 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104267245 seconds)
  done (took 0.882483026 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076903644 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145512041 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094526441 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077137033 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093930846 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076930719 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094181516 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077839465 seconds)
  done (took 1.344025475 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08598893 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096925227 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080478926 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095188449 seconds)
  done (took 1.042518171 seconds)
done (took 4.270906344 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.725436724 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272273388 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205032726 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.471183967 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.202086869 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.22111523 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685636559 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346093996 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.2527039 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100243432 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.136053288 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395149415 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140290691 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.693993778 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092753005 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127289146 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.185040205 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452947133 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08316623 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111709667 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118476623 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143619774 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131899143 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093290781 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18778962 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081360036 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193586203 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108702224 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080249698 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277932033 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202674542 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699326823 seconds)
  done (took 10.94219549 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113225583 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136833223 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099904912 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140094048 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136516087 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101402142 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086064141 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098029186 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12424896 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179316801 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132929396 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122887691 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096704389 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082950795 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117102566 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247887986 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122154613 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100511915 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102005599 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089431393 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140715728 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115343615 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111258485 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094702604 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169148515 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224769969 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113287764 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129136546 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099610243 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11362912 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144781135 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145161848 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097113664 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081527889 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175181449 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125854546 seconds)
  done (took 5.222175073 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.100341164 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194358933 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123769756 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173509696 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158597084 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081418497 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146843638 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.097680719 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117302552 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26475402 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.123048058 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.487945008 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141939517 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09898237 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098134575 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081773646 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096889537 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.611162759 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.124942864 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149458528 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117389578 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109007675 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08609413 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369592694 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09736883 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08114018 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099513423 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067844461 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164680693 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10049698 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146390276 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120396862 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082139744 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136206606 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205948564 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107846104 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133702715 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095807164 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079138544 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174545545 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103916356 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080402519 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120847691 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133842226 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13394266 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096349489 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080185633 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.195980323 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096766216 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095695727 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.942404931 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181812939 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089670957 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096602764 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284783291 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116315097 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102401929 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07891683 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277360173 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18876988 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097277481 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079683503 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09717738 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080162307 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396554099 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08255942 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.660686778 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084436533 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108753366 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083574531 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098250116 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106138387 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088947223 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118052324 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081314087 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099657063 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082729812 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0995045 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080215389 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101087659 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109347322 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.217249534 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079513591 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099115506 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079189941 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118241988 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127234042 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083782124 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096817985 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129327955 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082229581 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096710281 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132780786 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080217532 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107967889 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098470999 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141510497 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080472382 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.149630759 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080703337 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094836975 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109476426 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103189562 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130070285 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111564441 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097546613 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167445724 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077794811 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093608894 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078407596 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096210316 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078512885 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097667239 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081381292 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10928576 seconds)
  done (took 22.750060101 seconds)
done (took 40.70080381 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.328142773 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106021073 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105698618 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105394325 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102934181 seconds)
  done (took 1.508156871 seconds)
done (took 2.246568983 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283375357 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173393118 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095141929 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167478306 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093869372 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.167477896 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163375397 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095215771 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.222269818 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095391349 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16483518 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076750294 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095345197 seconds)
  done (took 2.664442782 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09549217 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118843216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083502056 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110779592 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077814023 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111438031 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09349421 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117724961 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110634316 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0859583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094544719 seconds)
  done (took 1.844208205 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096136759 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113914346 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08394497 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111235942 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078408367 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112371544 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093845938 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118048878 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110826296 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087761972 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09409089 seconds)
  done (took 1.842698734 seconds)
done (took 7.088603185 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092439926 seconds)
  done (took 0.83057594 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.92911986 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.689170882 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112674684 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149176269 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317889941 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171545751 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.472699079 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12495335 seconds)
  done (took 10.918529677 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.143454769 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08580876 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099408429 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08441186 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104187949 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083235247 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104271006 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100848769 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086894032 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103168235 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085584693 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099488828 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09999172 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084892389 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102297415 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083780063 seconds)
  done (took 2.352389882 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117726042 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117081769 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104936941 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106630323 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085667286 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10285268 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104966727 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087817778 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100932708 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103806048 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08937868 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104637266 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102301064 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078890146 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104307081 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106323308 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08469052 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104666086 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104954156 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088785543 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105319199 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094033079 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086329438 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104272948 seconds)
  done (took 3.246853394 seconds)
done (took 18.090939435 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156647482 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106998743 seconds)
  done (took 1.000263334 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093656214 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111253162 seconds)
  done (took 0.945305693 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098276491 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09707739 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122833267 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110585717 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081343403 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09812352 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11948412 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081884641 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098706985 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081428709 seconds)
  done (took 1.733322 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085380317 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111468615 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10199997 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095593849 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10699919 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095880293 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090063509 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101276991 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112079586 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078150354 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103328748 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114450385 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086729122 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117327231 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107038105 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083525502 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103739901 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10039583 seconds)
  done (took 2.550891036 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079244312 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096794828 seconds)
  done (took 0.923158147 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081404693 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092791495 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079588044 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097589533 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095612467 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078249612 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095127346 seconds)
  done (took 1.36530888 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.47941534 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135036882 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264004818 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102113406 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10442513 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30545434 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097720128 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085042652 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101776095 seconds)
  done (took 2.486761835 seconds)
done (took 11.745348506 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092264967 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.113853679 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112637023 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.458026092 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105959255 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096480774 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146295492 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250702205 seconds)
done (took 2.129683239 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142240031 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.596496546 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.433183264 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.236976731 seconds)
  done (took 2.0180629 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405657249 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099654554 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083990607 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082805146 seconds)
  done (took 1.437630612 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081125057 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101067264 seconds)
  done (took 0.946803888 seconds)
done (took 5.303051317 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.11103441 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09781385 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080113617 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096045011 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080289829 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099359474 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077589599 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096013912 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080701969 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098944682 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097080361 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081685729 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097482452 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078723187 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095564316 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081647601 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095786483 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079319911 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098146041 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07931491 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09599186 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081446096 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095553217 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078847305 seconds)
  done (took 2.942891286 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099093086 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097931976 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104931811 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087044387 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104170373 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088051876 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103361466 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098607959 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087033455 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101093301 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102368172 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086262566 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10110699 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085608186 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101652936 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102969951 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087776681 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099831816 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083752155 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10327889 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103799697 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082167947 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103116487 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08668297 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103856337 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103187921 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083502685 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099503887 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104849439 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085391995 seconds)
  done (took 3.649334736 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086837006 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095948781 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079939637 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104126244 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07964666 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098668679 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07917693 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098129749 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080598192 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097247493 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080736034 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097193314 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079544008 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099191475 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079886611 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101732018 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113530134 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079621374 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096992607 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080133681 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101381186 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079393296 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097766347 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079125485 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097061692 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078785674 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097058473 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078836527 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097938213 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079353162 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100498137 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083163308 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096894751 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085398916 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100417725 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078607224 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100555456 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078764249 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098196797 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095713298 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078744819 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096566405 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079054459 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103721319 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079693512 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099240286 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079320194 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098389819 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080131079 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100428033 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07845102 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097334149 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081187998 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097817435 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084070072 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09627336 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097911859 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079288305 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098232912 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080352032 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096439584 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079457599 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099083243 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08032701 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112821559 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086260898 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096986117 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08209204 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09914105 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082003113 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098915991 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110985666 seconds)
  done (took 7.297089093 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104748743 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127953418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.100148709 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099345212 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077703113 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098005733 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084308074 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097266544 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082243776 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1041192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097026615 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081562167 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099356906 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095439462 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098286699 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081816571 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104752382 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094836257 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080895303 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100793123 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08102547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101334544 seconds)
  done (took 2.866645486 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206829532 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106673084 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144943969 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108243674 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084853423 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108572016 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103877332 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088178629 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104925347 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086127733 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102390802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104565275 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.197069307 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102225512 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101715769 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086051306 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104312967 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085719908 seconds)
  done (took 2.797493781 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094426221 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100600653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100218404 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101075711 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100564784 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085315827 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106403789 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10957667 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084955937 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100503341 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092778076 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102556911 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102572927 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082883201 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103461781 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083412313 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103318129 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083398091 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110017777 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106857101 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088727015 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109579583 seconds)
  done (took 2.931783111 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097228221 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102096058 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120826985 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085891402 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096618429 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080886006 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108386035 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082961356 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108604221 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102014207 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082380828 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101598473 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088904377 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099851259 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105619863 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082676209 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103590256 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083218747 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102508452 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078472284 seconds)
  done (took 2.689266996 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103983132 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102683007 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102197562 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093760368 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102063884 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084564425 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111409682 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102231063 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083960753 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125919148 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10153219 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084114455 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112243769 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107656966 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10172635 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093605409 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111611265 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110787024 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084205131 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101751328 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127205266 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084238826 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110522991 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102335254 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084611828 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101618469 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101632996 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090451752 seconds)
  done (took 3.604731318 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081226251 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100231201 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081322359 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09776863 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079507356 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098206507 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080538845 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100859917 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08256997 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098515904 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082649385 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100495847 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082635104 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100691919 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082806531 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10047305 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082407055 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098243808 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079944453 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09808987 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082449313 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100699749 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083010466 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098101693 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080103034 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100297781 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079964862 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098443395 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082977049 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098585828 seconds)
  done (took 3.496171219 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090014857 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108444206 seconds)
  done (took 0.980349105 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078810556 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115689089 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080706826 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106043731 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088362762 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10258373 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109315537 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087368721 seconds)
  done (took 1.549821616 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095327391 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111371996 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08487857 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116000308 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111957862 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099346371 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172675125 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104300759 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089219273 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100303384 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114594365 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081761968 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107964227 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083039951 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107624553 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089687447 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100516007 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107087751 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087136209 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099979535 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085132998 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109987112 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088962606 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09851703 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102676651 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093629179 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114426855 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085362201 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10526015 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108983872 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089538071 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095275249 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082882358 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103180791 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081108118 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110651507 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118876128 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086391374 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111374649 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084001289 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112893974 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09683935 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088150548 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107157282 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111230205 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084133199 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102238605 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078389939 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099667251 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086093471 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097488129 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083880702 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097231049 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090872922 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10476555 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112728809 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082803166 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103897995 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086444359 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105553705 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090565761 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104536718 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104925052 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083389021 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109378162 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088785618 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112873004 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078798515 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096497393 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100305977 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093830217 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126469076 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090226479 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103889296 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103506896 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081394969 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105549947 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085017828 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108987181 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107918259 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084670593 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109237 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091503179 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101758555 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085944253 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110803663 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100010225 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085514693 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10016093 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122414748 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083052521 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100049388 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081536657 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113251291 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087168151 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101894649 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081625917 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10910435 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09573506 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08544159 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104416815 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084016924 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113575214 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108313791 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089338661 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11191289 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09111471 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102556559 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105000821 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080422628 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103318831 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086623575 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108611313 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078009906 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105385527 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085228333 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103631716 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11105436 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081915194 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102557894 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09174208 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10786049 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08272905 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099246056 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104790259 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084332804 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106513908 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092657426 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10147796 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078774556 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097892133 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104618534 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083965043 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105772422 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089373634 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105872782 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078728752 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09929259 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107431489 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094430482 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103017722 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084435683 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109741188 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103776932 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08364669 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108940098 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0875749 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101400933 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089629309 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103259567 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079003974 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10639121 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105559111 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083179111 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106521481 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087992469 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104712142 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084824068 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101588903 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10866946 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085475531 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101832702 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083917237 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100770414 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09527814 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104342285 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096986874 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080902355 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110867775 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082342701 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10289165 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083187272 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10537856 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103781638 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083150274 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101697723 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086267495 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115627836 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107511218 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085493004 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109461241 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097301815 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103047669 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087181936 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103238904 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104714056 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085940281 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113244583 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090316605 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108455574 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105096024 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082053566 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109659905 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092800958 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102189554 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082238532 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102206632 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087450612 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108465175 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107087639 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086110929 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100759835 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085053014 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106763723 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105946092 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084663445 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10155317 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090152137 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102055595 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091157838 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105160931 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114366063 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088066082 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098857194 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088219137 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100810998 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108962171 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080433845 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100741383 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083481606 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104267304 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08372589 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106069174 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077942986 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110825046 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110206692 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084890305 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102431445 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084757177 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109757053 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086681759 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107512571 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088148948 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109621599 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11473406 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083269693 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106349609 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096867675 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103328771 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077838769 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109966946 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101254241 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083734298 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102371581 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082666441 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10689569 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11192167 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092357555 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.098131362 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087160449 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102194013 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083696355 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098423761 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088703938 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106485542 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103457158 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091756851 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105374686 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085783715 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107470313 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084629341 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104331519 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104639933 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088478096 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106245729 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086625903 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102363772 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087948779 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102842638 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082404851 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105422376 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103019316 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085039593 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109082504 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085246734 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103637059 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086957971 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106162145 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084589404 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.1042606 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102668079 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087621056 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103611289 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084706799 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107114304 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080886172 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111290543 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084207671 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111614065 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103332326 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081780872 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109235428 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087340915 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10975229 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104855567 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087181473 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105474854 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085033704 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106646894 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091749058 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101245267 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114805587 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093520415 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104596532 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08827267 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104686881 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08629269 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103111993 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085274308 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105120326 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104180747 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085187176 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109354776 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088472586 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10382257 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086818154 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105360448 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085345079 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.1051638 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098481299 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08412347 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102905494 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085805349 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115834968 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08558485 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107015501 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102232212 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086317609 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102797315 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081186662 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112458421 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113376965 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086453781 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112974378 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084015924 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105670696 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115359484 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079325711 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101836414 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084276947 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102035388 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094268681 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.114262986 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09505738 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104300415 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083726655 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100847907 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104884781 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08376935 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098274553 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083365352 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108186001 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087975921 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103563658 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085143586 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108293057 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105566731 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095968714 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104617137 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085741969 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104696732 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082035752 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102941326 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084223209 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107405017 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106038922 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083406987 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101071049 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085709978 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10518391 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086660653 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104279255 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086929041 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111811025 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104536654 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088075613 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108203304 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080086397 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107825138 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084857375 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104544905 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084879131 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10845518 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107831694 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086959308 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113810841 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084995123 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105598303 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104068644 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083278094 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104054803 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085169453 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104732205 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084815098 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106231254 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094095843 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10245314 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108673868 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084987136 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104344636 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093670556 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106068189 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088644034 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112525893 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10686029 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087062629 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113179029 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089336697 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107591488 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105503937 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086788626 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110542819 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084099354 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111181184 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085875746 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106053839 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105946907 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083763405 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103671495 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086134305 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103499647 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092457986 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106408714 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084621955 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104533149 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083268728 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105535636 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108194188 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093588454 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107029238 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089038576 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100449915 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08224708 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106336923 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083124407 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106443807 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108452985 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091699452 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107738327 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085666293 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104228893 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114761237 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092488819 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109372612 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083648878 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108460662 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086911663 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107490837 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086304014 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105317557 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1064335 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089771013 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106492887 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08514271 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113488355 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088941437 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106759316 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107189016 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087294449 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105430436 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081757056 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106716215 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087557665 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110833127 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088411546 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105279217 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116818879 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086058344 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104848782 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090246477 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105482239 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090323954 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101252337 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106323339 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08756158 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106816421 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081766767 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104221131 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083906636 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107916677 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085389551 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101072465 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117208357 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096392754 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108994337 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084977551 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104770619 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081260552 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101203414 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085737977 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107422272 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107757821 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097439371 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104914252 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084926375 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101011996 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08649647 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108550143 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10825849 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083997152 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100952899 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085089269 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109112985 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091118269 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104698926 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086307836 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109357288 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107357296 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084413528 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109660809 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082719666 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10910791 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099771091 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107028387 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105691925 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093368541 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114924511 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086796474 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101757744 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087272417 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108505142 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.1052267 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08836458 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107029608 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102427966 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109611438 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104392992 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086082221 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108139126 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085312437 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114688224 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087897937 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107180308 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110622161 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088297451 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11581095 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089099955 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114326402 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109926552 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089616243 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105894508 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086771294 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104995464 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084888285 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107165853 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087094781 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112526239 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114953107 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085563425 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118740734 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115156825 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091857411 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102278892 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085414557 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105357786 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081832978 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107072344 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08406033 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103956365 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084020272 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104783222 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108417738 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092386812 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107130424 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087305344 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106532308 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080611923 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108112215 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088274901 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106432216 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082886221 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107116477 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106868821 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091070434 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110401335 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086320584 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107537656 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088151186 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1066183 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081973267 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113089019 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104977513 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089623544 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105530123 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086589902 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108034387 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089735268 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112285661 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106905911 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088625273 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117911951 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089411979 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103376142 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08290318 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112653376 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10327234 seconds)
  done (took 59.209421265 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144038158 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080135564 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097142677 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079445516 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113155976 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101482663 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082160689 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102276797 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083420975 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104850212 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081516126 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102413449 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111577777 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126759567 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094861634 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106258435 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081301204 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103742601 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10120324 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083080113 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111447283 seconds)
  done (took 2.912930526 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103137324 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11843653 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114271016 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117079887 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089653756 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114536996 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114318215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114349878 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098572352 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112691387 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12129898 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118154665 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093575812 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114050088 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113442329 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095882136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12135421 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112023346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118000493 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098059714 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116975229 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117208138 seconds)
  done (took 3.255344278 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083103872 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101036888 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084380732 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098090976 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084651818 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100963838 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089682832 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104409953 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089124128 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105706157 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085045041 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105222846 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107402401 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082109882 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106032193 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084581089 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155091224 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110129967 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085791869 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108138183 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.081683254 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108989313 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.101866008 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082506752 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104396187 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090893291 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107463813 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085111986 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106989481 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085428506 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106597001 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084358658 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108611715 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106969282 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086454699 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104848464 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087207501 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106183089 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082156351 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.104410402 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086999323 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102563803 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086629751 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107594933 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083118828 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101421133 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083784947 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104674063 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099576056 seconds)
  done (took 5.578452054 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10260669 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160886353 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085653266 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14249567 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119954826 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111466814 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086979739 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140690893 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101132207 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081520334 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121610542 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118352392 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102260598 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.087778831 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10949858 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10173195 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085403376 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101367619 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106094606 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082952938 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106209884 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089186517 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11918315 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115780241 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107530535 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083133401 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101805963 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107662711 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097506593 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107410215 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107487808 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089351214 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118885537 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107236718 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082431239 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105144931 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119385842 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102580135 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086305923 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099874499 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085186003 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108160456 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108705341 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100914336 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102708387 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107889381 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083686108 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09983519 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116300573 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086345714 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111852187 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117919906 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107226816 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084869548 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109531728 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118342154 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083459659 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101006716 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086887041 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115235222 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099549979 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087248764 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118743812 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104478767 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110591877 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098781722 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107953294 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106433246 seconds)
  done (took 8.041407701 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092798095 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108911508 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119761655 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117370688 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089479742 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109015141 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10901986 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090039335 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108732191 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11342333 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108611148 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131490386 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084847448 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11178672 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109420501 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090201912 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109490396 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108484972 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090129718 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109594464 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109584666 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117461899 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090053387 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118802452 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140069506 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103959392 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091325849 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11057728 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117924027 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108855055 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122639275 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090561012 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108995919 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118612081 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121677936 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089988624 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101569997 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108454869 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091104226 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109670943 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105312878 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09958848 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113509253 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109170547 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094439373 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114869334 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123546197 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127233343 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117713592 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099998966 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114485035 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123521802 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113937613 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095081506 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123892329 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149749713 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12387789 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123625279 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114403906 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103301068 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123408385 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132399569 seconds)
  done (took 7.665074158 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106757838 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113275552 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11528844 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09904108 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083376115 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110319501 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086327755 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.106403042 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117122187 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097746727 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120888802 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111700917 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094949374 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120693142 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112916873 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116136166 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092045262 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112341763 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117988527 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091588886 seconds)
  done (took 2.964538809 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093099837 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122406009 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084528841 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113377419 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.111822949 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094277821 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110690506 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111904826 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089353306 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111825356 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099292991 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119653962 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109318555 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095058832 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120487515 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115175685 seconds)
  done (took 2.545334836 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096754947 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116442992 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121207554 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087459118 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.1080766 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086845564 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.109477516 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104161872 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08486963 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12471256 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088198615 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112786132 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109052308 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085917247 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105670144 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090627646 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10525714 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086257321 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109540413 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124476081 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099516092 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107210852 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109356929 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090289707 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109109692 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093941274 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110075821 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106736544 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086328103 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10918242 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088887132 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116571971 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105835023 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087685117 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.106321419 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085564578 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108979523 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088935442 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112457526 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108430662 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08656605 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109469221 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088163517 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109684999 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084355673 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110228194 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105098087 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095319665 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107026743 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08895576 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109176502 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089752087 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111386801 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119312083 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091639843 seconds)
  done (took 6.438251602 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09819684 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107691152 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080357933 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105143847 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090459436 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111968268 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112174391 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091547198 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111074022 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086437762 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110782584 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092536598 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111188135 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112835867 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090468102 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11281815 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084164052 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111286744 seconds)
  done (took 2.670052054 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089992841 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108005052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096480904 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109744884 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088026701 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111914593 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083728524 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109117793 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107319502 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089895109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109506026 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090835342 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107701523 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091571141 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109743473 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088820197 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112704627 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107658713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08911265 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105134987 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091202054 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108403462 seconds)
  done (took 3.052881507 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11739321 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128994385 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095927918 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.239326324 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10792333 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13693958 seconds)
  done (took 1.672050713 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108889593 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119489281 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106480776 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108607531 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119028306 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089916975 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111488862 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111560497 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121835269 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104834908 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111790228 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121484206 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121746355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099907389 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118453268 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118117737 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111632358 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091117307 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109929579 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130916164 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091125869 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122099111 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111131367 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090706603 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111893041 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121081248 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121657188 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125427569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091454043 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121658515 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118215613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090682453 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122584289 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126173202 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113077475 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101438576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112855119 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133784774 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118585671 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100049279 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113452397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118871642 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101459166 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117680102 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121156061 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112273561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097702693 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112597958 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112052299 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138590114 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097824319 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121067838 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119014474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122587474 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101944233 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138656633 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126366151 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121199383 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118956844 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12519276 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121551735 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097916351 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121266441 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126244749 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119084095 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100629964 seconds)
  done (took 8.359031291 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102292027 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128561009 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112766072 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125848566 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100242616 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111804044 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112110644 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091166086 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112664582 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111790466 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1556271 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091536791 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122203126 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122581431 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091929664 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112299358 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112105501 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121867114 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091300392 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140254925 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111994874 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121644178 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121793827 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100222733 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126310129 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118296098 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11205707 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091325523 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112151639 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111810086 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097391236 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112663519 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121155664 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090652888 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122109525 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112581908 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090686604 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117730241 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112267357 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118396677 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101144805 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133030271 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113013818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112816097 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10599731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112345763 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111693111 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090566908 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113020289 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11199704 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105000985 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126256381 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12583494 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121388035 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112599449 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091532302 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112790585 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11240168 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092121372 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120011219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122611223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091302328 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139293708 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11329165 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113266383 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122283766 seconds)
  done (took 8.285300474 seconds)
done (took 158.209799843 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.217289724 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.209564947 seconds)
  done (took 1.275291743 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087130991 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135051853 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101280163 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173723654 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085341364 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141390136 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13717522 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096884183 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.110456016 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089957323 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.112128093 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091236543 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.176276168 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085416872 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107166456 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111284438 seconds)
  done (took 2.697504784 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113189438 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.257412947 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127636135 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110227599 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093980692 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114531661 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088053929 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116544539 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093599667 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.110079271 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.091964762 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.111522131 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088386311 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111578181 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093693915 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.113818873 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108848085 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092238396 seconds)
  done (took 2.892378887 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113215835 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148787503 seconds)
  done (took 1.127013131 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.244478017 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.1603515 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.239609501 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.450869446 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.278073488 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.360971986 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.197107802 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.215273635 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.17008494 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207187458 seconds)
  done (took 3.377689729 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117639858 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178331554 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320072771 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.161740828 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.110802636 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132707767 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16180126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135965941 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.127891729 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10597318 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128871122 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.122671116 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143621005 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098686894 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11980814 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122351748 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125138014 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118543177 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119495089 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099805015 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14346422 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088819517 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121050548 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.119207819 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.101920341 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12394627 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.110570362 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089364584 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120964222 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097972501 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11850477 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131022427 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123391467 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.160577873 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.128412639 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.161469698 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12304722 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095118724 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119901078 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095109561 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123495035 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123474907 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129980886 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101487819 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.110701005 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101737464 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.111124124 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088933225 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.120170462 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124054609 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097780211 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118331225 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.160468052 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124113841 seconds)
  done (took 7.620244982 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789534937 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161255957 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095139714 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.887007503 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13855789 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10795666 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775409841 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11694212 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259396421 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764776056 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138453983 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101071203 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236261979 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.265526348 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.997079053 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.2922524 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.648735771 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130767285 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157556165 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158844161 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122929277 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119898107 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135860678 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456134871 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116817701 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095093404 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123393493 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123385228 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166093121 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.130582829 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096384202 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204530185 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.256695593 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201102424 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098858136 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.116628726 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093825382 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.197350344 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271933203 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198161511 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184404826 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113597208 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094440112 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126576833 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137966438 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0911477 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189031699 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.180657805 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175234449 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119586629 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123104839 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103247783 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125572321 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168803408 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12632985 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.327288196 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319785085 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094474615 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126044353 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131330673 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24415656 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128611628 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227914166 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141489619 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194346722 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118323283 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794248882 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.175093548 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112888905 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100096307 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124034608 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119871882 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101418506 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169283346 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394873458 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128001355 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119879446 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094974436 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229493223 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107768017 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116103624 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168205761 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121804429 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125778848 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106876279 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127764878 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174967489 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.262285697 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105638896 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126329702 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11967516 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108080362 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.121795057 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217079028 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224310462 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.168491162 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235975775 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099562011 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182485998 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168467622 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123118018 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178131938 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124813924 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106622769 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127918929 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223164318 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149780473 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127887329 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098590584 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123732213 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152965819 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.131818118 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10149722 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197306102 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.48427113 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173585404 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.114359431 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.133049686 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103450826 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187576978 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100845717 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26643479 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126929816 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173736821 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124409903 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091960904 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125689588 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167073245 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125011802 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103237042 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125194377 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122295872 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.240815924 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220821341 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126337994 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226264624 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188528626 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123156626 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177981986 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126962581 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173006011 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125067152 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102860096 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122270281 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788533644 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121962798 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099186098 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117857779 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200279412 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093663095 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.129051491 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.131359715 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092395828 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78061102 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.133020627 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.126338836 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108406461 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123241177 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125087889 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100538038 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120873362 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1670553 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23601851 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124382475 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102638196 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.130476305 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165859885 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.122942789 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.130522237 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.130683431 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109185097 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12836592 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120318163 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108641147 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196611412 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.168842449 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223522454 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581433567 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.118411318 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.129369754 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205986252 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110228357 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285741404 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095814133 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.221108466 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181558342 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09878409 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308506616 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162435844 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193627056 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126214984 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170833295 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108912757 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116847754 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163013871 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110873975 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096732695 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160639452 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124404628 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121590086 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954958494 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090295685 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222614859 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107923409 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169444193 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116027625 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1183363 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270840023 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110433028 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127303767 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16322855 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114582202 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105031934 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.746617998 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124326599 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099102598 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116589282 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221654526 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.168589521 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122636482 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119094196 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098800927 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181739692 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205947252 seconds)
  done (took 44.788678173 seconds)
done (took 64.634401081 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278325038 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216097046 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267183585 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16878212 seconds)
  done (took 1.89202606 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170041421 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14967585 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122399095 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111888663 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156986684 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089125454 seconds)
  done (took 1.686358053 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.357827568 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274445059 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243654691 seconds)
  done (took 1.768380483 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.2959308 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248778644 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470670278 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.322736386 seconds)
  done (took 2.346901102 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.216193734 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.139427013 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.116741103 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109268675 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.207107199 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253126428 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148721684 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204408761 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099573527 seconds)
  done (took 2.425465087 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194613069 seconds)
done (took 11.204712553 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.292193733 seconds)
    (2/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.265723808 seconds)
    (3/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.163379576 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100819325 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.122646767 seconds)
    (6/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.248402931 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126696559 seconds)
    (8/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099483502 seconds)
    (9/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.252726788 seconds)
    (10/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.176640433 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.125494262 seconds)
    (12/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.234908955 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.18050544 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.184889125 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.225536622 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105750166 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.1299377 seconds)
    (18/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17949583 seconds)
    (19/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137224865 seconds)
    (20/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.10845744 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120398762 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.19658684 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098556015 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.161005696 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112489261 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.190563755 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089878057 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.180557416 seconds)
    (29/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091021148 seconds)
    (30/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.187954575 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119091465 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.252078953 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.271466992 seconds)
    (34/309) benchmarking ("sort", Int8, false)...
    done (took 0.204717033 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.21619388 seconds)
    (36/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.156432261 seconds)
    (37/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.177159917 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.142856689 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.212912613 seconds)
    (40/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.151221883 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095547424 seconds)
    (42/309) benchmarking ("sort", BigInt, false)...
    done (took 0.223670439 seconds)
    (43/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112897863 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136119692 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093975827 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195316051 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.138082593 seconds)
    (48/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.091587891 seconds)
    (49/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.238779847 seconds)
    (50/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204145537 seconds)
    (51/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.131222249 seconds)
    (52/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.127831705 seconds)
    (53/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088116199 seconds)
    (54/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.141665062 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070488362 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.2102588 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.12192817 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097759819 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.239829687 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.210747354 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.139837011 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.194875015 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138514037 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.148874776 seconds)
    (65/309) benchmarking ("sort", Float32, false)...
    done (took 0.178919746 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098824989 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.124462584 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.176510243 seconds)
    (69/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137564932 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087108448 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.211339574 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091072073 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087529216 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.152916043 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153420047 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.144445979 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09689617 seconds)
    (78/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105578123 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114668307 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.221039517 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086717305 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213539531 seconds)
    (83/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.172426211 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095795548 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.093134377 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.069993996 seconds)
    (87/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.20681274 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.158662181 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11509348 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.139846039 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096666169 seconds)
    (92/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.188142935 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.070126725 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.116187974 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.10114727 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.145848983 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115384201 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.121903217 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114601539 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.099404736 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.118705228 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.231654443 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.10242729 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.114112319 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.218813456 seconds)
    (106/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098539725 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.097969813 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.122682479 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.096564959 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070978151 seconds)
    (111/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.144356933 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098396751 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.125285427 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.092302533 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.147885148 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.398408961 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154102724 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.144602142 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072758451 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.126963971 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.136667914 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.072127942 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122280324 seconds)
    (124/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070983816 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.184263342 seconds)
    (126/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.072303784 seconds)
    (127/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.124428536 seconds)
    (128/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.130544081 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.200148079 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114476179 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09210203 seconds)
    (132/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.127009989 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095891735 seconds)
    (134/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.070825741 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.124359722 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.120492354 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114346289 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.126625044 seconds)
    (139/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.141792025 seconds)
    (140/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137747731 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.184291389 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.12438716 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.184393129 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099117423 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.071341467 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.146165739 seconds)
    (147/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12352794 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118524286 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120983729 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122621191 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.114143373 seconds)
    (152/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.181350115 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090027361 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.125235009 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.124151261 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113460213 seconds)
    (157/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.096570855 seconds)
    (158/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.227816016 seconds)
    (159/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.119738231 seconds)
    (160/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.12240573 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090809225 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.071304365 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.11519078 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090327331 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.122671913 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072501127 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119554645 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068737237 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11592362 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.081026561 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116370892 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094306335 seconds)
    (173/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.100995193 seconds)
    (174/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072184098 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.072165008 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.119411832 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.220896274 seconds)
    (178/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099672581 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.138605639 seconds)
    (180/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.144809061 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107747044 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.114860067 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09302679 seconds)
    (184/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.112572414 seconds)
    (185/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.070713778 seconds)
    (186/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081672476 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.16032172 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.19403501 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.072481161 seconds)
    (190/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.150848927 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.099588343 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.097177909 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09702876 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.140680899 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.173335012 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.16019983 seconds)
    (197/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.222386054 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.181279017 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.072353049 seconds)
    (200/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080991206 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116234031 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.071663111 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.095848713 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091576219 seconds)
    (205/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.184449844 seconds)
    (206/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095790552 seconds)
    (207/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.122585946 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07168661 seconds)
    (209/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.107316339 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.121188213 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.166838339 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.071414848 seconds)
    (213/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.125208659 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.071474988 seconds)
    (215/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.119388129 seconds)
    (216/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.080879167 seconds)
    (217/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094493626 seconds)
    (218/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.224103784 seconds)
    (219/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.171147934 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.116859406 seconds)
    (221/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10569244 seconds)
    (222/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.114781802 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.072777729 seconds)
    (224/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097071377 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116332863 seconds)
    (226/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.122682432 seconds)
    (227/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072662601 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100368449 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124531883 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.190903648 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091313347 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.13022871 seconds)
    (233/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.073094861 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149961235 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.139387337 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.072255805 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.156437822 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091861299 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122455716 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.148934462 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.097653364 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090401799 seconds)
    (243/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.13060906 seconds)
    (244/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.071637052 seconds)
    (245/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072807416 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.151816924 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.196691902 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.081946768 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116166719 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093328522 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.116807682 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.225644048 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092484101 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.099323443 seconds)
    (255/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.082105134 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.093767748 seconds)
    (257/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.097220206 seconds)
    (258/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124948441 seconds)
    (259/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126262459 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072498817 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.116211353 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.161434321 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091772377 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074276229 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.125666208 seconds)
    (266/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.141201739 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.073089812 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.146814867 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098176712 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126285391 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098573843 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.098261263 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091225283 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072171151 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116217256 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.084499291 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.105415906 seconds)
    (278/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.072273815 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.183820559 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071569355 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.116680938 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116244801 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.140548155 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.11555476 seconds)
    (285/309) benchmarking ("sort", Float64, false)...
    done (took 0.153588094 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.124472836 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092955674 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.137415722 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.11614169 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090284282 seconds)
    (291/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12328352 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.171360037 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124860288 seconds)
    (294/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090640948 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12296439 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097826962 seconds)
    (297/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106211812 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099033965 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.143459657 seconds)
    (300/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.082052274 seconds)
    (301/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.124497446 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093172929 seconds)
    (303/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.098140252 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098423356 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.096269091 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167565438 seconds)
    (307/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.13163579 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.072447884 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.186665785 seconds)
  done (took 41.337443301 seconds)
done (took 42.228691396 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101056595 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154289193 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101201359 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.142219137 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.130584678 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097946598 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124404019 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103586954 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129836352 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.131808945 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103204368 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09965907 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101816034 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126638907 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.10256268 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146784208 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130569323 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09893762 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.125512511 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.090814945 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.125511223 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.09131851 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.118553603 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075266283 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.128256402 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.099793135 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.123207502 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12691211 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092009364 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.116896002 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095209299 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.124318448 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091981114 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.131422663 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099098544 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12584365 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103780843 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.127252394 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.093562496 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.117231982 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.124292422 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091922267 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.123950756 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100512636 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123323774 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097657119 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.125809037 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103630218 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.143750235 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124186475 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.099982047 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.130336956 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101742052 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.124190317 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095702795 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125226172 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.097984856 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146695223 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.126933225 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098432734 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.124898088 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100385425 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.123789665 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.100034237 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.125524723 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.127719376 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.105002921 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.123073472 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.102028324 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.122528122 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092199395 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125824932 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096643388 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.117545796 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.102031642 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12774946 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092107859 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.123335662 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.124983465 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097661429 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.117010555 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094944497 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11658778 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098171461 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120447344 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07478247 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.120206598 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099031124 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.116569097 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101072339 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.123749926 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09933342 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119054814 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104820106 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117458811 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.097454572 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118100602 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092640842 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11944422 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097190843 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.118321972 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095607014 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.125975451 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094694874 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.12344629 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130104303 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092780943 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.123532325 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.092122814 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.116603821 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107588097 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.128609208 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093511629 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123203576 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091945897 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124582454 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.091624189 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117273621 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092108517 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.117339493 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098335031 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11802318 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095278855 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.125025793 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.13256559 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.091898906 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.121919751 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096333129 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.117200264 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.098162822 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.118076723 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.092207647 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.119295431 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083544894 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121312923 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092441961 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.124659847 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094084778 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121236127 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089003593 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119709399 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09116873 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11833412 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094402281 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115334022 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078935489 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119966753 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096178571 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11861995 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091688885 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113746293 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08738454 seconds)
done (took 17.816154143 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087367105 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184314465 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150862837 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141394393 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10696362 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111552758 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121711786 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119446609 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112843117 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145912423 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113407578 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.136892606 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.153026925 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.092556815 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118604903 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096935878 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119825548 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108855681 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152828332 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139996566 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.17203156 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092742183 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.154755934 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143605249 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.128649617 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120547351 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11898913 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.0969523 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122063525 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.109515118 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.139566341 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12211093 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.093287623 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.141483795 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.110540677 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.127451017 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092791808 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12539081 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093184919 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11845367 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147766552 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.141166288 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098920878 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.124774349 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097049702 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121269202 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.095347535 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.128409014 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104517544 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123304425 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133321861 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.16382484 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.097223422 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.129245754 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.092105064 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.129881028 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.128600576 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095925063 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.119739907 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.095826938 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11848596 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096587003 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.134874163 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.148694947 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098396645 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129845648 seconds)
  done (took 8.976981431 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109954012 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146748375 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.111496817 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.137849115 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.136540716 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094277705 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119350726 seconds)
  done (took 1.822125349 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08961961 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139912494 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118479188 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143089042 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139717795 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.115106306 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129698841 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094258437 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138509219 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095194576 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140845632 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160688244 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09657653 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12714066 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.145613176 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09443265 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144766266 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094300621 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123024053 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119085416 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123239988 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.141066014 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092507392 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112870118 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102476921 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112742834 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160744879 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092959537 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11378992 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091274926 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111458208 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167777112 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109784568 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.132767341 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094573021 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135473821 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135292223 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094544119 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.137185883 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100238679 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.134761623 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095234942 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1215104 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.093110377 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125455116 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.131057761 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.096047943 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.121679441 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097843878 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142091909 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095448796 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134361028 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094984555 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.125112101 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096200629 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128987635 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131009028 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09585957 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.14124038 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096119984 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139656921 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112643675 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134946799 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139391892 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097583351 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13579939 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.108878516 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120835914 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09028718 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116478265 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130590767 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086564941 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114738527 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099400659 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115673046 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111618076 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137070473 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114740172 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10008682 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113765508 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089042949 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113748607 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111297458 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117653429 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090340116 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122034511 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091695593 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112400352 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087211661 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117024448 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086642617 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116126279 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115785892 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090027064 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115593364 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105524703 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114826588 seconds)
  done (took 12.197875883 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089345079 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11388209 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091198036 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11374691 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089520113 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11445908 seconds)
  done (took 1.578666372 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11361409 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117121439 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105639797 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127104214 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165326857 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111192665 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.136956857 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13131579 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114817237 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13585239 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136839125 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.11237526 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141744787 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121004699 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10377771 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120363548 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129939466 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099537887 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128055137 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096606446 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136586292 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121304142 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095681696 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132037824 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118697913 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094991022 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126002811 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104411308 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.135195419 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.132765836 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.103252322 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.126013636 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.102692956 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130379555 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.138416842 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102033899 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127316967 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.127247892 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104561987 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12535972 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112308403 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129827412 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.134972581 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100906708 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13107322 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12889914 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100756191 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133576348 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.11147871 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12738168 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.127134662 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.102727398 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12671423 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.100408855 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129460824 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130662332 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.100781208 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137941596 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.10292884 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.130083592 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.125516678 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099798351 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131728708 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12532373 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.111197883 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126150815 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.103286804 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129067779 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13009423 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.103893115 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.127741082 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.099266441 seconds)
  done (took 9.616411634 seconds)
done (took 35.144857687 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686230833 seconds)
  done (took 1.653813519 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.722251987 seconds)
  done (took 1.698450686 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.525476968 seconds)
  done (took 17.492570474 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500327876 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584175849 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.822224267 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182879545 seconds)
  done (took 3.065241291 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.948816077 seconds)
  done (took 1.941919737 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.30328855 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26008557 seconds)
  done (took 1.544114909 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.779551321 seconds)
  done (took 1.761006333 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.397662736 seconds)
  done (took 2.38299902 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335525255 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18387052 seconds)
  done (took 1.509169027 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550244677 seconds)
  done (took 1.52932785 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.048638288 seconds)
  done (took 8.043300666 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26779019 seconds)
  done (took 1.272181392 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305050309 seconds)
  done (took 1.288801555 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.433511812 seconds)
  done (took 4.423273282 seconds)
done (took 50.593574381 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106269434 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126523774 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101780439 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124071919 seconds)
  done (took 1.444842646 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100960338 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120212426 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099529008 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119945561 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126045469 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097548206 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123218222 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10129203 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12171973 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099047006 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123904159 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119865028 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097971803 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122525506 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092886024 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123775288 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099708826 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120353411 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122817746 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097165888 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120766212 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098151878 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12459229 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094881911 seconds)
  done (took 3.659538082 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10466903 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120786632 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098826112 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122572992 seconds)
  done (took 1.445522132 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100364885 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141075515 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140077319 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101784049 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145561079 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.139720395 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.098511364 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.124799915 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.10183532 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.133384138 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09722318 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157588132 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145358991 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.106279985 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13531738 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095426926 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.125121386 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.145234659 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.106628919 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.133861965 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100272218 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.132803482 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.098270478 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.147030277 seconds)
  done (took 3.948356558 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177333365 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.156401257 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138520559 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094418145 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160339688 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.145619839 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091295787 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.147226779 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.091442594 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13416816 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120559054 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134745024 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130343689 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089974822 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115910873 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088042033 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129410717 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130057294 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.096627967 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.153060203 seconds)
  done (took 3.531374251 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105669655 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125263301 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095150627 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123522792 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105150396 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128955355 seconds)
  done (took 1.690487404 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096201606 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.120322487 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093594992 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114129003 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094071988 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11447622 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08829006 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114461943 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089766745 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114801839 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089407342 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112723382 seconds)
  done (took 2.249554633 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.459738371 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095600668 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119937451 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111504538 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096195798 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11395477 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102599083 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11728596 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139767199 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090411268 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114448138 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091146035 seconds)
  done (took 2.653442972 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231310901 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123912204 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282426037 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1911858 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15647536 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170839677 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151909527 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163147264 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.220677385 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157147794 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201489691 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219511277 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125200934 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211175245 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111527432 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144073169 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22226076 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209686163 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152301217 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225707431 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198783411 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164859708 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177752755 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149138925 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13757535 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170643475 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119980039 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10346873 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228884537 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17312462 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212165211 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160478677 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145221075 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207682478 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247352526 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217173297 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18685883 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134199975 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145588361 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162794614 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259440937 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136256076 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225929659 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152900203 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105055839 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213739148 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16548551 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173645038 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151173045 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13837321 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192201127 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237441075 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189996489 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137594002 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163496848 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156366464 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167353094 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153479427 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248655121 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195672233 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175765926 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119179672 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146007091 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190096028 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181442338 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166926798 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.204549081 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14578244 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191161748 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18596536 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163303277 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21432637 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184681446 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139403735 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166217889 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171023389 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171289515 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252771148 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174254282 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122119415 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167011913 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149109649 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130789138 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166252773 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124214708 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206920345 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14568206 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134595469 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163482325 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159599896 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159317938 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197642699 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218249001 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120827726 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110205324 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154206867 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153900122 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190251548 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138705158 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157884581 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161941041 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128401557 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176727316 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097224104 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197357606 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090930848 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172193784 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204282472 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101804158 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1576 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15136916 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147704122 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172200813 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195769988 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141720951 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132492512 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205962586 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17445678 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.148686229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175962438 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224783034 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115314665 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148410749 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224610429 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240053647 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112064769 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224356401 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154467477 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107830611 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131650213 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178176032 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154044037 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16085656 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134346294 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180529847 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230997361 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098495736 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137141908 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182121334 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132648147 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131910486 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160014418 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146780325 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111795279 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146921669 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151341379 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180420343 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200940716 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125694003 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163186324 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150813459 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249602518 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140959715 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148412535 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147791739 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093320429 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.21722511 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19591092 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129987815 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203702317 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169392685 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159186464 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166525947 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134858116 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176950362 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129436626 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092658779 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216069576 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16604776 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160026835 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194393926 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158238929 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178507618 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180262422 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197319272 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172697364 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162729917 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154300253 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111743616 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158675902 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164026275 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122567334 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142171848 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106739778 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152361737 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141770599 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133684781 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194385997 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193635758 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121148847 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156773028 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149572594 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180079067 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127652831 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173363097 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175712261 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146406309 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.221120878 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19252868 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181837218 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142366397 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231401831 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093833495 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124247932 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140714094 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170051293 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106259963 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134998228 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166123541 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178969502 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205898016 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176225097 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165090681 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171205571 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188858985 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121802027 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140642398 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21164703 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176176972 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161880805 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137081934 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148863788 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17471021 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157819479 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252502371 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165632708 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172881447 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232697834 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147549508 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105130928 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150251289 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184895042 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153263565 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202837154 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119606435 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140490914 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160393254 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131542041 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158996609 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181467494 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161950312 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213797791 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14988145 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183067456 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12627168 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164672427 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157540404 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164296581 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081568682 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173198183 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230064677 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148730002 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166981035 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188637799 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131042114 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.177185671 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209409596 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217022588 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137190494 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156304944 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157701185 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136843156 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19571547 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176491182 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158861838 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185297119 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156636677 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109441963 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139856184 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148523921 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14964825 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130160234 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147528924 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174343049 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111681633 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210192626 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160240308 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157997326 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170363137 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148880418 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116552467 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149979981 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237416263 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174348798 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208942502 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148434697 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179027043 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23152746 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124411395 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104585762 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133146722 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178588135 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135297427 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18826631 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.14692606 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159337229 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179439666 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188967749 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139074979 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.091792502 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155375005 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171509037 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166275484 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151965711 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157523456 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229641758 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114394166 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131583472 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171658791 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160045093 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14593643 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196643573 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079717318 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148765126 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126600033 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104755025 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163111508 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232718182 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135340287 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178682776 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168629696 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167256073 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164790477 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148355205 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121296858 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166945653 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226627694 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179394757 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131302527 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153720613 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175746602 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192254286 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160673582 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140390609 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202114481 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21834273 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19721539 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141693536 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167105925 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165887248 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15540325 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186135131 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134160692 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204071629 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133678726 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223925515 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152328676 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141972566 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175900028 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120058542 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141741738 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214455508 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176511552 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107027495 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132391979 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168760761 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20258683 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155832613 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100060142 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17872873 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125040069 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189180606 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255251996 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13344506 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152028555 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120042582 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134851882 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156391729 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157633013 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140302732 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138798609 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226204699 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133587623 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1903573 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229314536 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169105041 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173724557 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143537297 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692876635 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12951114 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192726289 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154342738 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203019406 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149689252 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170899936 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15753613 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167221488 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220843293 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160845429 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229628217 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193151137 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.174755757 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131984211 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157726163 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160481152 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143058964 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150746692 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166467013 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159593384 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15164781 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.175792787 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168926145 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133731411 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111520564 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224340221 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153319653 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18194827 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179040809 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138202435 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170827581 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185771074 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132356263 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177382256 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234801254 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140579185 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150477018 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10680618 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15337888 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258693668 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123944148 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199431941 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173480963 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157606384 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16540921 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147357964 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187613544 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182305497 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17464091 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144843016 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158722331 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126953344 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13598131 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129042023 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153045951 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167411683 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14704751 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157914963 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138300032 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187295894 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123443986 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143750874 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158226445 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190516761 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240640144 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107100215 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135013551 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161389286 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14980639 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174665705 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176553829 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134294604 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108521136 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136428905 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155432843 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112241702 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155682442 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157046136 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16433367 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230036504 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109027805 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27740973 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137495915 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152258794 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089148717 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130185833 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14865712 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144282029 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156570403 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123110681 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257282412 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.143931802 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105521724 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146424892 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125724386 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133808031 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16251252 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16150856 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173842884 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14324012 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081560385 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156934972 seconds)
  done (took 80.128267186 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171158185 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.146983403 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158588257 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220598862 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189568775 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.304103129 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231199645 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268463415 seconds)
  done (took 2.768648221 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093860801 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145078078 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.150328118 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131964226 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091253346 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118515714 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.328726384 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130413402 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090858648 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.138946782 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147333954 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.11652226 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.511447041 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.12163383 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117398797 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083479855 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115791946 seconds)
  done (took 3.711367243 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.459333813 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.693712922 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.484425716 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124188265 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.076277429 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134437276 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.577319867 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.207012923 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094907237 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.47732573 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.764927698 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.177982153 seconds)
  done (took 18.353310354 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098681037 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120894188 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108332259 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135046786 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095940322 seconds)
  done (took 1.640984499 seconds)
done (took 128.214076268 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103563706 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398573522 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072267365 seconds)
  done (took 1.589007929 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107036928 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136526123 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108379939 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134954143 seconds)
  done (took 1.580106302 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097308566 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12626874 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109050251 seconds)
  done (took 1.419795434 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.319484024 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189806178 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.14185135 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105072909 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128978707 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102953908 seconds)
  done (took 1.424977976 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097159695 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127608059 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097187054 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128702236 seconds)
  done (took 1.54441538 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094087706 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070642754 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100685558 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074230108 seconds)
  done (took 1.42652158 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113763969 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131106083 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104347029 seconds)
  done (took 1.440886981 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130506124 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138085955 seconds)
  done (took 1.360927279 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105118569 seconds)
  done (took 1.192877612 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117232703 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168454821 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188840191 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16334246 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.225383734 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1651484 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141162291 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11431565 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.12996477 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143579537 seconds)
  done (took 2.650688484 seconds)
done (took 17.473726168 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10311789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416565525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428044115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116688028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72022631 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380081876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.078629494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145632135 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165458962 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093188082 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137917903 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671913555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034009795 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378284367 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.992888738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376720083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703171874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093286717 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11875088 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093475829 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.063673296 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092254218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120543566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092405107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701209697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424953577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094428237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372470332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092107884 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126533691 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383632825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12171021 seconds)
  done (took 17.015489836 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09475404 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173626106 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097850272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138720254 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122358033 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093805534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124445047 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093186628 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178817165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121788702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11072781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120708455 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125628122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095138404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14091847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092488143 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124353366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092777037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120951714 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121680583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111717258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.1189704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093874685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121877113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094165839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135070282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12249999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093211494 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120505728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099108664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12778719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094831115 seconds)
  done (took 4.811186286 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140930504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182875421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128468138 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127437999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168409893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123286939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198587454 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11800043 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182940215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123534841 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139137255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092816834 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155845548 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122742489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11476728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12119744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096989898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121222844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093162213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122277862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139574305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092473847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122216485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093518096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122809854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10745657 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122949754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121368281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093014307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127820302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099600257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123673673 seconds)
  done (took 5.141788145 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0967529 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126338701 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108937208 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138254664 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095393817 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125902066 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097843258 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124262237 seconds)
  done (took 2.012844587 seconds)
done (took 30.070190474 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111010814 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126903137 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106848934 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134335159 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102264319 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131234131 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091972204 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132948739 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133869779 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101541309 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136744579 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092644751 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122006968 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091130973 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134092612 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097470086 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133355402 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101609019 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132734263 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132080965 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094494838 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132209813 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102102439 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13246891 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103608239 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132626565 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136832198 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100164453 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12144735 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094866147 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125043164 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110543998 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128947519 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104945753 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126706391 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097450983 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122982754 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094566114 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132414763 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132347812 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099623475 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133272926 seconds)
  done (took 5.997739973 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107632779 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146117807 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104232321 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.086479099 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116159882 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08063277 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137678749 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08574789 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109985022 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108018204 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081146093 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106077413 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078341782 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101196422 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077633281 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075451613 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108312964 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07570526 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076672986 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105643624 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079409494 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073350085 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108348289 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078460149 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074871422 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109508738 seconds)
  done (took 3.595610422 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099462875 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135099321 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112216848 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183125361 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160259677 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100246008 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131773174 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139848212 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108601539 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120939613 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096016421 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14924831 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110868068 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128172243 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091999371 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136499443 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136785037 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094749929 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12754654 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11286085 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138088663 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102809567 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143210363 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132484075 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091679759 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122894904 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096292455 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134728335 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097301362 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13127547 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096239951 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124254566 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131427792 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104151306 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125387236 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094508104 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141736726 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131262826 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101690802 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122419313 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096198118 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121994981 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113052505 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167067533 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099263667 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129971023 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129074209 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102185727 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121053817 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110546014 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131148663 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091567416 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125792439 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091317353 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122254219 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10672071 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124386086 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123548671 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.10212689 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12498187 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105920764 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12501888 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108331882 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122168907 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099947953 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121436684 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092791506 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121178342 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144276487 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09388291 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163736207 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093087506 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123280405 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130538736 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101118713 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127646101 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092819387 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137822151 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102251087 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12577849 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10175618 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125891588 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095864796 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.144123903 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12407047 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095073505 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122984883 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100010031 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123932736 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095100945 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136202548 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093250064 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125597263 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111606593 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121534287 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123243943 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099242045 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126202197 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091744484 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134926924 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098301395 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122499013 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130464958 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092966681 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124488852 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1031887 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12596855 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092066205 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127007319 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099508235 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12278274 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093575387 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.1252561 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094644458 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.1315992 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098959692 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128073633 seconds)
  done (took 14.823798438 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228455444 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216488785 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.237903708 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261526568 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134112701 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115277029 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211173833 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155440225 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123795428 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159755211 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162660181 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181424615 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139136657 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179771018 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.138970727 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121521752 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111528242 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163982457 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215458397 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291544801 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113094127 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131797298 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162857797 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16000662 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106391545 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134635798 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139275309 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105176935 seconds)
  done (took 5.726334722 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107429949 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155990511 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09837701 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144177055 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148437614 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093061876 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126741833 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094391501 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140019641 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135081987 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09332556 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128660564 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100794663 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131738997 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123295896 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103031174 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132129899 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094575158 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126788848 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097609804 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.12986124 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102666071 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.131446402 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121357004 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102817138 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122247696 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08610448 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141228409 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122786013 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116279464 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12076206 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100058602 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133817681 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094390455 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122872833 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095248381 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12596677 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09523717 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124026043 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091554382 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121888736 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078090443 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121847148 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135900597 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098760281 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079715869 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129056288 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128207937 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094792524 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120050066 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095784076 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125176089 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096884293 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129985811 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098132333 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123643811 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096634801 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116114421 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099204566 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12474332 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0841304 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12207697 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097820476 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117824534 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101122813 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127643786 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092509567 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125084957 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098135469 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130131314 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095158497 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12654695 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091467478 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124670435 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095346681 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127450274 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096453354 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121598394 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123165851 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093935729 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075548302 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122960738 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074429354 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126431928 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091545966 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121609143 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096183782 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129407996 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137204878 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095146036 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132056131 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094341878 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121441393 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0966438 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113305053 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096618072 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138825216 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140258578 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094046061 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120990616 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107215708 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125657772 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092298667 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105763923 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100759996 seconds)
  done (took 12.944751028 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127240837 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152915511 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09566784 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144989018 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155584768 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157986254 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101038264 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13043009 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095025161 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142539378 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093746177 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131962308 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097603361 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136736727 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162338269 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.109524063 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125276525 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106597136 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131776562 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170465646 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.117955827 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142209085 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108442273 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125931041 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129225547 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.117311474 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161039665 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108405786 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139408622 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141867914 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107797702 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.15976595 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142707134 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104307254 seconds)
  done (took 5.514437872 seconds)
done (took 49.701238092 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.225053287 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.420615444 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.195189188 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.112856489 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.247731507 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.224165403 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.207797466 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.204945765 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.491583207 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.20293792 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.455874033 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.839261228 seconds)
done (took 59.956202304 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.347628499 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333896729 seconds)
    (2/2) benchmarking "String"...
    done (took 1.460682325 seconds)
  done (took 3.939102565 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.56467022 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.127810035 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458109918 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.19692611 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200850565 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488469939 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.813150996 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.531922869 seconds)
  done (took 27.94749896 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.196112787 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.584253513 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.773262439 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.773593775 seconds)
  done (took 18.458962822 seconds)
done (took 60.393693837 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.226081607 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.233416139 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.206368339 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.176952428 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.307338558 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228650894 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.489290787 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.378254657 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221659703 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.182919405 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.220215892 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.213173474 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.238231821 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.395518081 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.203197892 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.203098668 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.26370661 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.935903125 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.597472884 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.204355582 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.215664152 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.247913203 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.215440903 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.203830713 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.212377913 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200581876 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200256101 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.215080846 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.670472232 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.205150391 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.213328872 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.554510747 seconds)
  done (took 190.610071302 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.199609178 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.228464924 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.336479389 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.239716091 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.651377282 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.401471005 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340759534 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.729531953 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.221992939 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.223923568 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.503777645 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.199215392 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.536893158 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177979059 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.207806034 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.2759327 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.386209368 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.527107111 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.220759504 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.471689534 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.201468932 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.405717614 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.315833018 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.433209984 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.201632847 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.239525222 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.235480428 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.248600256 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393404047 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.315920399 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.214213597 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.258743998 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.812142188 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.062802397 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205566926 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.224039878 seconds)
  done (took 149.98911333 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.481765606 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.203457647 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.201461534 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200811775 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201671234 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231990811 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.200561912 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.763711539 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.767832781 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.745468569 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.64132597 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265741191 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455080778 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201749395 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29653726 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.214565765 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202620562 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217654513 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.243963149 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205466764 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203328127 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.76690811 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218511807 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.689745234 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212148079 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.203000126 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234505852 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593385797 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202910571 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233777067 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.531607801 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.25012697 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201998359 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.589130441 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.202742427 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315448147 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205150799 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234126949 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.203866819 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.482379739 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205468668 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.204064645 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206822713 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.876769025 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.207917448 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.767733837 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208978932 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.146697559 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.204516028 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20454925 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.826865043 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.78521015 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220191865 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.204128245 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207068195 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.204445246 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204267818 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.236415084 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.821465337 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.297456339 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.220474594 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.207417582 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23578177 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.204500815 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.53444959 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209951663 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.355458927 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.277722334 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.319053957 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.771343755 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209402556 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303974055 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326365402 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206879045 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205122452 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205189228 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205664027 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205426576 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.317395017 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206450603 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.630750464 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211714031 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.205951143 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.266199084 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303610107 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206139089 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.60442076 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.211033229 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205932898 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.955315758 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303294857 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.206994675 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206542569 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207124751 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.633032597 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.774296426 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494598474 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211541897 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.647285447 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.212516192 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.206399541 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.65532331 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.752859117 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.842605359 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207307663 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318340283 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210859865 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.208525274 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208549502 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207568482 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.236030706 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.223817128 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.267525225 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.208285097 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.604408997 seconds)
  done (took 347.406700899 seconds)
done (took 690.614768027 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.886372235 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.8703649 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.985807032 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.868603089 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.843473805 seconds)
  done (took 10.592678627 seconds)
done (took 11.729014659 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.395178838 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.400958763 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273352511 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.402139432 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241449788 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418448354 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378864111 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.232105721 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310908318 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.293110458 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313464465 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265727905 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238975635 seconds)
  done (took 18.304302606 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519289606 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.510393336 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272367531 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.556829174 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247808171 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526050743 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403575106 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415269611 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416707339 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241889225 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222718609 seconds)
  done (took 16.472351517 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530005601 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520031945 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276336956 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514866733 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249831097 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526522071 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408673108 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418838723 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42017513 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241478375 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223285935 seconds)
  done (took 16.469149225 seconds)
done (took 52.381992412 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.219115291 seconds)
  done (took 2.35988849 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.252378634 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.420230821 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.238579951 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224923816 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220146102 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221205145 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223868939 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.219383768 seconds)
  done (took 11.162776015 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.218967324 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218650886 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.215726741 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220078373 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219588234 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215759875 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.219438006 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216480968 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.219455711 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219855642 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217806569 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.216482681 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.215783212 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217506972 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219844926 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.217034048 seconds)
  done (took 20.631023173 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.220213327 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217347571 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218201103 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218340217 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218576543 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217383688 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219589109 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217792897 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.218245903 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218112619 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.219340989 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218514376 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.218536313 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217763833 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.218241122 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219360382 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218927307 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.219424566 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.22283276 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218048427 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219812991 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.219506446 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.221529108 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220097605 seconds)
  done (took 30.39966299 seconds)
done (took 65.691596372 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.338617009 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.89611824 seconds)
  done (took 9.382304076 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.223822985 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.220896401 seconds)
  done (took 3.597231812 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221395283 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221811563 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220846749 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.220938539 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221000769 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.222214983 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.222241817 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221366282 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.222665149 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.221827103 seconds)
  done (took 13.359895194 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222850011 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222211388 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221255418 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.221367298 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.22246471 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222403355 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222939789 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.221894077 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222360862 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219381407 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222811597 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.220927685 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223146722 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221527506 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223921171 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.221537991 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222211245 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219964742 seconds)
  done (took 23.141286526 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223240756 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.223202221 seconds)
  done (took 3.593215003 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.223792553 seconds)
    (2/7) benchmarking "second"...
    done (took 1.221997118 seconds)
    (3/7) benchmarking "month"...
    done (took 1.222283935 seconds)
    (4/7) benchmarking "year"...
    done (took 1.222049892 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221908104 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.222600499 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.222269845 seconds)
  done (took 9.7018415 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226136838 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400512846 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.483658395 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.845396417 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.227556904 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229650505 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.122433116 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.228598794 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.23208581 seconds)
  done (took 14.143733793 seconds)
done (took 78.063248141 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.243770814 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.237406764 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.432734656 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.241147816 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.240298136 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.563816734 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.250446184 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.354582208 seconds)
done (took 37.71026132 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.226977413 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.978283751 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.987755069 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.222235993 seconds)
  done (took 11.34002215 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.208712854 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.172756556 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.207260809 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.257044786 seconds)
  done (took 17.99836346 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.256954632 seconds)
    (2/2) benchmarking "read"...
    done (took 1.563585964 seconds)
  done (took 4.974636103 seconds)
done (took 41.690551602 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228145084 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227097616 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227441653 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.224200372 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.227705712 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.226843926 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.226161533 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.227332486 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226920096 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226731395 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.227755071 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.227161055 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228636066 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227611304 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225671865 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228697901 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225793071 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226134378 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228950908 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226253112 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.226146325 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228675111 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.227656818 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.226334227 seconds)
  done (took 30.604106454 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.23101191 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226360097 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.22836298 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229153854 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.227624935 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.228007631 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.228813475 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226952707 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229944653 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.228728241 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226768649 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227030294 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.228761533 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227663315 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229340962 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.227502955 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230411407 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227537898 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228775643 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228296835 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.22955505 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226214565 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.228098492 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229615713 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.227031432 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227389962 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230560798 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.227346191 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22886616 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.228792952 seconds)
  done (took 38.008737785 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.238063438 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.238858734 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232063749 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.229751645 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230778017 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.229749589 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.231385009 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.22966465 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.230698527 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.230811938 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.231711775 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230794621 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.23027342 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230429337 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.229548338 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230007653 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.231597933 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.230088804 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.230455482 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231440836 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231206659 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231201478 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231657907 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231869128 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.230963707 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.231328648 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.232144132 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.231256387 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232249858 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231169994 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233100147 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231653107 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233241695 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.232833467 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231398607 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232675522 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236894976 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.24059993 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232188971 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232589653 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.232769897 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.232621257 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232868167 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233237742 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234294217 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232725428 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.232908423 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.232042976 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.235090382 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234686653 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.234551289 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233422876 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.232840648 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.234886738 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233980993 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.235445577 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233863934 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.23449642 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.235681245 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233151698 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.234934471 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.236461436 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236347276 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233511732 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233159441 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.235319039 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.235331201 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.234431276 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233881916 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237026327 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235869997 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.233707405 seconds)
  done (took 89.930379229 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.237724474 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233251024 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.23504351 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233881986 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232423949 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235531545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.235883025 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235086799 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23376281 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.241218252 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237819113 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233481689 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234320426 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.236874719 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238091899 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.234179034 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238607185 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236077254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.239536229 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236015726 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23595214 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.235361638 seconds)
  done (took 28.352906101 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239916178 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241694996 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.237740703 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237505104 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237304563 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235826612 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.238164485 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241803118 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237956277 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235261457 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235221312 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236908154 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235211831 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236129885 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235852236 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239872688 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239904958 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23832954 seconds)
  done (took 23.443890712 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.23937465 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.236983949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.239604654 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238380109 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.238030828 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24032005 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236742348 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.24308076 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.240035633 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.239926985 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.241139361 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23817748 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.239624177 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237628681 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241158126 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236193759 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.241578068 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23794889 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240289076 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236168678 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236724351 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241704391 seconds)
  done (took 28.419319796 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243835316 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245567539 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.239931291 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.236709554 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.239990788 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.241409968 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.242781612 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.239291637 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240582801 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.242245147 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239702976 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.242996038 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.243212991 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.238526115 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.241305753 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240654365 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.242892969 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.240091648 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242795344 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.242241298 seconds)
  done (took 25.991538375 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24440332 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243819568 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245165011 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246736721 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24657997 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.244056427 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245789468 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.246189523 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246024252 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24567302 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242526457 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241156433 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243142026 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24580122 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243510038 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245743599 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24307545 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246487398 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244077788 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24232671 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244965323 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247151719 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247417142 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.245948502 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243635351 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243161645 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244425092 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246289973 seconds)
  done (took 36.021993434 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245128384 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24536313 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.243220534 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.240217065 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.242270679 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.24296721 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.244520589 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.245764994 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246747336 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243674077 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.243463403 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.245973686 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244042555 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.243624994 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248006466 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.245584523 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243831235 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.243608131 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242407761 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243502175 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.246252086 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244271119 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.245840336 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243796078 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245190082 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.246856668 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242188878 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242630674 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246832596 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247335884 seconds)
  done (took 38.503224893 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.266827482 seconds)
    (2/2) benchmarking "in"...
    done (took 1.263066387 seconds)
  done (took 3.698890509 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.245515134 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244740278 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.248712876 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24511656 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242413329 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244153917 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250038159 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244666441 seconds)
  done (took 11.13589624 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.248635288 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.245573572 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.249414929 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.248241995 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.245966726 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251134928 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254929772 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.265405907 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.249513158 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.249407508 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.255440246 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.256674421 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.250866269 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248186722 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244818986 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24957417 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.24743382 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.250062798 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248552425 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.246782402 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247322807 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250828568 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248773833 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.247725212 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251562433 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.260225024 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.270604755 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.246052945 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247461712 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.250619245 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.246571284 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.248406477 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.249687259 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.247896042 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.247954218 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.249775773 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254992507 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264919891 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25250266 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268003882 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252622621 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.245034866 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.251390065 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250404356 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248783685 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.246179034 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.25381203 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.249406712 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.247172953 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.252549703 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.256965906 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248893537 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25019871 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252404411 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.249816616 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257630692 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266231953 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.253676926 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.261327881 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258492577 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.281249291 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.277144532 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255641249 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.2498824 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263683249 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278016604 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257673068 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.269928486 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.251312423 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.255919824 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.261394612 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282457422 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278719472 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.252056719 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250198149 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.251890999 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253776526 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254816659 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258543306 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.272648213 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.251227718 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251477644 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263007074 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280145587 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.25471184 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.254498966 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.251020178 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.253734415 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.253170081 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261817685 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.273902278 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.256988812 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.254075383 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.256137189 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.254162251 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.256774068 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.253051541 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258041312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.25492782 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.258632763 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257407593 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260190097 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.263982693 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252471752 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25451516 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.261579455 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.274404643 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256744008 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.263750286 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.258292249 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256520029 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.253930124 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.260857325 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.250070968 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259483864 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262244451 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.252437619 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253667795 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.252996115 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25353546 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266840208 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.283056654 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.255251668 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.257134837 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.262882063 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.268066039 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253728823 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.258308194 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25782945 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.254165972 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.252520182 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.259683303 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.2547895 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.258477087 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257768947 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253281439 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.251984592 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.254323384 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.259384291 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.255883155 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256925779 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.258089963 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.255783648 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.254628857 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.252991485 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.256677881 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.259702941 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273761301 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.260092832 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255140483 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.252012552 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257202671 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.256420214 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256961912 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254091596 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255119247 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.254771257 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.255715566 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254843092 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.255701368 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255740569 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.259689495 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258958299 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.255896346 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.257865623 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.25681153 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.254131139 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.255873676 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.258650658 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.253794745 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.256027452 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.254645492 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.257816422 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.26474832 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255875079 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254311973 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.258416026 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255917051 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25565159 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25599733 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.258943956 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266987864 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25666441 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.261304177 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.275627505 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256447481 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25648068 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.25632942 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255193147 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255824904 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.260020242 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.264939834 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268280669 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28349434 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.258341016 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.261002404 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256117669 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.26101726 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259503463 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.257323352 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.257628953 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257807996 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256128139 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256938404 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259606838 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.25742729 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256252998 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.260049232 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.257467334 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.257812299 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259426465 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.258853434 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259323109 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25577896 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258357495 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260349429 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258242985 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.256025731 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257117427 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258763551 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.259483836 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.258231697 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.262657134 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256446461 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260842008 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262801002 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.259319908 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.25848269 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259160417 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260498641 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.257791668 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266127438 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277475375 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.261614913 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264536574 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.276887885 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.259947509 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.263010702 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.259572678 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.256620456 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.263322345 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267468541 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.259494601 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.258787934 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.260387184 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259982043 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261361705 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.266576654 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278385438 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259398636 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260384778 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.261641142 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.25862011 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.260356775 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.259530019 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260224829 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262154775 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261638264 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260935149 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261490187 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260602872 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.26065908 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.261516863 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262858262 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269901425 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.264727424 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.26050964 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262686345 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.261804485 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.26451884 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261589872 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.260982284 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261669091 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27422162 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2849263 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26548353 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.281229152 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.262465964 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267795794 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.282433192 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.264551091 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263533451 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261271794 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261391914 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.262482333 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.259708841 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264423477 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.262986568 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263166939 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.264414891 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267327067 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.263332573 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.26182502 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.262744159 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262383123 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262544939 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.262915328 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.264337198 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264972796 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264879434 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.261927782 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.263367708 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269515635 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282104576 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264645092 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262922389 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263539932 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262314369 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.263970109 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.263091451 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267114243 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.271030433 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.266894667 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.27411622 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.265978617 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272356133 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.265397243 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.268228777 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272075567 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.261634265 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.262385367 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.265010633 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264225335 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270875412 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283504021 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.265923444 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.268596142 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264721048 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.265156973 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.266105441 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.264811188 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265304669 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.265614781 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272452053 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.284467021 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269393733 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267451865 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262898139 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.265243514 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.266064068 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263960429 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269390365 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265507886 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.2665762 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.267087193 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265927524 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26659636 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.268082436 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.267261197 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.264356962 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265862135 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272724602 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.288241495 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271523605 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.266698795 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.274356464 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286662724 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274901515 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.285577474 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.267497331 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267299272 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.267469675 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268920953 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266858774 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.269942261 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266970668 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.268168142 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.272238975 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.26769611 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.270168256 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.267670729 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268626976 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.268760437 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279316538 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291960009 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.271683972 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273667288 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.267568657 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.270829487 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.273975068 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.269489566 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.266581151 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.271754424 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280029679 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27724507 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269022271 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268782794 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267848929 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269589723 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268416901 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.269193954 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.268676576 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.268796371 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270213071 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.26956722 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27218487 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.269121928 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269827102 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270852776 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270921227 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280084791 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.290041483 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.271202558 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270686288 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.273273795 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.270857295 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.270036257 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.269729142 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270804379 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270504097 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272357377 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277969529 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.27644368 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273468382 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.269727917 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.270717117 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270096967 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.270538953 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270921783 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.270035473 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271559311 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.27293081 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271972884 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.27233081 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270654603 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.272055658 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.271854995 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272516971 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274264944 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.280312615 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272237551 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269641918 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.272421824 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272446303 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.270555194 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27225728 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280125862 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295949451 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.28281897 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.281050268 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276190099 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.272819148 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275370584 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.282056167 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.272121312 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273920214 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.273039844 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273718387 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.27409209 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276375694 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27419452 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.28069101 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.293057596 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.27263056 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281439194 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.294000057 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273583439 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.275564457 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.278450866 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.274636445 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.271576958 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273951593 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.274483006 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281671065 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.293895212 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274736935 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276845612 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.274498791 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276124899 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278815326 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275114416 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.275577381 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.270616472 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276256179 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275482873 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275806989 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.271836206 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.274440661 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274361824 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278267868 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282497096 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.273446372 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277257759 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274950786 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.277776962 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276604766 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275779181 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274553787 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.274140847 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.274723405 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275340225 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275176769 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.278180938 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275148689 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27770166 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.277260909 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276348126 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280379633 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.287368521 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.284795786 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.274126781 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276932937 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.278068543 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.277938502 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276189966 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275823344 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276916366 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277528756 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.277613745 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277286296 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277566441 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281187612 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293163389 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297189025 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277666112 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.277237913 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279921591 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.277666592 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.275649461 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.276763383 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.280156526 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.282283994 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.285990887 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.279191174 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28354377 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297001029 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.279984647 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282430208 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.28229761 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.286428078 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.28003349 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280075613 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.278948219 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.283128239 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293211491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279521026 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290324739 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.3099077 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299013228 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27994752 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.278595737 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278331657 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.2788458 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.281266229 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.279538727 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279462007 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279153215 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.2787969 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281832531 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285004016 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279937956 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.280797757 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279224088 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279082896 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280850837 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.278202525 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.280189124 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279600186 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.279883692 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280928779 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.280772061 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.27971476 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29289456 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.307103772 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.281640273 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.281745889 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.27906083 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.283741683 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.283635459 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291804123 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290316266 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.281229133 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.281570863 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.281827609 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280919352 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.279493652 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.28248949 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.283143331 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280847325 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.278713737 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.292304473 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.3083034 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.287159939 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.282016336 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282355789 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.281991807 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282662215 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283178375 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282484506 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.28437351 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284405046 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285961535 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.28212737 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.281675481 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.28548533 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.292186218 seconds)
  done (took 756.477907349 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281269814 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280417509 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280296162 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280201236 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281146732 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280650414 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282195871 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281561901 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28073351 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28140984 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282419942 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281023319 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280769731 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281424585 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281451377 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282203264 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281322566 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282052883 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283276612 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282003503 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282537456 seconds)
  done (took 28.110804664 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.285293355 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.282965944 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282573681 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285912135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282069142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.284469829 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282878544 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284566852 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285176367 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283360484 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.285417502 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285216183 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.28256828 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.2816912 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282259545 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284137521 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.286525212 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282417647 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.284238219 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28322971 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285044383 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283366946 seconds)
  done (took 29.447482883 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284914434 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.286837499 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.28546232 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.283128706 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285905321 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.282528329 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285410161 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.286779994 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285606629 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.285142867 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.284835985 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.287372981 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292446857 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.291347 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.287900518 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.28615395 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.431491881 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.287488344 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.285932222 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286444453 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.283806256 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.291586642 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.306373008 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.284559186 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28564074 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.287188738 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.287160736 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.286806891 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.287064997 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.288475844 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.292482078 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.287281363 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287829117 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.287832649 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.284360192 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.290096049 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.290585681 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286933054 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.285120961 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.289726598 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.300254817 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.310888824 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.288836793 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293943077 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.309992184 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.288938512 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.293020607 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.295824006 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.285891122 seconds)
  done (took 64.516407123 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.288997105 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289261582 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.286657419 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28817316 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.289540563 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288867218 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.28795556 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288692444 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.289002958 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287247695 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.290550397 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.287733958 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287399919 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.289957315 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289890761 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288115373 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287686553 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287086655 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288302206 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287940922 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286854538 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.290853676 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.293410992 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.288437782 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29113663 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287260286 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288071289 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.292144816 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.288923477 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.287451108 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291279369 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289668068 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.291777843 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287778868 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288344019 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.291906064 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.292387616 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.288811899 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290796577 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.288673745 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292243745 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292193389 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.293002131 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.292641259 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289275141 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.291647934 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.292299701 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.288840954 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.28904893 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.291736891 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.293473147 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290732343 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293315298 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.29078093 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292425179 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.29412958 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.29162332 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290962168 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.296164092 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.294448173 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.289825852 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295652737 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.291342337 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.293467213 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.292961711 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.292038924 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.289925253 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.294519447 seconds)
  done (took 88.954158615 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292242943 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.292532813 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292129906 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29313191 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294821265 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.292831132 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293185012 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292925604 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294119261 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295666446 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293973785 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294076655 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294951313 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29418713 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297745978 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293305869 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293307805 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29691163 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293581146 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294575953 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.29547773 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.294008161 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29540503 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293240675 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296294632 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293882717 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293167762 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295768507 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29457307 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29610573 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29787379 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293049223 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293176321 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296893439 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.296157249 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295995465 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29554737 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295241366 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.295563771 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295186795 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.298016313 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295491565 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296745963 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.296873453 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295215479 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296833222 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297274015 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.297262039 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297827766 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296532444 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.296155647 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295569119 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297418242 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29741658 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297068983 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.298026408 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297542014 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297060649 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295894394 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296021209 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296638013 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.298515579 seconds)
  done (took 81.527294705 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301525961 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.296105005 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.29525522 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.295669118 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298051578 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296633314 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296923988 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.297525662 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299877792 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.298004485 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302574584 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301050159 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300941605 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302700656 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.298332834 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296597561 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297273454 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299209645 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302603016 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297929508 seconds)
  done (took 27.189781716 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.301702396 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301779891 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.300589342 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298936119 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298612865 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297699311 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.299592301 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299553146 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297094762 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30161614 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300941865 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.300174383 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298313503 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299441533 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302003447 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297699052 seconds)
  done (took 22.018751369 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304342809 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.30490823 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.304671256 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.298765454 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.296690744 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.297894395 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.3010942 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.298008935 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.298180081 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.301247673 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.301720607 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.30011074 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.302636973 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.301898856 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.296231102 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.302342865 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297821583 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.299468461 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.300285426 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.300734644 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.299324344 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.302322433 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.302155655 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.300889993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.297392667 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.29963871 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.298459504 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.29890217 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.299132066 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.303711252 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.299578207 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.299597002 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.297350281 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.302708155 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.301929709 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.298315968 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.301545551 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.301697004 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.301142751 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301467623 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.302048897 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.299759337 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.30172204 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.301356832 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.299409019 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302293229 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.300405273 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.299577455 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.299760144 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.301073755 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.300854587 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.304026618 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.302334655 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.304306879 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.305641577 seconds)
  done (took 72.76054704 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304895872 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304938293 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.301443718 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304144479 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.303633408 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30218778 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.303444892 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302847379 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301832383 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302243873 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301561408 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305343714 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301797294 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304465452 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301581885 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306609955 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.303403557 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301894456 seconds)
  done (took 24.679185925 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.30884356 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302204727 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.304920156 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.303549981 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.30194505 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.304959444 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3020581 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.304063058 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304392071 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.303256689 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304353896 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.306783235 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30439677 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.304538991 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303100376 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305122151 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.312340988 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311210003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.307494609 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305692425 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.30713223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307437579 seconds)
  done (took 29.944225311 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.308445861 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.304028136 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.304200286 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.323687304 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.323858667 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.329769343 seconds)
  done (took 9.12229705 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31884667 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307013306 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304015583 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306742196 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309885664 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304610901 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303271576 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303960602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306158266 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304380333 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304088894 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308630242 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305954739 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305571442 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308880428 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3066383 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304691296 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30431604 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306532072 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312212325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308126186 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308007337 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307999599 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308009496 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304751547 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307022666 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310716865 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305861825 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308248462 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309465277 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308500531 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307264114 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310880575 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308793498 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310814368 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313418259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31032545 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308379186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30830991 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306414803 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308984509 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31084637 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308343453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306055682 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310683742 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313525355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313099301 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309199492 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308329041 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310557183 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315457369 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312947247 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308696458 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310988369 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313557942 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312782628 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312575401 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307608602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310034058 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309107747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313747526 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314752799 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314168827 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310522196 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314527499 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311088712 seconds)
  done (took 87.64898442 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314295874 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31443269 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313355453 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309503293 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311179044 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315138119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311674593 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311536396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309982938 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315588502 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316315568 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31594629 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316515518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314527654 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312881775 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309889378 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311400283 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314491965 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313845888 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315836887 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312716152 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311706939 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313876889 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30902552 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312881662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318242375 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31452662 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313214861 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311988499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314519285 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312419705 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31192063 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311406339 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315526159 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312859764 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310205664 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313144168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310889963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314824326 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316035558 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311410628 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315885681 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315575394 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31421229 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311005947 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309476063 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309748042 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311332707 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310460757 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312965243 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312701962 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311554828 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311163263 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311056829 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312022994 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314062991 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311927733 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312445617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316214653 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315802002 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316636219 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313994185 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317215828 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314030468 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317275024 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314694894 seconds)
  done (took 87.908834116 seconds)
done (took 1765.566568301 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.42686122 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.394469798 seconds)
  done (took 14.054632072 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478689572 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.428592627 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.311302136 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.342664968 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314034334 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.325929386 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.311950218 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.312380146 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.312544052 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.313789514 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313344906 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501117186 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.367155035 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314346576 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.313413822 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.407837894 seconds)
  done (took 42.908671964 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.34837031 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.319280751 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437430024 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.343195435 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.340752088 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.51231914 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.378947631 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.324738846 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.500644803 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.369610579 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.041605601 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.348925928 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.318220719 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.519367176 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.343027271 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.517566203 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.58296503 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.052105677 seconds)
  done (took 30.833324613 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.807650415 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.354337177 seconds)
  done (took 9.400721111 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.350115666 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.349579573 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.312395835 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.328994085 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.344799174 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.392509859 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.372850313 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.371427774 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.353627565 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.387206506 seconds)
  done (took 64.808443632 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340957079 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31912074 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.32058019 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318688482 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.315740191 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.312202873 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.318551032 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.311050722 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.227610654 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.458014705 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.326056628 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.328160219 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.339201698 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.320292361 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317028003 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.357412621 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.472300124 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.318953595 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.316803655 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325945906 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.319396846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.409024836 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.367880626 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325627599 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.452981694 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.246586094 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.327048767 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.327089833 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.503134791 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.322173288 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.320459774 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.320434012 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.321087868 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.941403808 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.817340375 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.337845124 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.347113359 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.329909587 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318267264 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.479639294 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.325128206 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.326865041 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.314344267 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.811247598 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.461418153 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.44741739 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.689253891 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.349432828 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.323928616 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.386859332 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.329053804 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.322950812 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350927033 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.108550287 seconds)
  done (took 111.588650585 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.377226594 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.703830898 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482944172 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.342608017 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.143120145 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.108122705 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.337657241 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.62797811 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.348400119 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31477799 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.621657312 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85107409 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.340056804 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.364562449 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.876320689 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.392428407 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314881429 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.135000883 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339186247 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.317777769 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831814623 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322052111 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.32266961 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.589017378 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.35662286 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804938788 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.848381586 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.86078369 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.344849616 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.316669848 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.81276665 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.344433665 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.357508452 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.317542728 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.586384511 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.708427464 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.706131714 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.342171765 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349143732 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.318352725 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.338747626 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799805958 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.714198016 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.342795137 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316975499 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797708903 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.341067032 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.320775198 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.325747536 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527606553 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.160093784 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.318853615 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.783773073 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.319109935 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.67486224 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.410101672 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368058198 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.826197597 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.341137169 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.489702786 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.368008571 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319561709 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323658829 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316909084 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.323169843 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.695316449 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.651266269 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323212236 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69243798 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.83471735 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.342289823 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893397861 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.241325192 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335853553 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.379048883 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.31898635 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.946751102 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.849232317 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.355579829 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319070186 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.68148105 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.347776661 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.610919251 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.336573868 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344506965 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846756522 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.332960733 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.358732151 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319791445 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.324645971 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.094164153 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.321496494 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.619941539 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.345863925 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32125633 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.320860528 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.320073483 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320187766 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320876435 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.326023968 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871023444 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.3455333 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.302062477 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340802326 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.342503112 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.326513004 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.322362626 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.321394661 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546956275 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.918924889 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.351714657 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322728307 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.320435112 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.333833797 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.563084671 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.327106425 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.659325166 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.348316879 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322322452 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333544057 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.117649025 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.391904335 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322560581 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.346008368 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.225080719 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.537569342 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.342731668 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.324271549 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322459381 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.346806689 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.609352657 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342081856 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.409140176 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.326171703 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052353115 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.377632557 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.326089772 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.820179845 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.327573045 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.281087655 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.342096755 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324855013 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620929961 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.597071186 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.563446226 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324416284 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.348732447 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058048218 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.378689433 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471633566 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.34636544 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319802878 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522680115 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.54832603 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324196524 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.95275603 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.324927876 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.545522601 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.333549821 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625411798 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.845478665 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.348893565 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330943956 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.062081247 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.040891979 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.005138534 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.329021064 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.609175737 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.27657597 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.803798971 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.325422684 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325736652 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.906215491 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325137505 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.326792433 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.324723356 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.324062307 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.454050753 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499655888 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.529637289 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.326364045 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8088432 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.404090709 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327148992 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.329969261 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328345976 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.672725461 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.397678374 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.326766182 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.371567825 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.326568492 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.332108694 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832044391 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.277590252 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.327397455 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478598687 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985998094 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.351376378 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.328284883 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.066717656 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.545170375 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.907388492 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.381497532 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.6670882 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.358840965 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366698697 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.080850091 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.430510822 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.833676402 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.354345319 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.328508788 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95263671 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.352514389 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.375980208 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.328578815 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.327839808 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892931109 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.352054063 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.32748062 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.624231625 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.347707645 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583083855 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.328902435 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.352340444 seconds)
  done (took 1111.733284208 seconds)
done (took 1386.55775835 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.32964382 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.33500901 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.31699138 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.336035092 seconds)
  done (took 26.566795037 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.342549763 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334871181 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.337881578 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.335469701 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.337405801 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.336755455 seconds)
  done (took 9.282234163 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.364220496 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.336261939 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.336895059 seconds)
  done (took 19.287839493 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.555120174 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.703312467 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.718212246 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.717890214 seconds)
  done (took 10.953289161 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.338804471 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337658219 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.338404443 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.339872707 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341958663 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.341926958 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.338642653 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.340144183 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.342137673 seconds)
  done (took 13.314414255 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.560970143 seconds)
done (took 86.21156973 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.325897938 seconds)
    (2/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.041667162 seconds)
    (3/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.421523114 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.336747615 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.18839508 seconds)
    (6/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.72824603 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.443338166 seconds)
    (8/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.439113019 seconds)
    (9/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.226802181 seconds)
    (10/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.425997715 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.457971613 seconds)
    (12/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.98410673 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.546012574 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.335652579 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.339641452 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.599364665 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.366139099 seconds)
    (18/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.136947443 seconds)
    (19/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.385840273 seconds)
    (20/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.441506644 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.374233682 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.335561311 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.358776499 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.799964558 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.345110301 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.744733049 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.192806758 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.28408047 seconds)
    (29/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.404643057 seconds)
    (30/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.788871808 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.365710057 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.763987309 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.460216246 seconds)
    (34/309) benchmarking ("sort", Int8, false)...
    done (took 4.417707215 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.33217713 seconds)
    (36/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.034662352 seconds)
    (37/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.525856055 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.01840389 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.527174507 seconds)
    (40/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.639060928 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.835488266 seconds)
    (42/309) benchmarking ("sort", BigInt, false)...
    done (took 6.334063314 seconds)
    (43/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.426753567 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.301432337 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.438660742 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.289287048 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.704160674 seconds)
    (48/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.301538553 seconds)
    (49/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.464327859 seconds)
    (50/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.352183169 seconds)
    (51/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.506266796 seconds)
    (52/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.521198864 seconds)
    (53/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.999930756 seconds)
    (54/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.522848218 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.668604035 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.830083167 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.351993772 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.445247075 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.331447005 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.04687174 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.618671944 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.872734839 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.323554833 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.35636883 seconds)
    (65/309) benchmarking ("sort", Float32, false)...
    done (took 5.359567986 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.381898885 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.7590477 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.398655064 seconds)
    (69/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.352833744 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.39375104 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.316397713 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.915139319 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.407197743 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.735533815 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.323960855 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.874670383 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.331159471 seconds)
    (78/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.891610557 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.701353059 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.813454348 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.421757778 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.427448621 seconds)
    (83/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.34394305 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.371281781 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.618952077 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.891227634 seconds)
    (87/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.596967055 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.252264414 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.291724044 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.972444149 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.402804579 seconds)
    (92/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.774766633 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.974526239 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.581131754 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.419949393 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.926286725 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.766913725 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.222708901 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.191448164 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.352960001 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.410337075 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.338785432 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.349150244 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.462731843 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.344410056 seconds)
    (106/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.374065317 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.320293856 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.357617515 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.773211261 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.776564063 seconds)
    (111/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.00242756 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.228906456 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.423598921 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.340898585 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.220088796 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.989368939 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.963999138 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.996485886 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.438034218 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.37198456 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.886861921 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.664617051 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.581332141 seconds)
    (124/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.8992583 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.358908159 seconds)
    (126/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.354856907 seconds)
    (127/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.367012089 seconds)
    (128/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.157320623 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.340152121 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.322415211 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.372153355 seconds)
    (132/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.359354566 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.821728244 seconds)
    (134/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.829935577 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.339922553 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.626143647 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.401395241 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.441630418 seconds)
    (139/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.362578529 seconds)
    (140/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.786606669 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 1.871775139 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.385810682 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.341158095 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.619858491 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.23736473 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.158207612 seconds)
    (147/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.358202477 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.346267074 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.174713293 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.610551447 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.801576774 seconds)
    (152/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.504094624 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.867144506 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.375221092 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.458686743 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.803046532 seconds)
    (157/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.470549061 seconds)
    (158/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.342209773 seconds)
    (159/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.228826922 seconds)
    (160/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.477549164 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406259567 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.24346898 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.135687648 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.177706385 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.369235338 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.336245329 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.370990726 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.625163356 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.444270885 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.759255573 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.37692414 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.41205863 seconds)
    (173/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.518638343 seconds)
    (174/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.976135605 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.32492323 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.371811277 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.342497145 seconds)
    (178/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.383660625 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.518774173 seconds)
    (180/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.371517759 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.807570274 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.141222862 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.35497933 seconds)
    (184/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.358751106 seconds)
    (185/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.062957805 seconds)
    (186/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.754879333 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.147996256 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.56147691 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.412441108 seconds)
    (190/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.423036517 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.471926308 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.325051311 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.488243874 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.388722224 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.963224926 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.412989292 seconds)
    (197/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.345308578 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.372298007 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.356751803 seconds)
    (200/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.741136923 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.275644012 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.523842887 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.765660177 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.353014229 seconds)
    (205/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.671209806 seconds)
    (206/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.452443823 seconds)
    (207/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.371294994 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.865658261 seconds)
    (209/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.360634058 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.301956825 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.467226692 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.816520097 seconds)
    (213/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.387762308 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.675265549 seconds)
    (215/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.499912093 seconds)
    (216/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.723860504 seconds)
    (217/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.476730107 seconds)
    (218/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.347696906 seconds)
    (219/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.353619788 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.579933727 seconds)
    (221/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.102349701 seconds)
    (222/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.423636141 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.56125903 seconds)
    (224/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.391795025 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.372118533 seconds)
    (226/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.380513756 seconds)
    (227/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.295495714 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.564680316 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.004189798 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.449683788 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.260795192 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.834336271 seconds)
    (233/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.93379601 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.949039795 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.09589277 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.006026408 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.342197653 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.058304125 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370975425 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.420415334 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.117702532 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.395804366 seconds)
    (243/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.457450307 seconds)
    (244/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.814799514 seconds)
    (245/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.112471612 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.417904238 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.36475683 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.823528024 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.869712981 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.406939259 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.353402866 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.356385979 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.36680054 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.967617385 seconds)
    (255/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.199812265 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.443755467 seconds)
    (257/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.63137733 seconds)
    (258/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.035925429 seconds)
    (259/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.361889194 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.903104101 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.035447457 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.347399382 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.58486953 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.364849377 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.379366885 seconds)
    (266/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.365668948 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.930344372 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.360251849 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.377268105 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.731095987 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.376506257 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.340872618 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.77599709 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.605612612 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.376342243 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.798532318 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.967173715 seconds)
    (278/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.775815678 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.453402553 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.693381573 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.774493618 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.382679436 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.618405274 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.002609599 seconds)
    (285/309) benchmarking ("sort", Float64, false)...
    done (took 5.672916494 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.432481882 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.363747674 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.072601207 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.442729161 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.467800363 seconds)
    (291/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.377637454 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.35210266 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.229441727 seconds)
    (294/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.434850879 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.438506152 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.393203284 seconds)
    (297/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.937707847 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.404995983 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.951131147 seconds)
    (300/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.744247948 seconds)
    (301/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.369571091 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.351469287 seconds)
    (303/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.67425604 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.39410242 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.764054805 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.369667461 seconds)
    (307/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.086306687 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.195410537 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.450577174 seconds)
  done (took 940.597641277 seconds)
done (took 941.856178278 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.386644437 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382074552 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.363333442 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.384749857 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.475528412 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.389162662 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.374952543 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.366497799 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.41234573 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.413347513 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.364668371 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.387415237 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.366903202 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.36358791 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.363846782 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380222223 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.478397034 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.365159168 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.381965561 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372958912 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.380868584 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.362582136 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.41465557 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.388245812 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.368117287 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.367663717 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.367649166 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.385002806 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.476219881 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.368133993 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.368268308 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.376909646 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.479165175 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.364630979 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.359534277 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.384216463 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.376136044 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.374512918 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.36859572 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.397673489 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.917023605 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.38375111 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.366810672 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.366582489 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.364972806 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369927292 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.367667576 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.374116161 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381232015 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382242122 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.905677603 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.400385739 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.370303459 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.367531928 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.377884768 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.36765596 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.369569444 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3840948 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.386229006 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384668738 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.464030087 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.372166192 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.370624806 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.38393738 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.37589557 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.941880934 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.381439638 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.372483209 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.914562889 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.391591992 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.939286707 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.39564368 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.37003077 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.382134147 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.399699044 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.477788705 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.362504324 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.367691211 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.375457482 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.367308307 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.378838476 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382985482 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.372936064 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.368348079 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384682876 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.393427021 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.379676959 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.369999276 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.378525911 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.388537761 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.376518007 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.380192451 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37202732 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.365499114 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.378959451 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372679709 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.372500007 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.372862619 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.373729509 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.379833015 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.975465581 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.414064168 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.367142713 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.367130246 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.368897412 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.384326039 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.978676553 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.398901147 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.391902512 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.417972189 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.372345166 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.465668266 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.375160292 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389196311 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.380208936 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373991945 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.36741974 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.467407125 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.989557127 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.412031484 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.373231806 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.369858012 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390408247 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.372931477 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.368092335 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.485341879 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.373779842 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387002823 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.493710047 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.383679636 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.404179988 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.369755801 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.37577178 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.396383753 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39030813 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.403345523 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.376492109 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388952211 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.388157437 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.369940877 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.384350532 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.382943249 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.372987155 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.378738233 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.368281408 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.39760398 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386854551 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38747428 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.394111022 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.494279695 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.371960792 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.471557413 seconds)
done (took 232.625348918 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.430447425 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.36850532 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.450919965 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.367694815 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.469522097 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.470219365 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366345532 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.3681473 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.369603143 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.745808644 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.367453254 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.366693869 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.363634632 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.366627557 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.450408507 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.367668598 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.365883507 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.70588891 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.36985161 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.438930851 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.369628195 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.36667333 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370012131 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.76109134 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.361450005 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.362161094 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438964655 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.370130295 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.727819578 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.370470618 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.367791126 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.728852264 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.460093961 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.388290319 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.380665429 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376549467 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.471918224 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.390711893 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.450338873 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.451923826 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.453378436 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408932165 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.371897371 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.365528892 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.372065983 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.372736848 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.36939394 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.397885552 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.372045393 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.369734588 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.709307235 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.381209851 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.370513385 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.369784645 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.368315615 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399818261 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.369802044 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.371768657 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.462002277 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.376483843 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.433796095 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.764471997 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746836167 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.372432731 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.374724271 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.37066076 seconds)
  done (took 150.912304474 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438897097 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.444814972 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.48856818 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.389945184 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.422906216 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.493690986 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.39274316 seconds)
  done (took 11.353587982 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.379036032 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373553217 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.423211921 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422704418 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372871697 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.520382484 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375125566 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.385084278 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.372151044 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425549395 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.375491772 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374300584 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380176465 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.371124692 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.421956556 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.38502615 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.489084643 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.375919075 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.374298267 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.529263696 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372949735 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.381268472 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.425437528 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384778333 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375977489 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379077924 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.939469078 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37543033 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371863031 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374714262 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372824643 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.41187165 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376693333 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.368032887 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371858888 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489813473 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.374680948 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372769185 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.375504102 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.371829752 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.375250751 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375820566 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375153766 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.37440568 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.375519983 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.39927759 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.376215907 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375616068 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.375905615 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376487787 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.425560821 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375821686 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.374027165 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.374052176 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.432011059 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383358329 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.37687273 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373747697 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.376987544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373677572 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.533647651 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423300682 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.377408905 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.424608588 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377796301 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.377882049 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.376433856 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.377440931 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431386583 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.378105793 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425251449 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.374462595 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.530547977 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.40011148 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378363978 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.379935618 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.379320266 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377779545 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.379093732 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382593452 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.375371785 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.378262266 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.38467905 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375460521 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375621327 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.48110978 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.487556637 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.377182304 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.392040566 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.385899174 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.377304738 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.432045452 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.379336075 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.376687125 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430296648 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.493856997 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431546211 seconds)
  done (took 157.344455236 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.383985653 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.387212487 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.379941281 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.395252861 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.380597739 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.379920835 seconds)
  done (took 9.596202422 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.382756458 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.381857162 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.379955178 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.381090508 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379994821 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.380701366 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.380169275 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382026092 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.383338299 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.379623834 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.380403039 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.383384678 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381726899 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379784751 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380649495 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.380988816 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.380210579 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378284451 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.380723838 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380450639 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.483068093 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380773128 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381164629 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.383169109 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.387379496 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381659685 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3884629 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.382195888 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.381133129 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.38627286 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.401201923 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.381926869 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382484725 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.387877582 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385951293 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.382464082 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387390147 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.383322524 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379734791 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.383191644 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.383786549 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382099133 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.383593797 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.385154685 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.384621776 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.388605769 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.388669837 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.391036234 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.383697496 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.385307972 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.38424099 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.383432441 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383888142 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.384122506 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.385646123 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405946256 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.388704188 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.383120921 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.384800787 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.38561923 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385694827 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.383959962 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385428109 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.387545997 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.382702512 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.38638882 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.385101735 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388565705 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384254709 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384255694 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.385149591 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.383113498 seconds)
  done (took 102.048692294 seconds)
done (took 432.53127887 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.40116573 seconds)
  done (took 7.696001506 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.572505358 seconds)
  done (took 7.868967048 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.452353087 seconds)
  done (took 23.752862651 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.406434119 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.515956855 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.397663214 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.387975181 seconds)
  done (took 27.003540475 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.937252259 seconds)
  done (took 8.232967771 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.378348416 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.402758747 seconds)
  done (took 14.077822136 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.573658972 seconds)
  done (took 7.869222138 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.988529481 seconds)
  done (took 8.29029741 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.383254959 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.396773357 seconds)
  done (took 14.345147115 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.358534328 seconds)
  done (took 7.65269165 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.651222413 seconds)
  done (took 8.950336307 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.378192626 seconds)
  done (took 7.673619104 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.440503995 seconds)
  done (took 7.733958896 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.989954583 seconds)
  done (took 10.284634441 seconds)
done (took 162.725828516 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.377999951 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.377794698 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.378421581 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.37670322 seconds)
  done (took 26.805317314 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418926808 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.41800582 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.418496101 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.430600909 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.420321437 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.418586536 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411588381 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411050567 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.430312428 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.422232229 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.421394753 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.422143171 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419846933 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.411965732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.422507086 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421557778 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431304729 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.421522357 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.413030949 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.423654997 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.387440487 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.43072928 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.422614528 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386763766 seconds)
  done (took 35.33207834 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.912036985 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.463147825 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.543431465 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.440724579 seconds)
  done (took 7.655376607 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438851194 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.43952596 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.453632791 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.491212841 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.53436441 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.449860306 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.41291791 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.408527852 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.394724909 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.441280826 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.516397086 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.457001205 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.546515298 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386922532 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.593775134 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.387587425 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.388184922 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.440644975 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.494588574 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.509024793 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.388563414 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439342005 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.446692803 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.457937352 seconds)
  done (took 36.215939712 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.38733703 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.395597165 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.387358908 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.387197563 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.3948326 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.387519667 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.38734677 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.389217869 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.386832238 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.394939575 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.388480857 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400262974 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.38754863 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.387589589 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.3951194 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.389194598 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.39525875 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.388416802 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.388130392 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.390891429 seconds)
  done (took 29.107826857 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.381377515 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.3079233 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.734457433 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.644813369 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.384273009 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.382349263 seconds)
  done (took 29.135166218 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.468863937 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.640118727 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.397489775 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.784625299 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.877742573 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.40930974 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.390785261 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.658296532 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.023340816 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.007155298 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.459142863 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.464113583 seconds)
  done (took 20.887574365 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390728325 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.391226837 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.393766547 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.407518588 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.450942501 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.414659945 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.397560306 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.383970214 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.459245343 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.481626263 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.420018692 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.452434403 seconds)
  done (took 38.346711936 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471912268 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.435879937 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.536673512 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247164734 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.117918528 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59861606 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.289885996 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.842704217 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.390024544 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660541147 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400657526 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489190989 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642410853 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386580983 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392762158 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.448564321 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633615504 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926734509 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386934855 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.658336821 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418759381 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38614566 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.828865274 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.42615482 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598246732 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.532624226 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.647127694 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.163529356 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710149504 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398786304 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397305194 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386851482 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662164503 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106750857 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512312371 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398527882 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281494533 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.943588558 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.369474895 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.748987105 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413964877 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396614579 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399234747 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388344592 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323701691 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394025932 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85122304 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.403140557 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.099305244 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386940435 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400245002 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482606173 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.393267596 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.961372593 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.503863586 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395505506 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.384981545 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395325394 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962399788 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.224948857 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401819222 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.330634493 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.88250806 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.765446844 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072625717 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.511009945 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.392555034 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393579647 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324566238 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.734023503 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414866958 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527579377 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.413473904 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052440617 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162543729 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423817443 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329188995 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983420225 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401352732 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.333516488 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620069407 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16640361 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331277905 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.340094623 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325086061 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194677998 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406989904 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.913634659 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406880603 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.845963989 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.409964209 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407578736 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415343894 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614500794 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.272150199 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391786213 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.393285969 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515359477 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413308993 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.852143362 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336291528 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.395269663 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650674486 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603984668 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391654509 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.481428487 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638825997 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408566982 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.413863379 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392669857 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.430994522 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.020557458 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422955872 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252009174 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41707812 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17057739 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220876031 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401576644 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.502463408 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393180659 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675477639 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.252736028 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.562585354 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461977567 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3983067 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393662956 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.787330612 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.997034703 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.553550831 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.391219811 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402818768 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.410869439 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.393312642 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353514438 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.394041704 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419415938 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.1792205 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619587588 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3938896 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67864523 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329811252 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531665672 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411720924 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.618785974 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.688100613 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.413388708 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656475011 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411119457 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403381044 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4137198 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413705571 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496111189 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418637732 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.404977654 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660144121 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.399268981 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.399560437 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.793095752 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.183393166 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398874998 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.400734622 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322683314 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028684313 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387577479 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404455769 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.289042187 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.409772178 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464652419 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402072541 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.408047163 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.42600003 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.401654969 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408980636 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.393463131 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631078972 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407608559 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.698633471 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483377276 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.611703109 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044758103 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436141633 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.331453222 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.10875935 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.089874258 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397531494 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.60028385 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398368372 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409143451 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409129654 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.079626463 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049774483 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430978856 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.707084988 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.41212237 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410679208 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.403365055 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398009558 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.416442709 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289369588 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423451929 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.417888716 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541667303 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.412925954 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332807749 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915855051 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40454298 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3985511 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.176411516 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432903365 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.702312646 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909295663 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662249474 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.256376982 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41846165 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.894827813 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.44323815 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.4044949 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401624385 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409378164 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.419375654 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40780546 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.410079627 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.78089221 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.779437451 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969406058 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180576144 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006179538 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46642292 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.40918879 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.309231496 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.85764095 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335655802 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.061039403 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612678531 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.880332824 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358194219 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620273784 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.698288524 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27079168 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421617288 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627876232 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448788282 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.41990909 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421688767 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613164956 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435300443 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406220916 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338168711 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.699710181 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654344388 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419075859 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487653425 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861367104 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422081582 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.189886268 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.401496733 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.862762955 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.620047109 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.959285793 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.798053676 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410447867 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410053394 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909540141 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412466201 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.932772389 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06617829 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.440308072 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.627362707 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353316154 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.413497134 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.413464217 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.399980864 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.9313823 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.414480055 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.6671137 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4154739 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338876936 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415666767 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996045471 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.2790612 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408638637 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404240574 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245216392 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413903727 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734199041 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.412763871 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.418991158 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432686033 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.338487167 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339053984 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.097908272 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406927391 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372675552 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962957564 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.84672963 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.508443051 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430074889 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258844525 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.663606286 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.418402173 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047617872 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65806559 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.368986093 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434881807 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.506011601 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415418691 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.395070737 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.287350281 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641212588 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316760025 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632913738 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.561868204 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.31458566 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405618006 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625609382 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.289204168 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417728559 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697770109 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.144342106 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.416295745 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238410924 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45991236 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.424479632 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432904167 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.90146024 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420286399 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478404491 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418609211 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.418648718 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.41870982 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59912804 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415544779 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436519632 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.421219014 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502264659 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310865518 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.432856194 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.190438 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050757828 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217313253 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070839538 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441564467 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409219526 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409164701 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342120859 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55863775 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936515307 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683366901 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526831993 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.992072523 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439293384 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410739986 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434540164 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628146905 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68617833 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38471434 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409305605 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.206057104 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.572308516 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422969369 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.621374234 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963563385 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026599862 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564043218 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410126964 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875402916 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694998345 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.502498707 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410635879 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008619073 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.429745724 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.880528651 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.437634419 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425697002 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565740741 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421678702 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135446161 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.450183911 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.566643279 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.185947311 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.760948437 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677725432 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.976400109 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.431257327 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063477141 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.204629624 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677779241 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482318113 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422124449 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.528568834 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560049521 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.424422574 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.317221555 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411990091 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262871216 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.121899961 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.423200332 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066056494 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707287956 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.409030919 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.410994006 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443748953 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.423975469 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636319746 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256609799 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646801373 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42611519 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416805314 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.405520809 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068927625 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45729154 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349028683 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.416452246 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695282126 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680604085 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436258466 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.867212549 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.124798252 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016740402 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.391273566 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435884815 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414892821 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193046484 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065731134 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.470382188 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01055234 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.086669049 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41965767 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698662682 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422094942 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419643512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702202411 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.421142748 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419910353 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436668086 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.071162554 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310094371 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.434088793 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.795829474 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.359640116 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.644190956 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.127819701 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368897377 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423495544 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.614950181 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426894045 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540545893 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428656081 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.428708627 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43731248 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.159890094 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711594774 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.42578623 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.408779488 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.417677969 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434957328 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433050939 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673737696 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425433903 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.095489692 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.773758247 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.686241789 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.424370777 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.406130028 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.424978589 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427684633 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147459941 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.437042136 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.089623287 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04867411 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.425014095 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.439069906 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430846007 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.640914411 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632919611 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43289762 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440676999 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429545486 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442681147 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.321899719 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.193864494 seconds)
  done (took 1634.747533288 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473312912 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.475475981 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.453501387 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.505019484 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.437401721 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490514685 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.534327099 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.521560494 seconds)
  done (took 53.228751434 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.432560267 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.582805848 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.464376468 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.428912427 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.439320778 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.436395482 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.945555069 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.459002079 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.430390772 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.437839003 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.447677654 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.438179495 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.128105966 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.432829907 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.421424364 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.416039128 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.436119101 seconds)
  done (took 67.124221847 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.437051008 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.89114076 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.448006421 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.428434131 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.173501026 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.459062785 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.974413517 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.493158468 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.423214475 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.821224962 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.098459058 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.460157482 seconds)
  done (took 82.449732316 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.436402161 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.430029454 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.429994648 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.431723698 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.434033053 seconds)
  done (took 8.500305164 seconds)
done (took 2070.833944921 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.672363315 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.22113055 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.153438767 seconds)
  done (took 5.715122448 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.579891694 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.62881638 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.774292567 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.794150641 seconds)
  done (took 8.12012958 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.712941256 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.813359174 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.623397855 seconds)
  done (took 6.491343583 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.008528677 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.43953323 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.586747027 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.433889086 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.429195284 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.432379018 seconds)
  done (took 20.639633794 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.439106813 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.439197635 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.436972851 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.439306411 seconds)
  done (took 7.097537643 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.415229018 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.103985768 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.416000361 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.428646656 seconds)
  done (took 18.707257577 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.181952492 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.194829174 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.18309977 seconds)
  done (took 7.903582545 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.449056268 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.277693539 seconds)
  done (took 10.069392828 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.737441903 seconds)
  done (took 3.080094736 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.56943708 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.767597224 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.572760451 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.518552103 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.617512602 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.714943455 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.26655168 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.795102186 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.499387725 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.891200185 seconds)
  done (took 30.558485401 seconds)
done (took 132.428500584 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.609162113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.446834707 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.636497693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.583939513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.659866444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.635730978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.995812986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.551209641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.086382997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.071503805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.578210863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.660517828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.721505683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.455771908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.731238279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.45519786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.661840006 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.654659294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.30478027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.431100167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.996062173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.220169807 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.407930314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.240104127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.664533549 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.592633105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.799595821 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.45213053 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.449655291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.819882684 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.586857956 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.430951036 seconds)
  done (took 198.936244255 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.449955865 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.441321102 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.429575452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.42833392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.430208687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.429393022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.432356084 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.448606254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.451419057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.439414798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.430802741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.447295845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.432085024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.450906843 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.432062511 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.449503934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.431238293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.451834593 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.43106492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.442722393 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.431721727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.451584165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.43093656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.430249412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.451225963 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.456238373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.439527339 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.431296405 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.430182097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.447412645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.438679576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.431934975 seconds)
  done (took 207.39641974 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.444529374 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.43317919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.432765335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.450205517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.456582898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.435168633 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.452332671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.436613239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.441140362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.43156885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.43168603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.434589958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.435727078 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.459263359 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.432488371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.444024836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.433521649 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.432174158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.4334434 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.43533729 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.435499439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.432843954 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.433142977 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.443676107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.434235167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.454080552 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.432859627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.454644986 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.450989827 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.439127783 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435929924 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.451694138 seconds)
  done (took 207.433057052 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.645034545 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.448804611 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.449782385 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.408258712 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.449434215 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.450869371 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.447359295 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.641920383 seconds)
  done (took 15.291824552 seconds)
done (took 630.398097307 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.871579817 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.582293854 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.654898953 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.463137984 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.30933236 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.48417541 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.469354628 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.65472916 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.396208407 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.65795048 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.817839161 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.480948808 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.972459915 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.461283651 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.746743909 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.57085478 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.423621265 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.552242831 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.808701217 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.055803075 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.744664879 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.095484684 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.680221929 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.38907737 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.990181364 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.085877258 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.315321169 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.407550418 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.483275492 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.81924938 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.196934525 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.54523606 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.534882408 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.536355161 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.59488622 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.579783151 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.531922419 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.532675494 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.687386609 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.849831252 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.061957011 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.210064386 seconds)
  done (took 98.65867581 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.437500754 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.429552605 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.4329977 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.437279019 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.435237572 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.435229984 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.433918004 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.436102124 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.437381958 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.431155061 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.435163895 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.436895125 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.435593575 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.437890713 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.435198011 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.436117802 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.435935144 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.437626887 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.432970639 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.435797318 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.439601373 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.430538612 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.435001107 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.430964023 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.439398269 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.432253994 seconds)
  done (took 38.666894312 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.455495479 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.724466911 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.903145866 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.461273018 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.45686383 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.459210027 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.546034201 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.458114114 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.459247175 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.458368371 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.642042149 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.461591015 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.495663566 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.933726811 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.458401188 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.461488951 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.458972165 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.457003735 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.729706383 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.465588014 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.568638056 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.456623514 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.544579951 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.467524558 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.47654747 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.459855381 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.462056395 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.991793604 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.480697335 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.643442331 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.347463085 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.544322595 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.953195389 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.932882059 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.356358746 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.459802792 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.461417072 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.647235743 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.458502668 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.460003055 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.545359706 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.461092465 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.915650349 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.10518298 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.469056181 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.459711571 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.012493492 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.665259363 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.742280725 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.466228617 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.940653408 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.461321043 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.460555371 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.461320608 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.741665013 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.468479345 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.457883607 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.023619444 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.483146716 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.54889808 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.46021316 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.45935477 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.742613272 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.460560224 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.730885908 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.461102273 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.471707428 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.484376477 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.91730483 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.464635345 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.131571819 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.481414977 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.464095777 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.643902515 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.732092623 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.049111888 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.485001692 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.746346561 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.957098024 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.568283204 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.465327077 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.983744699 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.57297242 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.467870705 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.465860026 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.461730581 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.463919587 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.513973853 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.551855502 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.058072064 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.130806085 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.036700577 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.565723652 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.479817532 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.460846641 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.017606064 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.478225953 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.464213564 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.913308664 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.128338536 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.483513561 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.470755517 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.13815334 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.486442488 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.55562782 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.468491595 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.924096197 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.461929566 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.516173736 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.465772697 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.469980119 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.490089941 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.554421635 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.468162807 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.465860841 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.103156189 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.677024783 seconds)
  done (took 192.160380573 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.457913542 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.45094902 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.457804752 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.470956211 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.455153938 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.463754785 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.460767779 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.45713043 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.46489888 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.459691275 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.458546379 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.45927943 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.4578749 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.458652762 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.481191636 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.463717024 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.116495532 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.461709116 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.454260697 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.471180046 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.279414274 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.459839644 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.45790218 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.471448074 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.462115989 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.46318974 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.465348516 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.454374454 seconds)
  done (took 155.760321084 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.467552233 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.128271444 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.486783238 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.615830849 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.490447064 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.463535472 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.615924539 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.531072625 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.478829906 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.465753846 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.463315154 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.821091807 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.467397403 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.07555126 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.68223835 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.637641826 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.070793536 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.488004398 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.468082342 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.466815294 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.616409672 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.475553672 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.820170823 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.131044016 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.489444133 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.129251524 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.454928064 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.468331431 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.469053609 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.135444176 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.48843632 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.827722387 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.559410722 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.538344306 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.144663384 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.093006801 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.093303339 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.642291886 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.466455851 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.467679132 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.470741066 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.454686686 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.131736755 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.490222018 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.471638219 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.12355671 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.492529675 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.472705458 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.47415618 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.46774227 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.539425869 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.547686334 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.840749973 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.141821388 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.577509143 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.481896471 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.620776886 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.862568817 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.460807397 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.073287985 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.455935049 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.136765206 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.492921067 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.455892705 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.471401479 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.476449383 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.641240258 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.621434361 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.077634772 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.49069714 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.07812772 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.658974827 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.469115286 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.47105701 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.468634857 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.138277892 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.09389965 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.661405828 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.626319256 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.690894301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.45671845 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.470082618 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.456324207 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.556263088 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.469824647 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.140945648 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.100770418 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.490958233 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.475025215 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.47510695 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.472267412 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.673068951 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.159357009 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.582635203 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.068599311 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.850638951 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.833920284 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.473332129 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.539297378 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.48255052 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.834231244 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.475575778 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.540568884 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.925668544 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.825960993 seconds)
  done (took 176.969605605 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.745445801 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.816932223 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.572444849 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.616924352 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.133793718 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.081917707 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.80995288 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.620635576 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.586741447 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.75664166 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.77725805 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.562675141 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.670288319 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.559772338 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.242080729 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.563392255 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.591756433 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.627909345 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.597135215 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.598479242 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.183674238 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.791019549 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.666800685 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.522952525 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.576404545 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.320369986 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.081827683 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.022831703 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.664136136 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.968548357 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.039725708 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.687035679 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.538836063 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.231770524 seconds)
  done (took 71.199362964 seconds)
done (took 734.763877493 seconds)
SAVING RESULT...
DONE!
