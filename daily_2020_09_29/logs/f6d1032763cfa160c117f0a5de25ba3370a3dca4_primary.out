cset: moving following pidspec: 17114
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.672222892 seconds)
loading group "shootout"... done (took 1.189722287 seconds)
loading group "string"... done (took 0.436890736 seconds)
loading group "linalg"... done (took 8.076804067 seconds)
loading group "parallel"... done (took 0.160758074 seconds)
loading group "find"... done (took 1.33428845 seconds)
loading group "tuple"... done (took 1.934537335 seconds)
loading group "union"... done (took 13.064389443 seconds)
loading group "dates"... done (took 1.39773599 seconds)
loading group "micro"... done (took 0.210549715 seconds)
loading group "simd"... done (took 4.545502069 seconds)
loading group "io"... done (took 1.027754248 seconds)
loading group "random"... done (took 8.968139022 seconds)
loading group "problem"... done (took 1.542506789 seconds)
loading group "array"... done (took 20.191004046 seconds)
loading group "misc"... done (took 1.522701441 seconds)
loading group "scalar"... done (took 40.958171195 seconds)
loading group "sort"... done (took 3.137174941 seconds)
loading group "sparse"... done (took 12.189326869 seconds)
loading group "collection"... done (took 17.461414796 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515352427 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120107228 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125983081 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117866472 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205859613 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119118588 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12549208 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083634382 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.84553117 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.134534066 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11333074 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.424385703 seconds)
done (took 5.271976744 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.165010694 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091167124 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081709219 seconds)
  done (took 1.276619279 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064038122 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133822722 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06560719 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065544162 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06523938 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06532021 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064976159 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064375258 seconds)
  done (took 1.630606679 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070707044 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066041052 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0633736 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06539784 seconds)
  done (took 1.372048584 seconds)
done (took 5.631439671 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.237399643 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099107749 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.285470068 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.440176484 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.601464818 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091068091 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073181262 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068400449 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126501375 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326232296 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10140879 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.178843136 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088413738 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.163996038 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.007956551 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119494176 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08455798 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122239751 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093151527 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130336216 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.387547985 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075679155 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.073695312 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068683919 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066624471 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.643662534 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65708557 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.118985839 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08282606 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.159555211 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.114975449 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646733977 seconds)
  done (took 10.675331486 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090793472 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088220738 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06716049 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122089443 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091580633 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068248459 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073629552 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065830979 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085799381 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.120903482 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087231624 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095764973 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064627752 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067194292 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.07198894 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.193584685 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077872138 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079299813 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065810703 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07920332 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103253271 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076232726 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076724246 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075980526 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12694663 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168065555 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095066276 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096465522 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068014957 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079042295 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113331597 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.122631779 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06516491 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063873042 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117688308 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093445886 seconds)
  done (took 4.452418883 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.96452564 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092895921 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.09714904 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.624440596 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064462363 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147439278 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.236607185 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071000093 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.338269985 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.146576963 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.138507441 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.144664057 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.114468409 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067803715 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.234468851 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115035376 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.512206337 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066191849 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065246219 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063771593 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066258798 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065752127 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06208821 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067550538 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093210825 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085666823 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.157001584 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.946400229 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.286027965 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068033599 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.157351699 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.086390737 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.354296989 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068155676 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082797412 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080124336 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.44039281 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.121322175 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064276341 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167709866 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115001971 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06301202 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118690895 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077258917 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067350968 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067409199 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066587348 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069952994 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077153704 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099187557 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066374236 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063840579 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16827428 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062920292 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064892428 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065366395 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148556606 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062826992 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138500035 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06306466 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067598746 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099959962 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067510289 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.083843522 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.092348661 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.332004147 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06319834 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.033234892 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068895418 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.890034597 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076351231 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065215984 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068855993 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064974583 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066046244 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065691749 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070173477 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068594108 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066964637 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107609138 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066268335 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062811601 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068211807 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065287042 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070376606 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095849732 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064532173 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.498723609 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095561065 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06494915 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074112881 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103251899 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065334494 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.06936774 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066299948 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06555337 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064670488 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065812307 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068224666 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062589025 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.09384502 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068043017 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111029668 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.134707723 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068037475 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065390229 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073048408 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06831662 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068486775 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066050872 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067613874 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067478502 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063485537 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.104246984 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065478817 seconds)
  done (took 21.445992713 seconds)
done (took 38.644220319 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247418867 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075514399 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.0771704 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076471757 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076308368 seconds)
  done (took 1.755175691 seconds)
done (took 2.946356568 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107360344 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062525717 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097835517 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097255691 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06273868 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062576094 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.09598231 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063085459 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096265938 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.097585155 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099321267 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.098470578 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062776723 seconds)
  done (took 2.303135261 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068978317 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079310604 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081128758 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060616928 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069706149 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080310075 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060950816 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07975264 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084630198 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079788391 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081950755 seconds)
  done (took 2.016104598 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070292885 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079552227 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081378347 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.0606799 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071354877 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080017031 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060963048 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080146153 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082135732 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.07978502 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079844751 seconds)
  done (took 2.005050585 seconds)
done (took 7.504225381 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0639048 seconds)
  done (took 1.22690339 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.50305128 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.150481876 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065635963 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083024187 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187387973 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.089431944 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.193122167 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068582701 seconds)
  done (took 7.674673802 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099339971 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067586309 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067249986 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068199759 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067830663 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065609817 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066597332 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067354416 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065807207 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06650463 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06526625 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065976598 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067623997 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066675671 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066215506 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066212813 seconds)
  done (took 2.366677122 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09732834 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096008754 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070369507 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070812915 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069269199 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068746345 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070982499 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070349246 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068124006 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069530746 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07045707 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069271639 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069063757 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060724149 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070794275 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071562011 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067742497 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070602688 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071388425 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071837036 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070874556 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060657244 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.06857942 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070164672 seconds)
  done (took 3.004866324 seconds)
done (took 15.453211845 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.176387162 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072461351 seconds)
  done (took 1.423292776 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065551454 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066428329 seconds)
  done (took 1.32068216 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.070834678 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059836553 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.076441876 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.06786989 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059692853 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059558049 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.074454543 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059387385 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059254938 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059420874 seconds)
  done (took 1.835734909 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060977775 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066981375 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065278801 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.06626301 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064476197 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060553791 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062752166 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060999106 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066416564 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059756023 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063630594 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079233744 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063427099 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080530296 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063179804 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063926866 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065519148 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062789407 seconds)
  done (took 2.369228228 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059989208 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060524122 seconds)
  done (took 1.320216758 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06314781 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060148253 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062557462 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062735595 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060484128 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059607859 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06041789 seconds)
  done (took 1.621806722 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401694855 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118456259 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330138476 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066368443 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.073821715 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247741253 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062136858 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066602347 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066926949 seconds)
  done (took 2.669407878 seconds)
done (took 13.761684304 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080580453 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.17428115 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086873705 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.406390769 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089180058 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065552267 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11095529 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.162887102 seconds)
done (took 2.39167941 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.225816535 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.306304771 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.883215881 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.067907392 seconds)
  done (took 3.461986914 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327834346 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.077167999 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076403153 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065708816 seconds)
  done (took 1.758579257 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063377827 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06980898 seconds)
  done (took 1.340744385 seconds)
done (took 8.002845532 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06314387 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061905544 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090566948 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063356918 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061954499 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062469765 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063208593 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062516129 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068001329 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062673427 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061826381 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.061813761 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.061905811 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06188558 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062252175 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062575183 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062099056 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062250176 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062196563 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062450889 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062070394 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061880651 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062282639 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062119196 seconds)
  done (took 2.767095261 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077549495 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064360145 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065317582 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065630522 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065683529 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064994284 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065313148 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064271673 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065412322 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063683016 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065838425 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065376574 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063637779 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065383322 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06379362 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065607257 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064766275 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064296045 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0639878 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065479795 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064759326 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064039437 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065040339 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06440787 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065229279 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065266035 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063515357 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06447474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06509849 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065957066 seconds)
  done (took 3.17791811 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06332497 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058487444 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059521609 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068148563 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058809802 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059840465 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059359193 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.05830787 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058956708 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059568208 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058979818 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058496375 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059474316 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058512242 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059019331 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059354144 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062789379 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077043292 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058620319 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058596383 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063059002 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058517423 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058692702 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058681952 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058948633 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058188331 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058492771 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.05926899 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058621941 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059710765 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058448081 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062590349 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063338988 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.05912386 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077385452 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064173473 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058997363 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063146812 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059903953 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058523578 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058304132 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058373426 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058271592 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058697897 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068986808 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059118986 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059837135 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058926866 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059002946 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058725151 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058526931 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060335893 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063881891 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059982948 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058100132 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059353742 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058192439 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059265495 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058515057 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058483821 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058191627 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061673575 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059878917 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058992912 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077729566 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05950616 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068325213 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058295319 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059200731 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061858818 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058665466 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075386674 seconds)
  done (took 5.604566114 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081708129 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084210101 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063719729 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063248782 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059072223 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059020199 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066123029 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058704546 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0634766 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078354054 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059394673 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06325472 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063246137 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062732337 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058923987 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063777663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066657749 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059631978 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058746042 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062771235 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059093449 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065997492 seconds)
  done (took 2.655428546 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137052514 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064563972 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102285045 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072238786 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06687657 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072415015 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064197723 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064401625 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06434459 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065524668 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065469061 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065074723 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066473394 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065053061 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065413256 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064645981 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064348429 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064577008 seconds)
  done (took 2.519215341 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074891248 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064558146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084305406 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064639954 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064013566 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064610816 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067899189 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068171928 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063647797 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065111758 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069311649 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06510929 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064629173 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064072014 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064412201 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065173563 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063457603 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064616502 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067669794 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067225354 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067175385 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067918909 seconds)
  done (took 2.699997853 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074950024 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063047353 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077973125 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065001812 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059441336 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058595252 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063829602 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063477285 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063871504 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06291249 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063738779 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059499566 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065079292 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063379157 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065581975 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063489127 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063149881 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063856457 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063687938 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059120836 seconds)
  done (took 2.511626852 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084069501 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061310785 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061941825 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080255447 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061713319 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061055156 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080376612 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060969004 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061641044 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082415871 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061271112 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061350522 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080853069 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080105281 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061277554 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08098844 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080802702 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079993459 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061094854 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061309834 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082060062 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061298891 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080905787 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062030666 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061411767 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061328455 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061331916 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080571665 seconds)
  done (took 3.18505262 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062771567 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061832511 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063053772 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062484762 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062522898 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062421777 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062608795 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062565565 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062443924 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062870249 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06262296 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063937157 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063760247 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063152074 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062946199 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063153536 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063167383 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063563073 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063456677 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063505892 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063560431 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062848197 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062911743 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06321587 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063117253 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063605827 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063380921 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06354302 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063136197 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063838379 seconds)
  done (took 3.125976353 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071647696 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070536562 seconds)
  done (took 1.377051047 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06025273 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075161367 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059194148 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070970059 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068148435 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063655638 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068732931 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068859589 seconds)
  done (took 1.764443491 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064879384 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08780509 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060450363 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060956142 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.06385958 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11949686 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.072373362 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071930633 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073508263 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062899337 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061450847 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072102441 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.062335465 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07314815 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061500634 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068987836 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067478375 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072452596 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072552777 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058587013 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072052892 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061404415 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058965164 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060798621 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06015475 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066880203 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075585477 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071726781 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068772992 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058085532 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078453941 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059243137 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060667648 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06877357 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063257396 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059309991 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094989389 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059764197 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063908395 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.05952841 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07210269 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080848252 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.0747699 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078415698 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061762002 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061123994 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059349423 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060989439 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063200267 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068366076 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058920128 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066590686 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058441659 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060814758 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069322086 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059437399 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064152902 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068206106 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072188858 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069477712 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067985375 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07437387 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068228821 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06646598 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059940921 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0777777 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062142232 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071806403 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073223157 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060168984 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071485 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058600994 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057919371 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059199926 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091557339 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06092565 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060615521 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059127184 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059585404 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060883247 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068867315 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064298383 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066338124 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062114278 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074540812 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06802392 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059274295 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06501469 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076001727 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062246987 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058942481 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074664053 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062601553 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059026402 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075671422 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068333327 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060244979 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059834977 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062426673 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072193813 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059850038 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057920305 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067179318 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.06093478 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060927811 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062844341 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066662349 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059114125 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069064548 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064035353 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060056018 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057914874 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062902345 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05931898 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057192709 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06733396 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058125498 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071829009 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065069498 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072469841 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072779978 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068699386 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073551749 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058602374 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058258033 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075690386 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067357924 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059621832 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075427134 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057964786 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068640772 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.189307284 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062076199 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069970482 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059831778 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062429661 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061011398 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.06603236 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061714723 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062217091 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064631726 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06852553 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071673502 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060808143 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068181394 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060367934 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074779732 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069321723 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065134675 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063418859 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060255909 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07085447 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066503062 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069121714 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059101288 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.06000696 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059739716 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070114937 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069380904 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06134634 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066088686 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06417222 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060219884 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059664199 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060574481 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063155776 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063071248 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060156446 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067739209 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068020077 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.0724474 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067244464 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068652851 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058820381 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059573273 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064408086 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059240075 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064473388 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068796962 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075249864 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070875093 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07958803 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059642978 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069134329 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060584196 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07596509 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072619356 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060160055 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06366406 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058184254 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060809967 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068722547 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070911143 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074037325 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075593325 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065749836 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065297638 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060513143 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075735324 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061588538 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069135745 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069929606 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065381432 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060913574 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062383589 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069861119 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065474589 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060618298 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076043153 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066241289 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060446692 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075223634 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061271352 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.072073195 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06105961 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064568599 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066565953 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06526698 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070388439 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075634248 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060138402 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06192786 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076451422 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062866045 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062416217 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068534428 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075570956 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06578914 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068518418 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071704802 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070750859 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065174786 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069946989 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061392716 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069478876 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063089132 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070265637 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059397665 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075757515 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058178756 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073257103 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059382887 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069926145 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059382467 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067932145 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.05989598 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07479218 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060179393 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059410396 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069548236 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057546267 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067002047 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057735901 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063350001 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064342969 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066978595 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060041143 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067488467 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059593734 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066943564 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063098274 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066565288 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067166518 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062519612 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057636821 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066265766 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06832199 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065775941 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.196334508 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062687361 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061388371 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070285128 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061767319 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062004699 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068504087 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064987326 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065531476 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061256168 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061528261 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061360464 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068335448 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068943805 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077237345 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068537192 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068545164 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069749965 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060961635 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076411574 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060980605 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067890519 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058935872 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.064717377 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068483442 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059714145 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077531685 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06139664 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06758051 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071720412 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067956779 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062952238 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076746084 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062381564 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068464429 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067408292 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064925144 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066550824 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061095657 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068188126 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069492047 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070046026 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060345589 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066996041 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068551955 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061275597 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066516295 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061123651 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068093999 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061056033 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058633563 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064202062 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070931126 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064574102 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064427697 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059890626 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058366538 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059614639 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066237753 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063861486 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067666949 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074013651 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058321551 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.06003124 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059034928 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063547419 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076763618 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068931827 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067561483 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064149902 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060899337 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060599974 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061709746 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059703217 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062438703 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058785047 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.05900153 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069685783 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060988364 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064052771 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059782944 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060240944 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069034089 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063609966 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059723554 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066060775 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058853748 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065042778 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.05903576 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060975503 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064084715 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058943621 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062907831 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069773197 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075194013 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065892609 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068664686 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060346846 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066972241 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073966099 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068861218 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060056708 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068710412 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058339764 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076679967 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068325329 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067811043 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068925469 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060212249 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074960641 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063206919 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068888902 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073529891 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060393701 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064956054 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.05852698 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07431192 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063585661 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058194137 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066036081 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066567647 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064732196 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070056748 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058941294 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065818424 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063018106 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061573457 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059867541 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059519948 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066988352 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073320234 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059188889 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.061632361 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065858234 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066309589 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063580671 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.210188918 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068720124 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062021062 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062567069 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064424804 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062491892 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073337509 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061931504 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065807128 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065307539 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059931085 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066494329 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07607087 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070128164 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070853769 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060445518 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060731331 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078381761 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064870425 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064070632 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067292045 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06891407 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071809556 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068857184 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076215561 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060439243 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065597629 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071395757 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060583119 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059722399 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0633503 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061071921 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069224058 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069504038 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067138583 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061782635 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066308491 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072558171 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060628193 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064398776 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06415773 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060455702 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070488286 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06772124 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067699352 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060685258 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059609937 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062724284 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068025275 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067167706 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068738674 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060383302 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065571229 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072608116 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066794447 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062798139 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058933098 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062303761 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068395999 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063282223 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059075592 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06418635 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063249801 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065344354 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068866905 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06375636 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059107749 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07577807 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06755575 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068746977 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061702628 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061109831 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059816174 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059347216 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070096051 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059167008 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061231535 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063975993 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061260882 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076459642 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067653362 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075569669 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060389272 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063831215 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059343985 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068915126 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064071509 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059886613 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069520823 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058932205 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074486231 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070474166 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.064040895 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059467814 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06464352 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067542051 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076589269 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06885004 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068253167 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063281707 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068705141 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061501963 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070483519 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059585905 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059249404 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069578611 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068092065 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071168544 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059350075 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069467923 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060676645 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067365485 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067092932 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060807467 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061589001 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060720294 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068308479 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063398006 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068032082 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063749449 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074972946 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059544491 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068977406 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067568675 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069097372 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072163186 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069904344 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066361596 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058975235 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065865652 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065884244 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059584528 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063328884 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.061098951 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078705048 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059504874 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.197172987 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074680486 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066802496 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060689239 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067518492 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064917951 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070429583 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060851357 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070086008 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063949721 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060860268 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064423345 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064792957 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059046678 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059502315 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059572531 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069618306 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063903737 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060210089 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078000553 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.06081295 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068145714 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070422798 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065688098 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061268241 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058329651 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060632676 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072777361 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.0747073 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063422753 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068579104 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061325478 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069011176 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.05845588 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068096491 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067284247 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068741606 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059376869 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076596192 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074348962 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074829546 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063948822 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069017934 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068333879 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061093327 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080445312 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068197749 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060932712 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070269631 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061677968 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059037453 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058757701 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061339883 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070479657 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059317306 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061824283 seconds)
  done (took 40.969133058 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096739235 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060146346 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059871151 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059582275 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070082093 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060430688 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.05954553 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060117148 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060439475 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061491394 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059633451 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059351883 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069475426 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071946748 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069149564 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063329565 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058997394 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060355195 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059426786 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060255722 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068658662 seconds)
  done (took 2.692811289 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065241322 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074305319 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069970596 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074691258 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0672196 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06336731 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069507204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063344187 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069888007 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068526503 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070173679 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064111586 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068399461 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068172773 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068128428 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062953095 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07019478 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067188004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062760114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069551946 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063574133 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069570136 seconds)
  done (took 2.816251196 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061467384 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060144972 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067974987 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05983713 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058882789 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063107144 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059979815 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063999678 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063310113 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064009881 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068126106 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060405058 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058573985 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064720472 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.05843349 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059852331 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.099514994 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059916788 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059530445 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058617226 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06161023 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067841288 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059515282 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059267013 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065487843 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062179822 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059523676 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06140069 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.06017281 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063161769 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059902567 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059036129 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06832231 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067151011 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06348098 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063458425 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060355837 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059811632 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058821028 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059368146 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067687428 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060839133 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059902203 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060754435 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067779552 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059019358 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058986886 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067826351 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059155639 seconds)
  done (took 4.398257761 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.068920482 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109532325 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065256527 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090675884 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071452094 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064760982 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064687327 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092028665 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060174937 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061400322 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072470315 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.072796695 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062126231 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062954725 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06609743 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062494056 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062501292 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061088366 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0639509 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061374324 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063909957 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066201502 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07114759 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071390554 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062407187 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060959665 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061673447 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062675707 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070867399 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064610384 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062687634 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063610716 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072097637 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064973049 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061361265 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061578327 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.071985247 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061998938 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062079073 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060342865 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06146831 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062988713 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.065552822 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072682349 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062361952 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066534769 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06200156 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060067962 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07174069 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061702372 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065726277 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076339523 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062607146 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062832556 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063096707 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071207976 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06188686 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060535756 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061919692 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071474254 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0601883 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062808401 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072027565 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061345221 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065368742 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072391217 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066217457 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062936891 seconds)
  done (took 5.964375377 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068097278 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093030813 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070135578 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070423817 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06959085 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069678716 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069804101 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069039011 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069126055 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069623482 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069498232 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106976235 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066274218 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073348457 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069401383 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069530529 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069450073 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069182387 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069207962 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069388181 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068870989 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069993985 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069108597 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069776951 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071314665 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065619309 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068868645 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068932345 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069321473 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069423693 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071527394 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0689158 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069981593 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069816525 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071403923 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0689619 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060277244 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069702682 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069473957 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069603967 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065778242 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069668706 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068820518 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.0658017 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069436804 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068976112 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07012937 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071998843 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07562498 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07006981 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069033828 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069768468 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069114829 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069237145 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.06997605 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.075625728 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069945808 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069844002 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069472786 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070116408 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070060438 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.076045734 seconds)
  done (took 5.737738929 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072605022 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066067077 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077491833 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058966289 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058859037 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068232047 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059642695 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059477538 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068062853 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065908947 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067199114 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068226626 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070497751 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066952236 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06783724 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069412371 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067668764 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067563613 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065475618 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068024915 seconds)
  done (took 2.689896478 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073323403 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078041198 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064789925 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067983928 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064108682 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068286165 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06397065 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064785061 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065254726 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064658448 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068986087 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068961539 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065161326 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068248116 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068781164 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067914252 seconds)
  done (took 2.428116273 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065869726 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06591373 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065905303 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061103303 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06449562 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059752264 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059937316 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058930368 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059574416 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073129655 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060060861 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071927907 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060055078 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059456923 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060100181 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065445484 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059740934 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060080574 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06037294 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.064604479 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066783219 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061264953 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064334581 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060119613 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065566357 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066233432 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061536933 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064599198 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060416935 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060250892 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065272151 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066836343 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060329371 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060572896 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059368759 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059907932 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.0602883 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060531579 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065589841 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060387939 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059024939 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064862786 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060204408 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060653015 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059151523 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06030621 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059454877 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065982946 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06013987 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065275295 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.05997735 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062112133 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06067456 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.06713203 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062223861 seconds)
  done (took 4.779538978 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077707102 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064481528 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059145989 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059225237 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064356254 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065001507 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064768169 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064397027 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064758192 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059141609 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064676735 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063627265 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064480834 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064035299 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064745585 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06397574 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058775183 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065427792 seconds)
  done (took 2.511196157 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070355134 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064249623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069613413 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064297114 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06378672 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063554915 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059377208 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.05936158 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059430719 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063809991 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063611723 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063831584 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05954304 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063782059 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064053243 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063604729 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063804625 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059927979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064306311 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059245645 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063797017 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059472673 seconds)
  done (took 2.739403546 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086075143 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08228028 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.12424507 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078335824 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086348661 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.06985768 seconds)
  done (took 1.879382273 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091725027 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100782872 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064146994 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064382697 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071862977 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06711721 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067223271 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06690268 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071741656 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070444126 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067063999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072154954 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072227523 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068416456 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071939227 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074429205 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066747569 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06680655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06401502 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074376882 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066756883 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071787914 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066906768 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066778649 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067242472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068296677 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074259928 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070437253 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066818096 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072265377 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074103069 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067182461 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07207473 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073791274 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064317389 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072186733 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067065842 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074511421 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072309421 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06869685 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06452635 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071972086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071874908 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068490432 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074626987 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06722412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069324611 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066906636 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067237795 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076495988 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072601838 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069390563 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072635206 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074733072 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074857334 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076374311 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070666935 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068850634 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072805376 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070829818 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069022709 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072273376 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069104936 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071170239 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07527528 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068634974 seconds)
  done (took 6.037528013 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098049899 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06461334 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067495957 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070965353 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068725838 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067318639 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067305574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066969247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066926549 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064956552 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101397765 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067369395 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069299961 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068933211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067427067 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067352956 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067539314 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068839053 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064625443 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076411145 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067274228 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068760947 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068944443 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068400091 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07032545 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074892428 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06699487 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066547681 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06679138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066925671 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068454696 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066948677 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068415711 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064302779 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068594178 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066856934 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066879969 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068474671 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067480264 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072091116 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068321338 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074640133 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067175274 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067255319 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070618986 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067222299 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066674898 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06453965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066900153 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064405712 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070942685 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070709688 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07064201 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068863412 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067263026 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067455215 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067348868 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067240687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067258452 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07449642 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069076305 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067115021 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076385549 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067469595 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066908889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06903037 seconds)
  done (took 5.951286567 seconds)
done (took 124.196231723 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209124484 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181147778 seconds)
  done (took 1.730177789 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072943386 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09505043 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073088852 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132291652 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070623353 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103886056 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102819975 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073601322 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069685844 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069862812 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069766273 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072066738 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134889251 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070120265 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070305505 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07217016 seconds)
  done (took 2.715089821 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105101727 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.18067978 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112488409 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069230554 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105547917 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074538449 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068308177 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078773007 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071506596 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08025368 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074808934 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073116139 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069885364 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072903831 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071863496 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074668847 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069769774 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074307644 seconds)
  done (took 2.891789961 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095433762 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083445714 seconds)
  done (took 1.54483933 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15181825 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103176716 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141253654 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.317737914 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127264153 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.123746736 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127311876 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.122846788 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108228202 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119208554 seconds)
  done (took 2.803947567 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104386275 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173387222 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308446784 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120353468 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075369907 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096970714 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120323322 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080207489 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077377244 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07731055 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077184766 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074759622 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098925282 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073618875 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073094027 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077143352 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102327738 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072144084 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073418474 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073313717 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103087922 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068951946 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073513076 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072556477 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075284222 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075488189 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070778769 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068301232 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073880191 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07295683 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075446423 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092815142 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076082995 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.095244231 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072733183 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.096607649 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07284714 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072351634 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073860764 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071510084 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074537851 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075227088 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077651369 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074045651 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070390315 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072633893 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070212269 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068246899 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075644407 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069081078 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076233266 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075502373 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.09545351 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069163123 seconds)
  done (took 6.008464067 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105306115 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10386098 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06865384 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110572245 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103639449 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068815116 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101419192 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097808515 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106310165 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068204858 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067416929 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067464562 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074076154 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.076796939 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11268781 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105284848 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069380548 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067700419 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104893547 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104197644 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067164364 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09904733 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0971429 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103704036 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066523988 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067829942 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066422786 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066856852 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072178684 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07313959 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067096164 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074044466 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.078883155 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072937467 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066409769 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066875798 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066652854 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.072766659 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074008427 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073600947 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072900188 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066605967 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066745726 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067405617 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067440708 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066405321 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073052457 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073107745 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07238323 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066844837 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06732951 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06653456 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067010439 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07340598 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07176531 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.073509074 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073215375 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066527591 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06673085 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068435908 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074973539 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074164847 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073861721 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067559236 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07435047 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066902741 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074592553 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07793425 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067329345 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066899378 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066936437 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066679805 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066951155 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072203279 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072195284 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066727832 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066913205 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067102727 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07477884 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072478476 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066244722 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071605352 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066322726 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067021126 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067173689 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067334635 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07166902 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074111513 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06728849 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066870812 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066686881 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066933741 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066165719 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071994206 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072439312 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073066987 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072542924 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067131194 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.072339671 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072394534 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067238051 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.071939494 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066316741 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066457832 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066727533 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071989716 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.070786451 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073247672 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065969161 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065901518 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071474086 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073343256 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066008699 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.070894185 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073260054 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.205425439 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067990299 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077097183 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067919862 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075684818 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06833376 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075618613 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069942794 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074022538 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067901923 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066786009 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067634531 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073285731 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068116296 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067630925 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067720788 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066961611 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073254206 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076622797 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068259048 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07334394 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.072938972 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067586023 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073349525 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067728357 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073860203 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067511918 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067606631 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067054146 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075670698 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067522591 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066848914 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067300392 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075715278 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067451009 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074967489 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072270322 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066766052 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077350167 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074987063 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072187011 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075553249 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068354529 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06708182 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067694004 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067062958 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072050653 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072976746 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067661587 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067291393 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072048805 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.074897259 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.0662759 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072734457 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072432431 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072776862 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067445743 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067157837 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075542207 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074709994 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073019876 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072782054 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073329458 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067070163 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072646598 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072495006 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067160399 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078660695 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067096888 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.0771184 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07308007 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072854731 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073560683 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07425913 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.074983116 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075035153 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077200839 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066739511 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067109394 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.072863608 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066718769 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06686947 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072353513 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067473209 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067148085 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.077491402 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067578659 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075488196 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066355885 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073635325 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066597748 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067535409 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077895337 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067182675 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067664952 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072513424 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066719292 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072181739 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07496665 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07293555 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066722353 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06729339 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073244858 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073638084 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067471217 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067005473 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066645886 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071508252 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.070707055 seconds)
  done (took 17.766932329 seconds)
done (took 36.839592121 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216527333 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163070238 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.197991386 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113515468 seconds)
  done (took 2.161857626 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.089182972 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097288227 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.073489213 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.0638826 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078164227 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063788661 seconds)
  done (took 1.87669189 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.246562739 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.183295691 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169109867 seconds)
  done (took 2.002540272 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212334904 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188957487 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.485772255 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298193471 seconds)
  done (took 2.690201935 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.125135711 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075628702 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06194587 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072014179 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.100505793 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.128219907 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.083129036 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.10387335 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072957307 seconds)
  done (took 2.290151566 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.126297567 seconds)
done (took 12.58209099 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.101232379 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119338189 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074463548 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071259693 seconds)
    (5/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.108696377 seconds)
    (6/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074369595 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.237249678 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.245788223 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.167987952 seconds)
    (10/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072681377 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074990236 seconds)
    (12/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.202538549 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.203571764 seconds)
    (14/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.251943131 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.178542964 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.0913057 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071803393 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072499545 seconds)
    (19/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075443753 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.161094845 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175830871 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.285767116 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065025302 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074757076 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073610312 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089032225 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071760857 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.149498299 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071381679 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086606191 seconds)
    (31/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.202143771 seconds)
    (32/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072437547 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.225385312 seconds)
    (34/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062550414 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.210577267 seconds)
    (36/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072867601 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.220970533 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064625554 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.210400997 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150457377 seconds)
    (41/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.08385144 seconds)
    (42/309) benchmarking ("sort", Bool, false)...
    done (took 0.142204332 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072558281 seconds)
    (44/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.20268529 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199400761 seconds)
    (46/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12975273 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079462008 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113688697 seconds)
    (49/309) benchmarking ("sort", Int64, false)...
    done (took 0.065278877 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069127366 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073424841 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085506085 seconds)
    (53/309) benchmarking ("sort", BigInt, false)...
    done (took 0.257227269 seconds)
    (54/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.141121872 seconds)
    (55/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.075287352 seconds)
    (56/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.163234107 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112789331 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063718002 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063952716 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072526949 seconds)
    (61/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.225988423 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062674471 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.225933219 seconds)
    (64/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071135273 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.218577362 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088847914 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062773348 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.209112765 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075261225 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.216295906 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085728195 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065796014 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078448072 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070153128 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070498485 seconds)
    (76/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.154525012 seconds)
    (77/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071226332 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.091009089 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.12067547 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062784893 seconds)
    (81/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070491092 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166828893 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.29364998 seconds)
    (84/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070895097 seconds)
    (85/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06610071 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.155563207 seconds)
    (87/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.248612354 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152790322 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146593019 seconds)
    (90/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074414009 seconds)
    (91/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.141021885 seconds)
    (92/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072041173 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113535784 seconds)
    (94/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.140029393 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145986454 seconds)
    (96/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065980636 seconds)
    (97/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140339649 seconds)
    (98/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068842966 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 0.169228672 seconds)
    (100/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.064433643 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145406057 seconds)
    (102/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067748802 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.062871338 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064226039 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074904169 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074443311 seconds)
    (107/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.064082891 seconds)
    (108/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072292422 seconds)
    (109/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063204617 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169921056 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089598777 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064037103 seconds)
    (113/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.149086328 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072136733 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12741193 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180117312 seconds)
    (117/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.082938406 seconds)
    (118/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.076802321 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072142924 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08873243 seconds)
    (121/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076744078 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063414121 seconds)
    (123/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064961497 seconds)
    (124/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.082608259 seconds)
    (125/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071870947 seconds)
    (126/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.071321012 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129344296 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073552354 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15726381 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063352861 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073854977 seconds)
    (132/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.169269805 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.148560016 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074140516 seconds)
    (135/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063452672 seconds)
    (136/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157511259 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075477983 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06330369 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071442789 seconds)
    (140/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064007905 seconds)
    (141/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064471469 seconds)
    (142/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073219543 seconds)
    (143/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.195816639 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121974653 seconds)
    (145/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.155265085 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064330199 seconds)
    (147/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066523741 seconds)
    (148/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062420618 seconds)
    (149/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071282549 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066093982 seconds)
    (151/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.064712477 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063099566 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.0873972 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065146539 seconds)
    (155/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.19395647 seconds)
    (156/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063037428 seconds)
    (157/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091079102 seconds)
    (158/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064247403 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088016774 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091785643 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070859676 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066884761 seconds)
    (163/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.064323646 seconds)
    (164/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157004348 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148121373 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.137876444 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06579853 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06312846 seconds)
    (169/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.064360849 seconds)
    (170/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.161620556 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064044943 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.173289784 seconds)
    (173/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065081367 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085414326 seconds)
    (175/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091946702 seconds)
    (176/309) benchmarking ("sort", Float32, false)...
    done (took 0.134585211 seconds)
    (177/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.06322465 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.062425257 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062987321 seconds)
    (180/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.13708632 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063293538 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064108236 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085468472 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072368092 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.0624693 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085152477 seconds)
    (187/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.140817574 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070545307 seconds)
    (189/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06355828 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.077436312 seconds)
    (191/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063753556 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.082822086 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.137638033 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064684346 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069825706 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.232428937 seconds)
    (197/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.067179518 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066304052 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066109632 seconds)
    (200/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.138451234 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11449678 seconds)
    (202/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071968427 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078965786 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068441925 seconds)
    (205/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139651784 seconds)
    (206/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068187961 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066633017 seconds)
    (208/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.066214252 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.191416662 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090774671 seconds)
    (211/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065390028 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073231417 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066487015 seconds)
    (214/309) benchmarking ("sort", Float64, false)...
    done (took 0.138153562 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065993425 seconds)
    (216/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071909358 seconds)
    (217/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071704513 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076231557 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.080849474 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073125722 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063290122 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145077261 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075896599 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067058168 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06418962 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183686343 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179205628 seconds)
    (228/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06694529 seconds)
    (229/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183993311 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072963226 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06439106 seconds)
    (232/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065828658 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076789545 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066917507 seconds)
    (235/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139376659 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065093762 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064460798 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158755446 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130124489 seconds)
    (240/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064845444 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.063313695 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.063510352 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075105152 seconds)
    (244/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064794087 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071533044 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064026077 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122800951 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076106994 seconds)
    (249/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071277696 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062532493 seconds)
    (251/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077713251 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088665618 seconds)
    (253/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.063809471 seconds)
    (254/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072750786 seconds)
    (255/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063174113 seconds)
    (256/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064148734 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065505077 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06386729 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064077696 seconds)
    (260/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065217165 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063269065 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063228014 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088256682 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.079952913 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088746003 seconds)
    (266/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068443536 seconds)
    (267/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063088587 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064274452 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065075444 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089321863 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155534548 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064662222 seconds)
    (273/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064562039 seconds)
    (274/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064391554 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064427837 seconds)
    (276/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071784844 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.092919349 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071799608 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.173931998 seconds)
    (280/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.063872913 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119312004 seconds)
    (282/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063075588 seconds)
    (283/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.134343972 seconds)
    (284/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064619333 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121499713 seconds)
    (286/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.063594115 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.064601531 seconds)
    (288/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064820538 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08293957 seconds)
    (290/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064077064 seconds)
    (291/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066207414 seconds)
    (292/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.063806181 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.063207129 seconds)
    (294/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064370501 seconds)
    (295/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063824966 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.063367734 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07547181 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063009012 seconds)
    (299/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.062698139 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063244985 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071384346 seconds)
    (302/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064270306 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064475365 seconds)
    (304/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063190935 seconds)
    (305/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.063244754 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064544226 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063773442 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064168661 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.142872918 seconds)
  done (took 32.601782816 seconds)
done (took 34.027857023 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082573667 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087085166 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071648305 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.082477713 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078857347 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097051738 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072007631 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075860765 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078492478 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.076765834 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076598591 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070552519 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072929606 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073098644 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071091511 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086259046 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079326093 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072389173 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072646569 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063380383 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073047169 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064474047 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063466132 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070719123 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076211726 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070764082 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074133355 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073137779 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064568226 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064673807 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069349505 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072882798 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064298475 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076011784 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072550392 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072359103 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076133053 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077104552 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063201623 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064625599 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074706184 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064383887 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072234472 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070547432 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069308474 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071330101 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072686828 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075411937 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086092781 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06898767 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075294785 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074675323 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074997125 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070111353 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0697994 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072150973 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070491745 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085636875 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073292989 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068418651 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07480327 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073331484 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071408167 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072642321 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072329245 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075522887 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075728103 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071510294 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075318313 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071735379 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064463473 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072365402 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068888976 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064236969 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075326523 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07803307 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.0627073 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068264651 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072067277 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072125709 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063297627 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068009233 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063348999 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.06954365 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068613684 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070163839 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069611269 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071568957 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063143249 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072561604 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071843787 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072345488 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063297962 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075628361 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063985525 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070870841 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064306427 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064418535 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063132429 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069647995 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064039779 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068957136 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072317625 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062510866 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069397439 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07730059 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064081606 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071412169 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063220946 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063461042 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074754391 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074711478 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064374013 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06851289 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063405197 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070113409 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063381172 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063760263 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064064563 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064336427 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068798808 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064217996 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068816554 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069676182 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075809365 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063611822 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068939596 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068306082 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065053408 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070785327 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063998529 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064149547 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06285476 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076686313 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068498309 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063670754 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069444186 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06751247 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071715238 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062063154 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071541704 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069415037 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068221288 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069665898 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061791507 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074740404 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067758733 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067234149 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.202446631 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065429243 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06356416 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064594559 seconds)
done (took 12.408744943 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066190396 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.102679411 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071533724 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.0803555 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076563837 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065868248 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068177026 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079799007 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067779172 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.082920639 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088919989 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084603085 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089698432 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063021135 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064589399 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065481647 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063679636 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.071862259 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078360842 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086933992 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093101485 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064107531 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.07349737 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080650447 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074213802 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.07995344 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066154691 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065268761 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068471808 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081719534 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089490544 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064087251 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065805807 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077450524 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078025222 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.070970084 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065832237 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068445797 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065539664 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064396839 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066773164 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.077838742 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068083174 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068318605 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065895465 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066323875 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065117874 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.069868379 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077446455 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067689131 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072211617 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076286801 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066376765 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064640782 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063523738 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068113563 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064335257 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06511856 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065735986 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064664059 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06496179 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067123697 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065912941 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065151623 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068119286 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066913269 seconds)
  done (took 6.222018658 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083004309 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092038227 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081416836 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081758332 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065129413 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.0653426 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065014396 seconds)
  done (took 2.057541304 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066456996 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077292544 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079644275 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080621096 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073254174 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082349272 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065719787 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09550461 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064709806 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077260393 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.108781182 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080675187 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06826721 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076385161 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065577145 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.07216519 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065549304 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07366263 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072566721 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080665687 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06849786 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093070851 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07920997 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065770344 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084108305 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068825034 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064247696 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065307976 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066463134 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066292283 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0660845 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102648203 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068066087 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076453504 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066128267 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064610723 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070434301 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068444999 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.06723832 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073565319 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069525326 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065990198 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063556992 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065936165 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067733305 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068373909 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06341842 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066427425 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065733456 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076179191 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064236639 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068304331 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067879035 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069487204 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071844498 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069422131 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073946499 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066631594 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076120711 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072875018 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066067935 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072744333 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.0719332 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069294117 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103729708 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068971262 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068035516 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069291771 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065632736 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067251764 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06670356 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072434018 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064134382 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067200406 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068221413 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067014346 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068393298 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081613491 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080724375 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07766954 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066804072 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066404308 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06858046 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.081142703 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069389615 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06574114 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068141934 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064657981 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069310562 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066496068 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071212 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066609229 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073664599 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067550642 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069096989 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072578992 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064818728 seconds)
  done (took 8.465192937 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067104806 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066748906 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067679896 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066071631 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066209692 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066427996 seconds)
  done (took 1.958325526 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087138833 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065717288 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080348492 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066471518 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101229376 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071716676 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071950766 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072662609 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078463849 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078179663 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071456487 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073637079 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071924593 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067269122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071589296 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066486628 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071397022 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068394754 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077900998 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067178272 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.07850122 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066770106 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067044186 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076297347 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067562348 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066258548 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066209352 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077581489 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077346216 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.072766549 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067065727 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068100685 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073160313 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074358592 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071836245 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072951817 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065163678 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070338851 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067339045 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068301609 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.07303789 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066911238 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067511729 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070852761 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072206695 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073137404 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070918338 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068629948 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.070910274 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070355795 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07078912 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065921515 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067641932 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070311187 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072802283 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07263027 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070713728 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071241022 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067127201 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072975647 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06538915 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068076651 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072055206 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.06789489 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069826135 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070471659 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07322696 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066796778 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066773508 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065285461 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070596623 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065331474 seconds)
  done (took 6.647118291 seconds)
done (took 26.86242591 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542976662 seconds)
  done (took 2.046223229 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.568209717 seconds)
  done (took 2.109877987 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.657690042 seconds)
  done (took 8.19574396 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.293374006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.320267171 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.724626515 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129316654 seconds)
  done (took 3.04181688 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.747136926 seconds)
  done (took 2.297925301 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23185883 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224484407 seconds)
  done (took 2.019640933 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.339009732 seconds)
  done (took 1.882053988 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.128367152 seconds)
  done (took 2.666898348 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.219363799 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15712453 seconds)
  done (took 1.926613757 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.486490059 seconds)
  done (took 2.028635548 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.133812311 seconds)
  done (took 5.681313077 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229206513 seconds)
  done (took 1.814841006 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230287604 seconds)
  done (took 1.780317569 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.765468663 seconds)
  done (took 3.310865393 seconds)
done (took 42.35377665 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081492568 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085303049 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084376026 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080013394 seconds)
  done (took 1.854277357 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072401502 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.06798436 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.0715066 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071653002 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070359679 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070848062 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070862975 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068371746 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.0694657 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067977507 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06690199 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068250995 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070534251 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067658791 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070410532 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071505738 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067826994 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.06823245 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070967758 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067931009 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07035332 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068071626 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06675947 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068404465 seconds)
  done (took 3.210782511 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076329765 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071031996 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073975383 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069452323 seconds)
  done (took 1.847060038 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07450194 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081758841 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082618816 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088260424 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075272608 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074432086 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080396595 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082234206 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064041891 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083347664 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066621448 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065478113 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06580187 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083655406 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081015555 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061167058 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062422845 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074582478 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.07382526 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076602674 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06721836 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064282626 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074890878 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074006951 seconds)
  done (took 3.334822941 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077340432 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064239507 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076398325 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089206281 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090708355 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064218963 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076354742 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091411898 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12200416 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064281401 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070496795 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064031795 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102202656 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064318764 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078102861 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104167992 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106955721 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068163151 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096097664 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064034584 seconds)
  done (took 3.195632899 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074425151 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068211336 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069202923 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064906173 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075675236 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071719155 seconds)
  done (took 1.988053488 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06759346 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066515711 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066512342 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065728757 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070690406 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066172834 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064693257 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067889021 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066252317 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066114743 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065579808 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064705729 seconds)
  done (took 2.354365598 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.162865593 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067085161 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069493478 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064985361 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070055842 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065274098 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079438526 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069014032 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08302081 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065748844 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065830183 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067511637 seconds)
  done (took 2.488914055 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096297058 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097525991 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141815995 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114125858 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091306285 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091642955 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.155097839 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132197234 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112979063 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067553281 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084610256 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096875564 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097013235 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12983392 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108927534 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071111546 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.108864844 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078657693 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110766653 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119045065 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11224887 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118937839 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090446877 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095156368 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103606611 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114814674 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070052919 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069301697 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144868816 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097852726 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089780774 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096822449 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105798901 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.067600933 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084461876 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.103512574 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080630836 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114992591 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085837719 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095747915 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078622605 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128128521 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103112364 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10104552 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128120139 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090761893 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107364545 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104365301 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080216376 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.115207696 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095743966 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088455407 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078033327 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.154936158 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087158533 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.10904331 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1087916 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078821953 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085207112 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097990566 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.125060805 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.102289767 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109443107 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.253160773 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.08985149 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090552015 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.128612524 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08351816 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098801519 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126886651 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090604497 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075122532 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.094074914 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068098596 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.094909434 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103762522 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089796665 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109266082 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075335143 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12387809 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107083051 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071068434 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.114364764 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096924847 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151624794 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092994232 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097758048 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088842875 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.146415464 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083033105 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078127518 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095424986 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125519329 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09165629 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093340598 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125599553 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094230318 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085206794 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073451644 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.08684727 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098836422 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104867384 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099022764 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086749599 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084938623 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093824519 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073089891 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078391038 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098869463 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083400271 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121068953 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106801413 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120970338 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077198561 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102623869 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.094635598 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125322518 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114912776 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082104466 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105525565 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137474116 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.110847399 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083451945 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097485969 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107968561 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104257242 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093514889 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132575198 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112854996 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086403347 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090725367 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.24220092 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.110528144 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152285082 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087812307 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.101902523 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135657565 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.111633618 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088780425 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081915061 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092765919 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10352457 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137471985 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.094149118 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069135771 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089825091 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127591831 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074699659 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097290536 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.090990033 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081338843 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079738794 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066991548 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098986003 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132037507 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110768012 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096214454 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.103694788 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068051736 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096630019 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102283634 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138185608 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113844872 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095459965 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.096416317 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102030206 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07754412 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.129996203 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.129848836 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088794061 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088909207 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119974909 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.093518115 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102279175 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11099824 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101125466 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099168095 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.137816232 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11772542 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.121169704 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102351641 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120758391 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08012318 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113331409 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072452231 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101292916 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074995108 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10398692 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.076787746 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108568219 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076873038 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096372755 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067271235 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071789157 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106539694 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.240934311 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085338595 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133012637 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127720512 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080502802 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099421786 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098262279 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098758739 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.107187668 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.087944886 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089597186 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077114623 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078414267 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096287584 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091272859 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104535639 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077166862 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074472056 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135266151 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101256838 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088301252 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09298147 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.117955494 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086549982 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085790959 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100846677 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134952899 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115110299 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078030195 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089143834 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068348922 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082766381 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074591051 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106532581 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073369171 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108428558 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067649528 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.126191667 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084241898 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099313061 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094698131 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125294271 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08850618 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124873799 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085265406 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105272249 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092179256 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093132147 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107820767 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.093286762 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102211918 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107703856 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090860809 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087423763 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11831033 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103044178 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114665281 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103319307 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132742843 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10917709 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073591036 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101790382 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097204293 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141266964 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097297312 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087619469 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093061133 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100002021 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078627299 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.290540173 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085417421 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085463975 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111363756 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088020734 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094801216 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0752244 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.098347632 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09289652 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111343937 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.097306013 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.092170621 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10700844 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108303921 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084661104 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084897174 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120481337 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.125449267 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.098579201 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091589426 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086279503 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095836378 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091736849 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.106512401 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079074926 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074384815 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.066684435 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070947376 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.114443552 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105568207 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09590496 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09626359 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100640695 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070861627 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0855806 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087895933 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.08100629 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087656642 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.112495429 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100847029 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.125340025 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098660127 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08337452 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.138103103 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124885157 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083042891 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089316769 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09910876 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072405342 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143979794 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116346471 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076309198 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083344053 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076014307 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081862084 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070005479 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101149364 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101265531 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07443923 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100776671 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095241425 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.121149827 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094412626 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074334374 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077867964 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073407459 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07371387 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.099447107 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.075554492 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074671747 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125360237 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099600767 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103149075 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080752456 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.225191367 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129746732 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068771557 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12897356 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08076245 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108168572 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079827496 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077843549 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087854172 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103321958 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104063706 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110425604 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.06947265 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101533609 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152089005 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075206409 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073439843 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073364239 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10827381 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085054256 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139111153 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088361445 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090506164 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076111059 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1246361 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100745904 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080701394 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125801641 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077984699 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.06934263 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08452332 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.108941319 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071043187 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074317567 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112138662 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.507367521 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088555952 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074435193 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086517204 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124653822 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081538662 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106233264 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.115856696 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103877743 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.182797001 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072660431 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088718937 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.10220115 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095612528 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089494342 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077997338 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087245983 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085240923 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.08315534 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103693877 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078703526 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088770125 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077743672 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.10131478 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.12669628 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084093783 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099151427 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085356233 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087695682 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096374015 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108486368 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102804104 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084862303 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085091755 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105246545 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080876742 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.230513937 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098482239 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075915589 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077094998 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115031644 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.081704015 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.09287856 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102510013 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.087672272 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110550175 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114895255 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10877226 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095516217 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077481602 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084411331 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085703257 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072638748 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077057909 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072769436 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069180051 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104804269 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084066334 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080010732 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.097428333 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.106851966 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098424419 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104328067 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088195953 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09555829 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098172245 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.124082447 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142050915 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095986351 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.120420639 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128254081 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075545393 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074101791 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079255151 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128475671 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.080510405 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09038363 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.233687593 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076640894 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080458838 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089250015 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105437814 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081427539 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078673755 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096675542 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108534299 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082655503 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079399673 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091597527 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106003065 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.125620979 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087537624 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073473111 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106084064 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10037971 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120823238 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.071607154 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079111207 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.126069545 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085949517 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102092329 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078478907 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121691285 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128607588 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072268456 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086358265 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071204113 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085083685 seconds)
  done (took 49.937399515 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.148050735 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.142668067 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081415573 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.096260538 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185259249 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.194886063 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.116958326 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093456885 seconds)
  done (took 2.775613784 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067382865 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081453542 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09928934 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082373708 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065628526 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.0672806 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.197655858 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079991199 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065284779 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104528195 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073497099 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067316228 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.355472319 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064982264 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06591004 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073701471 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066131438 seconds)
  done (took 3.345522083 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367237824 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.618788807 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.31809556 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073702399 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.935536059 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088023978 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.250588052 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.148655701 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080681209 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536257106 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368931042 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130087641 seconds)
  done (took 18.597217141 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074650089 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072935595 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076749618 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07701116 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07351827 seconds)
  done (took 2.0529378 seconds)
done (took 98.553823482 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081235845 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.167522591 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066310883 seconds)
  done (took 1.943888223 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080574145 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079422473 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079533876 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077336944 seconds)
  done (took 1.997672333 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073356626 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074799034 seconds)
  done (took 1.82288809 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228726065 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164474053 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088550384 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08060228 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07834338 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079138743 seconds)
  done (took 1.924156724 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070215909 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070383017 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070162294 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070546937 seconds)
  done (took 1.956689139 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066403487 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065049287 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06698371 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069654057 seconds)
  done (took 1.944692632 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08183791 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077348916 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076587198 seconds)
  done (took 1.912543481 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106289083 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09549106 seconds)
  done (took 1.878276213 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078383877 seconds)
  done (took 1.75850983 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087419145 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094291086 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137968583 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.104128465 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137386707 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123135304 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074597373 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.07554316 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071740017 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070898706 seconds)
  done (took 2.655454029 seconds)
done (took 22.034535032 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077327703 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366604356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358171477 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085230624 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671741966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35523256 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965444542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088831763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097063466 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066688445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082927595 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647035902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958023399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323153232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.941393879 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322226577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648171834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067370815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066023582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066999494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951096965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066031139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066538927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06746348 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647625704 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372105559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067336872 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322330173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066153455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068827632 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354474299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068216658 seconds)
  done (took 16.03023843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068662237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121479848 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071627474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08241626 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069040722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068586674 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069535474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067073061 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108129939 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066836201 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08393996 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066507636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071200451 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068561302 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086938372 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068214103 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068638859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06835462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067687463 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06890432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085609117 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067729734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068061862 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07071347 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067854437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080787437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068504137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067294705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068100277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07001395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071298611 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068801741 seconds)
  done (took 4.062395953 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119865756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123960649 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072110094 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107639643 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115800625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069079207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148486933 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092927398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111464732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067529272 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08364162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067329264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103150647 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068723885 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087168808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068921578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069413234 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068969152 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068032396 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068702447 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086061211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067524716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06858679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06851817 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068621533 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082501954 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068451203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068219972 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068082068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06992626 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072068012 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069321332 seconds)
  done (took 4.336547234 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068311303 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070040363 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078845961 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079180444 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066123655 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068179758 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069414981 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065526592 seconds)
  done (took 2.265340655 seconds)
done (took 28.391507456 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077443502 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067458679 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070384119 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086474882 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072439975 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069627427 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064646873 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073180078 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069743 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069667084 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071660149 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065624445 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068821467 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063743261 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070394411 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065036794 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071358278 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069748441 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069996531 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070990775 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067467762 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071079087 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074136352 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070024594 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069987043 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.06986981 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07453309 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071024425 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065955042 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069100329 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067161531 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079121818 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071528228 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071479733 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065465857 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06527472 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069475979 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068192125 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071576482 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074225939 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067443592 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073718318 seconds)
  done (took 4.62099578 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085450211 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092088191 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084178585 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081037773 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.103704035 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08122728 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088282327 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07809967 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076417955 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087015247 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072256454 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077467094 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078015572 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071174007 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076803748 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.072875035 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078392887 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07253269 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077190883 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077369335 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088360743 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071242424 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078101275 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078183941 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072658641 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079274634 seconds)
  done (took 3.782198426 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071524027 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087081093 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090844101 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138843109 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10813239 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081564877 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080379104 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100862013 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09918427 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067725577 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070909683 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092951524 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095680315 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073646448 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10562652 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085067582 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078030145 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068532941 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07341001 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10122374 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089699708 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086150938 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100189177 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087064187 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066257773 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075969779 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073239242 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081486183 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074184688 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079186124 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07089899 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070470033 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067498808 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078050197 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070703372 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064678898 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087882583 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078558719 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080304758 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104384496 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076343069 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067630258 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095499492 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132196141 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066256856 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068520003 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069671322 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079063453 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068130742 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095685958 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083878686 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066134417 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.084846926 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067575375 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067526965 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081749284 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067654523 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068655592 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07829108 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072301396 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086619824 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071196959 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085565885 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066240306 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077655156 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067419564 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067754168 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065237968 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101602349 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073322688 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1162489 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068234887 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064377635 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077967016 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077463808 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072523943 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065683651 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084124684 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07791576 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070036418 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077634588 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069286332 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069852266 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101820861 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065458227 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064559574 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064498409 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068839789 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069504812 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066725172 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078795522 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065776849 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069528016 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080712026 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066508109 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066654317 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068399866 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067178607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065821295 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076708253 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070114849 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06794207 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07836182 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067344406 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069546322 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081492739 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075884243 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065951491 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067640021 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068356111 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068091084 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070966694 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069366546 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068185739 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072770647 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073986747 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071368428 seconds)
  done (took 10.792238439 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159577673 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150797677 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06760977 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145511202 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074819147 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070957861 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145932725 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085995897 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067322262 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068862369 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066328148 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.093640716 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089737993 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.101298138 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071445385 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067840489 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092492996 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099838946 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147324937 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143293515 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089787714 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074350339 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069262305 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068635676 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068528394 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076020793 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083006214 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07503566 seconds)
  done (took 4.357445254 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.073806832 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10935386 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071134333 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091370413 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.0852421 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067070661 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068986483 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068016324 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083849872 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.073425039 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067183251 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071301495 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070515242 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069319862 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067861499 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073280739 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073054964 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06574744 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070606859 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07178791 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077015038 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09115986 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071108748 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066764325 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068863331 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066320981 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073579756 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075971905 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066154089 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096231727 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064147371 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071344813 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080744321 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067991278 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066834588 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06763242 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066972702 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066662872 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067609432 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065009012 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064866693 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071290321 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066179213 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07256695 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080751142 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074154809 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.06769209 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069255539 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069170014 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063661935 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070029791 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070177086 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069334946 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075384177 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070426175 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069281089 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068215384 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095862845 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072949244 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066291289 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066307881 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067654514 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068155353 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074223296 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083399004 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06785069 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065632647 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067127587 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07163529 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080810737 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06666686 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071460514 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064085783 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066819982 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069283887 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06943303 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067855732 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065881238 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066684075 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067087348 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067054095 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066610173 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066132638 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069447952 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064902863 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065153549 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067447288 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067542267 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072990046 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065759494 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069333887 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067834215 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065520668 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069920125 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071954809 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070131773 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08606537 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075404367 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067388922 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06458946 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080732995 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068713993 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06604762 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072945336 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071341701 seconds)
  done (took 9.22500306 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088857089 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068850235 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086598384 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09286131 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077375831 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072450062 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079856106 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068030465 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082814851 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065643911 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076024646 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065410573 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079218614 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075053762 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068719757 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077177486 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069426919 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086868449 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081308999 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066080768 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075585099 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079214149 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079184734 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083769577 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083574807 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08454852 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079290546 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.06915346 seconds)
  done (took 3.915039305 seconds)
done (took 38.384088086 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.773390985 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.941237398 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.770291209 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.970330321 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.836242103 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.898514366 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.891776553 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.767558205 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.931083029 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.802611674 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.022192973 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.172028448 seconds)
done (took 66.54210571 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.786194732 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.920107406 seconds)
    (2/2) benchmarking "String"...
    done (took 1.986920983 seconds)
  done (took 5.613469285 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.935348968 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.446801615 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.049554407 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.767296845 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.776708408 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.283032639 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.576283354 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.256931305 seconds)
  done (took 30.862518994 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.906843749 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.999859015 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.467561657 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.508892599 seconds)
  done (took 15.638797244 seconds)
done (took 63.636245895 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.81149824 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.770759678 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.788337616 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.801741436 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.774166596 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.773358217 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.773567676 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.775000752 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.831083276 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.936947052 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.771137758 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.782376853 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.774532451 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.776912631 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.52557523 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.833744076 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.794647775 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.777330882 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.79657635 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.813805139 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.777791132 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.774238361 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.237305074 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.955277246 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.375322011 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.17820046 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.890218001 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.173173994 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.784398511 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.771292636 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.857053403 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.152133411 seconds)
  done (took 204.317789665 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.772165619 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.600375658 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.683032189 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.782699187 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.077221279 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.948040279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.868261471 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.186131434 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.77631748 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.795594884 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.929131064 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.774226652 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.963586278 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.715836279 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.807866501 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.861769527 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.928131674 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.974861471 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.811656179 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.920514948 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.779134654 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.75582417 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.704601187 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.915580482 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.794452432 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.861160512 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.790083959 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.794949509 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.959540281 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.899745145 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.784454408 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.795131478 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.929303858 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.641621534 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.790811985 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.777661634 seconds)
  done (took 168.86121094 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.963588133 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.780852153 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.773457256 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.828073112 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.895050643 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.775685545 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.423754367 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.784391458 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.970731372 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.779285804 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.772883404 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.773431276 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.774157601 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.785071304 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.850142147 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.779285633 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.787716789 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.775351045 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.798932204 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.775436345 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.773672113 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.773399519 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.774090776 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.773735761 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.773395201 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.773746768 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.649297048 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.014527898 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.77550044 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.774027189 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.370715623 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.787050961 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.869242589 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.779788552 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.775316865 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.866105178 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.830927946 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.895343349 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.776649979 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.992904478 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.846723513 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.776790584 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.774969474 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.838904292 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.788014089 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.775715682 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.778460466 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.779328609 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.841155048 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.032615015 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.778885327 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.89729328 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.264271816 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.774917313 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.774913386 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.776491838 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.386882424 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.777105686 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.777027286 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.781975775 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.781131731 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.77732728 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.776865015 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.162163207 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.847762095 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.779601382 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.778972242 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.697062332 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.78131562 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.868494118 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.844814221 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.775154313 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.775898739 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.776490772 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.778645555 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.776676352 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.778972815 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.900376589 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.784703564 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.919243478 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.858240279 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.777760838 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.899837406 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.780420193 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.788354219 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.625722517 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.846052116 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.814733021 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.607480982 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.777619341 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.150991753 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.555438212 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.778438776 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.777726158 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.788615544 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.777002238 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.777678551 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.778541494 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.857860467 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.776724289 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.77823101 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.89944573 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.521580062 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.613931434 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.77909762 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.778814159 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.78587157 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.861446069 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.900854388 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.780039173 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.84326038 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.784359193 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.779660027 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.8551368 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.780626674 seconds)
  done (took 401.538071089 seconds)
done (took 778.450492169 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.374132487 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.343851712 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.433304125 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.363037105 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.336384108 seconds)
  done (took 13.566337219 seconds)
done (took 15.28011335 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.793221154 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.785170431 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.835425712 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.86368428 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.79664559 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.797085927 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.861448574 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.799748515 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.830143153 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.834071465 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.863251929 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.862085913 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.801785082 seconds)
  done (took 25.441537925 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.788715568 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.92777613 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.998641851 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.819530625 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.791185445 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.004511899 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.844268108 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.92258875 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.920047915 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.006925316 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.008797407 seconds)
  done (took 22.751017728 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.787882326 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.9257459 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.002936062 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.822721522 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.789719299 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.013941578 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.849993676 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.918548456 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.923217581 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.003724293 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.023234191 seconds)
  done (took 22.785448118 seconds)
done (took 72.692841641 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.783831892 seconds)
  done (took 3.501041221 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.806970798 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.980160733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.784550007 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.785626318 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.784009955 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.785143536 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.785770608 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.786080796 seconds)
  done (took 16.216569676 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.784692983 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.784555479 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.784605087 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.784517592 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.784945036 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.783778815 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.78454971 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.784764871 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.783473337 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.785255821 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.784304142 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.784122828 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.784317821 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.784175334 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.78302742 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.783866662 seconds)
  done (took 30.268764108 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.786400591 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.784079821 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.78415783 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.784535711 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.784531424 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.784698751 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.785589673 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.785093238 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.78512812 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.783325842 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.784704242 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.784801664 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.785181564 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.784826807 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.784938492 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.785453295 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.785136779 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.784486706 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.788551735 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.785951472 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.786678053 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.785955753 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.785664874 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.785883894 seconds)
  done (took 44.565814397 seconds)
done (took 96.276183843 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.517732078 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.860399947 seconds)
  done (took 10.097548238 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.786535733 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.787343911 seconds)
  done (took 5.298950134 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.787015876 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.78664676 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.787120218 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.787339526 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.786392253 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.78706054 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.787056282 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.78643848 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.786641255 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.787373871 seconds)
  done (took 19.589391595 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.787636972 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.787393623 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.787061057 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.787899853 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.787475421 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.78723071 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.788207688 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.787207561 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.786890274 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.788091721 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.788076027 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.78830606 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.787878443 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.787986323 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.788835297 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.787866655 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.78820323 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.788463308 seconds)
  done (took 33.903500464 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.788420634 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.788186692 seconds)
  done (took 5.298189492 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.788383105 seconds)
    (2/7) benchmarking "second"...
    done (took 1.788415755 seconds)
    (3/7) benchmarking "month"...
    done (took 1.788625611 seconds)
    (4/7) benchmarking "year"...
    done (took 1.788260664 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.788360311 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.788982374 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.787311406 seconds)
  done (took 14.241806852 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.788550559 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.931845638 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.983027127 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.406089659 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.790208908 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.791135399 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.640456148 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.792250611 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.792128527 seconds)
  done (took 19.638756507 seconds)
done (took 109.787339882 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.600605843 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.792677707 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.078900388 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.880696804 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.810901093 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.129321331 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.79540179 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.422863407 seconds)
done (took 42.234197529 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.808838359 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.787567222 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.832818447 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.838172689 seconds)
  done (took 22.182327767 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.790448438 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.129474413 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.819293257 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.702013321 seconds)
  done (took 22.177758226 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.169980425 seconds)
    (2/2) benchmarking "read"...
    done (took 2.142080185 seconds)
  done (took 6.040565936 seconds)
done (took 58.934280941 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789943175 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.792150658 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.791016001 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.791278562 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.791505958 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.791854277 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.790507311 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.790989431 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.790134332 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.790837617 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.790803918 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.790715873 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.792379423 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791203978 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791065606 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791450999 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791851585 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.790907571 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.790861405 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790983883 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.792807113 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790715532 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.791778127 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.792399388 seconds)
  done (took 44.717343516 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.791765571 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.792834476 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.792412903 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.791815517 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.793789015 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.791752436 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.791790813 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.792635808 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.791949079 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.792847042 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791540954 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.791558326 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.791673619 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.792623548 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792945887 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.793753621 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.793152857 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793360801 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792246605 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.792406031 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.792860146 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793267251 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.793716414 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792248451 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.792789757 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792800735 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.794819542 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.792610627 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793081434 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.792995668 seconds)
  done (took 55.507994494 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.792893355 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.794546064 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.794167912 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.793855741 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.794096427 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.795395283 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.795309339 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.794356069 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.794388287 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.794574645 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.795295969 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.794447838 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.796557097 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.79461244 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.793737648 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.793956203 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.794994878 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.794977243 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.7951893 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.79458441 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.794110563 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.795921843 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.795012263 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.796372686 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.794482023 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.7958823 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.795746237 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.796452881 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.7955203 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.796229723 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.795751243 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.795357396 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.794580369 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.795768349 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.796872745 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.794994059 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.795758905 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.795168538 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.795569322 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.795568515 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.79779301 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.794879826 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.795961103 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.795914594 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.795965692 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.796842236 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.797301342 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.796854573 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.796539741 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.795437252 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.797902698 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.796986917 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.796394265 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.796966452 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.79825028 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.797148688 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.797357856 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.797164135 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.797402377 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.797302856 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.797921425 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.797885088 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.797756707 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.797267086 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.797966563 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.797069309 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.797859266 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.797459835 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.798545226 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.798538951 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.79730601 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.798681077 seconds)
  done (took 131.044686143 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.798244161 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799252861 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.798433451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.797877025 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797865377 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.798468018 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.797083679 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798443775 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798107427 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.797547151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799075997 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.797736228 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797970775 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.799542285 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.79854777 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.798808871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.798605085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798064571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.799972467 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.798760792 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798779738 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.798223734 seconds)
  done (took 41.298251626 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79891367 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798833162 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.800632181 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.798516368 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.798212097 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799189378 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.798713253 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.79989046 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798156992 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800408927 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798954158 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800262293 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800059058 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799791613 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799414942 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.799209578 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800283432 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799249017 seconds)
  done (took 34.121563124 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.799936818 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.798652258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.799973937 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.799774697 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.799318151 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.799781845 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799899044 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.801127094 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.799966382 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.800735149 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.801082115 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800383846 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.801185923 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801553657 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80062986 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.800936018 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.800440997 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801315011 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800633749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801004786 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.801503655 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.800793455 seconds)
  done (took 41.345135775 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801347994 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800389602 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.80096283 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.800601186 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.801491467 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.801955976 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.802170276 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.800743091 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.8009126 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.801077971 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800835607 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.801971636 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.802315778 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.801397821 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.802397368 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801330595 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.802335626 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.801577173 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.802320718 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.801539121 seconds)
  done (took 37.765268345 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.802981098 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803193427 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.803658393 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803018187 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802961488 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.802406058 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802394124 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.801692776 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.80462384 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.804031729 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.803171215 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.802265693 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80357649 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804738 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.804349382 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803905602 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802322449 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802971998 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.803416504 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802662921 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80533416 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.804142733 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.804888022 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.804722907 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.80415438 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.804604279 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804379031 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.804618793 seconds)
  done (took 52.239015638 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803392629 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.803928703 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.802839588 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.803113665 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.803593479 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.804249862 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.804617542 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.804325821 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.805936074 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.803434824 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.802904528 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.803268463 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.804482301 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.804570579 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.804131064 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.805155842 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804651494 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.805497933 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80486782 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805286786 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.804693221 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804974975 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.804642593 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.803940333 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805009466 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.804804923 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806073668 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.804961784 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803920919 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804997486 seconds)
  done (took 55.872418888 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.825837473 seconds)
    (2/2) benchmarking "in"...
    done (took 1.825871572 seconds)
  done (took 5.390765254 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.805254142 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805303326 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.804977635 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.805441057 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.806283764 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.80603824 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.805636951 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805999079 seconds)
  done (took 16.184114319 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.806794611 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.810284145 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.806576434 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.80656062 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.806018072 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815697655 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.806974714 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.807249921 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.808436512 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.807022116 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.81052285 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.81056286 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.813576805 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.812440672 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.80677889 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.807659555 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80902511 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810704888 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.809095837 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.808183669 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.810203727 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807958771 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.806987891 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.807630165 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.807265234 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.809606076 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.817506267 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.809122951 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810184273 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.807680449 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.815990264 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.808429773 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.807082419 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.810147223 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.808107622 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.807442881 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.816104565 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.807989498 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.808264516 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.808827569 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.811027899 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.810623869 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.812666832 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.816396445 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.80857968 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.8080011 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.80892958 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.808553605 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.808620487 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.812693311 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.816908289 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811403727 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.808597583 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.809162452 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.812355884 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.810463603 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.809377496 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.811747209 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.815949075 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.817443727 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.814636208 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.831016338 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.817835356 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.80890668 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.80923567 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.820495253 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.832069177 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.811769855 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.81313455 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.809878238 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818691949 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.810752622 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.809977782 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.810465566 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.824628485 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.818310076 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.810253683 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.809737404 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.809264258 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.810357399 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.813694486 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.809635396 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811984326 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.80968269 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.820692726 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.834278487 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.810899611 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.811289408 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.813243904 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.812577753 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.814359864 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.813763606 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.812228191 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.810951549 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.812722667 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.815079526 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.811173905 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.812047601 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.811300439 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.822703643 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.811891256 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.811716467 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815545663 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.819827009 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.811961971 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.812025211 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.813418649 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.811808352 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.821303555 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.812389829 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.81256465 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.812711753 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.813116557 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.816166785 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.812522366 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817151888 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.82039003 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.822182118 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.814763464 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.818335134 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.817671338 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.815744108 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821930209 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.834925837 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.812995879 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.817076975 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.818314651 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.824863431 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.817162432 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.813029997 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.8167547 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.812484338 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.814192888 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.8170469 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.813962757 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.81414194 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.813788336 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.81442071 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.813837431 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.813515769 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.816324294 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.81665657 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.816938861 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.813103461 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.819254019 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.813604133 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.817684722 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.822396849 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.815054732 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.815214895 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.81506406 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.817008792 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.817115518 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.816619622 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.814317722 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.81377951 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.815584912 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.816042081 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.818533059 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.815287805 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.815111031 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.81589122 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.818665698 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.81532765 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.816169919 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.816195832 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815853712 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.815659017 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817497184 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.817417145 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.818206282 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815407839 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.822454118 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.816705297 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.815514541 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.816111784 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.816035466 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.815941721 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.820694409 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.827869507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.821615331 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.826622375 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.816544684 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.824666937 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.816522475 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.818568208 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.818349745 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.816493326 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.81650309 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.81594007 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.81602683 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.820904952 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.83776704 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.82735733 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.819337852 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.819039279 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.821841403 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.820979466 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.823308801 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.817220006 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818628707 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.819828552 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.817200228 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.81806471 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.81682123 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.820463748 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.818275505 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.817402529 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.82184131 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.817561723 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.818045371 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.818757842 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.816706139 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.820670779 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.817412546 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.819403983 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.818332595 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.818757938 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.827322368 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822249002 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.818309537 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.818239939 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821933879 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.820063692 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.817950381 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.820516062 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.822890064 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.818772766 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.821634249 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.827593406 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.819933173 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.819836389 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.819449998 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.82006786 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.821338657 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.81940426 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.823419907 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.825776292 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.822684505 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.818994674 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.826028959 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.819268289 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.822619068 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.819589286 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822369039 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.819597913 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.821745866 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.820295005 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.81878639 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.828892162 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.819502666 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.82132329 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.820068292 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.822406108 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.822395507 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.823100432 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.819773894 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.824509068 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.828117775 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.828167928 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.82108929 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.825432488 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.822527611 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.821915423 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.82557699 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.82324519 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.834343937 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.830602289 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.820343118 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.821679008 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.821744023 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.824669931 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.820536178 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.821608339 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830677172 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.822364848 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.822620902 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.825236584 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.822099398 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.821337982 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829885356 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.824588663 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.826669252 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.824410737 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.822249077 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.821739202 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.823119959 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.82579378 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.823287688 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.82492569 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.826053813 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.823383701 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.823209273 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.821695582 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.833902385 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.823161312 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.823632132 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831513891 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825438865 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.823362477 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.824584152 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.82303407 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.824236029 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.823912622 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.823230291 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.825171195 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.823865165 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.828457753 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.833947965 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.828650033 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.829842138 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.826041188 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.835303062 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.823140633 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.821587405 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.823438337 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.829400942 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.830532715 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.823108013 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.823940604 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.836655652 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.825601804 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.825346026 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.828920174 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.824026533 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.822260564 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.824753114 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.825990961 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.831348359 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.828799764 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.824516274 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.824637845 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.824254617 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.825471449 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.828638959 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.827616976 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.827026788 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.826358668 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.825110403 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.825832439 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.824470847 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.823569936 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.825314131 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.825110443 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.825563099 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.834926965 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.82517085 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.826563401 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.828804868 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.824710914 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.835554456 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.825591545 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.825647925 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.827271465 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.82586693 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.829441733 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.82619693 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.825511 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.826187409 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.826693252 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.827846181 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.838545249 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.835166766 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.830693593 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.828831059 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.82580715 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.828166465 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836538919 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.84921615 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825746261 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.830516576 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.83092411 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.836360646 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.830122785 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.833553639 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831078037 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.834596838 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.828978244 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.82754159 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.831856695 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.840151264 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827825448 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.827509233 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.827366616 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.833420663 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.830867235 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.828059169 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.829822288 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.832299552 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.830612415 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.841464976 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.828874137 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.829351484 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827586865 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.826957743 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.827865574 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.828947653 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.830214863 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.830629063 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.828344531 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.829197253 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.830511079 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.833788147 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.827707878 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832615573 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.83894767 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829257902 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.82933569 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.830255661 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.829255531 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.832580457 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.830762641 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.829486333 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.831366349 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.828643785 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.831432513 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.833650696 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.838655003 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.832147697 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.828596011 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.829386657 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.833239409 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.830207766 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.830086953 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.831560723 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.840299571 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834475665 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.841837114 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.839817839 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.829807155 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.831289459 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.837970643 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.83777908 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.829883336 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.829780732 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.829882276 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.832293369 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.833763269 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.832509447 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830925095 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.832585678 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.837716644 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.831272818 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.830790507 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.831322458 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.830363239 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.834739667 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.833071411 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.836278115 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.831204463 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.832212755 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.831796846 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.833978331 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.832868716 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.835835435 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833082882 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.832406869 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.834451475 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.834167185 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.835900385 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.831098612 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.831533906 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.83583367 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.832396806 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.831247914 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.833066873 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.832024903 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.832671255 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.837183842 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.841069733 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.832405689 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.833733867 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.833557453 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.837134013 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.831497625 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.831979639 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832690496 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.831473104 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.840891361 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.833259993 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.832798865 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.833865984 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.833507186 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.839227506 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.833753417 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.83783079 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832451203 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.833958323 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.833544493 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.837387766 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.842227561 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.83660384 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.837040574 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.840656433 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.838804435 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.836601892 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.833090162 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.832922843 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.833905402 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.836484755 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.838782383 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.835617973 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.837170482 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.835004206 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.837354833 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.834904453 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.837032881 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.834661066 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.8342821 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.838351687 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84443336 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.843745691 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.833098013 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.836885418 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.83457801 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.838930559 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.845391434 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.834665644 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.834493137 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.836075795 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.836874242 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.836556397 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.842281508 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.843026235 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.839061513 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.835637831 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.840465712 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.853216554 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.837610575 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.845273715 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.866476645 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.837562256 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.835173238 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836722403 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.837331468 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.835983953 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.838962466 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.835420128 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.844073483 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.836290902 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.834963693 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.845558208 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.836098829 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.836553437 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.836339098 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.837113737 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.843050584 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.836176424 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.844656383 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.837031168 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.835764349 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.836293344 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.838765728 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.835364803 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.836295229 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.835120367 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.839877839 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.837680354 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.83717908 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.848086883 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.839332336 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.840260327 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.852801863 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.849407886 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.838369918 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.838605928 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.837250751 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.844403207 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.842035048 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.837121767 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842222022 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.844552748 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.842024292 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.845285962 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.840829396 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.838503772 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839093505 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.8377411 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837750114 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.85179122 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.84917675 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.838574929 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.838890234 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.84633249 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.839206602 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.847357111 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.846188457 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.838333036 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.840786009 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.83856794 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.838368429 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.838533173 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.839675212 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.843491155 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.846110881 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.838945445 seconds)
  done (took 1089.76327462 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.838527116 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838432109 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838858448 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838849967 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838877838 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838425722 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840161142 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.839859827 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.840781745 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840311642 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.840166665 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840108071 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.838888721 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.838885697 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840347678 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.8402007 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840492711 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840431342 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840043702 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840420404 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.839741372 seconds)
  done (took 40.404732347 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.840931507 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.840064762 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.839637703 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84052545 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839319018 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.840285088 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.840319608 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840553401 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.839536904 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839613545 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.841006826 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841175406 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.840099993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.840205672 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839523909 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.842066333 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.841008603 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840644569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.841615981 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.840298687 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841708547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.841163029 seconds)
  done (took 42.265045336 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.840862448 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.840830143 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.841921105 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.841473365 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.841650185 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.842069196 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.84116212 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.84518649 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.841671875 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.842639419 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.848561801 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.849820998 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.840909312 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.845035856 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.842444926 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.842830504 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.987954752 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.843464779 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.842909982 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.842821509 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.842426424 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.85084725 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.842401115 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.842398169 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.841831456 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.843304981 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.84294891 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.842918649 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.842394041 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.844064254 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.848048974 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.842850424 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.844611447 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.847549683 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.843805275 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.844843124 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.847356296 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.843622686 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.843358047 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.843420389 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.854534509 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.86584202 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.843974354 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.843930324 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.852961951 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.843677259 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.843822691 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.847943486 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.850546433 seconds)
  done (took 92.315453417 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.843286818 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.844588141 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.843099347 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.844845251 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.845189526 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.84421806 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.843234275 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843577679 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.843433071 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.844287115 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.844338462 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.844959665 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.84462394 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.846708749 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.844866647 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.844743809 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.845064117 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.845005497 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.843787376 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.845280104 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.844873484 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.845434872 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.845231695 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.845052261 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.844356233 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.845873915 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.846591167 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.845252813 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.845541384 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.846410643 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.845482043 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.846908944 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.846443602 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.846546768 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.845496713 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.846476463 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.84598669 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.846243958 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.845824051 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.846364663 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.845256925 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.846136561 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.845829588 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.845291087 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.84652176 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.845889191 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.846090314 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.846213082 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.84702006 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.847491743 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.846646527 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.845998059 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.847440705 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.846363759 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.846135589 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.847039859 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.847614346 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.847443146 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.846350311 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.846919881 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.847182381 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.847273781 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.846535471 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.846958241 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.846254844 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.848253682 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.847560567 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.847460713 seconds)
  done (took 127.292245017 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847356297 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.847167794 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849134596 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84915224 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.847545598 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.849208772 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.848642911 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.8493397 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.849562033 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.849432048 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848816632 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.850239803 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.849478675 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.847652451 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.850252365 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.8493102 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.849337343 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.850051745 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84861866 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849026221 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.848591025 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.848542472 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.848578 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.848806867 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.849711966 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.849716013 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.8490299 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.850944523 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848593006 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.849922037 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.849200822 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.849186617 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.849425048 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.848183953 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.850267813 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.850887188 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.849266167 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848592566 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.850232427 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.850890584 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.85031875 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.850076169 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.850060098 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.850038537 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.851033468 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.850080709 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.851664423 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.850662474 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.850533896 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.849930936 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.850517028 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.850616413 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850785064 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.851164663 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.850565622 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.850990241 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851901204 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.851973439 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851837951 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.851331332 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852381297 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.850941301 seconds)
  done (took 116.470142356 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851558386 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851638397 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.851588147 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.850960694 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.851371881 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.851351065 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.851054644 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.851638775 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.851451931 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.851189136 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851628695 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851790063 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852734896 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853300036 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.851926957 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854226992 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.851233048 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850134601 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851868456 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851837275 seconds)
  done (took 38.81957776 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.85132385 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.851695178 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.852085059 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851896537 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.852037972 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.852824821 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.852375851 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853473533 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853069578 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852562517 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.853495287 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.852954953 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853206616 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.852426708 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.853680458 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.85230488 seconds)
  done (took 31.426029361 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.852875789 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.852774613 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.853321662 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.854173668 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.85289718 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.853347467 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.852722197 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.852703627 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.853488967 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.853310121 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.853640143 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.853353296 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.854323247 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.852443618 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.852889649 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.854911828 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.853940784 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.854011352 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.853945034 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.855527509 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.855105955 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.855881557 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.852719928 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.854800054 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.854766757 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.855072915 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.854374357 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.854370057 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.853888928 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.855308865 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.854521857 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.854403786 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.854953465 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.854754068 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.85365651 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.855939561 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.855040249 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.855172773 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.854272646 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.855146132 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.854779632 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.85470136 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.854614584 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.855175769 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.854994604 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.855149952 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.854514545 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.855306666 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.856182042 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.855000708 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.855123206 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.855738989 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.855806264 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.856636226 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.856184303 seconds)
  done (took 103.782899791 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.856628311 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.855597952 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.856369506 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.856669282 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.855894737 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.856533483 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.856072518 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.855992758 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855899741 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.857340947 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.856251173 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.856122682 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855775698 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.85711793 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.85673291 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856864352 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.856342479 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.855810859 seconds)
  done (took 35.201642934 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.857285099 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.857241362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.856845962 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.855559743 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.856939021 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.856553849 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856905214 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.857806148 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857397656 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.857912205 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8569826 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.857912682 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857538694 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.858139065 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.856992844 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857021615 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.857228208 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856822695 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.857244497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.856652449 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.857384025 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.857797777 seconds)
  done (took 42.646442993 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.858931746 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.859065224 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.872991105 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.879072059 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.878690419 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.894287821 seconds)
  done (took 13.032080023 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859142779 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859344616 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858841454 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85854488 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859213881 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858247335 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861883994 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858359995 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858131132 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860241582 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858334653 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858716308 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858501343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859615508 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858728108 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858740855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858675129 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859102504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859532413 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859332741 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860613616 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859108999 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859990265 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85976828 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859830082 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859903493 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860386339 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861103155 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859862482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860632005 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860422237 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860110005 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860862692 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861000487 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861279585 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859445251 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860497877 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859850507 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860282509 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860579153 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.859462661 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859705498 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861398573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860789457 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861565569 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861530462 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861790384 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860473342 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861214158 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861244027 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86066031 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860738654 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860821112 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860118473 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861258995 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861466332 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862336727 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860861414 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860682828 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861101611 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861578916 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861195742 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861114149 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86124734 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860742601 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861391221 seconds)
  done (took 124.566540362 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861529246 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861698437 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862096371 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863014457 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862494234 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862971711 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86306419 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863337647 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863743257 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863590636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863690154 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863895564 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863886587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863613986 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86276868 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863498192 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86412047 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863522429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864009274 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862664347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863588593 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864213842 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862521962 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863498554 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863256143 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86416233 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86344175 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863104628 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865088637 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863434255 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863761741 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863889753 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864243432 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.864095869 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864871042 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864992675 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864895719 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86452878 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865609588 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864555467 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863913935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864299057 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865071893 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865254187 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864884466 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86503576 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86399799 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865700043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864945213 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865557708 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866047548 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865818936 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865544743 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864242867 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865775408 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864921205 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866271033 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865668645 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865864706 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865217029 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867516962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866411207 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866919918 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865117184 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866034964 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866956252 seconds)
  done (took 124.845414024 seconds)
done (took 2540.049570158 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.954038511 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.957661321 seconds)
  done (took 15.708386372 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.032815058 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.984217406 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.870161773 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.902203233 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.870206063 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.895672543 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.891335146 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.869485616 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.871164254 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.870010819 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.870785352 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.053543562 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.926511047 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.870745758 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.871622243 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.962368065 seconds)
  done (took 52.423376709 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.874430962 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.876592107 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.884487845 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.876935062 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.875299413 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.887505613 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.906556381 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.879680072 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.911911602 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.888822752 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.945822319 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.889455268 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.875739811 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.926877593 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.890996779 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.889569636 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.972468747 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.955041349 seconds)
  done (took 36.006910274 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.955256488 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.883754582 seconds)
  done (took 10.64627201 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.899813151 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.8975353 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.903158419 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.887908693 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.884849558 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.906775057 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.898028531 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.889861584 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.90486643 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.906692751 seconds)
  done (took 70.808162485 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.878533449 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.878000016 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.878151011 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.873014873 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.870413772 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.87758464 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.874445673 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.877075221 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.569828112 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.912584506 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.882689054 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.885118098 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.873315599 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.875001486 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.870376161 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.900878546 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.048595807 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.869591001 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.868991655 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.880814682 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.874721759 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.957539049 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.888126123 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.874557387 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.907065865 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.563649358 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.885263026 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.879414464 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.053572926 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.869847573 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.876259766 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.086458129 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.879267079 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.23904876 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.161208445 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.87940748 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.885685733 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.881925602 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.870754805 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.052150192 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.87779728 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.883481468 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.746752964 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.135511338 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.960401367 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.920616237 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.252324791 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.879680972 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.876636228 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.909789517 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.879618712 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.876836787 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.892080828 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.388263735 seconds)
  done (took 133.296091306 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.871851519 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.118887676 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023482702 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.874264962 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127011923 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083109427 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.874076494 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917843129 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.874088802 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.070428567 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.125292645 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.975591381 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.874550488 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.873529079 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.873303995 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.870521557 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.018142063 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.941626394 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.87621116 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.871296006 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897390117 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07357942 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.994272842 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.874796958 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.899169473 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.081370869 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.99422427 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.97485028 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.646079346 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.872314441 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.935354439 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.875454459 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.872791252 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.872372394 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027540171 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966381797 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95639103 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.876527611 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874021944 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871917502 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.54602697 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077019688 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.971044988 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.996069877 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125539308 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.091548981 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.486887963 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.872550835 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.502423085 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040923658 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.078235624 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.077118175 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.993147585 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.876787526 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.160356587 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.874779199 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.874128242 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.098768987 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099513125 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.973779532 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88051524 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.874474124 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.873401142 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.113104934 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.877812299 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966727665 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.878348296 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.875291623 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.968207515 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.977667194 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.106530798 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094866015 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.906294213 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.216027525 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.381791188 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.077958997 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.941482077 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100923851 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.878988263 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.875077404 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951180865 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.715815263 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.131020355 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.11723561 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.07581064 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906175334 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.500877816 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.876368054 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.062111085 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.061276126 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.112584985 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124772834 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.113221193 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.18979892 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.875898637 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.876196405 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.175473677 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.989754859 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.819008347 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.216776768 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109719685 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.359991539 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.903740263 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.161279247 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006821066 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879791267 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.519030652 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.877522507 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.085154768 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.913736809 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.877998032 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.875903737 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.06556672 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.779250442 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.877068615 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.588906189 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.938225522 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.880012986 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078000297 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.880199988 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124421432 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.881915932 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110004548 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.472648429 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.907816892 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.054355633 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.123820326 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.50343531 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121915839 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.121647374 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992047742 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103784728 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.670731884 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.878409304 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141902894 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.881743526 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.878247551 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.046032166 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.879698716 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.021491656 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.88108856 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147903669 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90066582 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110275183 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881753254 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.112974937 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.91163 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929306344 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.885190394 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.009541823 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.883631984 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.695676113 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.039837237 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881658963 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.880527259 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.461794953 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.881061816 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026673504 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.104893081 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901129201 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.948421198 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.427714639 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852607877 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960625253 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902145593 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.183128971 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.879044606 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.12993289 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.866635718 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.347986546 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.879532029 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.11457233 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.068100342 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.884233204 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.880460479 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.716692644 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.860101548 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.880159577 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.035938391 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.334130316 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.647696227 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080882618 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884395805 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008562571 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.886735883 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.955875963 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.212257567 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.88109442 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.880613861 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.880891617 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.882355062 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.882280343 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092673551 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.90918027 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.314889035 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.018248616 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137739055 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.185748124 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.080557223 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.922564479 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.884405299 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109027953 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.885400588 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.945002221 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.884796966 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902159725 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114218979 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.885023888 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090749243 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.118826812 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.835611756 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.930411899 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.885772106 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.882154697 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.812371285 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.028288293 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968002978 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.885271177 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.883875208 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.996842447 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.002913633 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.064920467 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.572954149 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.043527381 seconds)
  done (took 901.579039185 seconds)
done (took 1222.265778081 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.885077343 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.886399102 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.886231753 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.885606774 seconds)
  done (took 29.357425613 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.888399463 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.884194894 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.885196971 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.884623221 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.885621729 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.883437356 seconds)
  done (took 13.12490889 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.884824436 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.884646953 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.885129445 seconds)
  done (took 22.468967497 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.961431663 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.304383046 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.030464251 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.327869718 seconds)
  done (took 10.439350028 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.886557746 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.88588494 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.886447687 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.887197575 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.887349988 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.887541341 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.886699541 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.887156219 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.889640863 seconds)
  done (took 18.800805314 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.877289084 seconds)
done (took 99.882138081 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.026329061 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.171481747 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.902948285 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.899716433 seconds)
    (5/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.356506553 seconds)
    (6/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.911040949 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.884084047 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.913938689 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.944771424 seconds)
    (10/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.036937503 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.14286494 seconds)
    (12/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.055960298 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.265386539 seconds)
    (14/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.193829133 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.890418666 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.889444051 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.436302297 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.896261718 seconds)
    (19/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.426524778 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.107945231 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.88616559 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.973947013 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.890938935 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.924124554 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.907717363 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.276686712 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.132693875 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.888827904 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.967294712 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.19634595 seconds)
    (31/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.092197337 seconds)
    (32/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.038230721 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.885865963 seconds)
    (34/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.492072159 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.885293417 seconds)
    (36/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.990950768 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.261422368 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.785667367 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.064115115 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.945837433 seconds)
    (41/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.307985479 seconds)
    (42/309) benchmarking ("sort", Bool, false)...
    done (took 2.102567357 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.900662063 seconds)
    (44/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.637264071 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.649705192 seconds)
    (46/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.895353235 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.893766942 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.902511004 seconds)
    (49/309) benchmarking ("sort", Int64, false)...
    done (took 5.513741625 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.906186639 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.136888376 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.127130025 seconds)
    (53/309) benchmarking ("sort", BigInt, false)...
    done (took 6.893258478 seconds)
    (54/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.893277343 seconds)
    (55/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 3.921683975 seconds)
    (56/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.416721548 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.786840551 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.230437446 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.010331757 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.909634011 seconds)
    (61/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.112735262 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.970258842 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.123082146 seconds)
    (64/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.902572451 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.251024906 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.88931432 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.07890729 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.89132968 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.908343527 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.179535342 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.986532746 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.890778298 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.374774609 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.076087406 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.021044832 seconds)
    (76/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.064076675 seconds)
    (77/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.907212022 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.211518978 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.022266935 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.277715188 seconds)
    (81/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.042659048 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.809767512 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.992515317 seconds)
    (84/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.980783703 seconds)
    (85/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.18616127 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.014253076 seconds)
    (87/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.65287624 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.891706438 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.916347891 seconds)
    (90/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.620354073 seconds)
    (91/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.112422904 seconds)
    (92/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.910298703 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.019134624 seconds)
    (94/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.162567657 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.9154199 seconds)
    (96/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.820166445 seconds)
    (97/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.226723775 seconds)
    (98/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.973515394 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 4.836611603 seconds)
    (100/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.974519644 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.894282692 seconds)
    (102/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.012539177 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.025081237 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.187928261 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.89380173 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.256956005 seconds)
    (107/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.021669313 seconds)
    (108/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.901933906 seconds)
    (109/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.968900653 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.891059649 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.908813197 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.236341088 seconds)
    (113/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.377380001 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.90499834 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.016687788 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.890717606 seconds)
    (117/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.780700717 seconds)
    (118/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.05988093 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.028374278 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.487589618 seconds)
    (121/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.449625169 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.214405281 seconds)
    (123/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.203403187 seconds)
    (124/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.530874899 seconds)
    (125/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.905036006 seconds)
    (126/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.284243392 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.017087055 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.907104195 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.989073667 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.20992577 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.148420236 seconds)
    (132/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.025049468 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.898504032 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.190666377 seconds)
    (135/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.029312941 seconds)
    (136/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.972531996 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.896967464 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.961868207 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.902479427 seconds)
    (140/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.991709152 seconds)
    (141/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.895818152 seconds)
    (142/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.922391016 seconds)
    (143/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.248972075 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.902736019 seconds)
    (145/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.05407044 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.294841195 seconds)
    (147/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.737870474 seconds)
    (148/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.045959108 seconds)
    (149/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.972740776 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.893207712 seconds)
    (151/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.612774403 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.196744922 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.793551816 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.882501375 seconds)
    (155/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.196475168 seconds)
    (156/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.101680088 seconds)
    (157/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.932710932 seconds)
    (158/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.167763377 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.58725388 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.988579465 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.070657743 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.960328152 seconds)
    (163/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.586098442 seconds)
    (164/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.077998699 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.90288647 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.028663884 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.89473351 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.149217182 seconds)
    (169/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.294749321 seconds)
    (170/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.366628961 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.034044874 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.104467028 seconds)
    (173/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.297115759 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.007486135 seconds)
    (175/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.897762619 seconds)
    (176/309) benchmarking ("sort", Float32, false)...
    done (took 5.646227112 seconds)
    (177/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.036173398 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.154758728 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.211643724 seconds)
    (180/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.102847713 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.904231138 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.14377448 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.903970865 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.912740804 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.279911731 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.788744798 seconds)
    (187/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.11064174 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.909453526 seconds)
    (189/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.896741455 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.776979791 seconds)
    (191/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.223540958 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.795977126 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.174701103 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.902118399 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.409527109 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.898402634 seconds)
    (197/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.36856404 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.90119031 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.290764393 seconds)
    (200/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.034244415 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.029245575 seconds)
    (202/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.976588187 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.911597381 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.13634544 seconds)
    (205/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.053044253 seconds)
    (206/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.999830879 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.898284344 seconds)
    (208/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.377340222 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.28584677 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.77622239 seconds)
    (211/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.990972188 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.131349878 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.233274009 seconds)
    (214/309) benchmarking ("sort", Float64, false)...
    done (took 5.599821221 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.274210818 seconds)
    (216/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.918025084 seconds)
    (217/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.899210043 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.606823316 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.188242066 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.915943522 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.092751875 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.897856187 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.558904508 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.971094744 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.221177834 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.901862304 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.900314361 seconds)
    (228/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.225418887 seconds)
    (229/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.905237737 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.910740987 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.137353782 seconds)
    (232/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.736313004 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.68249722 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.975457911 seconds)
    (235/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.155070233 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.901177321 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.903758081 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.011671384 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.000984177 seconds)
    (240/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.988464028 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.988369197 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.090480217 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.907149755 seconds)
    (244/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.725941987 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.912418114 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.013053448 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.905212632 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.430986368 seconds)
    (249/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.914750491 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.915219471 seconds)
    (251/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.71011003 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.508415271 seconds)
    (253/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.305791038 seconds)
    (254/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.911896598 seconds)
    (255/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.025970793 seconds)
    (256/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.010846562 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.345585792 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.318814149 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.224404017 seconds)
    (260/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.26682404 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.306200351 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.999934917 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.673537008 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.251768949 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.6781414 seconds)
    (266/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.044141303 seconds)
    (267/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.167656451 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.294609066 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.904285275 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.919186073 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.001809418 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.16646445 seconds)
    (273/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.27619779 seconds)
    (274/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.981050527 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.255969454 seconds)
    (276/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.921098824 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.887883955 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.925545811 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.103892717 seconds)
    (280/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.051283664 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.858248278 seconds)
    (282/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.280485652 seconds)
    (283/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.982740466 seconds)
    (284/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.286296249 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.093851556 seconds)
    (286/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.365534565 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.005183034 seconds)
    (288/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.904766274 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.868854428 seconds)
    (290/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.050048976 seconds)
    (291/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.04653547 seconds)
    (292/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.652865536 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.046620651 seconds)
    (294/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.308783891 seconds)
    (295/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.990908713 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.227188164 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.822098306 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.091306009 seconds)
    (299/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.048153233 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.143348164 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.921558787 seconds)
    (302/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.903870392 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.864601745 seconds)
    (304/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.197312154 seconds)
    (305/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.342073384 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.313362823 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.115742792 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.303335868 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.03783935 seconds)
  done (took 1021.000234093 seconds)
done (took 1022.880225109 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.93117168 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.925987165 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.907577004 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.929026376 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.022356971 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.953676519 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.922470414 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.912591166 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.959347314 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.9579992 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.908513518 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.949266404 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.910470315 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.909109439 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.909084949 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.924969921 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.217998827 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.940860656 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.927257939 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.922475597 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.928525997 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.907834127 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.959876111 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.950723524 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.913643886 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.913877542 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.913440418 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.930315945 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.023907975 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.913409029 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.91437972 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.921955048 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.219151675 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.939915909 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.908244707 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.930667494 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.924503694 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.923064202 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.915540216 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.94370632 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.366919429 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.916246806 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.912420345 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.911699607 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.91211602 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.917917732 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.912629893 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.918948678 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.927355019 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.927480608 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.364016347 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.934007619 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.914655652 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.912500185 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.925554273 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.911319643 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.916424104 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.929424737 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.931618861 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.928193938 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.207322711 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.949187934 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.917151032 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.929958093 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.922364577 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.399388149 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.91711956 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.918794157 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.368045735 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.926591927 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.399336802 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.929564862 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.914762837 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.92775019 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.945627086 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.220257093 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.940489425 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.912305919 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.922877309 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.912726727 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.926195685 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.928275654 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.917909214 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.913870022 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.931177602 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.956542804 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.927150505 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.912979716 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.926329405 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.932817119 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.922330489 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.928440403 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.918133461 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.910731214 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.929067274 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.919262801 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.917700348 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.918232621 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.92075816 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.92854596 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.365723874 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.93796292 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.912051542 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.912469501 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.913764893 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.930375173 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.368795627 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.922482976 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.937246608 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.96421923 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.919862726 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.211449805 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.949160322 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.932704208 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.928102047 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.917609314 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.91328526 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.210461995 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.396511197 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.93765133 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.91708116 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.913265532 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.932116372 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.917730992 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.91366449 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.223115781 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.947672214 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.932036047 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.039176765 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.929859589 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.949378063 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.915782435 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.9224509 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.962234258 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.934012672 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.949774672 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.920322299 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.934574925 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.935998928 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.914842772 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.928551462 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.93106288 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.915783266 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.925547185 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.91542749 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.96244348 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.933139532 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.932850201 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.937956654 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.040586038 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.915240519 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.213236199 seconds)
done (took 300.980451854 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.997663913 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.911973467 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.006435252 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.913479555 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.008858175 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.995636843 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.913865112 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.914496351 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.914007616 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.424970367 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.91486872 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.9193414 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.913114383 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.915379959 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.990958226 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.915445932 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.915100885 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.196369802 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.916189324 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.999692993 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.915312083 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.915951224 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.914858598 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.429214439 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.916558153 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.915702701 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.000973199 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.915968737 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.208017547 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.91588676 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.915729856 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.204874287 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.000534843 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.928073101 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.923161662 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.923811691 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.013270851 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.925617273 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.988486487 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.987388078 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.008848164 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.949100268 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.913254291 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.915633613 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.919194082 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.917540205 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.916001749 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.948888511 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.915039804 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.924280235 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.197715003 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.921055808 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.921846394 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.918108462 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.917225482 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.932498094 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.917397285 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.918574847 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.002343503 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.918097788 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.990065681 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.43647262 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.429224935 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.917845407 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.917551885 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.918716577 seconds)
  done (took 187.806149041 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.982733228 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.990110906 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.9847818 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.922484582 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.965268038 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.986203677 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.923490725 seconds)
  done (took 15.601027629 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.923703534 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.91684559 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.978142164 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.977937544 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.917428274 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.098090772 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.9300104 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.923287003 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.946053128 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.918970192 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.553176484 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.978117249 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.926003774 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.916654521 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.929842817 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.981386436 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.920793306 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.918722586 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.028143805 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.067751558 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.923798342 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.92589562 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.945263229 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.931779769 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.91860326 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.919089968 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.919615261 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.926284099 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91832547 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.918900704 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.919088452 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.98277256 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.91946397 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.91952846 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.919468861 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.921511022 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.920103327 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.921154501 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.920563226 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.917866577 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.920697653 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.918456126 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.919438405 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.919232954 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.919637413 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.944374319 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.920328575 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.919423395 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.91911423 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.920328081 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.947119805 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.921106179 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.919262555 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.925902195 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.965779035 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.924964055 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.920884566 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.919880699 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.920373732 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.920128841 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.919905108 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.069016069 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.981866379 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.920921741 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.980242075 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.076025806 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.921249091 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.920107083 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.922045487 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.015756167 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.921944217 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.982559162 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.922278299 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.039558058 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.921961334 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.100788293 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.945265172 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.925706808 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.925844544 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.92067405 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.929684186 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.921751404 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.924074914 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.92940435 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.92807975 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.922737398 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.922712207 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.923645677 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.930034898 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.922596342 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.971889501 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.921996285 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.922771682 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.06320977 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.922551084 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.031911893 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.950980434 seconds)
  done (took 210.991538954 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.930827309 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.930111486 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.924675028 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.938903257 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.924500892 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.923653426 seconds)
  done (took 13.424140441 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.926381034 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.926948923 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.921925267 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.922540114 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.924691639 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.924048239 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.923749989 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.924556452 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.927401811 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.922825228 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.924475107 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.926744753 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.92368911 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.924137231 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.92522157 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.923508076 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.92356849 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.924683897 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.924252418 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.92626368 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.059924257 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.923877555 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.924928314 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.929225681 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.929542821 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.924307149 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.938345416 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.924102164 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.923780219 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.929838366 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.927889491 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.924465812 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.930462002 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.931929358 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.929221993 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.930330479 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.930171138 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.929515514 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.924358268 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.925374059 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.928971848 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.924787674 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.925240535 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.928701227 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.927471895 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.934537803 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.932803201 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.937753844 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.925189496 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.930289373 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.929938529 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.925297533 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.926802504 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.930284241 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.933333513 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.932754788 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.934015972 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.92585456 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.926098184 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.930686844 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.930104186 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.927315782 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.928064539 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.930017485 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.933748927 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.93035349 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.931975694 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.929914196 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.92686204 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.926875928 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.931142022 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.926644122 seconds)
  done (took 141.783212667 seconds)
done (took 571.464389228 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.943455262 seconds)
  done (took 8.799588692 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.953912672 seconds)
  done (took 8.886295191 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.766285802 seconds)
  done (took 10.624313861 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.945895977 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.961266536 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.946690664 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.933555171 seconds)
  done (took 29.654744449 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.09933751 seconds)
  done (took 8.954821616 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.939547291 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.926175054 seconds)
  done (took 15.786507525 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.975575883 seconds)
  done (took 8.832453709 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.96726758 seconds)
  done (took 8.83559869 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.950778868 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.949549177 seconds)
  done (took 15.77720396 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.929630726 seconds)
  done (took 8.784891849 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.713944324 seconds)
  done (took 9.649279622 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.932956318 seconds)
  done (took 8.808678638 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.981446581 seconds)
  done (took 8.838254322 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.984025549 seconds)
  done (took 8.840794333 seconds)
done (took 162.927813656 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.935993341 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.92703047 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.930627563 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.927539073 seconds)
  done (took 29.577335623 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.962632868 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.963393126 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.971388547 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.963040635 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.954153246 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.954999757 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.963828897 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.965528107 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.955269834 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.961290239 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.965080088 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.961903418 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.963758925 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.974090128 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.973963067 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.962598044 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.963179106 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.964885865 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.955364955 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.973607589 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.966301866 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.964303232 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.930892121 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.929376024 seconds)
  done (took 48.923556857 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.116002662 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.995498155 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.084004056 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.975185861 seconds)
  done (took 10.027095267 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.93017737 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.994160066 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.981726755 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.976512438 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.015843466 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.03283878 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.982415901 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.139744327 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.046086864 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.055736692 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.938285717 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.951364797 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.955709712 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.977333323 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.031941332 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.931146293 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.931380993 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.04648147 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.993207603 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.125771344 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.931202188 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.986354138 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.017257885 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.985833402 seconds)
  done (took 49.816432892 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.932458876 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.940464071 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.939871027 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.93162117 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.935322713 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.932671648 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.940557899 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.935128413 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.954749091 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.934587974 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.931578584 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.932755159 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.938985735 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.932865339 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.933892319 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.946285054 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.946727113 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.933945788 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.936759371 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.939650345 seconds)
  done (took 40.612005628 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.930899606 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.776662046 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.275034864 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.184992077 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.932589908 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.932575657 seconds)
  done (took 31.891698515 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.94484542 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.939976353 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.932850989 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.990413048 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.073433211 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.941496657 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.933718728 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.944731596 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.981626537 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.000735581 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.956572466 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.963357188 seconds)
  done (took 25.465710649 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.933549847 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.934914697 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.934858384 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.945415073 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.944817928 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.942103997 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.941591599 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.932922552 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.946745832 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.952656542 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.941317702 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.945903353 seconds)
  done (took 45.160706916 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.14649147 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.160097731 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.149339184 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.468772249 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.925185688 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.831526775 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.535284699 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.564266204 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.220722509 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.908042976 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.897805296 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.814486698 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.174784229 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.935042927 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.18507547 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.857151905 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.935008129 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205195739 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936639806 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.937239494 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.214212197 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.987455467 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.148559738 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981176135 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.14691741 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.373141498 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.183823397 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.197634875 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.264222459 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.985227273 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.06004845 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.984030124 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.941552876 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.951422697 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.936689186 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.946570403 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206287387 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936806429 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.945632262 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.933369611 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.861124317 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.204470071 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.044727181 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.347895215 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.05697486 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.176923385 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.939958518 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.066370532 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.998472284 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.137693837 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.034400635 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.148970041 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.861263538 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.218633744 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.055685812 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.937423442 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.940862435 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.634772123 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.175095332 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.015204327 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.200197066 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.043024151 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.93729999 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.025029975 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.936119421 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.048603407 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.314470337 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942251519 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.935826206 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.9452969 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.033914607 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.151158154 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.937740567 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937970627 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.95627512 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.939393563 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.287690802 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.440337258 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.93870956 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.500629445 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.376030611 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.908316119 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.384367257 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.985524819 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.215323843 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.154265972 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.122926359 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.182907582 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.832300664 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.943224859 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.744247774 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.018763873 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.014798474 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.936736562 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.061595325 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.196169855 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.047997763 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.937780358 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.864238991 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.949538384 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.140972299 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.390060138 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.998823899 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.938261735 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.938516265 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.941810215 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.940651463 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.955357665 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.950487031 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.459958452 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.216216884 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.037407944 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.1913038 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.926625594 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.620295391 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.204804393 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.061031427 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.50353114 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.068464311 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.932333138 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088670267 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.948766968 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.94249057 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.312138815 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.345495533 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.071122258 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.186002688 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.94302781 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.970187537 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.944470972 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.022376095 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.165839321 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.940673983 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.185703638 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.182720904 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.596883465 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.941692025 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.013946619 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.949787962 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.154880012 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.022762036 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.465327168 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.157839821 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.467300893 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.930285413 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.441596399 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.156067905 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31816486 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.956266351 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.070564261 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.978191942 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.645776407 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.867198417 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.9457966 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.271329159 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.979162898 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.027008648 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.943502445 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.942422367 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.949943622 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.023100455 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.01178696 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.016358655 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.869897539 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.944827776 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945255031 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.942682562 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.461014916 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.561484693 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.232255523 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.942274775 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.002205295 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.943711345 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.54663582 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.947351485 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.065634924 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.951640011 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.619748535 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.972282525 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.1549184 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.330373329 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.05661317 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.943480195 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.950441618 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.64308163 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.952149648 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.643577868 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.222185107 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.957727477 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.390368289 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.003913644 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.130148361 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.961432137 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.944540476 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.946280347 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.945057301 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.147045254 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.451629272 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.221116266 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.286294195 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.028247492 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.20857561 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.129984468 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.387197819 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.635655025 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.446286468 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.170833262 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.946164719 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947394127 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.602527393 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.952723142 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.161413758 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.147082145 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.218777515 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.233832645 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.353220985 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.951329605 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.017242802 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.187304562 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.945260871 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.378329307 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.949186317 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.246470389 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.751561052 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.204722386 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.008567034 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.956666849 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.595098657 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065634188 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.901775279 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.064188756 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.872152814 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.573279925 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240437561 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.217363591 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.921806578 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.278504528 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.236787958 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.162694858 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.570026224 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.946727338 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.001653549 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.027841707 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.953158111 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.439920218 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.991358084 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.991945182 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.951987903 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.946578972 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.951084356 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.62430229 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.025969288 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.066099536 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.646962758 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.423281974 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.860401701 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.212412629 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.999933336 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.38819193 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.992178031 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.161814708 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.953048968 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.455181829 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.000048769 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.217464634 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.904678174 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.162112145 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.150373666 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.978211657 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.954773918 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.8742154 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.830232153 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.951411344 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.078385107 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.834800621 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.951948263 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.237604152 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.499803832 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989012343 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.951344635 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.231562439 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.306933574 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.22289878 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.957085635 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.16316837 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.072234942 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.868190594 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.441187893 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.534491986 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.649988238 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.964494687 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.151559642 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.22184682 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.18096976 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.989742181 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.027998903 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.216867133 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.924548189 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.949213689 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.470719028 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.048109502 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.190971916 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.258356637 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.419597974 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.281486443 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.381937034 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.007220874 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.162456174 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.310737623 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.196022288 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.95391849 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.043483617 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.163759546 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.230589894 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.841218223 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.661197968 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.193597204 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.957102992 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.901641749 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.158736774 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.453168107 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.309361936 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.489002203 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.091584046 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.98362742 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.442521199 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.966825066 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.885280276 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.953866118 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.909600991 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.167526197 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.087667795 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.994873311 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.508638714 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.172871137 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.342790495 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.133806789 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.99667599 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.87972762 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.571256843 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.902856513 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.956633586 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.99425253 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.023763725 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.955721071 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.156112642 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.391884923 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.998893773 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.481509074 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.1561016 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255358945 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.217810297 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.24617854 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.91124389 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225718008 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.908192271 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.549921811 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.043472743 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.045653413 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.953966933 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.956852988 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224991091 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.22986059 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.536000926 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.99487114 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.22704791 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.049285065 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.956687149 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.959598097 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.407672432 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.193122565 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.168120235 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.03308358 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.082340784 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.027464213 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.46857534 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.960583688 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.958256662 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.092121708 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.955960894 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.598565716 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.256925487 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.6876365 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.158037802 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.475457003 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.855625962 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.092727827 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.004419607 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.955452276 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.961992385 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.965396595 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.197688185 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.222375282 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.712339964 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.961227222 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.956112082 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.844951888 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.567463721 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.190766308 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.962330841 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.000871236 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.959452 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.072592304 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.963641268 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.215002715 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.003229245 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.95600026 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.962770219 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.169736533 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.47096728 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.973409926 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.655763795 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.158881013 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.96356076 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.448456913 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.406030271 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.149119414 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.003211768 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.090854032 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.205462363 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.473986752 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.098696125 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.955905683 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.184014646 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.959893291 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228223781 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231915517 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.958754023 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.173796448 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.408994981 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250301007 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.969269117 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.834794809 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.960775546 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.216664812 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.006464646 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.957456324 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.967063849 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.498776399 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.572808851 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.419313108 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.108742864 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.228167792 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.662677091 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.714678866 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.962678092 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.96189905 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.559122717 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.679699325 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.173635437 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.247630103 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.902844536 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.162813873 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.664584919 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.95995554 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.232377824 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.885825781 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.964297754 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.553598741 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.234924845 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.894724277 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.966064809 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.546059279 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.960010157 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.049310273 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.963560384 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.07884229 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.225107968 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.286864064 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.070910664 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.602985081 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.589092141 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.901025083 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.007661885 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.769860287 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.5296174 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.570281191 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984871423 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.980044258 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.889638346 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.966156545 seconds)
  done (took 1681.366710068 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.978653292 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.987045851 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.015105472 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.01242253 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.03150453 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.038602637 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.993756381 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.979559629 seconds)
  done (took 57.927676749 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.965581779 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.98006541 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.968124997 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.964722515 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.969261787 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.978465384 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.122748965 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.975169587 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.969590274 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.97061488 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.965140365 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.964778788 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.233490285 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.985416492 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.965486366 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.965806871 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.969471599 seconds)
  done (took 75.820691677 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.966017367 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.268531366 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.014210348 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.966801769 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.834403726 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.97043115 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.216017321 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.994430355 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.971150336 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.10851942 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.267538812 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.017325548 seconds)
  done (took 91.489358038 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.971564489 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.966153668 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.966642458 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.967466664 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.966540376 seconds)
  done (took 11.736340075 seconds)
done (took 2201.734654659 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.211861359 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.024673817 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.066528608 seconds)
  done (took 5.984050453 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.113182927 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.157977878 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.271724517 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.032748932 seconds)
  done (took 10.475229927 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.235230464 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.364770248 seconds)
  done (took 6.493417481 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.330250678 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.979244028 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.354033719 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.970460909 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.969177787 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.970885188 seconds)
  done (took 22.808804274 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.969391308 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.968420899 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.969083279 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.968820665 seconds)
  done (took 9.770227528 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.966572921 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.63626771 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.968525276 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.977833236 seconds)
  done (took 21.443608679 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.108308656 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.977598068 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.106089648 seconds)
  done (took 8.084947075 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.187134922 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.977297572 seconds)
  done (took 7.058558597 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.113157888 seconds)
  done (took 4.00754289 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.997304567 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.241642227 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.440103476 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.487282237 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.551317131 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.720415384 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.285763118 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.23407072 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.376413776 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.399290501 seconds)
  done (took 25.628767149 seconds)
done (took 137.524347815 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.338301473 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.989568099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.183500013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.345231019 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.206055499 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.180352541 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.162564711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.329261214 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.019978847 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.006126997 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.342085931 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.202222347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.137651978 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.989566178 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.13672351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.990264472 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.198580741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.364624195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.013441442 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.261671831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.196502853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.988651056 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.179967127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.003667813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.200931336 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.129071059 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.529356025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.989826752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.157874677 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.541521423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.129893305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.409762913 seconds)
  done (took 171.751565904 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.971758988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.971695983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.970397801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.971665895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.332670365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.972558717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.974276395 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.971804354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.228482091 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.206462293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.97176101 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.302941593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.973744241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.972241568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.973369143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.97207132 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.377252631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.972317036 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.972742493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.972447977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.97149694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.155221397 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.972810686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.167726313 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.361639072 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.973321095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.973626161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.973538744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.972499829 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.972402728 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.973043129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.972651767 seconds)
  done (took 211.372046679 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.933374122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.972416022 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.972825509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.973126048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.974556766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.972958089 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.974279709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.974168477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.622927424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.605969019 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.974421777 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.975075598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.97895463 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974036459 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.98055312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.973538593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.979207959 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.97768371 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.973985609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.975407495 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.976212114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.602158223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.986785292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.610019536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.973579388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.977648063 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.975238004 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.975247778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.978299644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.97908879 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.976011897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.975526339 seconds)
  done (took 223.626248418 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.214670886 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.975734635 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.975889103 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.985583258 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.97595457 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.974657825 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.983854555 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.22386248 seconds)
  done (took 20.214065793 seconds)
done (took 628.873293495 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.446177087 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.816671145 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.118509555 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.999883663 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.234823914 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.039015674 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.994929372 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.055733292 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.827628094 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.069372854 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.38412866 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.002767413 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.754277152 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.020996885 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.11735517 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.052643785 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.339654646 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.653336516 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.134974519 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.66480808 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.15282884 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.918985201 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.072223473 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.880544213 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.400600032 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.956258237 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.013821869 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.340836668 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.000037337 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.150691902 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.741626235 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.267459977 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.011825861 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.998876107 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.046957185 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.027221556 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.204656792 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.006498542 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.117315211 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.712380413 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.659127568 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.713032873 seconds)
  done (took 105.02596175 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.985343531 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.98379172 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.983191897 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.983319698 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.991975546 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.983630342 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.984516784 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.982525122 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.983170762 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.984289079 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.983967105 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.992379156 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.982458683 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.992752323 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.984968269 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.983441422 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.984239353 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.993118004 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.98402029 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.98464151 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.984258503 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.98382464 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.980849831 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.985696711 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.984358961 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.984258976 seconds)
  done (took 53.531525321 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.979108969 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.163893609 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.217470415 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.999846162 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.980818773 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.983505001 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.009166854 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.987403722 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.98324451 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.984121741 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.079584237 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.985439613 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.995747648 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.217705603 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.998875621 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.980868598 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.980039927 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.981022797 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.176803034 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.996278142 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.010257659 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.987779598 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.009982892 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.996862135 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.983439519 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.982882425 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.98337006 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.454231763 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.992701376 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.082330571 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.025794687 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.014686057 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.375001531 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.230394425 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.036912189 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.990236823 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.981702736 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.087841985 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.988302349 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.983711386 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.010814657 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.989775714 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.222585712 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.524373187 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.996433219 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.981211716 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.450741051 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.099040805 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.025356551 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.992647927 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.229672146 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.999229417 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.98172599 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.983214329 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.019566866 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.995615143 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.983378503 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.282580071 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.998380472 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.010909801 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.98997542 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.98507009 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.183490155 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.991886678 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.170584284 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.991876318 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.99038983 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.985650835 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.224136047 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.000380989 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.541481559 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.999646493 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.984525271 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.083511613 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.174339042 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.478338762 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.99832528 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.185652131 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.39271842 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.021129241 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.994798755 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.43856373 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.024549699 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.994598077 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.984009465 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.983747727 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.984426845 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.032470642 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.010720378 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.451929854 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.537227329 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.3000327 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.024128571 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.997665966 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.985422803 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.282799428 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.99511787 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.983934164 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.214269122 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.548649354 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.000730627 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.992990491 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.516878371 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.001208032 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.014860701 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.996891741 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.237632314 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.003177659 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.034300783 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.986512507 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.992950734 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.989843231 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.016092613 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.997740353 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.985910774 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.512252755 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.105639899 seconds)
  done (took 246.096924601 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.986354953 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.985762999 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.986209592 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.985274618 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.985492743 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.986074388 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.985054722 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.985151417 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.98640909 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.985109474 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.985474988 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.987019106 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.987890323 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.992212972 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.448539825 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.989672781 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.47528258 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.98869081 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.987778531 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.990217622 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.587859959 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.995467643 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.988126122 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.989067632 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.98851819 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.987827107 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.988389254 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.031382334 seconds)
  done (took 171.161829128 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.989411285 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.066606511 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.004079159 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.037710296 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.004057748 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.989252464 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.164572414 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.012576443 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.995262711 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.989350882 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.991126276 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.02182361 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.000230948 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.086714923 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.026879763 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.096211753 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.092984281 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.99765072 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.989426115 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.990512923 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.038526681 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.004702533 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.021347638 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.055230584 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.004605481 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.045009619 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.005998269 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.990879105 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.991119878 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.126882514 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.009679503 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.022733974 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.028384514 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.01448197 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.109195026 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.104869025 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.093963859 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.093080024 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.997234597 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.990794325 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.99160169 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.993225015 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.047829052 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.005632374 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.992686309 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.109096272 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.010934141 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.991320133 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.992261143 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.992426574 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.005764975 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.009763206 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.028806248 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.12349806 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.037763701 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.020018493 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.089117416 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.110883169 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.992939544 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.088112674 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.999616207 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.107344055 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.014043486 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.993959945 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.994581143 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.995523404 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.040764308 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.106045809 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.096104329 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.999502397 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.088872764 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.048252646 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.008483078 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.994787059 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.994695785 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.050096142 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.103985581 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.048257232 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.056145438 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.029970022 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.003755396 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.993417225 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.995679465 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.021439685 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.003250199 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.106849857 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.107987546 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.999122782 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.995074064 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.994988069 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.995345348 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.019013798 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.057269493 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.03517537 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.103224425 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.031890989 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.034237384 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.003520537 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.008726782 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.000045555 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.027427993 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.005047741 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.007681458 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.269284298 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.026315181 seconds)
  done (took 215.466525553 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.368640584 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.041277195 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.068767999 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.279211181 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.359423848 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.979515013 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.03740467 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.044893523 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.053476665 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.180385661 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.10594575 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.087160697 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.034402493 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.016935647 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.038455883 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.056356529 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.06980012 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.352599813 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.240008336 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.555306096 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.036088515 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.321798414 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.380869673 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.404469758 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.086961531 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.42298501 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.616476932 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.143485629 seconds)
  done (took 66.309826316 seconds)
done (took 859.494454141 seconds)
SAVING RESULT...
DONE!
